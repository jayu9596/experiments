// generated by SMACK version 2.4.1 for svcomp
// via /usr/local/bin/smack /proj/SMACK/SMACKBenchResults/data/sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.i -x svcomp --verifier svcomp -t -q -bpl 43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.i.bpl

// Basic types
type i1 = int;
type i5 = int;
type i6 = int;
type i8 = int;
type i16 = int;
type i24 = int;
type i32 = int;
type i40 = int;
type i48 = int;
type i56 = int;
type i64 = int;
type i80 = int;
type i88 = int;
type i96 = int;
type i128 = int;
type i160 = int;
type i256 = int;
type ref = i64;
type float;

// Basic constants
const $0: i32;
axiom ($0 == 0);
const $1: i32;
axiom ($1 == 1);
const $0.ref: ref;
axiom ($0.ref == 0);
const $1.ref: ref;
axiom ($1.ref == 1);
const $1024.ref: ref;
axiom ($1024.ref == 1024);
// Memory model constants
const $GLOBALS_BOTTOM: ref;
const $EXTERNS_BOTTOM: ref;
const $MALLOC_TOP: ref;

// Memory maps (90 regions)
var $M.0: [ref] i8;
var $M.1: i32;
var $M.2: i32;
var $M.3: i32;
var $M.4: [ref] i32;
var $M.5: [ref] i32;
var $M.6: i64;
var $M.7: i8;
var $M.8: i8;
var $M.9: i8;
var $M.10: i8;
var $M.11: i8;
var $M.12: i8;
var $M.13: i8;
var $M.14: i8;
var $M.15: i8;
var $M.16: i8;
var $M.17: i8;
var $M.18: i8;
var $M.19: [ref] i32;
var $M.20: [ref] ref;
var $M.21: [ref] ref;
var $M.22: [ref] ref;
var $M.23: [ref] ref;
var $M.24: [ref] ref;
var $M.25: [ref] ref;
var $M.26: [ref] ref;
var $M.27: [ref] i16;
var $M.28: ref;
var $M.29: ref;
var $M.30: ref;
var $M.31: ref;
var $M.32: ref;
var $M.33: ref;
var $M.34: ref;
var $M.35: ref;
var $M.36: ref;
var $M.37: ref;
var $M.38: ref;
var $M.39: ref;
var $M.40: ref;
var $M.41: ref;
var $M.42: ref;
var $M.43: ref;
var $M.44: ref;
var $M.45: ref;
var $M.46: ref;
var $M.47: ref;
var $M.48: ref;
var $M.49: ref;
var $M.50: ref;
var $M.51: ref;
var $M.52: ref;
var $M.53: ref;
var $M.54: [ref] i32;
var $M.55: [ref] i32;
var $M.56: [ref] i32;
var $M.57: [ref] ref;
var $M.58: [ref] ref;
var $M.59: [ref] ref;
var $M.60: [ref] ref;
var $M.61: [ref] ref;
var $M.62: [ref] i32;
var $M.63: [ref] i64;
var $M.64: [ref] ref;
var $M.65: [ref] ref;
var $M.66: [ref] i32;
var $M.67: [ref] i32;
var $M.68: [ref] i32;
var $M.69: [ref] i32;
var $M.70: [ref] ref;
var $M.71: [ref] ref;
var $M.72: [ref] ref;
var $M.73: [ref] ref;
var $M.74: [ref] ref;
var $M.75: [ref] i32;
var $M.76: [ref] i64;
var $M.77: [ref] ref;
var $M.78: [ref] ref;
var $M.79: [ref] ref;
var $M.80: [ref] ref;
var $M.81: [ref] ref;
var $M.82: [ref] ref;
var $M.83: [ref] ref;
var $M.84: [ref] ref;
var $M.85: [ref] ref;
var $M.86: [ref] i32;
var $M.87: [ref] i64;
var $M.88: ref;
var $M.89: i32;

// Memory address bounds
axiom ($GLOBALS_BOTTOM == $sub.ref(0, 163172));
axiom ($EXTERNS_BOTTOM == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32792)));
axiom ($MALLOC_TOP == 9223372036854775807);
function {:inline} $isExternal(p: ref) returns (bool) { $slt.ref.bool(p, $EXTERNS_BOTTOM) }

// SMT bit-vector/integer conversion
function {:builtin "(_ int2bv 64)"} $int2bv.64(i: i64) returns (bv64);
function {:builtin "bv2nat"} $bv2int.64(i: bv64) returns (i64);

// Integer arithmetic operations
function {:inline} $add.i1(i1: i1, i2: i1) returns (i1) { (i1 + i2) }
function {:inline} $add.i5(i1: i5, i2: i5) returns (i5) { (i1 + i2) }
function {:inline} $add.i6(i1: i6, i2: i6) returns (i6) { (i1 + i2) }
function {:inline} $add.i8(i1: i8, i2: i8) returns (i8) { (i1 + i2) }
function {:inline} $add.i16(i1: i16, i2: i16) returns (i16) { (i1 + i2) }
function {:inline} $add.i24(i1: i24, i2: i24) returns (i24) { (i1 + i2) }
function {:inline} $add.i32(i1: i32, i2: i32) returns (i32) { (i1 + i2) }
function {:inline} $add.i40(i1: i40, i2: i40) returns (i40) { (i1 + i2) }
function {:inline} $add.i48(i1: i48, i2: i48) returns (i48) { (i1 + i2) }
function {:inline} $add.i56(i1: i56, i2: i56) returns (i56) { (i1 + i2) }
function {:inline} $add.i64(i1: i64, i2: i64) returns (i64) { (i1 + i2) }
function {:inline} $add.i80(i1: i80, i2: i80) returns (i80) { (i1 + i2) }
function {:inline} $add.i88(i1: i88, i2: i88) returns (i88) { (i1 + i2) }
function {:inline} $add.i96(i1: i96, i2: i96) returns (i96) { (i1 + i2) }
function {:inline} $add.i128(i1: i128, i2: i128) returns (i128) { (i1 + i2) }
function {:inline} $add.i160(i1: i160, i2: i160) returns (i160) { (i1 + i2) }
function {:inline} $add.i256(i1: i256, i2: i256) returns (i256) { (i1 + i2) }
function {:inline} $sub.i1(i1: i1, i2: i1) returns (i1) { (i1 - i2) }
function {:inline} $sub.i5(i1: i5, i2: i5) returns (i5) { (i1 - i2) }
function {:inline} $sub.i6(i1: i6, i2: i6) returns (i6) { (i1 - i2) }
function {:inline} $sub.i8(i1: i8, i2: i8) returns (i8) { (i1 - i2) }
function {:inline} $sub.i16(i1: i16, i2: i16) returns (i16) { (i1 - i2) }
function {:inline} $sub.i24(i1: i24, i2: i24) returns (i24) { (i1 - i2) }
function {:inline} $sub.i32(i1: i32, i2: i32) returns (i32) { (i1 - i2) }
function {:inline} $sub.i40(i1: i40, i2: i40) returns (i40) { (i1 - i2) }
function {:inline} $sub.i48(i1: i48, i2: i48) returns (i48) { (i1 - i2) }
function {:inline} $sub.i56(i1: i56, i2: i56) returns (i56) { (i1 - i2) }
function {:inline} $sub.i64(i1: i64, i2: i64) returns (i64) { (i1 - i2) }
function {:inline} $sub.i80(i1: i80, i2: i80) returns (i80) { (i1 - i2) }
function {:inline} $sub.i88(i1: i88, i2: i88) returns (i88) { (i1 - i2) }
function {:inline} $sub.i96(i1: i96, i2: i96) returns (i96) { (i1 - i2) }
function {:inline} $sub.i128(i1: i128, i2: i128) returns (i128) { (i1 - i2) }
function {:inline} $sub.i160(i1: i160, i2: i160) returns (i160) { (i1 - i2) }
function {:inline} $sub.i256(i1: i256, i2: i256) returns (i256) { (i1 - i2) }
function {:inline} $mul.i1(i1: i1, i2: i1) returns (i1) { (i1 * i2) }
function {:inline} $mul.i5(i1: i5, i2: i5) returns (i5) { (i1 * i2) }
function {:inline} $mul.i6(i1: i6, i2: i6) returns (i6) { (i1 * i2) }
function {:inline} $mul.i8(i1: i8, i2: i8) returns (i8) { (i1 * i2) }
function {:inline} $mul.i16(i1: i16, i2: i16) returns (i16) { (i1 * i2) }
function {:inline} $mul.i24(i1: i24, i2: i24) returns (i24) { (i1 * i2) }
function {:inline} $mul.i32(i1: i32, i2: i32) returns (i32) { (i1 * i2) }
function {:inline} $mul.i40(i1: i40, i2: i40) returns (i40) { (i1 * i2) }
function {:inline} $mul.i48(i1: i48, i2: i48) returns (i48) { (i1 * i2) }
function {:inline} $mul.i56(i1: i56, i2: i56) returns (i56) { (i1 * i2) }
function {:inline} $mul.i64(i1: i64, i2: i64) returns (i64) { (i1 * i2) }
function {:inline} $mul.i80(i1: i80, i2: i80) returns (i80) { (i1 * i2) }
function {:inline} $mul.i88(i1: i88, i2: i88) returns (i88) { (i1 * i2) }
function {:inline} $mul.i96(i1: i96, i2: i96) returns (i96) { (i1 * i2) }
function {:inline} $mul.i128(i1: i128, i2: i128) returns (i128) { (i1 * i2) }
function {:inline} $mul.i160(i1: i160, i2: i160) returns (i160) { (i1 * i2) }
function {:inline} $mul.i256(i1: i256, i2: i256) returns (i256) { (i1 * i2) }
function {:builtin "div"} $sdiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "div"} $sdiv.i5(i1: i5, i2: i5) returns (i5);
function {:builtin "div"} $sdiv.i6(i1: i6, i2: i6) returns (i6);
function {:builtin "div"} $sdiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $sdiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $sdiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $sdiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $sdiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $sdiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $sdiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $sdiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $sdiv.i80(i1: i80, i2: i80) returns (i80);
function {:builtin "div"} $sdiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $sdiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $sdiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $sdiv.i160(i1: i160, i2: i160) returns (i160);
function {:builtin "div"} $sdiv.i256(i1: i256, i2: i256) returns (i256);
function {:builtin "mod"} $smod.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "mod"} $smod.i5(i1: i5, i2: i5) returns (i5);
function {:builtin "mod"} $smod.i6(i1: i6, i2: i6) returns (i6);
function {:builtin "mod"} $smod.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "mod"} $smod.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "mod"} $smod.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "mod"} $smod.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "mod"} $smod.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "mod"} $smod.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "mod"} $smod.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "mod"} $smod.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "mod"} $smod.i80(i1: i80, i2: i80) returns (i80);
function {:builtin "mod"} $smod.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "mod"} $smod.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "mod"} $smod.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "mod"} $smod.i160(i1: i160, i2: i160) returns (i160);
function {:builtin "mod"} $smod.i256(i1: i256, i2: i256) returns (i256);
function {:builtin "div"} $udiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "div"} $udiv.i5(i1: i5, i2: i5) returns (i5);
function {:builtin "div"} $udiv.i6(i1: i6, i2: i6) returns (i6);
function {:builtin "div"} $udiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $udiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $udiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $udiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $udiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $udiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $udiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $udiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $udiv.i80(i1: i80, i2: i80) returns (i80);
function {:builtin "div"} $udiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $udiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $udiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $udiv.i160(i1: i160, i2: i160) returns (i160);
function {:builtin "div"} $udiv.i256(i1: i256, i2: i256) returns (i256);
function {:inline} $srem.i1(i1: i1, i2: i1) returns (i1) { (if ($ne.i1.bool($smod.i1(i1, i2), 0) && $slt.i1.bool(i1, 0)) then $sub.i1($smod.i1(i1, i2), $smax.i1(i2, $sub.i1(0, i2))) else $smod.i1(i1, i2)) }
function {:inline} $srem.i5(i1: i5, i2: i5) returns (i5) { (if ($ne.i5.bool($smod.i5(i1, i2), 0) && $slt.i5.bool(i1, 0)) then $sub.i5($smod.i5(i1, i2), $smax.i5(i2, $sub.i5(0, i2))) else $smod.i5(i1, i2)) }
function {:inline} $srem.i6(i1: i6, i2: i6) returns (i6) { (if ($ne.i6.bool($smod.i6(i1, i2), 0) && $slt.i6.bool(i1, 0)) then $sub.i6($smod.i6(i1, i2), $smax.i6(i2, $sub.i6(0, i2))) else $smod.i6(i1, i2)) }
function {:inline} $srem.i8(i1: i8, i2: i8) returns (i8) { (if ($ne.i8.bool($smod.i8(i1, i2), 0) && $slt.i8.bool(i1, 0)) then $sub.i8($smod.i8(i1, i2), $smax.i8(i2, $sub.i8(0, i2))) else $smod.i8(i1, i2)) }
function {:inline} $srem.i16(i1: i16, i2: i16) returns (i16) { (if ($ne.i16.bool($smod.i16(i1, i2), 0) && $slt.i16.bool(i1, 0)) then $sub.i16($smod.i16(i1, i2), $smax.i16(i2, $sub.i16(0, i2))) else $smod.i16(i1, i2)) }
function {:inline} $srem.i24(i1: i24, i2: i24) returns (i24) { (if ($ne.i24.bool($smod.i24(i1, i2), 0) && $slt.i24.bool(i1, 0)) then $sub.i24($smod.i24(i1, i2), $smax.i24(i2, $sub.i24(0, i2))) else $smod.i24(i1, i2)) }
function {:inline} $srem.i32(i1: i32, i2: i32) returns (i32) { (if ($ne.i32.bool($smod.i32(i1, i2), 0) && $slt.i32.bool(i1, 0)) then $sub.i32($smod.i32(i1, i2), $smax.i32(i2, $sub.i32(0, i2))) else $smod.i32(i1, i2)) }
function {:inline} $srem.i40(i1: i40, i2: i40) returns (i40) { (if ($ne.i40.bool($smod.i40(i1, i2), 0) && $slt.i40.bool(i1, 0)) then $sub.i40($smod.i40(i1, i2), $smax.i40(i2, $sub.i40(0, i2))) else $smod.i40(i1, i2)) }
function {:inline} $srem.i48(i1: i48, i2: i48) returns (i48) { (if ($ne.i48.bool($smod.i48(i1, i2), 0) && $slt.i48.bool(i1, 0)) then $sub.i48($smod.i48(i1, i2), $smax.i48(i2, $sub.i48(0, i2))) else $smod.i48(i1, i2)) }
function {:inline} $srem.i56(i1: i56, i2: i56) returns (i56) { (if ($ne.i56.bool($smod.i56(i1, i2), 0) && $slt.i56.bool(i1, 0)) then $sub.i56($smod.i56(i1, i2), $smax.i56(i2, $sub.i56(0, i2))) else $smod.i56(i1, i2)) }
function {:inline} $srem.i64(i1: i64, i2: i64) returns (i64) { (if ($ne.i64.bool($smod.i64(i1, i2), 0) && $slt.i64.bool(i1, 0)) then $sub.i64($smod.i64(i1, i2), $smax.i64(i2, $sub.i64(0, i2))) else $smod.i64(i1, i2)) }
function {:inline} $srem.i80(i1: i80, i2: i80) returns (i80) { (if ($ne.i80.bool($smod.i80(i1, i2), 0) && $slt.i80.bool(i1, 0)) then $sub.i80($smod.i80(i1, i2), $smax.i80(i2, $sub.i80(0, i2))) else $smod.i80(i1, i2)) }
function {:inline} $srem.i88(i1: i88, i2: i88) returns (i88) { (if ($ne.i88.bool($smod.i88(i1, i2), 0) && $slt.i88.bool(i1, 0)) then $sub.i88($smod.i88(i1, i2), $smax.i88(i2, $sub.i88(0, i2))) else $smod.i88(i1, i2)) }
function {:inline} $srem.i96(i1: i96, i2: i96) returns (i96) { (if ($ne.i96.bool($smod.i96(i1, i2), 0) && $slt.i96.bool(i1, 0)) then $sub.i96($smod.i96(i1, i2), $smax.i96(i2, $sub.i96(0, i2))) else $smod.i96(i1, i2)) }
function {:inline} $srem.i128(i1: i128, i2: i128) returns (i128) { (if ($ne.i128.bool($smod.i128(i1, i2), 0) && $slt.i128.bool(i1, 0)) then $sub.i128($smod.i128(i1, i2), $smax.i128(i2, $sub.i128(0, i2))) else $smod.i128(i1, i2)) }
function {:inline} $srem.i160(i1: i160, i2: i160) returns (i160) { (if ($ne.i160.bool($smod.i160(i1, i2), 0) && $slt.i160.bool(i1, 0)) then $sub.i160($smod.i160(i1, i2), $smax.i160(i2, $sub.i160(0, i2))) else $smod.i160(i1, i2)) }
function {:inline} $srem.i256(i1: i256, i2: i256) returns (i256) { (if ($ne.i256.bool($smod.i256(i1, i2), 0) && $slt.i256.bool(i1, 0)) then $sub.i256($smod.i256(i1, i2), $smax.i256(i2, $sub.i256(0, i2))) else $smod.i256(i1, i2)) }
function {:inline} $urem.i1(i1: i1, i2: i1) returns (i1) { $smod.i1(i1, i2) }
function {:inline} $urem.i5(i1: i5, i2: i5) returns (i5) { $smod.i5(i1, i2) }
function {:inline} $urem.i6(i1: i6, i2: i6) returns (i6) { $smod.i6(i1, i2) }
function {:inline} $urem.i8(i1: i8, i2: i8) returns (i8) { $smod.i8(i1, i2) }
function {:inline} $urem.i16(i1: i16, i2: i16) returns (i16) { $smod.i16(i1, i2) }
function {:inline} $urem.i24(i1: i24, i2: i24) returns (i24) { $smod.i24(i1, i2) }
function {:inline} $urem.i32(i1: i32, i2: i32) returns (i32) { $smod.i32(i1, i2) }
function {:inline} $urem.i40(i1: i40, i2: i40) returns (i40) { $smod.i40(i1, i2) }
function {:inline} $urem.i48(i1: i48, i2: i48) returns (i48) { $smod.i48(i1, i2) }
function {:inline} $urem.i56(i1: i56, i2: i56) returns (i56) { $smod.i56(i1, i2) }
function {:inline} $urem.i64(i1: i64, i2: i64) returns (i64) { $smod.i64(i1, i2) }
function {:inline} $urem.i80(i1: i80, i2: i80) returns (i80) { $smod.i80(i1, i2) }
function {:inline} $urem.i88(i1: i88, i2: i88) returns (i88) { $smod.i88(i1, i2) }
function {:inline} $urem.i96(i1: i96, i2: i96) returns (i96) { $smod.i96(i1, i2) }
function {:inline} $urem.i128(i1: i128, i2: i128) returns (i128) { $smod.i128(i1, i2) }
function {:inline} $urem.i160(i1: i160, i2: i160) returns (i160) { $smod.i160(i1, i2) }
function {:inline} $urem.i256(i1: i256, i2: i256) returns (i256) { $smod.i256(i1, i2) }
function $shl.i1(i1: i1, i2: i1) returns (i1);
function $shl.i5(i1: i5, i2: i5) returns (i5);
function $shl.i6(i1: i6, i2: i6) returns (i6);
function $shl.i8(i1: i8, i2: i8) returns (i8);
function $shl.i16(i1: i16, i2: i16) returns (i16);
function $shl.i24(i1: i24, i2: i24) returns (i24);
function $shl.i32(i1: i32, i2: i32) returns (i32);
function $shl.i40(i1: i40, i2: i40) returns (i40);
function $shl.i48(i1: i48, i2: i48) returns (i48);
function $shl.i56(i1: i56, i2: i56) returns (i56);
function $shl.i64(i1: i64, i2: i64) returns (i64);
function $shl.i80(i1: i80, i2: i80) returns (i80);
function $shl.i88(i1: i88, i2: i88) returns (i88);
function $shl.i96(i1: i96, i2: i96) returns (i96);
function $shl.i128(i1: i128, i2: i128) returns (i128);
function $shl.i160(i1: i160, i2: i160) returns (i160);
function $shl.i256(i1: i256, i2: i256) returns (i256);
function $lshr.i1(i1: i1, i2: i1) returns (i1);
function $lshr.i5(i1: i5, i2: i5) returns (i5);
function $lshr.i6(i1: i6, i2: i6) returns (i6);
function $lshr.i8(i1: i8, i2: i8) returns (i8);
function $lshr.i16(i1: i16, i2: i16) returns (i16);
function $lshr.i24(i1: i24, i2: i24) returns (i24);
function $lshr.i32(i1: i32, i2: i32) returns (i32);
function $lshr.i40(i1: i40, i2: i40) returns (i40);
function $lshr.i48(i1: i48, i2: i48) returns (i48);
function $lshr.i56(i1: i56, i2: i56) returns (i56);
function $lshr.i64(i1: i64, i2: i64) returns (i64);
function $lshr.i80(i1: i80, i2: i80) returns (i80);
function $lshr.i88(i1: i88, i2: i88) returns (i88);
function $lshr.i96(i1: i96, i2: i96) returns (i96);
function $lshr.i128(i1: i128, i2: i128) returns (i128);
function $lshr.i160(i1: i160, i2: i160) returns (i160);
function $lshr.i256(i1: i256, i2: i256) returns (i256);
function $ashr.i1(i1: i1, i2: i1) returns (i1);
function $ashr.i5(i1: i5, i2: i5) returns (i5);
function $ashr.i6(i1: i6, i2: i6) returns (i6);
function $ashr.i8(i1: i8, i2: i8) returns (i8);
function $ashr.i16(i1: i16, i2: i16) returns (i16);
function $ashr.i24(i1: i24, i2: i24) returns (i24);
function $ashr.i32(i1: i32, i2: i32) returns (i32);
function $ashr.i40(i1: i40, i2: i40) returns (i40);
function $ashr.i48(i1: i48, i2: i48) returns (i48);
function $ashr.i56(i1: i56, i2: i56) returns (i56);
function $ashr.i64(i1: i64, i2: i64) returns (i64);
function $ashr.i80(i1: i80, i2: i80) returns (i80);
function $ashr.i88(i1: i88, i2: i88) returns (i88);
function $ashr.i96(i1: i96, i2: i96) returns (i96);
function $ashr.i128(i1: i128, i2: i128) returns (i128);
function $ashr.i160(i1: i160, i2: i160) returns (i160);
function $ashr.i256(i1: i256, i2: i256) returns (i256);
function $and.i1(i1: i1, i2: i1) returns (i1);
function $and.i5(i1: i5, i2: i5) returns (i5);
function $and.i6(i1: i6, i2: i6) returns (i6);
function $and.i8(i1: i8, i2: i8) returns (i8);
function $and.i16(i1: i16, i2: i16) returns (i16);
function $and.i24(i1: i24, i2: i24) returns (i24);
function $and.i32(i1: i32, i2: i32) returns (i32);
function $and.i40(i1: i40, i2: i40) returns (i40);
function $and.i48(i1: i48, i2: i48) returns (i48);
function $and.i56(i1: i56, i2: i56) returns (i56);
function $and.i64(i1: i64, i2: i64) returns (i64);
function $and.i80(i1: i80, i2: i80) returns (i80);
function $and.i88(i1: i88, i2: i88) returns (i88);
function $and.i96(i1: i96, i2: i96) returns (i96);
function $and.i128(i1: i128, i2: i128) returns (i128);
function $and.i160(i1: i160, i2: i160) returns (i160);
function $and.i256(i1: i256, i2: i256) returns (i256);
function $or.i1(i1: i1, i2: i1) returns (i1);
function $or.i5(i1: i5, i2: i5) returns (i5);
function $or.i6(i1: i6, i2: i6) returns (i6);
function $or.i8(i1: i8, i2: i8) returns (i8);
function $or.i16(i1: i16, i2: i16) returns (i16);
function $or.i24(i1: i24, i2: i24) returns (i24);
function $or.i32(i1: i32, i2: i32) returns (i32);
function $or.i40(i1: i40, i2: i40) returns (i40);
function $or.i48(i1: i48, i2: i48) returns (i48);
function $or.i56(i1: i56, i2: i56) returns (i56);
function $or.i64(i1: i64, i2: i64) returns (i64);
function $or.i80(i1: i80, i2: i80) returns (i80);
function $or.i88(i1: i88, i2: i88) returns (i88);
function $or.i96(i1: i96, i2: i96) returns (i96);
function $or.i128(i1: i128, i2: i128) returns (i128);
function $or.i160(i1: i160, i2: i160) returns (i160);
function $or.i256(i1: i256, i2: i256) returns (i256);
function $xor.i1(i1: i1, i2: i1) returns (i1);
function $xor.i5(i1: i5, i2: i5) returns (i5);
function $xor.i6(i1: i6, i2: i6) returns (i6);
function $xor.i8(i1: i8, i2: i8) returns (i8);
function $xor.i16(i1: i16, i2: i16) returns (i16);
function $xor.i24(i1: i24, i2: i24) returns (i24);
function $xor.i32(i1: i32, i2: i32) returns (i32);
function $xor.i40(i1: i40, i2: i40) returns (i40);
function $xor.i48(i1: i48, i2: i48) returns (i48);
function $xor.i56(i1: i56, i2: i56) returns (i56);
function $xor.i64(i1: i64, i2: i64) returns (i64);
function $xor.i80(i1: i80, i2: i80) returns (i80);
function $xor.i88(i1: i88, i2: i88) returns (i88);
function $xor.i96(i1: i96, i2: i96) returns (i96);
function $xor.i128(i1: i128, i2: i128) returns (i128);
function $xor.i160(i1: i160, i2: i160) returns (i160);
function $xor.i256(i1: i256, i2: i256) returns (i256);
function $nand.i1(i1: i1, i2: i1) returns (i1);
function $nand.i5(i1: i5, i2: i5) returns (i5);
function $nand.i6(i1: i6, i2: i6) returns (i6);
function $nand.i8(i1: i8, i2: i8) returns (i8);
function $nand.i16(i1: i16, i2: i16) returns (i16);
function $nand.i24(i1: i24, i2: i24) returns (i24);
function $nand.i32(i1: i32, i2: i32) returns (i32);
function $nand.i40(i1: i40, i2: i40) returns (i40);
function $nand.i48(i1: i48, i2: i48) returns (i48);
function $nand.i56(i1: i56, i2: i56) returns (i56);
function $nand.i64(i1: i64, i2: i64) returns (i64);
function $nand.i80(i1: i80, i2: i80) returns (i80);
function $nand.i88(i1: i88, i2: i88) returns (i88);
function $nand.i96(i1: i96, i2: i96) returns (i96);
function $nand.i128(i1: i128, i2: i128) returns (i128);
function $nand.i160(i1: i160, i2: i160) returns (i160);
function $nand.i256(i1: i256, i2: i256) returns (i256);
function $not.i1(i: i1) returns (i1);
function $not.i5(i: i5) returns (i5);
function $not.i6(i: i6) returns (i6);
function $not.i8(i: i8) returns (i8);
function $not.i16(i: i16) returns (i16);
function $not.i24(i: i24) returns (i24);
function $not.i32(i: i32) returns (i32);
function $not.i40(i: i40) returns (i40);
function $not.i48(i: i48) returns (i48);
function $not.i56(i: i56) returns (i56);
function $not.i64(i: i64) returns (i64);
function $not.i80(i: i80) returns (i80);
function $not.i88(i: i88) returns (i88);
function $not.i96(i: i96) returns (i96);
function $not.i128(i: i128) returns (i128);
function $not.i160(i: i160) returns (i160);
function $not.i256(i: i256) returns (i256);
function {:inline} $smin.i1(i1: i1, i2: i1) returns (i1) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i5(i1: i5, i2: i5) returns (i5) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i6(i1: i6, i2: i6) returns (i6) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i8(i1: i8, i2: i8) returns (i8) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i16(i1: i16, i2: i16) returns (i16) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i24(i1: i24, i2: i24) returns (i24) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i32(i1: i32, i2: i32) returns (i32) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i40(i1: i40, i2: i40) returns (i40) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i48(i1: i48, i2: i48) returns (i48) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i56(i1: i56, i2: i56) returns (i56) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i64(i1: i64, i2: i64) returns (i64) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i80(i1: i80, i2: i80) returns (i80) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i88(i1: i88, i2: i88) returns (i88) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i96(i1: i96, i2: i96) returns (i96) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i128(i1: i128, i2: i128) returns (i128) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i160(i1: i160, i2: i160) returns (i160) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i256(i1: i256, i2: i256) returns (i256) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smax.i1(i1: i1, i2: i1) returns (i1) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i5(i1: i5, i2: i5) returns (i5) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i6(i1: i6, i2: i6) returns (i6) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i8(i1: i8, i2: i8) returns (i8) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i16(i1: i16, i2: i16) returns (i16) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i24(i1: i24, i2: i24) returns (i24) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i32(i1: i32, i2: i32) returns (i32) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i40(i1: i40, i2: i40) returns (i40) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i48(i1: i48, i2: i48) returns (i48) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i56(i1: i56, i2: i56) returns (i56) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i64(i1: i64, i2: i64) returns (i64) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i80(i1: i80, i2: i80) returns (i80) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i88(i1: i88, i2: i88) returns (i88) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i96(i1: i96, i2: i96) returns (i96) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i128(i1: i128, i2: i128) returns (i128) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i160(i1: i160, i2: i160) returns (i160) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i256(i1: i256, i2: i256) returns (i256) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umin.i1(i1: i1, i2: i1) returns (i1) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i5(i1: i5, i2: i5) returns (i5) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i6(i1: i6, i2: i6) returns (i6) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i8(i1: i8, i2: i8) returns (i8) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i16(i1: i16, i2: i16) returns (i16) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i24(i1: i24, i2: i24) returns (i24) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i32(i1: i32, i2: i32) returns (i32) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i40(i1: i40, i2: i40) returns (i40) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i48(i1: i48, i2: i48) returns (i48) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i56(i1: i56, i2: i56) returns (i56) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i64(i1: i64, i2: i64) returns (i64) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i80(i1: i80, i2: i80) returns (i80) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i88(i1: i88, i2: i88) returns (i88) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i96(i1: i96, i2: i96) returns (i96) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i128(i1: i128, i2: i128) returns (i128) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i160(i1: i160, i2: i160) returns (i160) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i256(i1: i256, i2: i256) returns (i256) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umax.i1(i1: i1, i2: i1) returns (i1) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i5(i1: i5, i2: i5) returns (i5) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i6(i1: i6, i2: i6) returns (i6) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i8(i1: i8, i2: i8) returns (i8) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i16(i1: i16, i2: i16) returns (i16) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i24(i1: i24, i2: i24) returns (i24) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i32(i1: i32, i2: i32) returns (i32) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i40(i1: i40, i2: i40) returns (i40) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i48(i1: i48, i2: i48) returns (i48) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i56(i1: i56, i2: i56) returns (i56) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i64(i1: i64, i2: i64) returns (i64) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i80(i1: i80, i2: i80) returns (i80) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i88(i1: i88, i2: i88) returns (i88) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i96(i1: i96, i2: i96) returns (i96) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i128(i1: i128, i2: i128) returns (i128) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i160(i1: i160, i2: i160) returns (i160) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i256(i1: i256, i2: i256) returns (i256) { (if (i2 < i1) then i1 else i2) }
axiom ($and.i1(0, 0) == 0);
axiom ($or.i1(0, 0) == 0);
axiom ($xor.i1(0, 0) == 0);
axiom ($and.i1(0, 1) == 0);
axiom ($or.i1(0, 1) == 1);
axiom ($xor.i1(0, 1) == 1);
axiom ($and.i1(1, 0) == 0);
axiom ($or.i1(1, 0) == 1);
axiom ($xor.i1(1, 0) == 1);
axiom ($and.i1(1, 1) == 1);
axiom ($or.i1(1, 1) == 1);
axiom ($xor.i1(1, 1) == 0);
axiom ($and.i32(32, 16) == 0);
// Integer predicates
function {:inline} $ule.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i1(i1: i1, i2: i1) returns (i1) { (if $ule.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i5(i1: i5, i2: i5) returns (i1) { (if $ule.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i6(i1: i6, i2: i6) returns (i1) { (if $ule.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i8(i1: i8, i2: i8) returns (i1) { (if $ule.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i16(i1: i16, i2: i16) returns (i1) { (if $ule.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i24(i1: i24, i2: i24) returns (i1) { (if $ule.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i32(i1: i32, i2: i32) returns (i1) { (if $ule.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i40(i1: i40, i2: i40) returns (i1) { (if $ule.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i48(i1: i48, i2: i48) returns (i1) { (if $ule.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i56(i1: i56, i2: i56) returns (i1) { (if $ule.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i64(i1: i64, i2: i64) returns (i1) { (if $ule.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i80(i1: i80, i2: i80) returns (i1) { (if $ule.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i88(i1: i88, i2: i88) returns (i1) { (if $ule.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i96(i1: i96, i2: i96) returns (i1) { (if $ule.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i128(i1: i128, i2: i128) returns (i1) { (if $ule.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i160(i1: i160, i2: i160) returns (i1) { (if $ule.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i256(i1: i256, i2: i256) returns (i1) { (if $ule.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 < i2) }
function {:inline} $ult.i1(i1: i1, i2: i1) returns (i1) { (if $ult.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 < i2) }
function {:inline} $ult.i5(i1: i5, i2: i5) returns (i1) { (if $ult.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 < i2) }
function {:inline} $ult.i6(i1: i6, i2: i6) returns (i1) { (if $ult.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 < i2) }
function {:inline} $ult.i8(i1: i8, i2: i8) returns (i1) { (if $ult.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 < i2) }
function {:inline} $ult.i16(i1: i16, i2: i16) returns (i1) { (if $ult.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 < i2) }
function {:inline} $ult.i24(i1: i24, i2: i24) returns (i1) { (if $ult.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 < i2) }
function {:inline} $ult.i32(i1: i32, i2: i32) returns (i1) { (if $ult.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 < i2) }
function {:inline} $ult.i40(i1: i40, i2: i40) returns (i1) { (if $ult.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 < i2) }
function {:inline} $ult.i48(i1: i48, i2: i48) returns (i1) { (if $ult.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 < i2) }
function {:inline} $ult.i56(i1: i56, i2: i56) returns (i1) { (if $ult.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 < i2) }
function {:inline} $ult.i64(i1: i64, i2: i64) returns (i1) { (if $ult.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 < i2) }
function {:inline} $ult.i80(i1: i80, i2: i80) returns (i1) { (if $ult.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 < i2) }
function {:inline} $ult.i88(i1: i88, i2: i88) returns (i1) { (if $ult.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 < i2) }
function {:inline} $ult.i96(i1: i96, i2: i96) returns (i1) { (if $ult.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 < i2) }
function {:inline} $ult.i128(i1: i128, i2: i128) returns (i1) { (if $ult.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 < i2) }
function {:inline} $ult.i160(i1: i160, i2: i160) returns (i1) { (if $ult.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 < i2) }
function {:inline} $ult.i256(i1: i256, i2: i256) returns (i1) { (if $ult.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i1(i1: i1, i2: i1) returns (i1) { (if $uge.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i5(i1: i5, i2: i5) returns (i1) { (if $uge.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i6(i1: i6, i2: i6) returns (i1) { (if $uge.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i8(i1: i8, i2: i8) returns (i1) { (if $uge.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i16(i1: i16, i2: i16) returns (i1) { (if $uge.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i24(i1: i24, i2: i24) returns (i1) { (if $uge.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i32(i1: i32, i2: i32) returns (i1) { (if $uge.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i40(i1: i40, i2: i40) returns (i1) { (if $uge.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i48(i1: i48, i2: i48) returns (i1) { (if $uge.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i56(i1: i56, i2: i56) returns (i1) { (if $uge.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i64(i1: i64, i2: i64) returns (i1) { (if $uge.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i80(i1: i80, i2: i80) returns (i1) { (if $uge.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i88(i1: i88, i2: i88) returns (i1) { (if $uge.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i96(i1: i96, i2: i96) returns (i1) { (if $uge.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i128(i1: i128, i2: i128) returns (i1) { (if $uge.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i160(i1: i160, i2: i160) returns (i1) { (if $uge.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i256(i1: i256, i2: i256) returns (i1) { (if $uge.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i1(i1: i1, i2: i1) returns (i1) { (if $ugt.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i5(i1: i5, i2: i5) returns (i1) { (if $ugt.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i6(i1: i6, i2: i6) returns (i1) { (if $ugt.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i8(i1: i8, i2: i8) returns (i1) { (if $ugt.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i16(i1: i16, i2: i16) returns (i1) { (if $ugt.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i24(i1: i24, i2: i24) returns (i1) { (if $ugt.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i32(i1: i32, i2: i32) returns (i1) { (if $ugt.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i40(i1: i40, i2: i40) returns (i1) { (if $ugt.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i48(i1: i48, i2: i48) returns (i1) { (if $ugt.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i56(i1: i56, i2: i56) returns (i1) { (if $ugt.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i64(i1: i64, i2: i64) returns (i1) { (if $ugt.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i80(i1: i80, i2: i80) returns (i1) { (if $ugt.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i88(i1: i88, i2: i88) returns (i1) { (if $ugt.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i96(i1: i96, i2: i96) returns (i1) { (if $ugt.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i128(i1: i128, i2: i128) returns (i1) { (if $ugt.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i160(i1: i160, i2: i160) returns (i1) { (if $ugt.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i256(i1: i256, i2: i256) returns (i1) { (if $ugt.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i1(i1: i1, i2: i1) returns (i1) { (if $sle.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i5(i1: i5, i2: i5) returns (i1) { (if $sle.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i6(i1: i6, i2: i6) returns (i1) { (if $sle.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i8(i1: i8, i2: i8) returns (i1) { (if $sle.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i16(i1: i16, i2: i16) returns (i1) { (if $sle.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i24(i1: i24, i2: i24) returns (i1) { (if $sle.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i32(i1: i32, i2: i32) returns (i1) { (if $sle.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i40(i1: i40, i2: i40) returns (i1) { (if $sle.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i48(i1: i48, i2: i48) returns (i1) { (if $sle.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i56(i1: i56, i2: i56) returns (i1) { (if $sle.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i64(i1: i64, i2: i64) returns (i1) { (if $sle.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i80(i1: i80, i2: i80) returns (i1) { (if $sle.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i88(i1: i88, i2: i88) returns (i1) { (if $sle.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i96(i1: i96, i2: i96) returns (i1) { (if $sle.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i128(i1: i128, i2: i128) returns (i1) { (if $sle.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i160(i1: i160, i2: i160) returns (i1) { (if $sle.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i256(i1: i256, i2: i256) returns (i1) { (if $sle.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 < i2) }
function {:inline} $slt.i1(i1: i1, i2: i1) returns (i1) { (if $slt.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 < i2) }
function {:inline} $slt.i5(i1: i5, i2: i5) returns (i1) { (if $slt.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 < i2) }
function {:inline} $slt.i6(i1: i6, i2: i6) returns (i1) { (if $slt.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 < i2) }
function {:inline} $slt.i8(i1: i8, i2: i8) returns (i1) { (if $slt.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 < i2) }
function {:inline} $slt.i16(i1: i16, i2: i16) returns (i1) { (if $slt.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 < i2) }
function {:inline} $slt.i24(i1: i24, i2: i24) returns (i1) { (if $slt.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 < i2) }
function {:inline} $slt.i32(i1: i32, i2: i32) returns (i1) { (if $slt.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 < i2) }
function {:inline} $slt.i40(i1: i40, i2: i40) returns (i1) { (if $slt.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 < i2) }
function {:inline} $slt.i48(i1: i48, i2: i48) returns (i1) { (if $slt.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 < i2) }
function {:inline} $slt.i56(i1: i56, i2: i56) returns (i1) { (if $slt.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 < i2) }
function {:inline} $slt.i64(i1: i64, i2: i64) returns (i1) { (if $slt.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 < i2) }
function {:inline} $slt.i80(i1: i80, i2: i80) returns (i1) { (if $slt.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 < i2) }
function {:inline} $slt.i88(i1: i88, i2: i88) returns (i1) { (if $slt.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 < i2) }
function {:inline} $slt.i96(i1: i96, i2: i96) returns (i1) { (if $slt.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 < i2) }
function {:inline} $slt.i128(i1: i128, i2: i128) returns (i1) { (if $slt.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 < i2) }
function {:inline} $slt.i160(i1: i160, i2: i160) returns (i1) { (if $slt.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 < i2) }
function {:inline} $slt.i256(i1: i256, i2: i256) returns (i1) { (if $slt.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i1(i1: i1, i2: i1) returns (i1) { (if $sge.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i5(i1: i5, i2: i5) returns (i1) { (if $sge.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i6(i1: i6, i2: i6) returns (i1) { (if $sge.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i8(i1: i8, i2: i8) returns (i1) { (if $sge.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i16(i1: i16, i2: i16) returns (i1) { (if $sge.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i24(i1: i24, i2: i24) returns (i1) { (if $sge.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i32(i1: i32, i2: i32) returns (i1) { (if $sge.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i40(i1: i40, i2: i40) returns (i1) { (if $sge.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i48(i1: i48, i2: i48) returns (i1) { (if $sge.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i56(i1: i56, i2: i56) returns (i1) { (if $sge.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i64(i1: i64, i2: i64) returns (i1) { (if $sge.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i80(i1: i80, i2: i80) returns (i1) { (if $sge.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i88(i1: i88, i2: i88) returns (i1) { (if $sge.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i96(i1: i96, i2: i96) returns (i1) { (if $sge.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i128(i1: i128, i2: i128) returns (i1) { (if $sge.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i160(i1: i160, i2: i160) returns (i1) { (if $sge.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i256(i1: i256, i2: i256) returns (i1) { (if $sge.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i1(i1: i1, i2: i1) returns (i1) { (if $sgt.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i5(i1: i5, i2: i5) returns (i1) { (if $sgt.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i6(i1: i6, i2: i6) returns (i1) { (if $sgt.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i8(i1: i8, i2: i8) returns (i1) { (if $sgt.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i16(i1: i16, i2: i16) returns (i1) { (if $sgt.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i24(i1: i24, i2: i24) returns (i1) { (if $sgt.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i32(i1: i32, i2: i32) returns (i1) { (if $sgt.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i40(i1: i40, i2: i40) returns (i1) { (if $sgt.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i48(i1: i48, i2: i48) returns (i1) { (if $sgt.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i56(i1: i56, i2: i56) returns (i1) { (if $sgt.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i64(i1: i64, i2: i64) returns (i1) { (if $sgt.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i80(i1: i80, i2: i80) returns (i1) { (if $sgt.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i88(i1: i88, i2: i88) returns (i1) { (if $sgt.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i96(i1: i96, i2: i96) returns (i1) { (if $sgt.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i128(i1: i128, i2: i128) returns (i1) { (if $sgt.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i160(i1: i160, i2: i160) returns (i1) { (if $sgt.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i256(i1: i256, i2: i256) returns (i1) { (if $sgt.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 == i2) }
function {:inline} $eq.i1(i1: i1, i2: i1) returns (i1) { (if $eq.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 == i2) }
function {:inline} $eq.i5(i1: i5, i2: i5) returns (i1) { (if $eq.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 == i2) }
function {:inline} $eq.i6(i1: i6, i2: i6) returns (i1) { (if $eq.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 == i2) }
function {:inline} $eq.i8(i1: i8, i2: i8) returns (i1) { (if $eq.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 == i2) }
function {:inline} $eq.i16(i1: i16, i2: i16) returns (i1) { (if $eq.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 == i2) }
function {:inline} $eq.i24(i1: i24, i2: i24) returns (i1) { (if $eq.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 == i2) }
function {:inline} $eq.i32(i1: i32, i2: i32) returns (i1) { (if $eq.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 == i2) }
function {:inline} $eq.i40(i1: i40, i2: i40) returns (i1) { (if $eq.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 == i2) }
function {:inline} $eq.i48(i1: i48, i2: i48) returns (i1) { (if $eq.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 == i2) }
function {:inline} $eq.i56(i1: i56, i2: i56) returns (i1) { (if $eq.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 == i2) }
function {:inline} $eq.i64(i1: i64, i2: i64) returns (i1) { (if $eq.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 == i2) }
function {:inline} $eq.i80(i1: i80, i2: i80) returns (i1) { (if $eq.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 == i2) }
function {:inline} $eq.i88(i1: i88, i2: i88) returns (i1) { (if $eq.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 == i2) }
function {:inline} $eq.i96(i1: i96, i2: i96) returns (i1) { (if $eq.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 == i2) }
function {:inline} $eq.i128(i1: i128, i2: i128) returns (i1) { (if $eq.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 == i2) }
function {:inline} $eq.i160(i1: i160, i2: i160) returns (i1) { (if $eq.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 == i2) }
function {:inline} $eq.i256(i1: i256, i2: i256) returns (i1) { (if $eq.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 != i2) }
function {:inline} $ne.i1(i1: i1, i2: i1) returns (i1) { (if $ne.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 != i2) }
function {:inline} $ne.i5(i1: i5, i2: i5) returns (i1) { (if $ne.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 != i2) }
function {:inline} $ne.i6(i1: i6, i2: i6) returns (i1) { (if $ne.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 != i2) }
function {:inline} $ne.i8(i1: i8, i2: i8) returns (i1) { (if $ne.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 != i2) }
function {:inline} $ne.i16(i1: i16, i2: i16) returns (i1) { (if $ne.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 != i2) }
function {:inline} $ne.i24(i1: i24, i2: i24) returns (i1) { (if $ne.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 != i2) }
function {:inline} $ne.i32(i1: i32, i2: i32) returns (i1) { (if $ne.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 != i2) }
function {:inline} $ne.i40(i1: i40, i2: i40) returns (i1) { (if $ne.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 != i2) }
function {:inline} $ne.i48(i1: i48, i2: i48) returns (i1) { (if $ne.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 != i2) }
function {:inline} $ne.i56(i1: i56, i2: i56) returns (i1) { (if $ne.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 != i2) }
function {:inline} $ne.i64(i1: i64, i2: i64) returns (i1) { (if $ne.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 != i2) }
function {:inline} $ne.i80(i1: i80, i2: i80) returns (i1) { (if $ne.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 != i2) }
function {:inline} $ne.i88(i1: i88, i2: i88) returns (i1) { (if $ne.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 != i2) }
function {:inline} $ne.i96(i1: i96, i2: i96) returns (i1) { (if $ne.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 != i2) }
function {:inline} $ne.i128(i1: i128, i2: i128) returns (i1) { (if $ne.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 != i2) }
function {:inline} $ne.i160(i1: i160, i2: i160) returns (i1) { (if $ne.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 != i2) }
function {:inline} $ne.i256(i1: i256, i2: i256) returns (i1) { (if $ne.i256.bool(i1, i2) then 1 else 0) }
// Integer load/store operations
function {:inline} $load.i1(M: [ref] i1, p: ref) returns (i1) { M[p] }
function {:inline} $store.i1(M: [ref] i1, p: ref, i: i1) returns ([ref] i1) { M[p := i] }
function {:inline} $load.i5(M: [ref] i5, p: ref) returns (i5) { M[p] }
function {:inline} $store.i5(M: [ref] i5, p: ref, i: i5) returns ([ref] i5) { M[p := i] }
function {:inline} $load.i6(M: [ref] i6, p: ref) returns (i6) { M[p] }
function {:inline} $store.i6(M: [ref] i6, p: ref, i: i6) returns ([ref] i6) { M[p := i] }
function {:inline} $load.i8(M: [ref] i8, p: ref) returns (i8) { M[p] }
function {:inline} $store.i8(M: [ref] i8, p: ref, i: i8) returns ([ref] i8) { M[p := i] }
function {:inline} $load.i16(M: [ref] i16, p: ref) returns (i16) { M[p] }
function {:inline} $store.i16(M: [ref] i16, p: ref, i: i16) returns ([ref] i16) { M[p := i] }
function {:inline} $load.i24(M: [ref] i24, p: ref) returns (i24) { M[p] }
function {:inline} $store.i24(M: [ref] i24, p: ref, i: i24) returns ([ref] i24) { M[p := i] }
function {:inline} $load.i32(M: [ref] i32, p: ref) returns (i32) { M[p] }
function {:inline} $store.i32(M: [ref] i32, p: ref, i: i32) returns ([ref] i32) { M[p := i] }
function {:inline} $load.i40(M: [ref] i40, p: ref) returns (i40) { M[p] }
function {:inline} $store.i40(M: [ref] i40, p: ref, i: i40) returns ([ref] i40) { M[p := i] }
function {:inline} $load.i48(M: [ref] i48, p: ref) returns (i48) { M[p] }
function {:inline} $store.i48(M: [ref] i48, p: ref, i: i48) returns ([ref] i48) { M[p := i] }
function {:inline} $load.i56(M: [ref] i56, p: ref) returns (i56) { M[p] }
function {:inline} $store.i56(M: [ref] i56, p: ref, i: i56) returns ([ref] i56) { M[p := i] }
function {:inline} $load.i64(M: [ref] i64, p: ref) returns (i64) { M[p] }
function {:inline} $store.i64(M: [ref] i64, p: ref, i: i64) returns ([ref] i64) { M[p := i] }
function {:inline} $load.i80(M: [ref] i80, p: ref) returns (i80) { M[p] }
function {:inline} $store.i80(M: [ref] i80, p: ref, i: i80) returns ([ref] i80) { M[p := i] }
function {:inline} $load.i88(M: [ref] i88, p: ref) returns (i88) { M[p] }
function {:inline} $store.i88(M: [ref] i88, p: ref, i: i88) returns ([ref] i88) { M[p := i] }
function {:inline} $load.i96(M: [ref] i96, p: ref) returns (i96) { M[p] }
function {:inline} $store.i96(M: [ref] i96, p: ref, i: i96) returns ([ref] i96) { M[p := i] }
function {:inline} $load.i128(M: [ref] i128, p: ref) returns (i128) { M[p] }
function {:inline} $store.i128(M: [ref] i128, p: ref, i: i128) returns ([ref] i128) { M[p := i] }
function {:inline} $load.i160(M: [ref] i160, p: ref) returns (i160) { M[p] }
function {:inline} $store.i160(M: [ref] i160, p: ref, i: i160) returns ([ref] i160) { M[p := i] }
function {:inline} $load.i256(M: [ref] i256, p: ref) returns (i256) { M[p] }
function {:inline} $store.i256(M: [ref] i256, p: ref, i: i256) returns ([ref] i256) { M[p := i] }
// Conversion between integer types
function {:inline} $trunc.i5.i1(i: i5) returns (i1) { i }
function {:inline} $trunc.i6.i1(i: i6) returns (i1) { i }
function {:inline} $trunc.i8.i1(i: i8) returns (i1) { i }
function {:inline} $trunc.i16.i1(i: i16) returns (i1) { i }
function {:inline} $trunc.i24.i1(i: i24) returns (i1) { i }
function {:inline} $trunc.i32.i1(i: i32) returns (i1) { i }
function {:inline} $trunc.i40.i1(i: i40) returns (i1) { i }
function {:inline} $trunc.i48.i1(i: i48) returns (i1) { i }
function {:inline} $trunc.i56.i1(i: i56) returns (i1) { i }
function {:inline} $trunc.i64.i1(i: i64) returns (i1) { i }
function {:inline} $trunc.i80.i1(i: i80) returns (i1) { i }
function {:inline} $trunc.i88.i1(i: i88) returns (i1) { i }
function {:inline} $trunc.i96.i1(i: i96) returns (i1) { i }
function {:inline} $trunc.i128.i1(i: i128) returns (i1) { i }
function {:inline} $trunc.i160.i1(i: i160) returns (i1) { i }
function {:inline} $trunc.i256.i1(i: i256) returns (i1) { i }
function {:inline} $trunc.i6.i5(i: i6) returns (i5) { i }
function {:inline} $trunc.i8.i5(i: i8) returns (i5) { i }
function {:inline} $trunc.i16.i5(i: i16) returns (i5) { i }
function {:inline} $trunc.i24.i5(i: i24) returns (i5) { i }
function {:inline} $trunc.i32.i5(i: i32) returns (i5) { i }
function {:inline} $trunc.i40.i5(i: i40) returns (i5) { i }
function {:inline} $trunc.i48.i5(i: i48) returns (i5) { i }
function {:inline} $trunc.i56.i5(i: i56) returns (i5) { i }
function {:inline} $trunc.i64.i5(i: i64) returns (i5) { i }
function {:inline} $trunc.i80.i5(i: i80) returns (i5) { i }
function {:inline} $trunc.i88.i5(i: i88) returns (i5) { i }
function {:inline} $trunc.i96.i5(i: i96) returns (i5) { i }
function {:inline} $trunc.i128.i5(i: i128) returns (i5) { i }
function {:inline} $trunc.i160.i5(i: i160) returns (i5) { i }
function {:inline} $trunc.i256.i5(i: i256) returns (i5) { i }
function {:inline} $trunc.i8.i6(i: i8) returns (i6) { i }
function {:inline} $trunc.i16.i6(i: i16) returns (i6) { i }
function {:inline} $trunc.i24.i6(i: i24) returns (i6) { i }
function {:inline} $trunc.i32.i6(i: i32) returns (i6) { i }
function {:inline} $trunc.i40.i6(i: i40) returns (i6) { i }
function {:inline} $trunc.i48.i6(i: i48) returns (i6) { i }
function {:inline} $trunc.i56.i6(i: i56) returns (i6) { i }
function {:inline} $trunc.i64.i6(i: i64) returns (i6) { i }
function {:inline} $trunc.i80.i6(i: i80) returns (i6) { i }
function {:inline} $trunc.i88.i6(i: i88) returns (i6) { i }
function {:inline} $trunc.i96.i6(i: i96) returns (i6) { i }
function {:inline} $trunc.i128.i6(i: i128) returns (i6) { i }
function {:inline} $trunc.i160.i6(i: i160) returns (i6) { i }
function {:inline} $trunc.i256.i6(i: i256) returns (i6) { i }
function {:inline} $trunc.i16.i8(i: i16) returns (i8) { i }
function {:inline} $trunc.i24.i8(i: i24) returns (i8) { i }
function {:inline} $trunc.i32.i8(i: i32) returns (i8) { i }
function {:inline} $trunc.i40.i8(i: i40) returns (i8) { i }
function {:inline} $trunc.i48.i8(i: i48) returns (i8) { i }
function {:inline} $trunc.i56.i8(i: i56) returns (i8) { i }
function {:inline} $trunc.i64.i8(i: i64) returns (i8) { i }
function {:inline} $trunc.i80.i8(i: i80) returns (i8) { i }
function {:inline} $trunc.i88.i8(i: i88) returns (i8) { i }
function {:inline} $trunc.i96.i8(i: i96) returns (i8) { i }
function {:inline} $trunc.i128.i8(i: i128) returns (i8) { i }
function {:inline} $trunc.i160.i8(i: i160) returns (i8) { i }
function {:inline} $trunc.i256.i8(i: i256) returns (i8) { i }
function {:inline} $trunc.i24.i16(i: i24) returns (i16) { i }
function {:inline} $trunc.i32.i16(i: i32) returns (i16) { i }
function {:inline} $trunc.i40.i16(i: i40) returns (i16) { i }
function {:inline} $trunc.i48.i16(i: i48) returns (i16) { i }
function {:inline} $trunc.i56.i16(i: i56) returns (i16) { i }
function {:inline} $trunc.i64.i16(i: i64) returns (i16) { i }
function {:inline} $trunc.i80.i16(i: i80) returns (i16) { i }
function {:inline} $trunc.i88.i16(i: i88) returns (i16) { i }
function {:inline} $trunc.i96.i16(i: i96) returns (i16) { i }
function {:inline} $trunc.i128.i16(i: i128) returns (i16) { i }
function {:inline} $trunc.i160.i16(i: i160) returns (i16) { i }
function {:inline} $trunc.i256.i16(i: i256) returns (i16) { i }
function {:inline} $trunc.i32.i24(i: i32) returns (i24) { i }
function {:inline} $trunc.i40.i24(i: i40) returns (i24) { i }
function {:inline} $trunc.i48.i24(i: i48) returns (i24) { i }
function {:inline} $trunc.i56.i24(i: i56) returns (i24) { i }
function {:inline} $trunc.i64.i24(i: i64) returns (i24) { i }
function {:inline} $trunc.i80.i24(i: i80) returns (i24) { i }
function {:inline} $trunc.i88.i24(i: i88) returns (i24) { i }
function {:inline} $trunc.i96.i24(i: i96) returns (i24) { i }
function {:inline} $trunc.i128.i24(i: i128) returns (i24) { i }
function {:inline} $trunc.i160.i24(i: i160) returns (i24) { i }
function {:inline} $trunc.i256.i24(i: i256) returns (i24) { i }
function {:inline} $trunc.i40.i32(i: i40) returns (i32) { i }
function {:inline} $trunc.i48.i32(i: i48) returns (i32) { i }
function {:inline} $trunc.i56.i32(i: i56) returns (i32) { i }
function {:inline} $trunc.i64.i32(i: i64) returns (i32) { i }
function {:inline} $trunc.i80.i32(i: i80) returns (i32) { i }
function {:inline} $trunc.i88.i32(i: i88) returns (i32) { i }
function {:inline} $trunc.i96.i32(i: i96) returns (i32) { i }
function {:inline} $trunc.i128.i32(i: i128) returns (i32) { i }
function {:inline} $trunc.i160.i32(i: i160) returns (i32) { i }
function {:inline} $trunc.i256.i32(i: i256) returns (i32) { i }
function {:inline} $trunc.i48.i40(i: i48) returns (i40) { i }
function {:inline} $trunc.i56.i40(i: i56) returns (i40) { i }
function {:inline} $trunc.i64.i40(i: i64) returns (i40) { i }
function {:inline} $trunc.i80.i40(i: i80) returns (i40) { i }
function {:inline} $trunc.i88.i40(i: i88) returns (i40) { i }
function {:inline} $trunc.i96.i40(i: i96) returns (i40) { i }
function {:inline} $trunc.i128.i40(i: i128) returns (i40) { i }
function {:inline} $trunc.i160.i40(i: i160) returns (i40) { i }
function {:inline} $trunc.i256.i40(i: i256) returns (i40) { i }
function {:inline} $trunc.i56.i48(i: i56) returns (i48) { i }
function {:inline} $trunc.i64.i48(i: i64) returns (i48) { i }
function {:inline} $trunc.i80.i48(i: i80) returns (i48) { i }
function {:inline} $trunc.i88.i48(i: i88) returns (i48) { i }
function {:inline} $trunc.i96.i48(i: i96) returns (i48) { i }
function {:inline} $trunc.i128.i48(i: i128) returns (i48) { i }
function {:inline} $trunc.i160.i48(i: i160) returns (i48) { i }
function {:inline} $trunc.i256.i48(i: i256) returns (i48) { i }
function {:inline} $trunc.i64.i56(i: i64) returns (i56) { i }
function {:inline} $trunc.i80.i56(i: i80) returns (i56) { i }
function {:inline} $trunc.i88.i56(i: i88) returns (i56) { i }
function {:inline} $trunc.i96.i56(i: i96) returns (i56) { i }
function {:inline} $trunc.i128.i56(i: i128) returns (i56) { i }
function {:inline} $trunc.i160.i56(i: i160) returns (i56) { i }
function {:inline} $trunc.i256.i56(i: i256) returns (i56) { i }
function {:inline} $trunc.i80.i64(i: i80) returns (i64) { i }
function {:inline} $trunc.i88.i64(i: i88) returns (i64) { i }
function {:inline} $trunc.i96.i64(i: i96) returns (i64) { i }
function {:inline} $trunc.i128.i64(i: i128) returns (i64) { i }
function {:inline} $trunc.i160.i64(i: i160) returns (i64) { i }
function {:inline} $trunc.i256.i64(i: i256) returns (i64) { i }
function {:inline} $trunc.i88.i80(i: i88) returns (i80) { i }
function {:inline} $trunc.i96.i80(i: i96) returns (i80) { i }
function {:inline} $trunc.i128.i80(i: i128) returns (i80) { i }
function {:inline} $trunc.i160.i80(i: i160) returns (i80) { i }
function {:inline} $trunc.i256.i80(i: i256) returns (i80) { i }
function {:inline} $trunc.i96.i88(i: i96) returns (i88) { i }
function {:inline} $trunc.i128.i88(i: i128) returns (i88) { i }
function {:inline} $trunc.i160.i88(i: i160) returns (i88) { i }
function {:inline} $trunc.i256.i88(i: i256) returns (i88) { i }
function {:inline} $trunc.i128.i96(i: i128) returns (i96) { i }
function {:inline} $trunc.i160.i96(i: i160) returns (i96) { i }
function {:inline} $trunc.i256.i96(i: i256) returns (i96) { i }
function {:inline} $trunc.i160.i128(i: i160) returns (i128) { i }
function {:inline} $trunc.i256.i128(i: i256) returns (i128) { i }
function {:inline} $trunc.i256.i160(i: i256) returns (i160) { i }
function {:inline} $sext.i1.i5(i: i1) returns (i5) { i }
function {:inline} $sext.i1.i6(i: i1) returns (i6) { i }
function {:inline} $sext.i1.i8(i: i1) returns (i8) { i }
function {:inline} $sext.i1.i16(i: i1) returns (i16) { i }
function {:inline} $sext.i1.i24(i: i1) returns (i24) { i }
function {:inline} $sext.i1.i32(i: i1) returns (i32) { i }
function {:inline} $sext.i1.i40(i: i1) returns (i40) { i }
function {:inline} $sext.i1.i48(i: i1) returns (i48) { i }
function {:inline} $sext.i1.i56(i: i1) returns (i56) { i }
function {:inline} $sext.i1.i64(i: i1) returns (i64) { i }
function {:inline} $sext.i1.i80(i: i1) returns (i80) { i }
function {:inline} $sext.i1.i88(i: i1) returns (i88) { i }
function {:inline} $sext.i1.i96(i: i1) returns (i96) { i }
function {:inline} $sext.i1.i128(i: i1) returns (i128) { i }
function {:inline} $sext.i1.i160(i: i1) returns (i160) { i }
function {:inline} $sext.i1.i256(i: i1) returns (i256) { i }
function {:inline} $sext.i5.i6(i: i5) returns (i6) { i }
function {:inline} $sext.i5.i8(i: i5) returns (i8) { i }
function {:inline} $sext.i5.i16(i: i5) returns (i16) { i }
function {:inline} $sext.i5.i24(i: i5) returns (i24) { i }
function {:inline} $sext.i5.i32(i: i5) returns (i32) { i }
function {:inline} $sext.i5.i40(i: i5) returns (i40) { i }
function {:inline} $sext.i5.i48(i: i5) returns (i48) { i }
function {:inline} $sext.i5.i56(i: i5) returns (i56) { i }
function {:inline} $sext.i5.i64(i: i5) returns (i64) { i }
function {:inline} $sext.i5.i80(i: i5) returns (i80) { i }
function {:inline} $sext.i5.i88(i: i5) returns (i88) { i }
function {:inline} $sext.i5.i96(i: i5) returns (i96) { i }
function {:inline} $sext.i5.i128(i: i5) returns (i128) { i }
function {:inline} $sext.i5.i160(i: i5) returns (i160) { i }
function {:inline} $sext.i5.i256(i: i5) returns (i256) { i }
function {:inline} $sext.i6.i8(i: i6) returns (i8) { i }
function {:inline} $sext.i6.i16(i: i6) returns (i16) { i }
function {:inline} $sext.i6.i24(i: i6) returns (i24) { i }
function {:inline} $sext.i6.i32(i: i6) returns (i32) { i }
function {:inline} $sext.i6.i40(i: i6) returns (i40) { i }
function {:inline} $sext.i6.i48(i: i6) returns (i48) { i }
function {:inline} $sext.i6.i56(i: i6) returns (i56) { i }
function {:inline} $sext.i6.i64(i: i6) returns (i64) { i }
function {:inline} $sext.i6.i80(i: i6) returns (i80) { i }
function {:inline} $sext.i6.i88(i: i6) returns (i88) { i }
function {:inline} $sext.i6.i96(i: i6) returns (i96) { i }
function {:inline} $sext.i6.i128(i: i6) returns (i128) { i }
function {:inline} $sext.i6.i160(i: i6) returns (i160) { i }
function {:inline} $sext.i6.i256(i: i6) returns (i256) { i }
function {:inline} $sext.i8.i16(i: i8) returns (i16) { i }
function {:inline} $sext.i8.i24(i: i8) returns (i24) { i }
function {:inline} $sext.i8.i32(i: i8) returns (i32) { i }
function {:inline} $sext.i8.i40(i: i8) returns (i40) { i }
function {:inline} $sext.i8.i48(i: i8) returns (i48) { i }
function {:inline} $sext.i8.i56(i: i8) returns (i56) { i }
function {:inline} $sext.i8.i64(i: i8) returns (i64) { i }
function {:inline} $sext.i8.i80(i: i8) returns (i80) { i }
function {:inline} $sext.i8.i88(i: i8) returns (i88) { i }
function {:inline} $sext.i8.i96(i: i8) returns (i96) { i }
function {:inline} $sext.i8.i128(i: i8) returns (i128) { i }
function {:inline} $sext.i8.i160(i: i8) returns (i160) { i }
function {:inline} $sext.i8.i256(i: i8) returns (i256) { i }
function {:inline} $sext.i16.i24(i: i16) returns (i24) { i }
function {:inline} $sext.i16.i32(i: i16) returns (i32) { i }
function {:inline} $sext.i16.i40(i: i16) returns (i40) { i }
function {:inline} $sext.i16.i48(i: i16) returns (i48) { i }
function {:inline} $sext.i16.i56(i: i16) returns (i56) { i }
function {:inline} $sext.i16.i64(i: i16) returns (i64) { i }
function {:inline} $sext.i16.i80(i: i16) returns (i80) { i }
function {:inline} $sext.i16.i88(i: i16) returns (i88) { i }
function {:inline} $sext.i16.i96(i: i16) returns (i96) { i }
function {:inline} $sext.i16.i128(i: i16) returns (i128) { i }
function {:inline} $sext.i16.i160(i: i16) returns (i160) { i }
function {:inline} $sext.i16.i256(i: i16) returns (i256) { i }
function {:inline} $sext.i24.i32(i: i24) returns (i32) { i }
function {:inline} $sext.i24.i40(i: i24) returns (i40) { i }
function {:inline} $sext.i24.i48(i: i24) returns (i48) { i }
function {:inline} $sext.i24.i56(i: i24) returns (i56) { i }
function {:inline} $sext.i24.i64(i: i24) returns (i64) { i }
function {:inline} $sext.i24.i80(i: i24) returns (i80) { i }
function {:inline} $sext.i24.i88(i: i24) returns (i88) { i }
function {:inline} $sext.i24.i96(i: i24) returns (i96) { i }
function {:inline} $sext.i24.i128(i: i24) returns (i128) { i }
function {:inline} $sext.i24.i160(i: i24) returns (i160) { i }
function {:inline} $sext.i24.i256(i: i24) returns (i256) { i }
function {:inline} $sext.i32.i40(i: i32) returns (i40) { i }
function {:inline} $sext.i32.i48(i: i32) returns (i48) { i }
function {:inline} $sext.i32.i56(i: i32) returns (i56) { i }
function {:inline} $sext.i32.i64(i: i32) returns (i64) { i }
function {:inline} $sext.i32.i80(i: i32) returns (i80) { i }
function {:inline} $sext.i32.i88(i: i32) returns (i88) { i }
function {:inline} $sext.i32.i96(i: i32) returns (i96) { i }
function {:inline} $sext.i32.i128(i: i32) returns (i128) { i }
function {:inline} $sext.i32.i160(i: i32) returns (i160) { i }
function {:inline} $sext.i32.i256(i: i32) returns (i256) { i }
function {:inline} $sext.i40.i48(i: i40) returns (i48) { i }
function {:inline} $sext.i40.i56(i: i40) returns (i56) { i }
function {:inline} $sext.i40.i64(i: i40) returns (i64) { i }
function {:inline} $sext.i40.i80(i: i40) returns (i80) { i }
function {:inline} $sext.i40.i88(i: i40) returns (i88) { i }
function {:inline} $sext.i40.i96(i: i40) returns (i96) { i }
function {:inline} $sext.i40.i128(i: i40) returns (i128) { i }
function {:inline} $sext.i40.i160(i: i40) returns (i160) { i }
function {:inline} $sext.i40.i256(i: i40) returns (i256) { i }
function {:inline} $sext.i48.i56(i: i48) returns (i56) { i }
function {:inline} $sext.i48.i64(i: i48) returns (i64) { i }
function {:inline} $sext.i48.i80(i: i48) returns (i80) { i }
function {:inline} $sext.i48.i88(i: i48) returns (i88) { i }
function {:inline} $sext.i48.i96(i: i48) returns (i96) { i }
function {:inline} $sext.i48.i128(i: i48) returns (i128) { i }
function {:inline} $sext.i48.i160(i: i48) returns (i160) { i }
function {:inline} $sext.i48.i256(i: i48) returns (i256) { i }
function {:inline} $sext.i56.i64(i: i56) returns (i64) { i }
function {:inline} $sext.i56.i80(i: i56) returns (i80) { i }
function {:inline} $sext.i56.i88(i: i56) returns (i88) { i }
function {:inline} $sext.i56.i96(i: i56) returns (i96) { i }
function {:inline} $sext.i56.i128(i: i56) returns (i128) { i }
function {:inline} $sext.i56.i160(i: i56) returns (i160) { i }
function {:inline} $sext.i56.i256(i: i56) returns (i256) { i }
function {:inline} $sext.i64.i80(i: i64) returns (i80) { i }
function {:inline} $sext.i64.i88(i: i64) returns (i88) { i }
function {:inline} $sext.i64.i96(i: i64) returns (i96) { i }
function {:inline} $sext.i64.i128(i: i64) returns (i128) { i }
function {:inline} $sext.i64.i160(i: i64) returns (i160) { i }
function {:inline} $sext.i64.i256(i: i64) returns (i256) { i }
function {:inline} $sext.i80.i88(i: i80) returns (i88) { i }
function {:inline} $sext.i80.i96(i: i80) returns (i96) { i }
function {:inline} $sext.i80.i128(i: i80) returns (i128) { i }
function {:inline} $sext.i80.i160(i: i80) returns (i160) { i }
function {:inline} $sext.i80.i256(i: i80) returns (i256) { i }
function {:inline} $sext.i88.i96(i: i88) returns (i96) { i }
function {:inline} $sext.i88.i128(i: i88) returns (i128) { i }
function {:inline} $sext.i88.i160(i: i88) returns (i160) { i }
function {:inline} $sext.i88.i256(i: i88) returns (i256) { i }
function {:inline} $sext.i96.i128(i: i96) returns (i128) { i }
function {:inline} $sext.i96.i160(i: i96) returns (i160) { i }
function {:inline} $sext.i96.i256(i: i96) returns (i256) { i }
function {:inline} $sext.i128.i160(i: i128) returns (i160) { i }
function {:inline} $sext.i128.i256(i: i128) returns (i256) { i }
function {:inline} $sext.i160.i256(i: i160) returns (i256) { i }
function {:inline} $zext.i1.i5(i: i1) returns (i5) { i }
function {:inline} $zext.i1.i6(i: i1) returns (i6) { i }
function {:inline} $zext.i1.i8(i: i1) returns (i8) { i }
function {:inline} $zext.i1.i16(i: i1) returns (i16) { i }
function {:inline} $zext.i1.i24(i: i1) returns (i24) { i }
function {:inline} $zext.i1.i32(i: i1) returns (i32) { i }
function {:inline} $zext.i1.i40(i: i1) returns (i40) { i }
function {:inline} $zext.i1.i48(i: i1) returns (i48) { i }
function {:inline} $zext.i1.i56(i: i1) returns (i56) { i }
function {:inline} $zext.i1.i64(i: i1) returns (i64) { i }
function {:inline} $zext.i1.i80(i: i1) returns (i80) { i }
function {:inline} $zext.i1.i88(i: i1) returns (i88) { i }
function {:inline} $zext.i1.i96(i: i1) returns (i96) { i }
function {:inline} $zext.i1.i128(i: i1) returns (i128) { i }
function {:inline} $zext.i1.i160(i: i1) returns (i160) { i }
function {:inline} $zext.i1.i256(i: i1) returns (i256) { i }
function {:inline} $zext.i5.i6(i: i5) returns (i6) { i }
function {:inline} $zext.i5.i8(i: i5) returns (i8) { i }
function {:inline} $zext.i5.i16(i: i5) returns (i16) { i }
function {:inline} $zext.i5.i24(i: i5) returns (i24) { i }
function {:inline} $zext.i5.i32(i: i5) returns (i32) { i }
function {:inline} $zext.i5.i40(i: i5) returns (i40) { i }
function {:inline} $zext.i5.i48(i: i5) returns (i48) { i }
function {:inline} $zext.i5.i56(i: i5) returns (i56) { i }
function {:inline} $zext.i5.i64(i: i5) returns (i64) { i }
function {:inline} $zext.i5.i80(i: i5) returns (i80) { i }
function {:inline} $zext.i5.i88(i: i5) returns (i88) { i }
function {:inline} $zext.i5.i96(i: i5) returns (i96) { i }
function {:inline} $zext.i5.i128(i: i5) returns (i128) { i }
function {:inline} $zext.i5.i160(i: i5) returns (i160) { i }
function {:inline} $zext.i5.i256(i: i5) returns (i256) { i }
function {:inline} $zext.i6.i8(i: i6) returns (i8) { i }
function {:inline} $zext.i6.i16(i: i6) returns (i16) { i }
function {:inline} $zext.i6.i24(i: i6) returns (i24) { i }
function {:inline} $zext.i6.i32(i: i6) returns (i32) { i }
function {:inline} $zext.i6.i40(i: i6) returns (i40) { i }
function {:inline} $zext.i6.i48(i: i6) returns (i48) { i }
function {:inline} $zext.i6.i56(i: i6) returns (i56) { i }
function {:inline} $zext.i6.i64(i: i6) returns (i64) { i }
function {:inline} $zext.i6.i80(i: i6) returns (i80) { i }
function {:inline} $zext.i6.i88(i: i6) returns (i88) { i }
function {:inline} $zext.i6.i96(i: i6) returns (i96) { i }
function {:inline} $zext.i6.i128(i: i6) returns (i128) { i }
function {:inline} $zext.i6.i160(i: i6) returns (i160) { i }
function {:inline} $zext.i6.i256(i: i6) returns (i256) { i }
function {:inline} $zext.i8.i16(i: i8) returns (i16) { i }
function {:inline} $zext.i8.i24(i: i8) returns (i24) { i }
function {:inline} $zext.i8.i32(i: i8) returns (i32) { i }
function {:inline} $zext.i8.i40(i: i8) returns (i40) { i }
function {:inline} $zext.i8.i48(i: i8) returns (i48) { i }
function {:inline} $zext.i8.i56(i: i8) returns (i56) { i }
function {:inline} $zext.i8.i64(i: i8) returns (i64) { i }
function {:inline} $zext.i8.i80(i: i8) returns (i80) { i }
function {:inline} $zext.i8.i88(i: i8) returns (i88) { i }
function {:inline} $zext.i8.i96(i: i8) returns (i96) { i }
function {:inline} $zext.i8.i128(i: i8) returns (i128) { i }
function {:inline} $zext.i8.i160(i: i8) returns (i160) { i }
function {:inline} $zext.i8.i256(i: i8) returns (i256) { i }
function {:inline} $zext.i16.i24(i: i16) returns (i24) { i }
function {:inline} $zext.i16.i32(i: i16) returns (i32) { i }
function {:inline} $zext.i16.i40(i: i16) returns (i40) { i }
function {:inline} $zext.i16.i48(i: i16) returns (i48) { i }
function {:inline} $zext.i16.i56(i: i16) returns (i56) { i }
function {:inline} $zext.i16.i64(i: i16) returns (i64) { i }
function {:inline} $zext.i16.i80(i: i16) returns (i80) { i }
function {:inline} $zext.i16.i88(i: i16) returns (i88) { i }
function {:inline} $zext.i16.i96(i: i16) returns (i96) { i }
function {:inline} $zext.i16.i128(i: i16) returns (i128) { i }
function {:inline} $zext.i16.i160(i: i16) returns (i160) { i }
function {:inline} $zext.i16.i256(i: i16) returns (i256) { i }
function {:inline} $zext.i24.i32(i: i24) returns (i32) { i }
function {:inline} $zext.i24.i40(i: i24) returns (i40) { i }
function {:inline} $zext.i24.i48(i: i24) returns (i48) { i }
function {:inline} $zext.i24.i56(i: i24) returns (i56) { i }
function {:inline} $zext.i24.i64(i: i24) returns (i64) { i }
function {:inline} $zext.i24.i80(i: i24) returns (i80) { i }
function {:inline} $zext.i24.i88(i: i24) returns (i88) { i }
function {:inline} $zext.i24.i96(i: i24) returns (i96) { i }
function {:inline} $zext.i24.i128(i: i24) returns (i128) { i }
function {:inline} $zext.i24.i160(i: i24) returns (i160) { i }
function {:inline} $zext.i24.i256(i: i24) returns (i256) { i }
function {:inline} $zext.i32.i40(i: i32) returns (i40) { i }
function {:inline} $zext.i32.i48(i: i32) returns (i48) { i }
function {:inline} $zext.i32.i56(i: i32) returns (i56) { i }
function {:inline} $zext.i32.i64(i: i32) returns (i64) { i }
function {:inline} $zext.i32.i80(i: i32) returns (i80) { i }
function {:inline} $zext.i32.i88(i: i32) returns (i88) { i }
function {:inline} $zext.i32.i96(i: i32) returns (i96) { i }
function {:inline} $zext.i32.i128(i: i32) returns (i128) { i }
function {:inline} $zext.i32.i160(i: i32) returns (i160) { i }
function {:inline} $zext.i32.i256(i: i32) returns (i256) { i }
function {:inline} $zext.i40.i48(i: i40) returns (i48) { i }
function {:inline} $zext.i40.i56(i: i40) returns (i56) { i }
function {:inline} $zext.i40.i64(i: i40) returns (i64) { i }
function {:inline} $zext.i40.i80(i: i40) returns (i80) { i }
function {:inline} $zext.i40.i88(i: i40) returns (i88) { i }
function {:inline} $zext.i40.i96(i: i40) returns (i96) { i }
function {:inline} $zext.i40.i128(i: i40) returns (i128) { i }
function {:inline} $zext.i40.i160(i: i40) returns (i160) { i }
function {:inline} $zext.i40.i256(i: i40) returns (i256) { i }
function {:inline} $zext.i48.i56(i: i48) returns (i56) { i }
function {:inline} $zext.i48.i64(i: i48) returns (i64) { i }
function {:inline} $zext.i48.i80(i: i48) returns (i80) { i }
function {:inline} $zext.i48.i88(i: i48) returns (i88) { i }
function {:inline} $zext.i48.i96(i: i48) returns (i96) { i }
function {:inline} $zext.i48.i128(i: i48) returns (i128) { i }
function {:inline} $zext.i48.i160(i: i48) returns (i160) { i }
function {:inline} $zext.i48.i256(i: i48) returns (i256) { i }
function {:inline} $zext.i56.i64(i: i56) returns (i64) { i }
function {:inline} $zext.i56.i80(i: i56) returns (i80) { i }
function {:inline} $zext.i56.i88(i: i56) returns (i88) { i }
function {:inline} $zext.i56.i96(i: i56) returns (i96) { i }
function {:inline} $zext.i56.i128(i: i56) returns (i128) { i }
function {:inline} $zext.i56.i160(i: i56) returns (i160) { i }
function {:inline} $zext.i56.i256(i: i56) returns (i256) { i }
function {:inline} $zext.i64.i80(i: i64) returns (i80) { i }
function {:inline} $zext.i64.i88(i: i64) returns (i88) { i }
function {:inline} $zext.i64.i96(i: i64) returns (i96) { i }
function {:inline} $zext.i64.i128(i: i64) returns (i128) { i }
function {:inline} $zext.i64.i160(i: i64) returns (i160) { i }
function {:inline} $zext.i64.i256(i: i64) returns (i256) { i }
function {:inline} $zext.i80.i88(i: i80) returns (i88) { i }
function {:inline} $zext.i80.i96(i: i80) returns (i96) { i }
function {:inline} $zext.i80.i128(i: i80) returns (i128) { i }
function {:inline} $zext.i80.i160(i: i80) returns (i160) { i }
function {:inline} $zext.i80.i256(i: i80) returns (i256) { i }
function {:inline} $zext.i88.i96(i: i88) returns (i96) { i }
function {:inline} $zext.i88.i128(i: i88) returns (i128) { i }
function {:inline} $zext.i88.i160(i: i88) returns (i160) { i }
function {:inline} $zext.i88.i256(i: i88) returns (i256) { i }
function {:inline} $zext.i96.i128(i: i96) returns (i128) { i }
function {:inline} $zext.i96.i160(i: i96) returns (i160) { i }
function {:inline} $zext.i96.i256(i: i96) returns (i256) { i }
function {:inline} $zext.i128.i160(i: i128) returns (i160) { i }
function {:inline} $zext.i128.i256(i: i128) returns (i256) { i }
function {:inline} $zext.i160.i256(i: i160) returns (i256) { i }
function $extractvalue.i1(p: ref, i: int) returns (i1);
function $extractvalue.i5(p: ref, i: int) returns (i5);
function $extractvalue.i6(p: ref, i: int) returns (i6);
function $extractvalue.i8(p: ref, i: int) returns (i8);
function $extractvalue.i16(p: ref, i: int) returns (i16);
function $extractvalue.i24(p: ref, i: int) returns (i24);
function $extractvalue.i32(p: ref, i: int) returns (i32);
function $extractvalue.i40(p: ref, i: int) returns (i40);
function $extractvalue.i48(p: ref, i: int) returns (i48);
function $extractvalue.i56(p: ref, i: int) returns (i56);
function $extractvalue.i64(p: ref, i: int) returns (i64);
function $extractvalue.i80(p: ref, i: int) returns (i80);
function $extractvalue.i88(p: ref, i: int) returns (i88);
function $extractvalue.i96(p: ref, i: int) returns (i96);
function $extractvalue.i128(p: ref, i: int) returns (i128);
function $extractvalue.i160(p: ref, i: int) returns (i160);
function $extractvalue.i256(p: ref, i: int) returns (i256);
// Pointer arithmetic operations
function {:inline} $add.ref(p1: ref, p2: ref) returns (ref) { $add.i64(p1, p2) }
function {:inline} $sub.ref(p1: ref, p2: ref) returns (ref) { $sub.i64(p1, p2) }
function {:inline} $mul.ref(p1: ref, p2: ref) returns (ref) { $mul.i64(p1, p2) }

// Pointer predicates
function {:inline} $eq.ref(p1: ref, p2: ref) returns (i1) { (if $eq.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $eq.ref.bool(p1: ref, p2: ref) returns (bool) { $eq.i64.bool(p1, p2) }
function {:inline} $ne.ref(p1: ref, p2: ref) returns (i1) { (if $ne.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $ne.ref.bool(p1: ref, p2: ref) returns (bool) { $ne.i64.bool(p1, p2) }
function {:inline} $ugt.ref(p1: ref, p2: ref) returns (i1) { (if $ugt.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $ugt.ref.bool(p1: ref, p2: ref) returns (bool) { $ugt.i64.bool(p1, p2) }
function {:inline} $uge.ref(p1: ref, p2: ref) returns (i1) { (if $uge.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $uge.ref.bool(p1: ref, p2: ref) returns (bool) { $uge.i64.bool(p1, p2) }
function {:inline} $ult.ref(p1: ref, p2: ref) returns (i1) { (if $ult.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $ult.ref.bool(p1: ref, p2: ref) returns (bool) { $ult.i64.bool(p1, p2) }
function {:inline} $ule.ref(p1: ref, p2: ref) returns (i1) { (if $ule.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $ule.ref.bool(p1: ref, p2: ref) returns (bool) { $ule.i64.bool(p1, p2) }
function {:inline} $sgt.ref(p1: ref, p2: ref) returns (i1) { (if $sgt.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $sgt.ref.bool(p1: ref, p2: ref) returns (bool) { $sgt.i64.bool(p1, p2) }
function {:inline} $sge.ref(p1: ref, p2: ref) returns (i1) { (if $sge.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $sge.ref.bool(p1: ref, p2: ref) returns (bool) { $sge.i64.bool(p1, p2) }
function {:inline} $slt.ref(p1: ref, p2: ref) returns (i1) { (if $slt.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $slt.ref.bool(p1: ref, p2: ref) returns (bool) { $slt.i64.bool(p1, p2) }
function {:inline} $sle.ref(p1: ref, p2: ref) returns (i1) { (if $sle.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $sle.ref.bool(p1: ref, p2: ref) returns (bool) { $sle.i64.bool(p1, p2) }

// Pointer load/store operations
function {:inline} $load.ref(M: [ref] ref, p: ref) returns (ref) { M[p] }
function {:inline} $store.ref(M: [ref] ref, p: ref, i: ref) returns ([ref] ref) { M[p := i] }

// Pointer conversion
function {:inline} $bitcast.ref.ref(p: ref) returns (ref) { p }
function $extractvalue.ref(p: ref, i: int) returns (ref);
// Pointer-number conversion
function {:inline} $p2i.ref.i8(p: ref) returns (i8) { $trunc.i64.i8(p) }
function {:inline} $i2p.i8.ref(i: i8) returns (ref) { $zext.i8.i64(i) }
function {:inline} $p2i.ref.i16(p: ref) returns (i16) { $trunc.i64.i16(p) }
function {:inline} $i2p.i16.ref(i: i16) returns (ref) { $zext.i16.i64(i) }
function {:inline} $p2i.ref.i32(p: ref) returns (i32) { $trunc.i64.i32(p) }
function {:inline} $i2p.i32.ref(i: i32) returns (ref) { $zext.i32.i64(i) }
function {:inline} $p2i.ref.i64(p: ref) returns (i64) { p }
function {:inline} $i2p.i64.ref(i: i64) returns (ref) { i }

function $fp(ipart: int, fpart: int, epart: int) returns (float);
// Floating-point arithmetic operations
function $abs.float(f: float) returns (float);
function $round.float(f: float) returns (float);
function $sqrt.float(f: float) returns (float);
function $fadd.float(f1: float, f2: float) returns (float);
function $fsub.float(f1: float, f2: float) returns (float);
function $fmul.float(f1: float, f2: float) returns (float);
function $fdiv.float(f1: float, f2: float) returns (float);
function $frem.float(f1: float, f2: float) returns (float);
function $min.float(f1: float, f2: float) returns (float);
function $max.float(f1: float, f2: float) returns (float);
function $fma.float(f1: float, f2: float, f3: float) returns (float);
// Floating-point predicates
function $foeq.float.bool(f1: float, f2: float) returns (bool);
function $fole.float.bool(f1: float, f2: float) returns (bool);
function $folt.float.bool(f1: float, f2: float) returns (bool);
function $foge.float.bool(f1: float, f2: float) returns (bool);
function $fogt.float.bool(f1: float, f2: float) returns (bool);
function $fone.float.bool(f1: float, f2: float) returns (bool);
function $ford.float.bool(f1: float, f2: float) returns (bool);
function $fueq.float.bool(f1: float, f2: float) returns (bool);
function $fugt.float.bool(f1: float, f2: float) returns (bool);
function $fuge.float.bool(f1: float, f2: float) returns (bool);
function $fult.float.bool(f1: float, f2: float) returns (bool);
function $fule.float.bool(f1: float, f2: float) returns (bool);
function $fune.float.bool(f1: float, f2: float) returns (bool);
function $funo.float.bool(f1: float, f2: float) returns (bool);
function $ffalse.float.bool(f1: float, f2: float) returns (bool);
function $ftrue.float.bool(f1: float, f2: float) returns (bool);
// Floating-point/integer conversion
function $bitcast.float.i8(f: float) returns (i8);
function $bitcast.float.i16(f: float) returns (i16);
function $bitcast.float.i32(f: float) returns (i32);
function $bitcast.float.i64(f: float) returns (i64);
function $bitcast.float.i80(f: float) returns (i80);
function $bitcast.i8.float(i: i8) returns (float);
function $bitcast.i16.float(i: i16) returns (float);
function $bitcast.i32.float(i: i32) returns (float);
function $bitcast.i64.float(i: i64) returns (float);
function $bitcast.i80.float(i: i80) returns (float);
function $fp2si.float.i1(f: float) returns (i1);
function $fp2si.float.i5(f: float) returns (i5);
function $fp2si.float.i6(f: float) returns (i6);
function $fp2si.float.i8(f: float) returns (i8);
function $fp2si.float.i16(f: float) returns (i16);
function $fp2si.float.i24(f: float) returns (i24);
function $fp2si.float.i32(f: float) returns (i32);
function $fp2si.float.i40(f: float) returns (i40);
function $fp2si.float.i48(f: float) returns (i48);
function $fp2si.float.i56(f: float) returns (i56);
function $fp2si.float.i64(f: float) returns (i64);
function $fp2si.float.i80(f: float) returns (i80);
function $fp2si.float.i88(f: float) returns (i88);
function $fp2si.float.i96(f: float) returns (i96);
function $fp2si.float.i128(f: float) returns (i128);
function $fp2si.float.i160(f: float) returns (i160);
function $fp2si.float.i256(f: float) returns (i256);
function $fp2ui.float.i1(f: float) returns (i1);
function $fp2ui.float.i5(f: float) returns (i5);
function $fp2ui.float.i6(f: float) returns (i6);
function $fp2ui.float.i8(f: float) returns (i8);
function $fp2ui.float.i16(f: float) returns (i16);
function $fp2ui.float.i24(f: float) returns (i24);
function $fp2ui.float.i32(f: float) returns (i32);
function $fp2ui.float.i40(f: float) returns (i40);
function $fp2ui.float.i48(f: float) returns (i48);
function $fp2ui.float.i56(f: float) returns (i56);
function $fp2ui.float.i64(f: float) returns (i64);
function $fp2ui.float.i80(f: float) returns (i80);
function $fp2ui.float.i88(f: float) returns (i88);
function $fp2ui.float.i96(f: float) returns (i96);
function $fp2ui.float.i128(f: float) returns (i128);
function $fp2ui.float.i160(f: float) returns (i160);
function $fp2ui.float.i256(f: float) returns (i256);
function $si2fp.i1.float(i: i1) returns (float);
function $si2fp.i5.float(i: i5) returns (float);
function $si2fp.i6.float(i: i6) returns (float);
function $si2fp.i8.float(i: i8) returns (float);
function $si2fp.i16.float(i: i16) returns (float);
function $si2fp.i24.float(i: i24) returns (float);
function $si2fp.i32.float(i: i32) returns (float);
function $si2fp.i40.float(i: i40) returns (float);
function $si2fp.i48.float(i: i48) returns (float);
function $si2fp.i56.float(i: i56) returns (float);
function $si2fp.i64.float(i: i64) returns (float);
function $si2fp.i80.float(i: i80) returns (float);
function $si2fp.i88.float(i: i88) returns (float);
function $si2fp.i96.float(i: i96) returns (float);
function $si2fp.i128.float(i: i128) returns (float);
function $si2fp.i160.float(i: i160) returns (float);
function $si2fp.i256.float(i: i256) returns (float);
function $ui2fp.i1.float(i: i1) returns (float);
function $ui2fp.i5.float(i: i5) returns (float);
function $ui2fp.i6.float(i: i6) returns (float);
function $ui2fp.i8.float(i: i8) returns (float);
function $ui2fp.i16.float(i: i16) returns (float);
function $ui2fp.i24.float(i: i24) returns (float);
function $ui2fp.i32.float(i: i32) returns (float);
function $ui2fp.i40.float(i: i40) returns (float);
function $ui2fp.i48.float(i: i48) returns (float);
function $ui2fp.i56.float(i: i56) returns (float);
function $ui2fp.i64.float(i: i64) returns (float);
function $ui2fp.i80.float(i: i80) returns (float);
function $ui2fp.i88.float(i: i88) returns (float);
function $ui2fp.i96.float(i: i96) returns (float);
function $ui2fp.i128.float(i: i128) returns (float);
function $ui2fp.i160.float(i: i160) returns (float);
function $ui2fp.i256.float(i: i256) returns (float);
// Floating-point conversion
function $fpext.float.float(f: float) returns (float);
function $fptrunc.float.float(f: float) returns (float);
// Floating-point load/store operations
function {:inline} $load.float(M: [ref] float, p: ref) returns (float) { M[p] }
function {:inline} $store.float(M: [ref] float, p: ref, f: float) returns ([ref] float) { M[p := f] }
function {:inline} $load.unsafe.float(M: [ref] i8, p: ref) returns (float) { $bitcast.i8.float(M[p]) }
function {:inline} $store.unsafe.float(M: [ref] i8, p: ref, f: float) returns ([ref] i8) { M[p := $bitcast.float.i8(f)] }
function $extractvalue.float(p: ref, i: int) returns (float);
const LDV_IN_INTERRUPT: ref;
axiom (LDV_IN_INTERRUPT == $sub.ref(0, 1028));
const ldv_spin: ref;
axiom (ldv_spin == $sub.ref(0, 2056));
const .str: ref;
axiom (.str == $sub.ref(0, 3103));
const dbglevel: ref;
axiom (dbglevel == $sub.ref(0, 4131));
const {:count 39} .str.1: ref;
axiom (.str.1 == $sub.ref(0, 5194));
const {:count 22} .str.2: ref;
axiom (.str.2 == $sub.ref(0, 6240));
const {:count 35} .str.3: ref;
axiom (.str.3 == $sub.ref(0, 7299));
const adapters_list_g: ref;
axiom (adapters_list_g == $sub.ref(0, 8339));
const adapters_count_g: ref;
axiom (adapters_count_g == $sub.ref(0, 9367));
const {:count 22} .str.7: ref;
axiom (.str.7 == $sub.ref(0, 10413));
const {:count 24} .str.8: ref;
axiom (.str.8 == $sub.ref(0, 11461));
const {:count 12} .str.5: ref;
axiom (.str.5 == $sub.ref(0, 12497));
const {:count 16} .str.6: ref;
axiom (.str.6 == $sub.ref(0, 13537));
const {:count 44} .str.4: ref;
axiom (.str.4 == $sub.ref(0, 14605));
const {:count 20} .str.29: ref;
axiom (.str.29 == $sub.ref(0, 15649));
const megaraid_mm_dev: ref;
axiom (megaraid_mm_dev == $sub.ref(0, 16745));
const {:count 9} .str.14: ref;
axiom (.str.14 == $sub.ref(0, 17778));
const lsi_fops: ref;
axiom (lsi_fops == $sub.ref(0, 19010));
const __this_module: ref;
axiom (__this_module == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32776)));
const {:count 34} .str.28: ref;
axiom (.str.28 == $sub.ref(0, 20068));
const wait_q: ref;
axiom (wait_q == $sub.ref(0, 21180));
const {:count 44} .str.18: ref;
axiom (.str.18 == $sub.ref(0, 22248));
const {:count 17} .str.19: ref;
axiom (.str.19 == $sub.ref(0, 23289));
const {:count 70} .str.20: ref;
axiom (.str.20 == $sub.ref(0, 24383));
const {:count 3} .str.27: ref;
axiom (.str.27 == $sub.ref(0, 25410));
const jiffies: ref;
axiom (jiffies == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32784)));
const current_task: ref;
axiom (current_task == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32792)));
const {:count 44} .str.25: ref;
axiom (.str.25 == $sub.ref(0, 26478));
const {:count 59} .str.26: ref;
axiom (.str.26 == $sub.ref(0, 27561));
const {:count 32} .str.24: ref;
axiom (.str.24 == $sub.ref(0, 28617));
const {:count 32} .str.23: ref;
axiom (.str.23 == $sub.ref(0, 29673));
const drvr_ver: ref;
axiom (drvr_ver == $sub.ref(0, 30701));
const {:count 94} .str.21: ref;
axiom (.str.21 == $sub.ref(0, 31819));
const {:count 27} .str.22: ref;
axiom (.str.22 == $sub.ref(0, 32870));
const mraid_mm_mutex: ref;
axiom (mraid_mm_mutex == $sub.ref(0, 34062));
const {:count 25} .str.16: ref;
axiom (.str.16 == $sub.ref(0, 35111));
const {:count 15} .str.17: ref;
axiom (.str.17 == $sub.ref(0, 36150));
const {:count 9} .str.9: ref;
axiom (.str.9 == $sub.ref(0, 37183));
const {:count 45} .str.10: ref;
axiom (.str.10 == $sub.ref(0, 38252));
const {:count 24} .str.11: ref;
axiom (.str.11 == $sub.ref(0, 39300));
const {:count 43} .str.12: ref;
axiom (.str.12 == $sub.ref(0, 40367));
const {:count 8} .str.13: ref;
axiom (.str.13 == $sub.ref(0, 41399));
const env_value_str: ref;
axiom (env_value_str == $sub.ref(0, 42431));
const {:count 3} .str.1.43: ref;
axiom (.str.1.43 == $sub.ref(0, 43458));
const {:count 14} .str.44: ref;
axiom (.str.44 == $sub.ref(0, 44496));
const errno_global: ref;
axiom (errno_global == $sub.ref(0, 45524));
const llvm.dbg.declare: ref;
axiom (llvm.dbg.declare == $sub.ref(0, 46556));
procedure  llvm.dbg.declare($p0: ref, $p1: ref, $p2: ref);
const printk: ref;
axiom (printk == $sub.ref(0, 47588));
procedure  printk.ref($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7284, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7284, 10} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7284, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
procedure  printk.ref.ref.ref($p0: ref, p.1: ref, p.2: ref)
  returns ($r: i32)
{
  var $i1: i32;
$bb1:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7284, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7284, 10} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7284, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const INIT_LIST_HEAD: ref;
axiom (INIT_LIST_HEAD == $sub.ref(0, 48620));
procedure  INIT_LIST_HEAD($p0: ref)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i64;
  var $p4: ref;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3122, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3122, 3} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3122, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p1, $p0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3123, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp2"} boogie_si_record_i64($i2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3124, 27} true;
  assume {:verifier.code 0} true;
  $i3 := $add.i64($i2, 8);
  call {:cexpr "__cil_tmp3"} boogie_si_record_i64($i3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3125, 5} true;
  assume {:verifier.code 0} true;
  $p4 := $i2p.i64.ref($i3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3125, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p4, $p0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3126, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const dma_pool_free: ref;
axiom (dma_pool_free == $sub.ref(0, 49652));
procedure  dma_pool_free($p0: ref, $p1: ref, $i2: i64)
{
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7231, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "dma_pool_free:arg:arg2"} boogie_si_record_i64($i2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7231, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_check_alloc_flags: ref;
axiom (ldv_check_alloc_flags == $sub.ref(0, 50684));
procedure  ldv_check_alloc_flags($i0: i32)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i1;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7038, 7} true;
  assume {:verifier.code 0} true;
  call {:cexpr "ldv_check_alloc_flags:arg:flags"} boogie_si_record_i32($i0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7038, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $M.1;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7038, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7038, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7039, 15} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i0, 32);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7039, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb3:
  assume ($i3 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7041, 7} true;
  assume {:verifier.code 0} true;
  call ldv_blast_assert();
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7043, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7045, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7047, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const dma_pool_alloc: ref;
axiom (dma_pool_alloc == $sub.ref(0, 51716));
procedure  dma_pool_alloc($p0: ref, $i1: i32, $p2: ref)
  returns ($r: ref)
{
  var $p3: ref;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7221, 18} true;
  assume {:verifier.code 0} true;
  call {:cexpr "dma_pool_alloc:arg:arg1"} boogie_si_record_i32($i1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7221, 18} true;
  assume {:verifier.code 0} true;
  call $p3 := external_alloc();
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7221, 3} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const external_alloc: ref;
axiom (external_alloc == $sub.ref(0, 52748));
procedure  external_alloc()
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7301, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7301, 10} true;
  assume {:verifier.code 1} true;
  call $p0 := __VERIFIER_nondet_pointer();
  call {:cexpr "smack:ext:__VERIFIER_nondet_pointer"} boogie_si_record_ref($p0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7301, 3} true;
  assume {:verifier.code 0} true;
  $r := $p0;
  $exn := false;
  return;
}
const ldv_blast_assert: ref;
axiom (ldv_blast_assert == $sub.ref(0, 53780));
procedure  ldv_blast_assert()
{
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7029, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7029, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7030, 10} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_error();
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7032, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __list_add: ref;
axiom (__list_add == $sub.ref(0, 54812));
procedure  __list_add($p0: ref, $p1: ref, $p2: ref)
{
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7186, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7186, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const list_del_init: ref;
axiom (list_del_init == $sub.ref(0, 55844));
procedure  list_del_init($p0: ref)
{
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3159, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3159, 3} true;
  assume {:verifier.code 0} true;
  call __list_del_entry($p0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3160, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3162, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __list_del_entry: ref;
axiom (__list_del_entry == $sub.ref(0, 56876));
procedure  __list_del_entry($p0: ref)
{
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7189, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7189, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const main: ref;
axiom (main == $sub.ref(0, 57908));
procedure {:entrypoint} main()
{
  var $i0: i32;
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $i4: i32;
  var $i5: i1;
  var $i7: i32;
  var $i8: i1;
  var $i9: i1;
  var $i10: i1;
  var $i11: i1;
  var $i12: i1;
  var $i13: i32;
  var $i14: i1;
  var $i15: i32;
  var $i17: i64;
  var $i18: i64;
  var $i16: i32;
  var $i6: i32;
  var $i19: i32;
  var $i20: i1;
  var $i21: i1;
$bb0:
  call $initialize();
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6933, 22} true;
  assume {:verifier.code 1} true;
  call {:cexpr "smack:entry:main"} boogie_si_record_ref(main);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6933, 22} true;
  assume {:verifier.code 1} true;
  call $i0 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6933, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, adapters_count_g, $i0);
  call {:cexpr "adapters_count_g"} boogie_si_record_i32($i0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6934, 23} true;
  assume {:verifier.code 1} true;
  $i1 := $load.i32($M.0, adapters_count_g);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6934, 40} true;
  assume {:verifier.code 1} true;
  $i2 := $sge.i32($i1, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6934, 40} true;
  assume {:verifier.code 1} true;
  $i3 := $zext.i1.i32($i2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6934, 4} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6938, 20} true;
  assume {:verifier.code 0} true;
  $M.2 := 1;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6939, 3} true;
  assume {:verifier.code 0} true;
  call ldv_initialize();
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6940, 9} true;
  assume {:verifier.code 0} true;
  call $i4 := mraid_mm_init();
  call {:cexpr "tmp"} boogie_si_record_i32($i4);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6942, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6942, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6943, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7022, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_final_state();
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7024, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6946, 3} true;
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb5;
$bb5:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7005, 13} true;
  assume {:verifier.code 1} true;
  call $i19 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i19);
  call {:cexpr "tmp___1"} boogie_si_record_i32($i19);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7007, 15} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i32($i19, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7007, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb37, $bb38;
$bb6:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6949, 13} true;
  assume {:verifier.code 1} true;
  call $i7 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i7);
  call {:cexpr "tmp___0"} boogie_si_record_i32($i7);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6951, 15} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i7, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6951, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i8 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6952, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i8 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6954, 15} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i7, 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6954, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb10, $bb11;
$bb9:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6967, 42} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i6, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6967, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb23, $bb24;
$bb10:
  assume ($i9 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6955, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i9 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6957, 15} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i32($i7, 2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6957, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb13, $bb14;
$bb12:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6982, 7} true;
  assume {:verifier.code 0} true;
  call $i17 := mraid_mm_unlocked_ioctl($u1, $u2, $u3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6984, 7} true;
  assume {:verifier.code 0} true;
  $i16 := $i6;
  goto $bb30;
$bb13:
  assume ($i10 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6958, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i10 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6960, 15} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i32($i7, 3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6960, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb16, $bb17;
$bb15:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6987, 7} true;
  assume {:verifier.code 0} true;
  call $i18 := mraid_mm_compat_ioctl($u1, $u2, $u3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6989, 7} true;
  assume {:verifier.code 0} true;
  $i16 := $i6;
  goto $bb30;
$bb16:
  assume ($i11 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6961, 5} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i11 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6964, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6992, 7} true;
  assume {:verifier.code 0} true;
  call lld_timedout($u3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6994, 7} true;
  assume {:verifier.code 0} true;
  $i16 := $i6;
  goto $bb30;
$bb19:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6996, 7} true;
  assume {:verifier.code 0} true;
  $i16 := $i6;
  goto $bb30;
$bb20:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6965, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb21, $bb22;
$bb21:
  assume (0 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6965, 12} true;
  assume {:verifier.code 0} true;
  assume false;
$bb22:
  assume !((0 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6997, 12} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb23:
  assume ($i12 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6969, 31} true;
  assume {:verifier.code 0} true;
  call $i13 := mraid_mm_open($u0, $u1);
  call {:cexpr "res_mraid_mm_open_0"} boogie_si_record_i32($i13);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6970, 9} true;
  assume {:verifier.code 0} true;
  call ldv_check_return_value($i13);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6972, 33} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i32($i13, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6972, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb25, $bb26;
$bb24:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  $i15 := $i6;
  goto $bb29;
$bb25:
  assume ($i14 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6973, 11} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7018, 3} true;
  assume {:verifier.code 0} true;
  call mraid_mm_exit();
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7019, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb28:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6977, 7} true;
  assume {:verifier.code 0} true;
  $i15 := 0;
  goto $bb29;
$bb29:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6979, 7} true;
  assume {:verifier.code 0} true;
  $i16 := $i15;
  goto $bb30;
$bb30:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6951, 18} true;
  assume {:verifier.code 0} true;
  $i6 := $i16;
  goto $bb5;
$bb31:
  assume {:verifier.code 0} true;
  goto $bb32;
$bb32:
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6951, 18} true;
  assume {:verifier.code 0} true;
  assume false;
$bb37:
  assume ($i20 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7008, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb38:
  assume !(($i20 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7010, 38} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i32($i6, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7010, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb39, $bb40;
$bb39:
  assume ($i21 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7011, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb40:
  assume !(($i21 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7013, 5} true;
  assume {:verifier.code 0} true;
  goto $bb41;
$bb41:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7007, 18} true;
  assume {:verifier.code 0} true;
  goto $bb27;
}
const ldv_initialize: ref;
axiom (ldv_initialize == $sub.ref(0, 58940));
procedure  ldv_initialize()
{
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7253, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7253, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const mraid_mm_init: ref;
axiom (mraid_mm_init == $sub.ref(0, 59972));
procedure  mraid_mm_init()
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
  var $i9: i32;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6851, 16} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p0 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6851, 16} true;
  assume {:verifier.code 0} true;
  $i1 := $M.3;
  call {:cexpr "__cil_tmp4"} boogie_si_record_i32($i1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6852, 18} true;
  assume {:verifier.code 0} true;
  $i2 := $sge.i32($i1, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6852, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6856, 5} true;
  assume {:verifier.code 0} true;
  call $i3 := printk.ref.ref.ref(.str.11, .str.9, .str.10);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6858, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6862, 9} true;
  assume {:verifier.code 0} true;
  call $i4 := misc_register(megaraid_mm_dev);
  call {:cexpr "err"} boogie_si_record_i32($i4);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6864, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $slt.i32($i4, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6864, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i5 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6867, 18} true;
  assume {:verifier.code 0} true;
  $i6 := $M.3;
  call {:cexpr "__cil_tmp8"} boogie_si_record_i32($i6);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6868, 20} true;
  assume {:verifier.code 0} true;
  $i7 := $sge.i32($i6, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6868, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb6, $bb7;
$bb5:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb6:
  assume ($i7 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6870, 7} true;
  assume {:verifier.code 0} true;
  call $i8 := printk.ref(.str.12);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6872, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6875, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $i4;
  goto $bb9;
$bb9:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6884, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb10:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6879, 3} true;
  assume {:verifier.code 0} true;
  call __init_waitqueue_head(wait_q, .str.13, $p0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6880, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD(adapters_list_g);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6882, 3} true;
  assume {:verifier.code 0} true;
  $i9 := 0;
  goto $bb9;
}
const mraid_mm_open: ref;
axiom (mraid_mm_open == $sub.ref(0, 61004));
procedure  mraid_mm_open($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i1;
  var $i3: i8;
  var $i4: i1;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3533, 9} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3533, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := capable(21);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3533, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i8($i2);
  call {:cexpr "tmp"} boogie_si_record_i8($i3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3535, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.i8.i1($i3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3535, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3537, 3} true;
  assume {:verifier.code 0} true;
  $i5 := 0;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  $i5 := 1;
  goto $bb3;
$bb3:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3540, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3540, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i6 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3541, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i32(0, 13);
  goto $bb6;
$bb5:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3546, 1} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3544, 3} true;
  assume {:verifier.code 0} true;
  $i7 := 0;
  goto $bb6;
}
const ldv_check_return_value: ref;
axiom (ldv_check_return_value == $sub.ref(0, 62036));
procedure  ldv_check_return_value($i0: i32)
{
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7250, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "ldv_check_return_value:arg:arg0"} boogie_si_record_i32($i0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7250, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const mraid_mm_unlocked_ioctl: ref;
axiom (mraid_mm_unlocked_ioctl == $sub.ref(0, 63068));
procedure  mraid_mm_unlocked_ioctl($p0: ref, $i1: i32, $i2: i64)
  returns ($r: i64)
{
  var $i3: i32;
  var $i4: i64;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3864, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "mraid_mm_unlocked_ioctl:arg:cmd"} boogie_si_record_i32($i1);
  call {:cexpr "mraid_mm_unlocked_ioctl:arg:arg"} boogie_si_record_i64($i2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3864, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested(mraid_mm_mutex, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3865, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := mraid_mm_ioctl($p0, $i1, $i2);
  call {:cexpr "err"} boogie_si_record_i32($i3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3866, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock(mraid_mm_mutex);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3868, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3868, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const mraid_mm_compat_ioctl: ref;
axiom (mraid_mm_compat_ioctl == $sub.ref(0, 64100));
procedure  mraid_mm_compat_ioctl($p0: ref, $i1: i32, $i2: i64)
  returns ($r: i64)
{
  var $i3: i32;
  var $i4: i64;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6889, 9} true;
  assume {:verifier.code 0} true;
  call {:cexpr "mraid_mm_compat_ioctl:arg:cmd"} boogie_si_record_i32($i1);
  call {:cexpr "mraid_mm_compat_ioctl:arg:arg"} boogie_si_record_i64($i2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6889, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := mraid_mm_ioctl($p0, $i1, $i2);
  call {:cexpr "err"} boogie_si_record_i32($i3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6891, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6891, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const lld_timedout: ref;
axiom (lld_timedout == $sub.ref(0, 65132));
procedure  lld_timedout($i0: i64)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i64;
  var $p4: ref;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $i8: i32;
  var $i9: i1;
  var $i10: i32;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5473, 10} true;
  assume {:verifier.code 0} true;
  call {:cexpr "lld_timedout:arg:ptr"} boogie_si_record_i64($i0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5473, 10} true;
  assume {:verifier.code 0} true;
  $p1 := $i2p.i64.ref($i0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5474, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp3"} boogie_si_record_i64($i2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5475, 27} true;
  assume {:verifier.code 0} true;
  $i3 := $add.i64($i2, 48);
  call {:cexpr "__cil_tmp4"} boogie_si_record_i64($i3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5476, 5} true;
  assume {:verifier.code 0} true;
  $p4 := $i2p.i64.ref($i3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5476, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p4, $sub.i32(0, 62));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5477, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp5"} boogie_si_record_i64($i5);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5478, 27} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i64($i5, 266);
  call {:cexpr "__cil_tmp6"} boogie_si_record_i64($i6);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5479, 5} true;
  assume {:verifier.code 0} true;
  $p7 := $i2p.i64.ref($i6);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5479, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p7, 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5482, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $M.3;
  call {:cexpr "__cil_tmp8"} boogie_si_record_i32($i8);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5483, 18} true;
  assume {:verifier.code 0} true;
  $i9 := $sge.i32($i8, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5483, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5485, 5} true;
  assume {:verifier.code 0} true;
  call $i10 := printk.ref(.str.28);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5487, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5492, 3} true;
  assume {:verifier.code 0} true;
  call __wake_up(wait_q, 3, 1, $0.ref);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5494, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const mraid_mm_exit: ref;
axiom (mraid_mm_exit == $sub.ref(0, 66164));
procedure  mraid_mm_exit()
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i32;
  var $i3: i32;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6900, 16} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6900, 16} true;
  assume {:verifier.code 0} true;
  $i0 := $M.3;
  call {:cexpr "__cil_tmp2"} boogie_si_record_i32($i0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6901, 18} true;
  assume {:verifier.code 0} true;
  $i1 := $sgt.i32($i0, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6901, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6903, 5} true;
  assume {:verifier.code 0} true;
  call $i2 := printk.ref(.str.29);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6905, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6909, 3} true;
  assume {:verifier.code 0} true;
  call $i3 := misc_deregister(megaraid_mm_dev);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 6911, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_check_final_state: ref;
axiom (ldv_check_final_state == $sub.ref(0, 67196));
procedure  ldv_check_final_state()
{
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7247, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7247, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const misc_deregister: ref;
axiom (misc_deregister == $sub.ref(0, 68228));
procedure  misc_deregister($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7267, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7267, 10} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7267, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const noop_llseek: ref;
axiom (noop_llseek == $sub.ref(0, 69260));
procedure  noop_llseek($p0: ref, $i1: i64, $i2: i32)
  returns ($r: i64);
const __wake_up: ref;
axiom (__wake_up == $sub.ref(0, 70292));
procedure  __wake_up($p0: ref, $i1: i32, $i2: i32, $p3: ref)
{
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7195, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "__wake_up:arg:arg1"} boogie_si_record_i32($i1);
  call {:cexpr "__wake_up:arg:arg2"} boogie_si_record_i32($i2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7195, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const mraid_mm_ioctl: ref;
axiom (mraid_mm_ioctl == $sub.ref(0, 71324));
procedure  mraid_mm_ioctl($p0: ref, $i1: i32, $i2: i64)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i64;
  var $p9: ref;
  var $p10: ref;
  var $i11: i64;
  var $i12: i64;
  var $p13: ref;
  var $p14: ref;
  var $i15: i64;
  var $i16: i64;
  var $p17: ref;
  var $p18: ref;
  var $i19: i64;
  var $i20: i64;
  var $p21: ref;
  var $p22: ref;
  var $i23: i64;
  var $i24: i64;
  var $p25: ref;
  var $p26: ref;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $p30: ref;
  var $i31: i64;
  var $i32: i64;
  var $p33: ref;
  var $p34: ref;
  var $i35: i64;
  var $i36: i64;
  var $p37: ref;
  var $p38: ref;
  var $i39: i64;
  var $i40: i64;
  var $p41: ref;
  var $p42: ref;
  var $i43: i64;
  var $i44: i64;
  var $p45: ref;
  var $p46: ref;
  var $i47: i64;
  var $i48: i64;
  var $p49: ref;
  var $p50: ref;
  var $i51: i64;
  var $i52: i64;
  var $p53: ref;
  var $p54: ref;
  var $i55: i64;
  var $i56: i64;
  var $p57: ref;
  var $p58: ref;
  var $i59: i64;
  var $i60: i64;
  var $p61: ref;
  var $p62: ref;
  var $i63: i64;
  var $i64: i64;
  var $p65: ref;
  var $p66: ref;
  var $i67: i64;
  var $i68: i64;
  var $p69: ref;
  var $p70: ref;
  var $i71: i32;
  var $i72: i32;
  var $i73: i1;
  var $i74: i1;
  var $p76: ref;
  var $i77: i64;
  var $i78: i1;
  var $i79: i32;
  var $i80: i1;
  var $i81: i32;
  var $p82: ref;
  var $i83: i32;
  var $i84: i1;
  var $i85: i8;
  var $i86: i32;
  var $i87: i1;
  var $i88: i32;
  var $i89: i8;
  var $i90: i32;
  var $i91: i32;
  var $i92: i1;
  var $i93: i32;
  var $i94: i32;
  var $i95: i1;
  var $i96: i32;
  var $p97: ref;
  var $p98: ref;
  var $i99: i64;
  var $i100: i64;
  var $i101: i1;
  var $i102: i32;
  var $i103: i64;
  var $i104: i64;
  var $p105: ref;
  var $i106: i32;
  var $i107: i1;
  var $i108: i32;
  var $i109: i1;
  var $i110: i32;
  var $p111: ref;
  var $p112: ref;
  var $i113: i32;
  var $i114: i32;
  var $i115: i1;
  var $i116: i32;
  var $i117: i64;
  var $i118: i64;
  var $p119: ref;
  var $i120: i32;
  var $i121: i32;
  var $i122: i1;
  var $i123: i64;
  var $i124: i64;
  var $p125: ref;
  var $i126: i8;
  var $i127: i32;
  var $i128: i1;
  var $i129: i32;
  var $p130: ref;
  var $i131: i32;
  var $i132: i32;
  var $i75: i32;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3638, 33} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  call {:cexpr "mraid_mm_ioctl:arg:cmd"} boogie_si_record_i32($i1);
  call {:cexpr "mraid_mm_ioctl:arg:arg"} boogie_si_record_i64($i2);
  assume true;
  assume true;
  assume true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3638, 33} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p3, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3638, 17} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p6);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3638, 45} true;
  assume {:verifier.code 0} true;
  $i8 := $add.i64($i7, 0);
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i8);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3639, 5} true;
  assume {:verifier.code 0} true;
  $p9 := $i2p.i64.ref($i8);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3639, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p9, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3641, 33} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p3, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3641, 17} true;
  assume {:verifier.code 0} true;
  $i11 := $p2i.ref.i64($p10);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3641, 45} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i64($i11, 1);
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i12);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3642, 5} true;
  assume {:verifier.code 0} true;
  $p13 := $i2p.i64.ref($i12);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3642, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p13, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3644, 33} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p3, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3644, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $p2i.ref.i64($p14);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3644, 45} true;
  assume {:verifier.code 0} true;
  $i16 := $add.i64($i15, 2);
  call {:cexpr "__cil_tmp18"} boogie_si_record_i64($i16);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3645, 5} true;
  assume {:verifier.code 0} true;
  $p17 := $i2p.i64.ref($i16);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3645, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p17, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3647, 33} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p3, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3647, 17} true;
  assume {:verifier.code 0} true;
  $i19 := $p2i.ref.i64($p18);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3647, 45} true;
  assume {:verifier.code 0} true;
  $i20 := $add.i64($i19, 3);
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i20);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3648, 5} true;
  assume {:verifier.code 0} true;
  $p21 := $i2p.i64.ref($i20);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3648, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p21, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3650, 33} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p3, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3650, 17} true;
  assume {:verifier.code 0} true;
  $i23 := $p2i.ref.i64($p22);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3650, 45} true;
  assume {:verifier.code 0} true;
  $i24 := $add.i64($i23, 4);
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i24);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3651, 5} true;
  assume {:verifier.code 0} true;
  $p25 := $i2p.i64.ref($i24);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3651, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p25, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3653, 33} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p3, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3653, 17} true;
  assume {:verifier.code 0} true;
  $i27 := $p2i.ref.i64($p26);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3653, 45} true;
  assume {:verifier.code 0} true;
  $i28 := $add.i64($i27, 5);
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i28);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3654, 5} true;
  assume {:verifier.code 0} true;
  $p29 := $i2p.i64.ref($i28);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3654, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p29, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3656, 33} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p3, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3656, 17} true;
  assume {:verifier.code 0} true;
  $i31 := $p2i.ref.i64($p30);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3656, 45} true;
  assume {:verifier.code 0} true;
  $i32 := $add.i64($i31, 6);
  call {:cexpr "__cil_tmp26"} boogie_si_record_i64($i32);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3657, 5} true;
  assume {:verifier.code 0} true;
  $p33 := $i2p.i64.ref($i32);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3657, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p33, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3659, 33} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p3, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3659, 17} true;
  assume {:verifier.code 0} true;
  $i35 := $p2i.ref.i64($p34);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3659, 45} true;
  assume {:verifier.code 0} true;
  $i36 := $add.i64($i35, 7);
  call {:cexpr "__cil_tmp28"} boogie_si_record_i64($i36);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3660, 5} true;
  assume {:verifier.code 0} true;
  $p37 := $i2p.i64.ref($i36);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3660, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p37, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3662, 33} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p3, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3662, 17} true;
  assume {:verifier.code 0} true;
  $i39 := $p2i.ref.i64($p38);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3662, 45} true;
  assume {:verifier.code 0} true;
  $i40 := $add.i64($i39, 8);
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i40);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3663, 5} true;
  assume {:verifier.code 0} true;
  $p41 := $i2p.i64.ref($i40);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3663, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p41, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3665, 33} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($add.ref($p3, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3665, 17} true;
  assume {:verifier.code 0} true;
  $i43 := $p2i.ref.i64($p42);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3665, 45} true;
  assume {:verifier.code 0} true;
  $i44 := $add.i64($i43, 9);
  call {:cexpr "__cil_tmp32"} boogie_si_record_i64($i44);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3666, 5} true;
  assume {:verifier.code 0} true;
  $p45 := $i2p.i64.ref($i44);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3666, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p45, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3668, 33} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p3, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3668, 17} true;
  assume {:verifier.code 0} true;
  $i47 := $p2i.ref.i64($p46);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3668, 45} true;
  assume {:verifier.code 0} true;
  $i48 := $add.i64($i47, 10);
  call {:cexpr "__cil_tmp34"} boogie_si_record_i64($i48);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3669, 5} true;
  assume {:verifier.code 0} true;
  $p49 := $i2p.i64.ref($i48);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3669, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p49, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3671, 33} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($add.ref($p3, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3671, 17} true;
  assume {:verifier.code 0} true;
  $i51 := $p2i.ref.i64($p50);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3671, 45} true;
  assume {:verifier.code 0} true;
  $i52 := $add.i64($i51, 11);
  call {:cexpr "__cil_tmp36"} boogie_si_record_i64($i52);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3672, 5} true;
  assume {:verifier.code 0} true;
  $p53 := $i2p.i64.ref($i52);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3672, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p53, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3674, 33} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($add.ref($p3, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3674, 17} true;
  assume {:verifier.code 0} true;
  $i55 := $p2i.ref.i64($p54);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3674, 45} true;
  assume {:verifier.code 0} true;
  $i56 := $add.i64($i55, 12);
  call {:cexpr "__cil_tmp38"} boogie_si_record_i64($i56);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3675, 5} true;
  assume {:verifier.code 0} true;
  $p57 := $i2p.i64.ref($i56);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3675, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p57, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3677, 33} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($add.ref($p3, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3677, 17} true;
  assume {:verifier.code 0} true;
  $i59 := $p2i.ref.i64($p58);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3677, 45} true;
  assume {:verifier.code 0} true;
  $i60 := $add.i64($i59, 13);
  call {:cexpr "__cil_tmp40"} boogie_si_record_i64($i60);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3678, 5} true;
  assume {:verifier.code 0} true;
  $p61 := $i2p.i64.ref($i60);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3678, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p61, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3680, 33} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($add.ref($p3, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3680, 17} true;
  assume {:verifier.code 0} true;
  $i63 := $p2i.ref.i64($p62);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3680, 45} true;
  assume {:verifier.code 0} true;
  $i64 := $add.i64($i63, 14);
  call {:cexpr "__cil_tmp42"} boogie_si_record_i64($i64);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3681, 5} true;
  assume {:verifier.code 0} true;
  $p65 := $i2p.i64.ref($i64);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3681, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p65, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3683, 33} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($add.ref($p3, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3683, 17} true;
  assume {:verifier.code 0} true;
  $i67 := $p2i.ref.i64($p66);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3683, 45} true;
  assume {:verifier.code 0} true;
  $i68 := $add.i64($i67, 15);
  call {:cexpr "__cil_tmp44"} boogie_si_record_i64($i68);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3684, 5} true;
  assume {:verifier.code 0} true;
  $p69 := $i2p.i64.ref($i68);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3684, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p69, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3685, 10} true;
  assume {:verifier.code 0} true;
  $p70 := $i2p.i64.ref($i2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3687, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i:3687:21: warning: over-approximating bitwise operation lshr;
  $i71 := $lshr.i32($i1, 8);
  call {:cexpr "__cil_tmp45"} boogie_si_record_i32($i71);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3688, 29} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i:3688:29: warning: over-approximating bitwise operation and;
  $i72 := $and.i32($i71, 255);
  call {:cexpr "__cil_tmp46"} boogie_si_record_i32($i72);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3689, 19} true;
  assume {:verifier.code 0} true;
  $i73 := $ne.i32($i72, 109);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3689, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i73} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i73 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3690, 13} true;
  assume {:verifier.code 0} true;
  $i74 := $ne.i32($i1, 128);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3690, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i74} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i73 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb3:
  assume ($i74 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3691, 7} true;
  assume {:verifier.code 0} true;
  $i75 := $sub.i32(0, 22);
  goto $bb5;
$bb4:
  assume !(($i74 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3859, 1} true;
  assume {:verifier.code 0} true;
  $r := $i75;
  $exn := false;
  return;
$bb6:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3694, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3698, 17} true;
  assume {:verifier.code 0} true;
  $p76 := $bitcast.ref.ref($p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3700, 9} true;
  assume {:verifier.code 0} true;
  call $i77 := copy_from_user($p76, $p70, 16);
  call {:cexpr "tmp"} boogie_si_record_i64($i77);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3702, 11} true;
  assume {:verifier.code 0} true;
  $i78 := $ne.i64($i77, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3702, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i78} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i78 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3705, 19} true;
  assume {:verifier.code 0} true;
  $i79 := $M.3;
  call {:cexpr "__cil_tmp50"} boogie_si_record_i32($i79);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3706, 21} true;
  assume {:verifier.code 0} true;
  $i80 := $sge.i32($i79, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3706, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i80} true;
  goto $bb10, $bb11;
$bb9:
  assume !(($i78 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb10:
  assume ($i80 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3708, 7} true;
  assume {:verifier.code 0} true;
  call $i81 := printk.ref(.str.18);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3710, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i80 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3713, 5} true;
  assume {:verifier.code 0} true;
  $i75 := $sub.i32(0, 14);
  goto $bb5;
$bb13:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3717, 17} true;
  assume {:verifier.code 0} true;
  $p82 := $bitcast.ref.ref($p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3719, 13} true;
  assume {:verifier.code 0} true;
  call $i83 := memcmp($p82, .str.19, 16);
  call {:cexpr "tmp___0"} boogie_si_record_i32($i83);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3721, 15} true;
  assume {:verifier.code 0} true;
  $i84 := $eq.i32($i83, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3721, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i84} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i84 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3723, 3} true;
  assume {:verifier.code 0} true;
  $i85 := 0;
  goto $bb16;
$bb15:
  assume !(($i84 == 1));
  assume {:verifier.code 0} true;
  $i85 := 1;
  goto $bb16;
$bb16:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3727, 17} true;
  assume {:verifier.code 0} true;
  $i86 := $zext.i8.i32($i85);
  call {:cexpr "__cil_tmp53"} boogie_si_record_i32($i86);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3728, 19} true;
  assume {:verifier.code 0} true;
  $i87 := $eq.i32($i86, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3728, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i87} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i87 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3729, 5} true;
  assume {:verifier.code 0} true;
  $i75 := $sub.i32(0, 22);
  goto $bb5;
$bb18:
  assume !(($i87 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3735, 17} true;
  assume {:verifier.code 0} true;
  $i88 := $zext.i8.i32($i85);
  call {:cexpr "__cil_tmp55"} boogie_si_record_i32($i88);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3736, 17} true;
  assume {:verifier.code 0} true;
  $i89 := $trunc.i32.i8($i88);
  call {:cexpr "__cil_tmp56"} boogie_si_record_i8($i89);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3737, 18} true;
  assume {:verifier.code 0} true;
  call $i90 := handle_drvrcmd($p70, $i89, $p5);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3737, 16} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.i32($M.4, $p4, $i90);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3741, 17} true;
  assume {:verifier.code 0} true;
  $i91 := $load.i32($M.4, $p4);
  call {:cexpr "__cil_tmp58"} boogie_si_record_i32($i91);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3742, 19} true;
  assume {:verifier.code 0} true;
  $i92 := $slt.i32($i91, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3742, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i92} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i92 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3745, 13} true;
  assume {:verifier.code 0} true;
  $i93 := $load.i32($M.4, $p4);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3745, 5} true;
  assume {:verifier.code 0} true;
  $i75 := $i93;
  goto $bb5;
$bb21:
  assume !(($i92 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3750, 19} true;
  assume {:verifier.code 0} true;
  $i94 := $load.i32($M.4, $p4);
  call {:cexpr "__cil_tmp61"} boogie_si_record_i32($i94);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3751, 21} true;
  assume {:verifier.code 0} true;
  $i95 := $eq.i32($i94, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3751, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i95} true;
  goto $bb22, $bb23;
$bb22:
  assume ($i95 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3754, 15} true;
  assume {:verifier.code 0} true;
  $i96 := $load.i32($M.5, $p5);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3754, 7} true;
  assume {:verifier.code 0} true;
  $i75 := $i96;
  goto $bb5;
$bb23:
  assume !(($i95 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3763, 16} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.i32($M.4, $p4, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3764, 17} true;
  assume {:verifier.code 0} true;
  $p97 := $bitcast.ref.ref($p70);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3765, 9} true;
  assume {:verifier.code 0} true;
  call $p98 := mraid_mm_get_adapter($p97, $p4);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3769, 17} true;
  assume {:verifier.code 0} true;
  $i99 := $p2i.ref.i64($0.ref);
  call {:cexpr "__cil_tmp66"} boogie_si_record_i64($i99);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3770, 17} true;
  assume {:verifier.code 0} true;
  $i100 := $p2i.ref.i64($p98);
  call {:cexpr "__cil_tmp67"} boogie_si_record_i64($i100);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3771, 19} true;
  assume {:verifier.code 0} true;
  $i101 := $eq.i64($i100, $i99);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3771, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i101} true;
  goto $bb26, $bb27;
$bb26:
  assume ($i101 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3774, 13} true;
  assume {:verifier.code 0} true;
  $i102 := $load.i32($M.4, $p4);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3774, 5} true;
  assume {:verifier.code 0} true;
  $i75 := $i102;
  goto $bb5;
$bb27:
  assume !(($i101 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3780, 17} true;
  assume {:verifier.code 0} true;
  $i103 := $p2i.ref.i64($p98);
  call {:cexpr "__cil_tmp69"} boogie_si_record_i64($i103);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3781, 29} true;
  assume {:verifier.code 0} true;
  $i104 := $add.i64($i103, 40);
  call {:cexpr "__cil_tmp70"} boogie_si_record_i64($i104);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3782, 19} true;
  assume {:verifier.code 0} true;
  $p105 := $i2p.i64.ref($i104);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3782, 17} true;
  assume {:verifier.code 0} true;
  $i106 := $load.i32($M.0, $p105);
  call {:cexpr "__cil_tmp71"} boogie_si_record_i32($i106);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3783, 19} true;
  assume {:verifier.code 0} true;
  $i107 := $eq.i32($i106, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3783, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i107} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i107 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3786, 19} true;
  assume {:verifier.code 0} true;
  $i108 := $M.3;
  call {:cexpr "__cil_tmp73"} boogie_si_record_i32($i108);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3787, 21} true;
  assume {:verifier.code 0} true;
  $i109 := $sge.i32($i108, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3787, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i109} true;
  goto $bb31, $bb32;
$bb30:
  assume !(($i107 == 1));
  assume {:verifier.code 0} true;
  goto $bb34;
$bb31:
  assume ($i109 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3789, 7} true;
  assume {:verifier.code 0} true;
  call $i110 := printk.ref(.str.20);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3791, 5} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb32:
  assume !(($i109 == 1));
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3794, 5} true;
  assume {:verifier.code 0} true;
  $i75 := $sub.i32(0, 14);
  goto $bb5;
$bb34:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3799, 10} true;
  assume {:verifier.code 0} true;
  call $p111 := mraid_mm_alloc_kioc($p98);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3801, 17} true;
  assume {:verifier.code 0} true;
  $p112 := $bitcast.ref.ref($p70);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3802, 18} true;
  assume {:verifier.code 0} true;
  call $i113 := mimd_to_kioc($p112, $p98, $p111);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3802, 16} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.i32($M.4, $p4, $i113);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3806, 17} true;
  assume {:verifier.code 0} true;
  $i114 := $load.i32($M.4, $p4);
  call {:cexpr "__cil_tmp77"} boogie_si_record_i32($i114);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3807, 19} true;
  assume {:verifier.code 0} true;
  $i115 := $ne.i32($i114, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3807, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i115} true;
  goto $bb35, $bb36;
$bb35:
  assume ($i115 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3809, 5} true;
  assume {:verifier.code 0} true;
  call mraid_mm_dealloc_kioc($p98, $p111);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3813, 13} true;
  assume {:verifier.code 0} true;
  $i116 := $load.i32($M.4, $p4);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3813, 5} true;
  assume {:verifier.code 0} true;
  $i75 := $i116;
  goto $bb5;
$bb36:
  assume !(($i115 == 1));
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3819, 17} true;
  assume {:verifier.code 0} true;
  $i117 := $p2i.ref.i64($p111);
  call {:cexpr "__cil_tmp79"} boogie_si_record_i64($i117);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3820, 29} true;
  assume {:verifier.code 0} true;
  $i118 := $add.i64($i117, 240);
  call {:cexpr "__cil_tmp80"} boogie_si_record_i64($i118);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3821, 5} true;
  assume {:verifier.code 0} true;
  $p119 := $i2p.i64.ref($i118);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3821, 45} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p119, ioctl_done);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3823, 18} true;
  assume {:verifier.code 0} true;
  call $i120 := lld_ioctl($p98, $p111);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3823, 16} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.i32($M.4, $p4, $i120);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3827, 17} true;
  assume {:verifier.code 0} true;
  $i121 := $load.i32($M.4, $p4);
  call {:cexpr "__cil_tmp83"} boogie_si_record_i32($i121);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3828, 19} true;
  assume {:verifier.code 0} true;
  $i122 := $ne.i32($i121, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3828, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i122} true;
  goto $bb38, $bb39;
$bb38:
  assume ($i122 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3830, 19} true;
  assume {:verifier.code 0} true;
  $i123 := $p2i.ref.i64($p111);
  call {:cexpr "__cil_tmp84"} boogie_si_record_i64($i123);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3831, 31} true;
  assume {:verifier.code 0} true;
  $i124 := $add.i64($i123, 266);
  call {:cexpr "__cil_tmp85"} boogie_si_record_i64($i124);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3832, 21} true;
  assume {:verifier.code 0} true;
  $p125 := $i2p.i64.ref($i124);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3832, 19} true;
  assume {:verifier.code 0} true;
  $i126 := $load.i8($M.0, $p125);
  call {:cexpr "__cil_tmp86"} boogie_si_record_i8($i126);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3833, 19} true;
  assume {:verifier.code 0} true;
  $i127 := $zext.i8.i32($i126);
  call {:cexpr "__cil_tmp87"} boogie_si_record_i32($i127);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3834, 21} true;
  assume {:verifier.code 0} true;
  $i128 := $eq.i32($i127, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3834, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i128} true;
  goto $bb40, $bb41;
$bb39:
  assume !(($i122 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb40:
  assume ($i128 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3836, 7} true;
  assume {:verifier.code 0} true;
  call mraid_mm_dealloc_kioc($p98, $p111);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3838, 5} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb41:
  assume !(($i128 == 1));
  assume {:verifier.code 0} true;
  goto $bb42;
$bb42:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3843, 13} true;
  assume {:verifier.code 0} true;
  $i129 := $load.i32($M.4, $p4);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3843, 5} true;
  assume {:verifier.code 0} true;
  $i75 := $i129;
  goto $bb5;
$bb43:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3850, 17} true;
  assume {:verifier.code 0} true;
  $p130 := $bitcast.ref.ref($p70);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3851, 18} true;
  assume {:verifier.code 0} true;
  call $i131 := kioc_to_mimd($p111, $p130);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3851, 16} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.i32($M.4, $p4, $i131);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3852, 3} true;
  assume {:verifier.code 0} true;
  call mraid_mm_dealloc_kioc($p98, $p111);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3856, 11} true;
  assume {:verifier.code 0} true;
  $i132 := $load.i32($M.4, $p4);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3856, 3} true;
  assume {:verifier.code 0} true;
  $i75 := $i132;
  goto $bb5;
}
const copy_from_user: ref;
axiom (copy_from_user == $sub.ref(0, 72356));
procedure  copy_from_user($p0: ref, $p1: ref, $i2: i64)
  returns ($r: i64)
{
  var $i3: i32;
  var $i4: i64;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
  var $i8: i64;
  var $i9: i32;
  var $i10: i64;
  var $i11: i1;
  var $i12: i32;
  var $i13: i64;
  var $i15: i64;
  var $i16: i1;
  var $i17: i32;
  var $i18: i64;
  var $i19: i32;
  var $i20: i64;
  var $i21: i1;
  var $i22: i32;
  var $i23: i64;
  var $i25: i1;
  var $i26: i32;
  var $i27: i64;
  var $i28: i32;
  var $i29: i64;
  var $i30: i1;
  var $i31: i1;
  var $i32: i32;
  var $i33: i64;
  var $i34: i32;
  var $i24: i64;
  var $i14: i64;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3388, 9} true;
  assume {:verifier.code 0} true;
  call {:cexpr "copy_from_user:arg:n"} boogie_si_record_i64($i2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3388, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := __builtinx_object_size.ref.i32($p0, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3388, 9} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  call {:cexpr "tmp"} boogie_si_record_i64($i4);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3389, 8} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i64.i32($i4);
  call {:cexpr "sz"} boogie_si_record_i32($i5);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3390, 3} true;
  assume {:verifier.code 0} true;
  call might_fault();
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3391, 20} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i5, $sub.i32(0, 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3391, 20} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i1.i32($i6);
  call {:cexpr "__cil_tmp12"} boogie_si_record_i32($i7);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3392, 17} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i7);
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i8);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3393, 13} true;
  assume {:verifier.code 0} true;
  call $i9 := __builtinx_expect.i64.i64($i8, 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3393, 13} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i9);
  call {:cexpr "tmp___1"} boogie_si_record_i64($i10);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3395, 15} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i64($i10, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3395, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3397, 19} true;
  assume {:verifier.code 0} true;
  $i12 := $trunc.i64.i32($i2);
  call {:cexpr "__cil_tmp14"} boogie_si_record_i32($i12);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3398, 9} true;
  assume {:verifier.code 0} true;
  call $i13 := _copy_from_user($p0, $p1, $i12);
  call {:cexpr "n"} boogie_si_record_i64($i13);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3400, 3} true;
  assume {:verifier.code 0} true;
  $i14 := $i13;
  goto $bb3;
$bb2:
  assume !(($i11 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3402, 19} true;
  assume {:verifier.code 0} true;
  $i15 := $sext.i32.i64($i5);
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i15);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3403, 31} true;
  assume {:verifier.code 0} true;
  $i16 := $uge.i64($i15, $i2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3403, 31} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i1.i32($i16);
  call {:cexpr "__cil_tmp16"} boogie_si_record_i32($i17);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3404, 19} true;
  assume {:verifier.code 0} true;
  $i18 := $sext.i32.i64($i17);
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i18);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3405, 15} true;
  assume {:verifier.code 0} true;
  call $i19 := __builtinx_expect.i64.i64($i18, 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3405, 15} true;
  assume {:verifier.code 0} true;
  $i20 := $sext.i32.i64($i19);
  call {:cexpr "tmp___2"} boogie_si_record_i64($i20);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3407, 17} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i64($i20, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3407, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb4, $bb5;
$bb3:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3434, 3} true;
  assume {:verifier.code 0} true;
  $r := $i14;
  $exn := false;
  return;
$bb4:
  assume ($i21 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3409, 21} true;
  assume {:verifier.code 0} true;
  $i22 := $trunc.i64.i32($i2);
  call {:cexpr "__cil_tmp18"} boogie_si_record_i32($i22);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3410, 11} true;
  assume {:verifier.code 0} true;
  call $i23 := _copy_from_user($p0, $p1, $i22);
  call {:cexpr "n"} boogie_si_record_i64($i23);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3412, 5} true;
  assume {:verifier.code 0} true;
  $i24 := $i23;
  goto $bb6;
$bb5:
  assume !(($i21 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3415, 35} true;
  assume {:verifier.code 0} true;
  $i25 := $ne.i32(1, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3415, 35} true;
  assume {:verifier.code 0} true;
  $i26 := $zext.i1.i32($i25);
  call {:cexpr "__cil_tmp19"} boogie_si_record_i32($i26);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3416, 21} true;
  assume {:verifier.code 0} true;
  $i27 := $sext.i32.i64($i26);
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i27);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3417, 17} true;
  assume {:verifier.code 0} true;
  call $i28 := __builtinx_expect.i64.i64($i27, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3417, 17} true;
  assume {:verifier.code 0} true;
  $i29 := $sext.i32.i64($i28);
  call {:cexpr "tmp___0"} boogie_si_record_i64($i29);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3419, 19} true;
  assume {:verifier.code 0} true;
  $i30 := $ne.i64($i29, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3419, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb7, $bb8;
$bb6:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i14 := $i24;
  goto $bb3;
$bb7:
  assume ($i30 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3422, 9} true;
  assume {:verifier.code 0} true;
  call warn_slowpath_fmt.ref.i32.ref(.str.21, 57, .str.22);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3425, 7} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i30 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3428, 35} true;
  assume {:verifier.code 0} true;
  $i31 := $ne.i32(1, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3428, 35} true;
  assume {:verifier.code 0} true;
  $i32 := $zext.i1.i32($i31);
  call {:cexpr "__cil_tmp22"} boogie_si_record_i32($i32);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3429, 21} true;
  assume {:verifier.code 0} true;
  $i33 := $sext.i32.i64($i32);
  call {:cexpr "__cil_tmp23"} boogie_si_record_i64($i33);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3430, 7} true;
  assume {:verifier.code 0} true;
  call $i34 := __builtinx_expect.i64.i64($i33, 0);
  assume {:verifier.code 0} true;
  $i24 := $i2;
  goto $bb6;
}
const memcmp: ref;
axiom (memcmp == $sub.ref(0, 73388));
procedure  memcmp($p0: ref, $p1: ref, $i2: i64)
  returns ($r: i32);
const handle_drvrcmd: ref;
axiom (handle_drvrcmd == $sub.ref(0, 74420));
procedure  handle_drvrcmd($p0: ref, $i1: i8, $p2: ref)
  returns ($r: i32)
{
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $i12: i64;
  var $i13: i64;
  var $p14: ref;
  var $i15: i8;
  var $i16: i64;
  var $i17: i64;
  var $i18: i64;
  var $p19: ref;
  var $i20: i8;
  var $i21: i32;
  var $i22: i1;
  var $i23: i32;
  var $i24: i1;
  var $i25: i32;
  var $i26: i1;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $p30: ref;
  var $i31: i32;
  var $i32: i1;
  var $i33: i32;
  var $i34: i64;
  var $i35: i64;
  var $p36: ref;
  var $p37: ref;
  var $i38: i32;
  var $i39: i1;
  var $i6: i32;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4011, 17} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(120, $zext.i32.i64(1)));
  call {:cexpr "handle_drvrcmd:arg:old_ioctl"} boogie_si_record_i8($i1);
  assume true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4011, 17} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i8.i32($i1);
  call {:cexpr "__cil_tmp11"} boogie_si_record_i32($i4);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4012, 19} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4012, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4013, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4015, 5} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4022, 9} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.i32($M.5, $p2, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4023, 11} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4024, 17} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4025, 17} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p7);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4026, 9} true;
  assume {:verifier.code 0} true;
  call $i10 := copy_from_user($p8, $p9, 110);
  call {:cexpr "tmp"} boogie_si_record_i64($i10);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4028, 11} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i64($i10, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4028, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb6, $bb7;
$bb4:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4019, 3} true;
  assume {:verifier.code 0} true;
  $i6 := $sub.i32(0, 524);
  goto $bb5;
$bb5:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4091, 1} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
$bb6:
  assume ($i11 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4029, 5} true;
  assume {:verifier.code 0} true;
  $i6 := $sub.i32(0, 14);
  goto $bb5;
$bb7:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4032, 17} true;
  assume {:verifier.code 0} true;
  $i12 := $p2i.ref.i64($p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4032, 43} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i64($i12, 8);
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i13);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4033, 14} true;
  assume {:verifier.code 0} true;
  $p14 := $i2p.i64.ref($i13);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4033, 12} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i8($M.0, $p14);
  call {:cexpr "opcode"} boogie_si_record_i8($i15);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4035, 19} true;
  assume {:verifier.code 0} true;
  $i16 := $add.i64(8, 1);
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i16);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4036, 17} true;
  assume {:verifier.code 0} true;
  $i17 := $p2i.ref.i64($p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4036, 43} true;
  assume {:verifier.code 0} true;
  $i18 := $add.i64($i17, $i16);
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i18);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4037, 17} true;
  assume {:verifier.code 0} true;
  $p19 := $i2p.i64.ref($i18);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4037, 15} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i8($M.0, $p19);
  call {:cexpr "subopcode"} boogie_si_record_i8($i20);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4039, 17} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i8.i32($i15);
  call {:cexpr "__cil_tmp18"} boogie_si_record_i32($i21);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4040, 19} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i32($i21, 130);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4040, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i22 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4041, 5} true;
  assume {:verifier.code 0} true;
  $i6 := 1;
  goto $bb5;
$bb10:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4045, 7} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i8.i32($i20);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4045, 23} true;
  assume {:verifier.code 0} true;
  $i24 := $eq.i32($i23, 101);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4045, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i24 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4046, 5} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !(($i24 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4048, 7} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i8.i32($i20);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4048, 23} true;
  assume {:verifier.code 0} true;
  $i26 := $eq.i32($i25, 109);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4048, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb15, $bb16;
$bb14:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4056, 21} true;
  assume {:verifier.code 0} true;
  $i27 := $p2i.ref.i64($p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4056, 47} true;
  assume {:verifier.code 0} true;
  $i28 := $add.i64($i27, 112);
  call {:cexpr "__cil_tmp19"} boogie_si_record_i64($i28);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4057, 23} true;
  assume {:verifier.code 0} true;
  $p29 := $i2p.i64.ref($i28);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4057, 21} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.0, $p29);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4060, 17} true;
  assume {:verifier.code 0} true;
  call $i31 := copy_to_user($p30, drvr_ver, 4);
  call {:cexpr "tmp___0"} boogie_si_record_i32($i31);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4062, 19} true;
  assume {:verifier.code 0} true;
  $i32 := $ne.i32($i31, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4062, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb22, $bb23;
$bb15:
  assume ($i26 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4049, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i26 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4052, 5} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4070, 15} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i32($M.0, adapters_count_g);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4070, 13} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.i32($M.5, $p2, $i33);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4071, 21} true;
  assume {:verifier.code 0} true;
  $i34 := $p2i.ref.i64($p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4071, 47} true;
  assume {:verifier.code 0} true;
  $i35 := $add.i64($i34, 112);
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i35);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4072, 23} true;
  assume {:verifier.code 0} true;
  $p36 := $i2p.i64.ref($i35);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4072, 21} true;
  assume {:verifier.code 0} true;
  $p37 := $load.ref($M.0, $p36);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4075, 17} true;
  assume {:verifier.code 0} true;
  call $i38 := copy_to_user($p37, adapters_count_g, 4);
  call {:cexpr "tmp___1"} boogie_si_record_i32($i38);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4077, 19} true;
  assume {:verifier.code 0} true;
  $i39 := $ne.i32($i38, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4077, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb25, $bb26;
$bb18:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4083, 7} true;
  assume {:verifier.code 0} true;
  $i6 := 1;
  goto $bb5;
$bb19:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4053, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb20, $bb21;
$bb20:
  assume (0 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4053, 12} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb21:
  assume !((0 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4084, 12} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb22:
  assume ($i32 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4063, 9} true;
  assume {:verifier.code 0} true;
  $i6 := $sub.i32(0, 14);
  goto $bb5;
$bb23:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4066, 7} true;
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb5;
$bb25:
  assume ($i39 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4078, 9} true;
  assume {:verifier.code 0} true;
  $i6 := $sub.i32(0, 14);
  goto $bb5;
$bb26:
  assume !(($i39 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4081, 7} true;
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb5;
$bb28:
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4089, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u4, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4089, 3} true;
  assume {:verifier.code 0} true;
  $i6 := $u2;
  goto $bb5;
}
const mraid_mm_get_adapter: ref;
axiom (mraid_mm_get_adapter == $sub.ref(0, 75452));
procedure  mraid_mm_get_adapter($p0: ref, $p1: ref)
  returns ($r: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $i8: i64;
  var $i9: i64;
  var $i10: i64;
  var $p11: ref;
  var $i12: i16;
  var $i13: i32;
  var $i14: i32;
  var $i15: i32;
  var $i16: i1;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $i21: i64;
  var $i22: i64;
  var $i23: i1;
  var $i27: i32;
  var $i28: i1;
  var $p29: ref;
  var $i31: i64;
  var $i32: i64;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $i37: i64;
  var $i38: i64;
  var $p39: ref;
  var $i40: i64;
  var $i41: i1;
  var $i25: i32;
  var $p26: ref;
  var $p42: ref;
  var $p24: ref;
  var $p30: ref;
  var $i43: i64;
  var $i44: i64;
  var $i45: i1;
  var $p7: ref;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3908, 17} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(120, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3908, 17} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3909, 17} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3910, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := copy_from_user($p3, $p4, 110);
  call {:cexpr "tmp"} boogie_si_record_i64($i5);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3912, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3912, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3913, 11} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.i32($M.4, $p1, $sub.i32(0, 14));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3914, 5} true;
  assume {:verifier.code 0} true;
  $p7 := $0.ref;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3983, 1} true;
  assume {:verifier.code 0} true;
  $r := $p7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3918, 19} true;
  assume {:verifier.code 0} true;
  $i8 := $add.i64(8, 2);
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i8);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3919, 17} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3919, 42} true;
  assume {:verifier.code 0} true;
  $i10 := $add.i64($i9, $i8);
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i10);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3920, 19} true;
  assume {:verifier.code 0} true;
  $p11 := $i2p.i64.ref($i10);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3920, 17} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i16($M.0, $p11);
  call {:cexpr "__cil_tmp16"} boogie_si_record_i16($i12);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3921, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i16.i32($i12);
  call {:cexpr "__cil_tmp17"} boogie_si_record_i32($i13);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3922, 24} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i:3922:24: warning: over-approximating bitwise operation xor;
  $i14 := $xor.i32($i13, 27904);
  call {:cexpr "adapno"} boogie_si_record_i32($i14);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3925, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, adapters_count_g);
  call {:cexpr "__cil_tmp19"} boogie_si_record_i32($i15);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3927, 19} true;
  assume {:verifier.code 0} true;
  $i16 := $ule.i32($i15, $i14);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3927, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i16 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3928, 11} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.i32($M.4, $p1, $sub.i32(0, 19));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3929, 5} true;
  assume {:verifier.code 0} true;
  $p7 := $0.ref;
  goto $bb3;
$bb6:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3936, 17} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref(adapters_list_g);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3936, 17} true;
  assume {:verifier.code 0} true;
  $p18 := $load.ref($M.0, $p17);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3938, 17} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p18);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3939, 25} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p19, $mul.ref($sub.ref(0, 48), 832));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3960, 17} true;
  assume {:verifier.code 0} true;
  $i21 := $p2i.ref.i64($p20);
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i21);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3961, 29} true;
  assume {:verifier.code 0} true;
  $i22 := $add.i64($i21, 48);
  call {:cexpr "__cil_tmp31"} boogie_si_record_i64($i22);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3964, 19} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i64($i22, $p2i.ref.i64(adapters_list_g));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3964, 7} true;
  assume {:verifier.code 0} true;
  $p24 := $p20;
  assume {:branchcond $i23} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i23 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3964, 7} true;
  assume {:verifier.code 0} true;
  $i25, $p26 := 0, $p20;
  goto $bb11;
$bb9:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3964, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i23 == 1));
  goto $bb10;
$bb10:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3967, 5} true;
  assume {:verifier.code 0} true;
  $p30 := $p24;
  goto $bb15;
$bb11:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3965, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3943, 23} true;
  assume {:verifier.code 0} true;
  $i27 := $add.i32($i25, 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3946, 19} true;
  assume {:verifier.code 0} true;
  $i28 := $eq.i32($i25, $i14);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3946, 7} true;
  assume {:verifier.code 0} true;
  $p29 := $p26;
  assume {:branchcond $i28} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i28 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3947, 5} true;
  assume {:verifier.code 0} true;
  $p30 := $p29;
  goto $bb15;
$bb14:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3973, 17} true;
  assume {:verifier.code 0} true;
  $i43 := $p2i.ref.i64($0.ref);
  call {:cexpr "__cil_tmp35"} boogie_si_record_i64($i43);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3974, 17} true;
  assume {:verifier.code 0} true;
  $i44 := $p2i.ref.i64($p30);
  call {:cexpr "__cil_tmp36"} boogie_si_record_i64($i44);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3975, 19} true;
  assume {:verifier.code 0} true;
  $i45 := $eq.i64($i44, $i43);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3975, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb19, $bb20;
$bb16:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3951, 17} true;
  assume {:verifier.code 0} true;
  $i31 := $p2i.ref.i64($p26);
  call {:cexpr "__cil_tmp25"} boogie_si_record_i64($i31);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3952, 29} true;
  assume {:verifier.code 0} true;
  $i32 := $add.i64($i31, 48);
  call {:cexpr "__cil_tmp26"} boogie_si_record_i64($i32);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3953, 19} true;
  assume {:verifier.code 0} true;
  $p33 := $i2p.i64.ref($i32);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3953, 17} true;
  assume {:verifier.code 0} true;
  $p34 := $load.ref($M.0, $p33);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3955, 17} true;
  assume {:verifier.code 0} true;
  $p35 := $bitcast.ref.ref($p34);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3956, 25} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p35, $mul.ref($sub.ref(0, 48), 832));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3960, 17} true;
  assume {:verifier.code 0} true;
  $i37 := $p2i.ref.i64($p36);
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i37);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3961, 29} true;
  assume {:verifier.code 0} true;
  $i38 := $add.i64($i37, 48);
  call {:cexpr "__cil_tmp31"} boogie_si_record_i64($i38);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3962, 17} true;
  assume {:verifier.code 0} true;
  $p39 := $i2p.i64.ref($i38);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3963, 17} true;
  assume {:verifier.code 0} true;
  $i40 := $p2i.ref.i64($p39);
  call {:cexpr "__cil_tmp33"} boogie_si_record_i64($i40);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3964, 19} true;
  assume {:verifier.code 0} true;
  $i41 := $ne.i64($i40, $p2i.ref.i64(adapters_list_g));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3964, 7} true;
  assume {:verifier.code 0} true;
  $p42 := $p36;
  assume {:branchcond $i41} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i41 == 1);
  assume {:verifier.code 0} true;
  $i25, $p26 := $i27, $p36;
  goto $bb11;
$bb18:
  assume !(($i41 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3964, 7} true;
  assume {:verifier.code 0} true;
  $p24 := $p42;
  goto $bb10;
$bb19:
  assume ($i45 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3976, 11} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.i32($M.4, $p1, $sub.i32(0, 19));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3977, 5} true;
  assume {:verifier.code 0} true;
  $p7 := $0.ref;
  goto $bb3;
$bb20:
  assume !(($i45 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3981, 3} true;
  assume {:verifier.code 0} true;
  $p7 := $p30;
  goto $bb3;
}
const mraid_mm_alloc_kioc: ref;
axiom (mraid_mm_alloc_kioc == $sub.ref(0, 76484));
procedure  mraid_mm_alloc_kioc($p0: ref)
  returns ($r: ref)
{
  var $i1: i64;
  var $i2: i64;
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $i9: i64;
  var $i10: i64;
  var $p11: ref;
  var $i12: i64;
  var $i13: i64;
  var $p14: ref;
  var $i15: i32;
  var $i16: i1;
  var $i17: i32;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $i23: i64;
  var $i24: i64;
  var $p25: ref;
  var $i26: i64;
  var $i27: i64;
  var $p28: ref;
  var $i29: i64;
  var $i30: i64;
  var $p31: ref;
  var $i32: i64;
  var $p33: ref;
  var $i34: i64;
  var $i35: i64;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i64;
  var $i40: i64;
  var $p41: ref;
  var $i42: i64;
  var $i43: i64;
  var $p44: ref;
  var $i45: i64;
  var $i46: i64;
  var $p47: ref;
  var $i48: i64;
  var $i49: i64;
  var $p50: ref;
  var $i51: i64;
  var $i52: i64;
  var $p53: ref;
  var $i54: i64;
  var $i55: i64;
  var $p56: ref;
  var $i57: i64;
  var $i58: i64;
  var $p59: ref;
  var $i60: i64;
  var $i61: i64;
  var $p62: ref;
  var $p18: ref;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4931, 16} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4931, 16} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp7"} boogie_si_record_i64($i1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4932, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i64($i1, 160);
  call {:cexpr "__cil_tmp8"} boogie_si_record_i64($i2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4933, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.i64.ref($i2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4934, 3} true;
  assume {:verifier.code 0} true;
  call down($p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4935, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock();
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4936, 17} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i4);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4937, 29} true;
  assume {:verifier.code 0} true;
  $i5 := $add.i64($i4, 72);
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i5);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4938, 10} true;
  assume {:verifier.code 0} true;
  $p6 := $i2p.i64.ref($i5);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4940, 9} true;
  assume {:verifier.code 0} true;
  call $i7 := list_empty($p6);
  call {:cexpr "tmp"} boogie_si_record_i32($i7);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4942, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4942, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4944, 19} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i9);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4945, 31} true;
  assume {:verifier.code 0} true;
  $i10 := $add.i64($i9, 160);
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i10);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4946, 19} true;
  assume {:verifier.code 0} true;
  $p11 := $i2p.i64.ref($i10);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4947, 5} true;
  assume {:verifier.code 0} true;
  call up($p11);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4948, 19} true;
  assume {:verifier.code 0} true;
  $i12 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i12);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4949, 31} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i64($i12, 88);
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i13);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4950, 19} true;
  assume {:verifier.code 0} true;
  $p14 := $i2p.i64.ref($i13);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4951, 5} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p14, $u3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4955, 19} true;
  assume {:verifier.code 0} true;
  $i15 := $M.3;
  call {:cexpr "__cil_tmp20"} boogie_si_record_i32($i15);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4956, 21} true;
  assume {:verifier.code 0} true;
  $i16 := $sge.i32($i15, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4956, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb3:
  assume ($i16 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4958, 7} true;
  assume {:verifier.code 0} true;
  call $i17 := printk.ref(.str.23);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4960, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4963, 5} true;
  assume {:verifier.code 0} true;
  $p18 := $0.ref;
  goto $bb6;
$bb6:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5016, 1} true;
  assume {:verifier.code 0} true;
  $r := $p18;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4967, 17} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p6);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4967, 17} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4969, 17} true;
  assume {:verifier.code 0} true;
  $p21 := $bitcast.ref.ref($p20);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4970, 22} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p21, $mul.ref($sub.ref(0, 216), 272));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4971, 17} true;
  assume {:verifier.code 0} true;
  $i23 := $p2i.ref.i64($p22);
  call {:cexpr "__cil_tmp23"} boogie_si_record_i64($i23);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4972, 29} true;
  assume {:verifier.code 0} true;
  $i24 := $add.i64($i23, 224);
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i24);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4973, 17} true;
  assume {:verifier.code 0} true;
  $p25 := $i2p.i64.ref($i24);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4974, 3} true;
  assume {:verifier.code 0} true;
  call list_del_init($p25);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4975, 17} true;
  assume {:verifier.code 0} true;
  $i26 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp26"} boogie_si_record_i64($i26);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4976, 29} true;
  assume {:verifier.code 0} true;
  $i27 := $add.i64($i26, 88);
  call {:cexpr "__cil_tmp27"} boogie_si_record_i64($i27);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4977, 17} true;
  assume {:verifier.code 0} true;
  $p28 := $i2p.i64.ref($i27);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4978, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p28, $u3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4979, 17} true;
  assume {:verifier.code 0} true;
  $i29 := $p2i.ref.i64($p22);
  call {:cexpr "__cil_tmp29"} boogie_si_record_i64($i29);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4980, 29} true;
  assume {:verifier.code 0} true;
  $i30 := $add.i64($i29, 32);
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i30);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4981, 19} true;
  assume {:verifier.code 0} true;
  $p31 := $i2p.i64.ref($i30);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4981, 17} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i64($M.0, $p31);
  call {:cexpr "__cil_tmp31"} boogie_si_record_i64($i32);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4982, 17} true;
  assume {:verifier.code 0} true;
  $p33 := $i2p.i64.ref($i32);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4983, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p33, 0, 74, false);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4984, 17} true;
  assume {:verifier.code 0} true;
  $i34 := $p2i.ref.i64($p22);
  call {:cexpr "__cil_tmp33"} boogie_si_record_i64($i34);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4985, 29} true;
  assume {:verifier.code 0} true;
  $i35 := $add.i64($i34, 208);
  call {:cexpr "__cil_tmp34"} boogie_si_record_i64($i35);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4986, 19} true;
  assume {:verifier.code 0} true;
  $p36 := $i2p.i64.ref($i35);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4986, 17} true;
  assume {:verifier.code 0} true;
  $p37 := $load.ref($M.0, $p36);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4987, 17} true;
  assume {:verifier.code 0} true;
  $p38 := $bitcast.ref.ref($p37);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4988, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p38, 0, 60, false);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4989, 17} true;
  assume {:verifier.code 0} true;
  $i39 := $p2i.ref.i64($p22);
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i39);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4990, 29} true;
  assume {:verifier.code 0} true;
  $i40 := $add.i64($i39, 248);
  call {:cexpr "__cil_tmp38"} boogie_si_record_i64($i40);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4991, 5} true;
  assume {:verifier.code 0} true;
  $p41 := $i2p.i64.ref($i40);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4991, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p41, $0.ref);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4992, 17} true;
  assume {:verifier.code 0} true;
  $i42 := $p2i.ref.i64($p22);
  call {:cexpr "__cil_tmp39"} boogie_si_record_i64($i42);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4993, 29} true;
  assume {:verifier.code 0} true;
  $i43 := $add.i64($i42, 256);
  call {:cexpr "__cil_tmp40"} boogie_si_record_i64($i43);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4994, 5} true;
  assume {:verifier.code 0} true;
  $p44 := $i2p.i64.ref($i43);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4994, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p44, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4995, 17} true;
  assume {:verifier.code 0} true;
  $i45 := $p2i.ref.i64($p22);
  call {:cexpr "__cil_tmp41"} boogie_si_record_i64($i45);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4996, 29} true;
  assume {:verifier.code 0} true;
  $i46 := $add.i64($i45, 264);
  call {:cexpr "__cil_tmp42"} boogie_si_record_i64($i46);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4997, 5} true;
  assume {:verifier.code 0} true;
  $p47 := $i2p.i64.ref($i46);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4997, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p47, $sub.i8(0, 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4998, 17} true;
  assume {:verifier.code 0} true;
  $i48 := $p2i.ref.i64($p22);
  call {:cexpr "__cil_tmp43"} boogie_si_record_i64($i48);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4999, 29} true;
  assume {:verifier.code 0} true;
  $i49 := $add.i64($i48, 265);
  call {:cexpr "__cil_tmp44"} boogie_si_record_i64($i49);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5000, 5} true;
  assume {:verifier.code 0} true;
  $p50 := $i2p.i64.ref($i49);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5000, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p50, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5001, 17} true;
  assume {:verifier.code 0} true;
  $i51 := $p2i.ref.i64($p22);
  call {:cexpr "__cil_tmp45"} boogie_si_record_i64($i51);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5002, 29} true;
  assume {:verifier.code 0} true;
  $i52 := $add.i64($i51, 184);
  call {:cexpr "__cil_tmp46"} boogie_si_record_i64($i52);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5003, 5} true;
  assume {:verifier.code 0} true;
  $p53 := $i2p.i64.ref($i52);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5003, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p53, $0.ref);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5004, 17} true;
  assume {:verifier.code 0} true;
  $i54 := $p2i.ref.i64($p22);
  call {:cexpr "__cil_tmp47"} boogie_si_record_i64($i54);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5005, 29} true;
  assume {:verifier.code 0} true;
  $i55 := $add.i64($i54, 192);
  call {:cexpr "__cil_tmp48"} boogie_si_record_i64($i55);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5006, 5} true;
  assume {:verifier.code 0} true;
  $p56 := $i2p.i64.ref($i55);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5006, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p56, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5007, 17} true;
  assume {:verifier.code 0} true;
  $i57 := $p2i.ref.i64($p22);
  call {:cexpr "__cil_tmp49"} boogie_si_record_i64($i57);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5008, 29} true;
  assume {:verifier.code 0} true;
  $i58 := $add.i64($i57, 200);
  call {:cexpr "__cil_tmp50"} boogie_si_record_i64($i58);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5009, 5} true;
  assume {:verifier.code 0} true;
  $p59 := $i2p.i64.ref($i58);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5009, 39} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p59, $0.ref);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5010, 17} true;
  assume {:verifier.code 0} true;
  $i60 := $p2i.ref.i64($p22);
  call {:cexpr "__cil_tmp51"} boogie_si_record_i64($i60);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5011, 29} true;
  assume {:verifier.code 0} true;
  $i61 := $add.i64($i60, 266);
  call {:cexpr "__cil_tmp52"} boogie_si_record_i64($i61);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5012, 5} true;
  assume {:verifier.code 0} true;
  $p62 := $i2p.i64.ref($i61);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5012, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p62, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5014, 3} true;
  assume {:verifier.code 0} true;
  $p18 := $p22;
  goto $bb6;
}
const mimd_to_kioc: ref;
axiom (mimd_to_kioc == $sub.ref(0, 77516));
procedure  mimd_to_kioc($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i1;
  var $i9: i64;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $i13: i8;
  var $i14: i32;
  var $i15: i1;
  var $i16: i64;
  var $i17: i64;
  var $i18: i64;
  var $p19: ref;
  var $i20: i8;
  var $i21: i32;
  var $i22: i1;
  var $i23: i64;
  var $i24: i64;
  var $p25: ref;
  var $i26: i8;
  var $i27: i64;
  var $i28: i64;
  var $i29: i64;
  var $p30: ref;
  var $i31: i8;
  var $i32: i64;
  var $i33: i64;
  var $i34: i64;
  var $p35: ref;
  var $i36: i16;
  var $i37: i32;
  var $i38: i32;
  var $i39: i32;
  var $i40: i1;
  var $i41: i64;
  var $i42: i64;
  var $p43: ref;
  var $i44: i64;
  var $i45: i64;
  var $p46: ref;
  var $i47: i64;
  var $i48: i64;
  var $p49: ref;
  var $i50: i32;
  var $i51: i1;
  var $i52: i32;
  var $i53: i1;
  var $i54: i32;
  var $i55: i1;
  var $i56: i32;
  var $i57: i1;
  var $i58: i64;
  var $i59: i64;
  var $p60: ref;
  var $i61: i64;
  var $i62: i64;
  var $p63: ref;
  var $i64: i64;
  var $i65: i64;
  var $p66: ref;
  var $i67: i64;
  var $i68: i64;
  var $p69: ref;
  var $i70: i32;
  var $i71: i32;
  var $i72: i1;
  var $i73: i32;
  var $i74: i1;
  var $i75: i32;
  var $i76: i64;
  var $i77: i64;
  var $p78: ref;
  var $i79: i64;
  var $i80: i64;
  var $i81: i64;
  var $i82: i64;
  var $i83: i64;
  var $p84: ref;
  var $i85: i32;
  var $p86: ref;
  var $i87: i64;
  var $i88: i64;
  var $i89: i64;
  var $i90: i64;
  var $p91: ref;
  var $i92: i32;
  var $p93: ref;
  var $i94: i64;
  var $i95: i64;
  var $i96: i64;
  var $i97: i64;
  var $i98: i64;
  var $p99: ref;
  var $p100: ref;
  var $p101: ref;
  var $i102: i64;
  var $i103: i64;
  var $p104: ref;
  var $i105: i32;
  var $i106: i32;
  var $i107: i1;
  var $i108: i64;
  var $i109: i64;
  var $p110: ref;
  var $i111: i32;
  var $i112: i1;
  var $i113: i64;
  var $i114: i64;
  var $p115: ref;
  var $p116: ref;
  var $i117: i32;
  var $i118: i1;
  var $i119: i64;
  var $i120: i64;
  var $i121: i64;
  var $i122: i64;
  var $p123: ref;
  var $i124: i32;
  var $i125: i32;
  var $p126: ref;
  var $i127: i64;
  var $i128: i64;
  var $p129: ref;
  var $p130: ref;
  var $i131: i32;
  var $i132: i64;
  var $i133: i64;
  var $p134: ref;
  var $i135: i32;
  var $i136: i1;
  var $i137: i64;
  var $i138: i64;
  var $i139: i64;
  var $i140: i64;
  var $p141: ref;
  var $i142: i32;
  var $p143: ref;
  var $i144: i64;
  var $i145: i64;
  var $p146: ref;
  var $i147: i32;
  var $p148: ref;
  var $i149: i64;
  var $i150: i64;
  var $i151: i64;
  var $i152: i64;
  var $p153: ref;
  var $i154: i32;
  var $p155: ref;
  var $i156: i64;
  var $i157: i64;
  var $i158: i64;
  var $i159: i64;
  var $p160: ref;
  var $p161: ref;
  var $p162: ref;
  var $i163: i64;
  var $i164: i64;
  var $p165: ref;
  var $i166: i32;
  var $i167: i32;
  var $i168: i1;
  var $i169: i64;
  var $i170: i64;
  var $p171: ref;
  var $i172: i32;
  var $i173: i1;
  var $i174: i64;
  var $i175: i64;
  var $p176: ref;
  var $p177: ref;
  var $i178: i32;
  var $i179: i1;
  var $i180: i64;
  var $i181: i64;
  var $i182: i64;
  var $i183: i64;
  var $p184: ref;
  var $i185: i32;
  var $i186: i32;
  var $p187: ref;
  var $i188: i32;
  var $i189: i1;
  var $i190: i64;
  var $i191: i64;
  var $p192: ref;
  var $i193: i64;
  var $p194: ref;
  var $i195: i64;
  var $i196: i64;
  var $p197: ref;
  var $i198: i1;
  var $p199: ref;
  var $i200: i64;
  var $i201: i64;
  var $p202: ref;
  var $p203: ref;
  var $p204: ref;
  var $p205: ref;
  var $i206: i64;
  var $i207: i64;
  var $p208: ref;
  var $p209: ref;
  var $p210: ref;
  var $p211: ref;
  var $i212: i8;
  var $i213: i32;
  var $i214: i1;
  var $i215: i64;
  var $i216: i64;
  var $i217: i64;
  var $i218: i64;
  var $p219: ref;
  var $i220: i64;
  var $i221: i32;
  var $p222: ref;
  var $i223: i64;
  var $i224: i64;
  var $p225: ref;
  var $i226: i32;
  var $i227: i32;
  var $i228: i1;
  var $i229: i64;
  var $i230: i64;
  var $p231: ref;
  var $p232: ref;
  var $p233: ref;
  var $i234: i64;
  var $i235: i64;
  var $p236: ref;
  var $p237: ref;
  var $i238: i64;
  var $i239: i64;
  var $p240: ref;
  var $i241: i32;
  var $i242: i64;
  var $i243: i64;
  var $i244: i1;
  var $i245: i64;
  var $i246: i64;
  var $p247: ref;
  var $p248: ref;
  var $i249: i64;
  var $i250: i64;
  var $i251: i64;
  var $i252: i64;
  var $p253: ref;
  var $p254: ref;
  var $i255: i64;
  var $i256: i64;
  var $i257: i64;
  var $i258: i64;
  var $p259: ref;
  var $i260: i64;
  var $i261: i32;
  var $p262: ref;
  var $p263: ref;
  var $i264: i64;
  var $i265: i64;
  var $p266: ref;
  var $p267: ref;
  var $p268: ref;
  var $i269: i64;
  var $i270: i1;
  var $i271: i64;
  var $i272: i64;
  var $i273: i64;
  var $i274: i64;
  var $p275: ref;
  var $i276: i64;
  var $i277: i32;
  var $p278: ref;
  var $i279: i64;
  var $i280: i64;
  var $p281: ref;
  var $i282: i32;
  var $i283: i32;
  var $i284: i1;
  var $i285: i64;
  var $i286: i64;
  var $p287: ref;
  var $p288: ref;
  var $p289: ref;
  var $i290: i64;
  var $i291: i64;
  var $p292: ref;
  var $p293: ref;
  var $i294: i64;
  var $i295: i64;
  var $p296: ref;
  var $i297: i32;
  var $i298: i64;
  var $i299: i64;
  var $i300: i1;
  var $i8: i32;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4295, 17} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(120, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4295, 17} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4296, 17} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4297, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := copy_from_user($p4, $p5, 110);
  call {:cexpr "tmp"} boogie_si_record_i64($i6);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4299, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i64($i6, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4299, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4300, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 14);
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4673, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4305, 20} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i64(32, 0);
  call {:cexpr "__cil_tmp23"} boogie_si_record_i64($i9);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4306, 17} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4306, 42} true;
  assume {:verifier.code 0} true;
  $i11 := $add.i64($i10, $i9);
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i11);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4307, 19} true;
  assume {:verifier.code 0} true;
  $p12 := $i2p.i64.ref($i11);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4307, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i8($M.0, $p12);
  call {:cexpr "__cil_tmp25"} boogie_si_record_i8($i13);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4308, 17} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i8.i32($i13);
  call {:cexpr "__cil_tmp26"} boogie_si_record_i32($i14);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4309, 19} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i14, 195);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4309, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i15 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4310, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 22);
  goto $bb3;
$bb6:
  assume !(($i15 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4314, 22} true;
  assume {:verifier.code 0} true;
  $i16 := $add.i64(32, 0);
  call {:cexpr "__cil_tmp28"} boogie_si_record_i64($i16);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4315, 19} true;
  assume {:verifier.code 0} true;
  $i17 := $p2i.ref.i64($p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4315, 44} true;
  assume {:verifier.code 0} true;
  $i18 := $add.i64($i17, $i16);
  call {:cexpr "__cil_tmp29"} boogie_si_record_i64($i18);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4316, 21} true;
  assume {:verifier.code 0} true;
  $p19 := $i2p.i64.ref($i18);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4316, 19} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i8($M.0, $p19);
  call {:cexpr "__cil_tmp30"} boogie_si_record_i8($i20);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4317, 19} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i8.i32($i20);
  call {:cexpr "__cil_tmp31"} boogie_si_record_i32($i21);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4318, 21} true;
  assume {:verifier.code 0} true;
  $i22 := $eq.i32($i21, 227);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4318, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i22 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4319, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 22);
  goto $bb3;
$bb8:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4325, 17} true;
  assume {:verifier.code 0} true;
  $i23 := $p2i.ref.i64($p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4325, 42} true;
  assume {:verifier.code 0} true;
  $i24 := $add.i64($i23, 8);
  call {:cexpr "__cil_tmp32"} boogie_si_record_i64($i24);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4326, 14} true;
  assume {:verifier.code 0} true;
  $p25 := $i2p.i64.ref($i24);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4326, 12} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i8($M.0, $p25);
  call {:cexpr "opcode"} boogie_si_record_i8($i26);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4328, 19} true;
  assume {:verifier.code 0} true;
  $i27 := $add.i64(8, 1);
  call {:cexpr "__cil_tmp34"} boogie_si_record_i64($i27);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4329, 17} true;
  assume {:verifier.code 0} true;
  $i28 := $p2i.ref.i64($p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4329, 42} true;
  assume {:verifier.code 0} true;
  $i29 := $add.i64($i28, $i27);
  call {:cexpr "__cil_tmp35"} boogie_si_record_i64($i29);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4330, 17} true;
  assume {:verifier.code 0} true;
  $p30 := $i2p.i64.ref($i29);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4330, 15} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i8($M.0, $p30);
  call {:cexpr "subopcode"} boogie_si_record_i8($i31);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4332, 19} true;
  assume {:verifier.code 0} true;
  $i32 := $add.i64(8, 2);
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i32);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4333, 17} true;
  assume {:verifier.code 0} true;
  $i33 := $p2i.ref.i64($p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4333, 42} true;
  assume {:verifier.code 0} true;
  $i34 := $add.i64($i33, $i32);
  call {:cexpr "__cil_tmp38"} boogie_si_record_i64($i34);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4334, 19} true;
  assume {:verifier.code 0} true;
  $p35 := $i2p.i64.ref($i34);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4334, 17} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i16($M.0, $p35);
  call {:cexpr "__cil_tmp39"} boogie_si_record_i16($i36);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4335, 17} true;
  assume {:verifier.code 0} true;
  $i37 := $zext.i16.i32($i36);
  call {:cexpr "__cil_tmp40"} boogie_si_record_i32($i37);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4336, 24} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i:4336:24: warning: over-approximating bitwise operation xor;
  $i38 := $xor.i32($i37, 27904);
  call {:cexpr "adapno"} boogie_si_record_i32($i38);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4339, 17} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i32($M.0, adapters_count_g);
  call {:cexpr "__cil_tmp42"} boogie_si_record_i32($i39);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4341, 19} true;
  assume {:verifier.code 0} true;
  $i40 := $ule.i32($i39, $i38);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4341, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i40 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4342, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 19);
  goto $bb3;
$bb12:
  assume !(($i40 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4346, 17} true;
  assume {:verifier.code 0} true;
  $i41 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp44"} boogie_si_record_i64($i41);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4347, 29} true;
  assume {:verifier.code 0} true;
  $i42 := $add.i64($i41, 24);
  call {:cexpr "__cil_tmp45"} boogie_si_record_i64($i42);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4348, 5} true;
  assume {:verifier.code 0} true;
  $p43 := $i2p.i64.ref($i42);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4348, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p43, $i38);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4349, 17} true;
  assume {:verifier.code 0} true;
  $i44 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp46"} boogie_si_record_i64($i44);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4350, 29} true;
  assume {:verifier.code 0} true;
  $i45 := $add.i64($i44, 16);
  call {:cexpr "__cil_tmp47"} boogie_si_record_i64($i45);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4351, 5} true;
  assume {:verifier.code 0} true;
  $p46 := $i2p.i64.ref($i45);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4351, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p46, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4352, 17} true;
  assume {:verifier.code 0} true;
  $i47 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp48"} boogie_si_record_i64($i47);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4353, 29} true;
  assume {:verifier.code 0} true;
  $i48 := $add.i64($i47, 18);
  call {:cexpr "__cil_tmp49"} boogie_si_record_i64($i48);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4354, 5} true;
  assume {:verifier.code 0} true;
  $p49 := $i2p.i64.ref($i48);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4354, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p49, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4355, 7} true;
  assume {:verifier.code 0} true;
  $i50 := $zext.i8.i32($i26);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4355, 20} true;
  assume {:verifier.code 0} true;
  $i51 := $eq.i32($i50, 130);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4355, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i51} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i51 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4356, 5} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i51 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4358, 7} true;
  assume {:verifier.code 0} true;
  $i52 := $zext.i8.i32($i26);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4358, 20} true;
  assume {:verifier.code 0} true;
  $i53 := $eq.i32($i52, 129);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4358, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i53} true;
  goto $bb17, $bb18;
$bb16:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4369, 21} true;
  assume {:verifier.code 0} true;
  $i56 := $zext.i8.i32($i31);
  call {:cexpr "__cil_tmp50"} boogie_si_record_i32($i56);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4370, 23} true;
  assume {:verifier.code 0} true;
  $i57 := $eq.i32($i56, 103);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4370, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i57} true;
  goto $bb27, $bb28;
$bb17:
  assume ($i53 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4359, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i53 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4361, 7} true;
  assume {:verifier.code 0} true;
  $i54 := $zext.i8.i32($i26);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4361, 20} true;
  assume {:verifier.code 0} true;
  $i55 := $eq.i32($i54, 128);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4361, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i55} true;
  goto $bb20, $bb21;
$bb19:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4408, 21} true;
  assume {:verifier.code 0} true;
  $i76 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp63"} boogie_si_record_i64($i76);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4409, 33} true;
  assume {:verifier.code 0} true;
  $i77 := $add.i64($i76, 20);
  call {:cexpr "__cil_tmp64"} boogie_si_record_i64($i77);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4410, 9} true;
  assume {:verifier.code 0} true;
  $p78 := $i2p.i64.ref($i77);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4410, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p78, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4411, 21} true;
  assume {:verifier.code 0} true;
  $i79 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp65"} boogie_si_record_i64($i79);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4412, 33} true;
  assume {:verifier.code 0} true;
  $i80 := $add.i64($i79, 40);
  call {:cexpr "__cil_tmp66"} boogie_si_record_i64($i80);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4414, 23} true;
  assume {:verifier.code 0} true;
  $i81 := $add.i64(8, 16);
  call {:cexpr "__cil_tmp68"} boogie_si_record_i64($i81);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4415, 21} true;
  assume {:verifier.code 0} true;
  $i82 := $p2i.ref.i64($p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4415, 46} true;
  assume {:verifier.code 0} true;
  $i83 := $add.i64($i82, $i81);
  call {:cexpr "__cil_tmp69"} boogie_si_record_i64($i83);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4416, 38} true;
  assume {:verifier.code 0} true;
  $p84 := $i2p.i64.ref($i83);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4416, 36} true;
  assume {:verifier.code 0} true;
  $i85 := $load.i32($M.0, $p84);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4416, 9} true;
  assume {:verifier.code 0} true;
  $p86 := $i2p.i64.ref($i80);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4416, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p86, $i85);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4417, 21} true;
  assume {:verifier.code 0} true;
  $i87 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp70"} boogie_si_record_i64($i87);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4418, 33} true;
  assume {:verifier.code 0} true;
  $i88 := $add.i64($i87, 192);
  call {:cexpr "__cil_tmp71"} boogie_si_record_i64($i88);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4419, 21} true;
  assume {:verifier.code 0} true;
  $i89 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp72"} boogie_si_record_i64($i89);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4420, 33} true;
  assume {:verifier.code 0} true;
  $i90 := $add.i64($i89, 40);
  call {:cexpr "__cil_tmp73"} boogie_si_record_i64($i90);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4421, 38} true;
  assume {:verifier.code 0} true;
  $p91 := $i2p.i64.ref($i90);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4421, 36} true;
  assume {:verifier.code 0} true;
  $i92 := $load.i32($M.0, $p91);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4421, 9} true;
  assume {:verifier.code 0} true;
  $p93 := $i2p.i64.ref($i88);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4421, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p93, $i92);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4422, 21} true;
  assume {:verifier.code 0} true;
  $i94 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp74"} boogie_si_record_i64($i94);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4423, 33} true;
  assume {:verifier.code 0} true;
  $i95 := $add.i64($i94, 184);
  call {:cexpr "__cil_tmp75"} boogie_si_record_i64($i95);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4425, 23} true;
  assume {:verifier.code 0} true;
  $i96 := $add.i64(8, 8);
  call {:cexpr "__cil_tmp77"} boogie_si_record_i64($i96);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4426, 21} true;
  assume {:verifier.code 0} true;
  $i97 := $p2i.ref.i64($p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4426, 46} true;
  assume {:verifier.code 0} true;
  $i98 := $add.i64($i97, $i96);
  call {:cexpr "__cil_tmp78"} boogie_si_record_i64($i98);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4427, 23} true;
  assume {:verifier.code 0} true;
  $p99 := $i2p.i64.ref($i98);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4427, 21} true;
  assume {:verifier.code 0} true;
  $p100 := $load.ref($M.0, $p99);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4428, 9} true;
  assume {:verifier.code 0} true;
  $p101 := $i2p.i64.ref($i95);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4428, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p101, $p100);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4429, 21} true;
  assume {:verifier.code 0} true;
  $i102 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp80"} boogie_si_record_i64($i102);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4430, 33} true;
  assume {:verifier.code 0} true;
  $i103 := $add.i64($i102, 40);
  call {:cexpr "__cil_tmp81"} boogie_si_record_i64($i103);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4431, 23} true;
  assume {:verifier.code 0} true;
  $p104 := $i2p.i64.ref($i103);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4431, 21} true;
  assume {:verifier.code 0} true;
  $i105 := $load.i32($M.0, $p104);
  call {:cexpr "__cil_tmp82"} boogie_si_record_i32($i105);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4433, 17} true;
  assume {:verifier.code 0} true;
  call $i106 := mraid_mm_attach_buf($p1, $p2, $i105);
  call {:cexpr "tmp___1"} boogie_si_record_i32($i106);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4435, 19} true;
  assume {:verifier.code 0} true;
  $i107 := $ne.i32($i106, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4435, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i107} true;
  goto $bb37, $bb38;
$bb20:
  assume ($i55 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4362, 5} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i55 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4365, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4464, 21} true;
  assume {:verifier.code 0} true;
  $i127 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp95"} boogie_si_record_i64($i127);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4465, 33} true;
  assume {:verifier.code 0} true;
  $i128 := $add.i64($i127, 20);
  call {:cexpr "__cil_tmp96"} boogie_si_record_i64($i128);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4466, 9} true;
  assume {:verifier.code 0} true;
  $p129 := $i2p.i64.ref($i128);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4466, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p129, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4469, 21} true;
  assume {:verifier.code 0} true;
  $p130 := $bitcast.ref.ref($p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4469, 21} true;
  assume {:verifier.code 0} true;
  $i131 := $load.i32($M.0, $p130);
  call {:cexpr "__cil_tmp98"} boogie_si_record_i32($i131);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4470, 21} true;
  assume {:verifier.code 0} true;
  $i132 := $p2i.ref.i64($p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4470, 46} true;
  assume {:verifier.code 0} true;
  $i133 := $add.i64($i132, 4);
  call {:cexpr "__cil_tmp99"} boogie_si_record_i64($i133);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4471, 24} true;
  assume {:verifier.code 0} true;
  $p134 := $i2p.i64.ref($i133);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4471, 22} true;
  assume {:verifier.code 0} true;
  $i135 := $load.i32($M.0, $p134);
  call {:cexpr "__cil_tmp100"} boogie_si_record_i32($i135);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4472, 24} true;
  assume {:verifier.code 0} true;
  $i136 := $ugt.i32($i135, $i131);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4472, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i136} true;
  goto $bb46, $bb47;
$bb23:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4530, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 22);
  goto $bb3;
$bb24:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4366, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb25, $bb26;
$bb25:
  assume (0 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4366, 12} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb26:
  assume !((0 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4531, 12} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb27:
  assume ($i57 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4372, 23} true;
  assume {:verifier.code 0} true;
  $i58 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp51"} boogie_si_record_i64($i58);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4373, 35} true;
  assume {:verifier.code 0} true;
  $i59 := $add.i64($i58, 20);
  call {:cexpr "__cil_tmp52"} boogie_si_record_i64($i59);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4374, 11} true;
  assume {:verifier.code 0} true;
  $p60 := $i2p.i64.ref($i59);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4374, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p60, 196608);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4375, 23} true;
  assume {:verifier.code 0} true;
  $i61 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp53"} boogie_si_record_i64($i61);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4376, 35} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i64($i61, 44);
  call {:cexpr "__cil_tmp54"} boogie_si_record_i64($i62);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4377, 11} true;
  assume {:verifier.code 0} true;
  $p63 := $i2p.i64.ref($i62);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4377, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p63, 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4378, 23} true;
  assume {:verifier.code 0} true;
  $i64 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp55"} boogie_si_record_i64($i64);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4379, 35} true;
  assume {:verifier.code 0} true;
  $i65 := $add.i64($i64, 40);
  call {:cexpr "__cil_tmp56"} boogie_si_record_i64($i65);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4380, 11} true;
  assume {:verifier.code 0} true;
  $p66 := $i2p.i64.ref($i65);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4380, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p66, 256);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4381, 23} true;
  assume {:verifier.code 0} true;
  $i67 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp57"} boogie_si_record_i64($i67);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4382, 35} true;
  assume {:verifier.code 0} true;
  $i68 := $add.i64($i67, 40);
  call {:cexpr "__cil_tmp58"} boogie_si_record_i64($i68);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4383, 25} true;
  assume {:verifier.code 0} true;
  $p69 := $i2p.i64.ref($i68);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4383, 23} true;
  assume {:verifier.code 0} true;
  $i70 := $load.i32($M.0, $p69);
  call {:cexpr "__cil_tmp59"} boogie_si_record_i32($i70);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4385, 19} true;
  assume {:verifier.code 0} true;
  call $i71 := mraid_mm_attach_buf($p1, $p2, $i70);
  call {:cexpr "tmp___0"} boogie_si_record_i32($i71);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4387, 21} true;
  assume {:verifier.code 0} true;
  $i72 := $ne.i32($i71, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4387, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i72} true;
  goto $bb29, $bb30;
$bb28:
  assume !(($i57 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4394, 23} true;
  assume {:verifier.code 0} true;
  $i73 := $M.3;
  call {:cexpr "__cil_tmp62"} boogie_si_record_i32($i73);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4395, 25} true;
  assume {:verifier.code 0} true;
  $i74 := $sge.i32($i73, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4395, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i74} true;
  goto $bb33, $bb34;
$bb29:
  assume ($i72 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4388, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 12);
  goto $bb3;
$bb30:
  assume !(($i72 == 1));
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4391, 7} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb32:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4405, 7} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb33:
  assume ($i74 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4397, 11} true;
  assume {:verifier.code 0} true;
  call $i75 := printk.ref(.str.24);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4399, 9} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb34:
  assume !(($i74 == 1));
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4402, 9} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 22);
  goto $bb3;
$bb36:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4538, 18} true;
  assume {:verifier.code 0} true;
  $i188 := $zext.i8.i32($i26);
  call {:cexpr "__cil_tmp130"} boogie_si_record_i32($i188);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4539, 20} true;
  assume {:verifier.code 0} true;
  $i189 := $eq.i32($i188, 130);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4539, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i189} true;
  goto $bb63, $bb64;
$bb37:
  assume ($i107 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4436, 9} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 12);
  goto $bb3;
$bb38:
  assume !(($i107 == 1));
  assume {:verifier.code 0} true;
  goto $bb39;
$bb39:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4440, 21} true;
  assume {:verifier.code 0} true;
  $i108 := $p2i.ref.i64($p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4440, 46} true;
  assume {:verifier.code 0} true;
  $i109 := $add.i64($i108, 4);
  call {:cexpr "__cil_tmp84"} boogie_si_record_i64($i109);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4441, 23} true;
  assume {:verifier.code 0} true;
  $p110 := $i2p.i64.ref($i109);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4441, 21} true;
  assume {:verifier.code 0} true;
  $i111 := $load.i32($M.0, $p110);
  call {:cexpr "__cil_tmp85"} boogie_si_record_i32($i111);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4442, 23} true;
  assume {:verifier.code 0} true;
  $i112 := $ne.i32($i111, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4442, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i112} true;
  goto $bb40, $bb41;
$bb40:
  assume ($i112 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4443, 23} true;
  assume {:verifier.code 0} true;
  $i113 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp86"} boogie_si_record_i64($i113);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4444, 35} true;
  assume {:verifier.code 0} true;
  $i114 := $add.i64($i113, 44);
  call {:cexpr "__cil_tmp87"} boogie_si_record_i64($i114);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4445, 11} true;
  assume {:verifier.code 0} true;
  $p115 := $i2p.i64.ref($i114);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4445, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p115, 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4446, 7} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb41:
  assume !(($i112 == 1));
  assume {:verifier.code 0} true;
  goto $bb42;
$bb42:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4451, 21} true;
  assume {:verifier.code 0} true;
  $p116 := $bitcast.ref.ref($p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4451, 21} true;
  assume {:verifier.code 0} true;
  $i117 := $load.i32($M.0, $p116);
  call {:cexpr "__cil_tmp89"} boogie_si_record_i32($i117);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4452, 23} true;
  assume {:verifier.code 0} true;
  $i118 := $ne.i32($i117, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4452, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i118} true;
  goto $bb43, $bb44;
$bb43:
  assume ($i118 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4453, 23} true;
  assume {:verifier.code 0} true;
  $i119 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp90"} boogie_si_record_i64($i119);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4454, 35} true;
  assume {:verifier.code 0} true;
  $i120 := $add.i64($i119, 44);
  call {:cexpr "__cil_tmp91"} boogie_si_record_i64($i120);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4455, 23} true;
  assume {:verifier.code 0} true;
  $i121 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp92"} boogie_si_record_i64($i121);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4456, 35} true;
  assume {:verifier.code 0} true;
  $i122 := $add.i64($i121, 44);
  call {:cexpr "__cil_tmp93"} boogie_si_record_i64($i122);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4457, 25} true;
  assume {:verifier.code 0} true;
  $p123 := $i2p.i64.ref($i122);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4457, 23} true;
  assume {:verifier.code 0} true;
  $i124 := $load.i32($M.0, $p123);
  call {:cexpr "__cil_tmp94"} boogie_si_record_i32($i124);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4458, 50} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i:4458:50: warning: over-approximating bitwise operation or;
  $i125 := $or.i32($i124, 2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4458, 11} true;
  assume {:verifier.code 0} true;
  $p126 := $i2p.i64.ref($i120);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4458, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p126, $i125);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4459, 7} true;
  assume {:verifier.code 0} true;
  goto $bb45;
$bb44:
  assume !(($i118 == 1));
  assume {:verifier.code 0} true;
  goto $bb45;
$bb45:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4462, 7} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb46:
  assume ($i136 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4473, 24} true;
  assume {:verifier.code 0} true;
  $i137 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp101"} boogie_si_record_i64($i137);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4474, 37} true;
  assume {:verifier.code 0} true;
  $i138 := $add.i64($i137, 40);
  call {:cexpr "__cil_tmp102"} boogie_si_record_i64($i138);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4475, 24} true;
  assume {:verifier.code 0} true;
  $i139 := $p2i.ref.i64($p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4475, 49} true;
  assume {:verifier.code 0} true;
  $i140 := $add.i64($i139, 4);
  call {:cexpr "__cil_tmp103"} boogie_si_record_i64($i140);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4476, 41} true;
  assume {:verifier.code 0} true;
  $p141 := $i2p.i64.ref($i140);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4476, 39} true;
  assume {:verifier.code 0} true;
  $i142 := $load.i32($M.0, $p141);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4476, 11} true;
  assume {:verifier.code 0} true;
  $p143 := $i2p.i64.ref($i138);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4476, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p143, $i142);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4477, 7} true;
  assume {:verifier.code 0} true;
  goto $bb48;
$bb47:
  assume !(($i136 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4478, 24} true;
  assume {:verifier.code 0} true;
  $i144 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp104"} boogie_si_record_i64($i144);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4479, 37} true;
  assume {:verifier.code 0} true;
  $i145 := $add.i64($i144, 40);
  call {:cexpr "__cil_tmp105"} boogie_si_record_i64($i145);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4481, 39} true;
  assume {:verifier.code 0} true;
  $p146 := $bitcast.ref.ref($p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4481, 39} true;
  assume {:verifier.code 0} true;
  $i147 := $load.i32($M.0, $p146);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4481, 11} true;
  assume {:verifier.code 0} true;
  $p148 := $i2p.i64.ref($i145);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4481, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p148, $i147);
  assume {:verifier.code 0} true;
  goto $bb48;
$bb48:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4485, 22} true;
  assume {:verifier.code 0} true;
  $i149 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp107"} boogie_si_record_i64($i149);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4486, 35} true;
  assume {:verifier.code 0} true;
  $i150 := $add.i64($i149, 192);
  call {:cexpr "__cil_tmp108"} boogie_si_record_i64($i150);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4487, 22} true;
  assume {:verifier.code 0} true;
  $i151 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp109"} boogie_si_record_i64($i151);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4488, 35} true;
  assume {:verifier.code 0} true;
  $i152 := $add.i64($i151, 40);
  call {:cexpr "__cil_tmp110"} boogie_si_record_i64($i152);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4489, 39} true;
  assume {:verifier.code 0} true;
  $p153 := $i2p.i64.ref($i152);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4489, 37} true;
  assume {:verifier.code 0} true;
  $i154 := $load.i32($M.0, $p153);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4489, 9} true;
  assume {:verifier.code 0} true;
  $p155 := $i2p.i64.ref($i150);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4489, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p155, $i154);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4490, 22} true;
  assume {:verifier.code 0} true;
  $i156 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp111"} boogie_si_record_i64($i156);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4491, 35} true;
  assume {:verifier.code 0} true;
  $i157 := $add.i64($i156, 184);
  call {:cexpr "__cil_tmp112"} boogie_si_record_i64($i157);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4492, 22} true;
  assume {:verifier.code 0} true;
  $i158 := $p2i.ref.i64($p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4492, 47} true;
  assume {:verifier.code 0} true;
  $i159 := $add.i64($i158, 112);
  call {:cexpr "__cil_tmp113"} boogie_si_record_i64($i159);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4493, 24} true;
  assume {:verifier.code 0} true;
  $p160 := $i2p.i64.ref($i159);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4493, 22} true;
  assume {:verifier.code 0} true;
  $p161 := $load.ref($M.0, $p160);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4494, 9} true;
  assume {:verifier.code 0} true;
  $p162 := $i2p.i64.ref($i157);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4494, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p162, $p161);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4495, 22} true;
  assume {:verifier.code 0} true;
  $i163 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp115"} boogie_si_record_i64($i163);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4496, 35} true;
  assume {:verifier.code 0} true;
  $i164 := $add.i64($i163, 40);
  call {:cexpr "__cil_tmp116"} boogie_si_record_i64($i164);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4497, 24} true;
  assume {:verifier.code 0} true;
  $p165 := $i2p.i64.ref($i164);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4497, 22} true;
  assume {:verifier.code 0} true;
  $i166 := $load.i32($M.0, $p165);
  call {:cexpr "__cil_tmp117"} boogie_si_record_i32($i166);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4499, 17} true;
  assume {:verifier.code 0} true;
  call $i167 := mraid_mm_attach_buf($p1, $p2, $i166);
  call {:cexpr "tmp___2"} boogie_si_record_i32($i167);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4501, 19} true;
  assume {:verifier.code 0} true;
  $i168 := $ne.i32($i167, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4501, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i168} true;
  goto $bb49, $bb50;
$bb49:
  assume ($i168 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4502, 9} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 12);
  goto $bb3;
$bb50:
  assume !(($i168 == 1));
  assume {:verifier.code 0} true;
  goto $bb51;
$bb51:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4506, 22} true;
  assume {:verifier.code 0} true;
  $i169 := $p2i.ref.i64($p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4506, 47} true;
  assume {:verifier.code 0} true;
  $i170 := $add.i64($i169, 4);
  call {:cexpr "__cil_tmp119"} boogie_si_record_i64($i170);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4507, 24} true;
  assume {:verifier.code 0} true;
  $p171 := $i2p.i64.ref($i170);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4507, 22} true;
  assume {:verifier.code 0} true;
  $i172 := $load.i32($M.0, $p171);
  call {:cexpr "__cil_tmp120"} boogie_si_record_i32($i172);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4508, 24} true;
  assume {:verifier.code 0} true;
  $i173 := $ne.i32($i172, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4508, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i173} true;
  goto $bb52, $bb53;
$bb52:
  assume ($i173 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4509, 24} true;
  assume {:verifier.code 0} true;
  $i174 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp121"} boogie_si_record_i64($i174);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4510, 37} true;
  assume {:verifier.code 0} true;
  $i175 := $add.i64($i174, 44);
  call {:cexpr "__cil_tmp122"} boogie_si_record_i64($i175);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4511, 11} true;
  assume {:verifier.code 0} true;
  $p176 := $i2p.i64.ref($i175);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4511, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p176, 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4512, 7} true;
  assume {:verifier.code 0} true;
  goto $bb54;
$bb53:
  assume !(($i173 == 1));
  assume {:verifier.code 0} true;
  goto $bb54;
$bb54:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4517, 22} true;
  assume {:verifier.code 0} true;
  $p177 := $bitcast.ref.ref($p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4517, 22} true;
  assume {:verifier.code 0} true;
  $i178 := $load.i32($M.0, $p177);
  call {:cexpr "__cil_tmp124"} boogie_si_record_i32($i178);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4518, 24} true;
  assume {:verifier.code 0} true;
  $i179 := $ne.i32($i178, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4518, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i179} true;
  goto $bb55, $bb56;
$bb55:
  assume ($i179 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4519, 24} true;
  assume {:verifier.code 0} true;
  $i180 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp125"} boogie_si_record_i64($i180);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4520, 37} true;
  assume {:verifier.code 0} true;
  $i181 := $add.i64($i180, 44);
  call {:cexpr "__cil_tmp126"} boogie_si_record_i64($i181);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4521, 24} true;
  assume {:verifier.code 0} true;
  $i182 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp127"} boogie_si_record_i64($i182);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4522, 37} true;
  assume {:verifier.code 0} true;
  $i183 := $add.i64($i182, 44);
  call {:cexpr "__cil_tmp128"} boogie_si_record_i64($i183);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4523, 26} true;
  assume {:verifier.code 0} true;
  $p184 := $i2p.i64.ref($i183);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4523, 24} true;
  assume {:verifier.code 0} true;
  $i185 := $load.i32($M.0, $p184);
  call {:cexpr "__cil_tmp129"} boogie_si_record_i32($i185);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4524, 52} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i:4524:52: warning: over-approximating bitwise operation or;
  $i186 := $or.i32($i185, 2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4524, 11} true;
  assume {:verifier.code 0} true;
  $p187 := $i2p.i64.ref($i181);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4524, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p187, $i186);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4525, 7} true;
  assume {:verifier.code 0} true;
  goto $bb57;
$bb56:
  assume !(($i179 == 1));
  assume {:verifier.code 0} true;
  goto $bb57;
$bb57:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4528, 7} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb58:
  assume {:verifier.code 0} true;
  goto $bb59;
$bb59:
  assume {:verifier.code 0} true;
  goto $bb60;
$bb60:
  assume {:verifier.code 0} true;
  goto $bb61;
$bb61:
  assume {:verifier.code 0} true;
  goto $bb62;
$bb62:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4355, 23} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb63:
  assume ($i189 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4540, 5} true;
  assume {:verifier.code 0} true;
  $i8 := 0;
  goto $bb3;
$bb64:
  assume !(($i189 == 1));
  assume {:verifier.code 0} true;
  goto $bb65;
$bb65:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4544, 18} true;
  assume {:verifier.code 0} true;
  $i190 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp131"} boogie_si_record_i64($i190);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4545, 31} true;
  assume {:verifier.code 0} true;
  $i191 := $add.i64($i190, 32);
  call {:cexpr "__cil_tmp132"} boogie_si_record_i64($i191);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4546, 20} true;
  assume {:verifier.code 0} true;
  $p192 := $i2p.i64.ref($i191);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4546, 18} true;
  assume {:verifier.code 0} true;
  $i193 := $load.i64($M.0, $p192);
  call {:cexpr "__cil_tmp133"} boogie_si_record_i64($i193);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4547, 12} true;
  assume {:verifier.code 0} true;
  $p194 := $i2p.i64.ref($i193);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4548, 18} true;
  assume {:verifier.code 0} true;
  $i195 := $p2i.ref.i64($p194);
  call {:cexpr "__cil_tmp134"} boogie_si_record_i64($i195);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4549, 31} true;
  assume {:verifier.code 0} true;
  $i196 := $add.i64($i195, 8);
  call {:cexpr "__cil_tmp135"} boogie_si_record_i64($i196);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4550, 10} true;
  assume {:verifier.code 0} true;
  $p197 := $i2p.i64.ref($i196);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4552, 13} true;
  assume {:verifier.code 0} true;
  $i198 := $ugt.i64(14, 63);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4552, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i198} true;
  goto $bb66, $bb67;
$bb66:
  assume ($i198 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4554, 20} true;
  assume {:verifier.code 0} true;
  $p199 := $bitcast.ref.ref($p197);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4555, 20} true;
  assume {:verifier.code 0} true;
  $i200 := $p2i.ref.i64($p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4555, 45} true;
  assume {:verifier.code 0} true;
  $i201 := $add.i64($i200, 32);
  call {:cexpr "__cil_tmp137"} boogie_si_record_i64($i201);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4556, 20} true;
  assume {:verifier.code 0} true;
  $p202 := $i2p.i64.ref($i201);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4557, 20} true;
  assume {:verifier.code 0} true;
  $p203 := $bitcast.ref.ref($p202);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4558, 13} true;
  assume {:verifier.code 0} true;
  call $p204 := memcpy($p199, $p203, 14);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4560, 3} true;
  assume {:verifier.code 0} true;
  goto $bb68;
$bb67:
  assume !(($i198 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4562, 20} true;
  assume {:verifier.code 0} true;
  $p205 := $bitcast.ref.ref($p197);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4563, 20} true;
  assume {:verifier.code 0} true;
  $i206 := $p2i.ref.i64($p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4563, 45} true;
  assume {:verifier.code 0} true;
  $i207 := $add.i64($i206, 32);
  call {:cexpr "__cil_tmp141"} boogie_si_record_i64($i207);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4564, 20} true;
  assume {:verifier.code 0} true;
  $p208 := $i2p.i64.ref($i207);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4565, 20} true;
  assume {:verifier.code 0} true;
  $p209 := $bitcast.ref.ref($p208);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4566, 13} true;
  assume {:verifier.code 0} true;
  call $p210 := memcpy($p205, $p209, 14);
  assume {:verifier.code 0} true;
  goto $bb68;
$bb68:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4570, 18} true;
  assume {:verifier.code 0} true;
  $p211 := $bitcast.ref.ref($p197);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4570, 18} true;
  assume {:verifier.code 0} true;
  $i212 := $load.i8($M.0, $p211);
  call {:cexpr "__cil_tmp144"} boogie_si_record_i8($i212);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4571, 18} true;
  assume {:verifier.code 0} true;
  $i213 := $zext.i8.i32($i212);
  call {:cexpr "__cil_tmp145"} boogie_si_record_i32($i213);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4572, 20} true;
  assume {:verifier.code 0} true;
  $i214 := $ne.i32($i213, 3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4572, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i214} true;
  goto $bb69, $bb70;
$bb69:
  assume ($i214 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4573, 20} true;
  assume {:verifier.code 0} true;
  $i215 := $p2i.ref.i64($p197);
  call {:cexpr "__cil_tmp146"} boogie_si_record_i64($i215);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4574, 33} true;
  assume {:verifier.code 0} true;
  $i216 := $add.i64($i215, 8);
  call {:cexpr "__cil_tmp147"} boogie_si_record_i64($i216);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4575, 20} true;
  assume {:verifier.code 0} true;
  $i217 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp148"} boogie_si_record_i64($i217);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4576, 33} true;
  assume {:verifier.code 0} true;
  $i218 := $add.i64($i217, 256);
  call {:cexpr "__cil_tmp149"} boogie_si_record_i64($i218);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4577, 22} true;
  assume {:verifier.code 0} true;
  $p219 := $i2p.i64.ref($i218);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4577, 20} true;
  assume {:verifier.code 0} true;
  $i220 := $load.i64($M.0, $p219);
  call {:cexpr "__cil_tmp150"} boogie_si_record_i64($i220);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4578, 35} true;
  assume {:verifier.code 0} true;
  $i221 := $trunc.i64.i32($i220);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4578, 7} true;
  assume {:verifier.code 0} true;
  $p222 := $i2p.i64.ref($i216);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4578, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p222, $i221);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4580, 20} true;
  assume {:verifier.code 0} true;
  $i223 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp151"} boogie_si_record_i64($i223);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4581, 33} true;
  assume {:verifier.code 0} true;
  $i224 := $add.i64($i223, 44);
  call {:cexpr "__cil_tmp152"} boogie_si_record_i64($i224);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4582, 22} true;
  assume {:verifier.code 0} true;
  $p225 := $i2p.i64.ref($i224);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4582, 20} true;
  assume {:verifier.code 0} true;
  $i226 := $load.i32($M.0, $p225);
  call {:cexpr "__cil_tmp153"} boogie_si_record_i32($i226);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4583, 33} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i:4583:33: warning: over-approximating bitwise operation and;
  $i227 := $and.i32($i226, 2);
  call {:cexpr "__cil_tmp154"} boogie_si_record_i32($i227);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4584, 22} true;
  assume {:verifier.code 0} true;
  $i228 := $ne.i32($i227, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4584, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i228} true;
  goto $bb71, $bb72;
$bb70:
  assume !(($i214 == 1));
  assume {:verifier.code 0} true;
  goto $bb77;
$bb71:
  assume ($i228 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4586, 22} true;
  assume {:verifier.code 0} true;
  $i229 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp155"} boogie_si_record_i64($i229);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4587, 35} true;
  assume {:verifier.code 0} true;
  $i230 := $add.i64($i229, 248);
  call {:cexpr "__cil_tmp156"} boogie_si_record_i64($i230);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4588, 24} true;
  assume {:verifier.code 0} true;
  $p231 := $i2p.i64.ref($i230);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4588, 22} true;
  assume {:verifier.code 0} true;
  $p232 := $load.ref($M.0, $p231);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4589, 22} true;
  assume {:verifier.code 0} true;
  $p233 := $bitcast.ref.ref($p232);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4590, 22} true;
  assume {:verifier.code 0} true;
  $i234 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp159"} boogie_si_record_i64($i234);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4591, 35} true;
  assume {:verifier.code 0} true;
  $i235 := $add.i64($i234, 184);
  call {:cexpr "__cil_tmp160"} boogie_si_record_i64($i235);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4592, 24} true;
  assume {:verifier.code 0} true;
  $p236 := $i2p.i64.ref($i235);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4592, 22} true;
  assume {:verifier.code 0} true;
  $p237 := $load.ref($M.0, $p236);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4594, 22} true;
  assume {:verifier.code 0} true;
  $i238 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp163"} boogie_si_record_i64($i238);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4595, 35} true;
  assume {:verifier.code 0} true;
  $i239 := $add.i64($i238, 40);
  call {:cexpr "__cil_tmp164"} boogie_si_record_i64($i239);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4596, 24} true;
  assume {:verifier.code 0} true;
  $p240 := $i2p.i64.ref($i239);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4596, 22} true;
  assume {:verifier.code 0} true;
  $i241 := $load.i32($M.0, $p240);
  call {:cexpr "__cil_tmp165"} boogie_si_record_i32($i241);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4597, 22} true;
  assume {:verifier.code 0} true;
  $i242 := $zext.i32.i64($i241);
  call {:cexpr "__cil_tmp166"} boogie_si_record_i64($i242);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4598, 17} true;
  assume {:verifier.code 0} true;
  call $i243 := copy_from_user($p233, $p237, $i242);
  call {:cexpr "tmp___3"} boogie_si_record_i64($i243);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4600, 19} true;
  assume {:verifier.code 0} true;
  $i244 := $ne.i64($i243, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4600, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i244} true;
  goto $bb73, $bb74;
$bb72:
  assume !(($i228 == 1));
  assume {:verifier.code 0} true;
  goto $bb76;
$bb73:
  assume ($i244 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4601, 9} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 14);
  goto $bb3;
$bb74:
  assume !(($i244 == 1));
  assume {:verifier.code 0} true;
  goto $bb75;
$bb75:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4604, 5} true;
  assume {:verifier.code 0} true;
  goto $bb76;
$bb76:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4607, 5} true;
  assume {:verifier.code 0} true;
  $i8 := 0;
  goto $bb3;
$bb77:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4612, 18} true;
  assume {:verifier.code 0} true;
  $i245 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp167"} boogie_si_record_i64($i245);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4613, 31} true;
  assume {:verifier.code 0} true;
  $i246 := $add.i64($i245, 208);
  call {:cexpr "__cil_tmp168"} boogie_si_record_i64($i246);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4614, 15} true;
  assume {:verifier.code 0} true;
  $p247 := $i2p.i64.ref($i246);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4614, 13} true;
  assume {:verifier.code 0} true;
  $p248 := $load.ref($M.0, $p247);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4615, 18} true;
  assume {:verifier.code 0} true;
  $i249 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp169"} boogie_si_record_i64($i249);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4616, 31} true;
  assume {:verifier.code 0} true;
  $i250 := $add.i64($i249, 200);
  call {:cexpr "__cil_tmp170"} boogie_si_record_i64($i250);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4617, 18} true;
  assume {:verifier.code 0} true;
  $i251 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp171"} boogie_si_record_i64($i251);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4618, 31} true;
  assume {:verifier.code 0} true;
  $i252 := $add.i64($i251, 52);
  call {:cexpr "__cil_tmp172"} boogie_si_record_i64($i252);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4619, 42} true;
  assume {:verifier.code 0} true;
  $p253 := $i2p.i64.ref($i252);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4619, 5} true;
  assume {:verifier.code 0} true;
  $p254 := $i2p.i64.ref($i250);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4619, 40} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p254, $p253);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4620, 18} true;
  assume {:verifier.code 0} true;
  $i255 := $p2i.ref.i64($p197);
  call {:cexpr "__cil_tmp173"} boogie_si_record_i64($i255);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4621, 31} true;
  assume {:verifier.code 0} true;
  $i256 := $add.i64($i255, 8);
  call {:cexpr "__cil_tmp174"} boogie_si_record_i64($i256);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4622, 18} true;
  assume {:verifier.code 0} true;
  $i257 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp175"} boogie_si_record_i64($i257);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4623, 31} true;
  assume {:verifier.code 0} true;
  $i258 := $add.i64($i257, 216);
  call {:cexpr "__cil_tmp176"} boogie_si_record_i64($i258);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4624, 20} true;
  assume {:verifier.code 0} true;
  $p259 := $i2p.i64.ref($i258);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4624, 18} true;
  assume {:verifier.code 0} true;
  $i260 := $load.i64($M.0, $p259);
  call {:cexpr "__cil_tmp177"} boogie_si_record_i64($i260);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4625, 33} true;
  assume {:verifier.code 0} true;
  $i261 := $trunc.i64.i32($i260);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4625, 5} true;
  assume {:verifier.code 0} true;
  $p262 := $i2p.i64.ref($i256);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4625, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p262, $i261);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4626, 18} true;
  assume {:verifier.code 0} true;
  $p263 := $bitcast.ref.ref($p248);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4627, 18} true;
  assume {:verifier.code 0} true;
  $i264 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp179"} boogie_si_record_i64($i264);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4628, 31} true;
  assume {:verifier.code 0} true;
  $i265 := $add.i64($i264, 200);
  call {:cexpr "__cil_tmp180"} boogie_si_record_i64($i265);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4629, 20} true;
  assume {:verifier.code 0} true;
  $p266 := $i2p.i64.ref($i265);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4629, 18} true;
  assume {:verifier.code 0} true;
  $p267 := $load.ref($M.0, $p266);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4630, 18} true;
  assume {:verifier.code 0} true;
  $p268 := $bitcast.ref.ref($p267);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4631, 13} true;
  assume {:verifier.code 0} true;
  call $i269 := copy_from_user($p263, $p268, 60);
  call {:cexpr "tmp___4"} boogie_si_record_i64($i269);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4633, 15} true;
  assume {:verifier.code 0} true;
  $i270 := $ne.i64($i269, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4633, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i270} true;
  goto $bb78, $bb79;
$bb78:
  assume ($i270 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4634, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 14);
  goto $bb3;
$bb79:
  assume !(($i270 == 1));
  assume {:verifier.code 0} true;
  goto $bb80;
$bb80:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4637, 18} true;
  assume {:verifier.code 0} true;
  $i271 := $p2i.ref.i64($p248);
  call {:cexpr "__cil_tmp183"} boogie_si_record_i64($i271);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4638, 31} true;
  assume {:verifier.code 0} true;
  $i272 := $add.i64($i271, 52);
  call {:cexpr "__cil_tmp184"} boogie_si_record_i64($i272);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4639, 18} true;
  assume {:verifier.code 0} true;
  $i273 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp185"} boogie_si_record_i64($i273);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4640, 31} true;
  assume {:verifier.code 0} true;
  $i274 := $add.i64($i273, 256);
  call {:cexpr "__cil_tmp186"} boogie_si_record_i64($i274);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4641, 20} true;
  assume {:verifier.code 0} true;
  $p275 := $i2p.i64.ref($i274);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4641, 18} true;
  assume {:verifier.code 0} true;
  $i276 := $load.i64($M.0, $p275);
  call {:cexpr "__cil_tmp187"} boogie_si_record_i64($i276);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4642, 33} true;
  assume {:verifier.code 0} true;
  $i277 := $trunc.i64.i32($i276);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4642, 5} true;
  assume {:verifier.code 0} true;
  $p278 := $i2p.i64.ref($i272);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4642, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p278, $i277);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4644, 18} true;
  assume {:verifier.code 0} true;
  $i279 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp188"} boogie_si_record_i64($i279);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4645, 31} true;
  assume {:verifier.code 0} true;
  $i280 := $add.i64($i279, 44);
  call {:cexpr "__cil_tmp189"} boogie_si_record_i64($i280);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4646, 20} true;
  assume {:verifier.code 0} true;
  $p281 := $i2p.i64.ref($i280);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4646, 18} true;
  assume {:verifier.code 0} true;
  $i282 := $load.i32($M.0, $p281);
  call {:cexpr "__cil_tmp190"} boogie_si_record_i32($i282);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4647, 31} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i:4647:31: warning: over-approximating bitwise operation and;
  $i283 := $and.i32($i282, 2);
  call {:cexpr "__cil_tmp191"} boogie_si_record_i32($i283);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4648, 20} true;
  assume {:verifier.code 0} true;
  $i284 := $ne.i32($i283, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4648, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i284} true;
  goto $bb81, $bb82;
$bb81:
  assume ($i284 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4650, 20} true;
  assume {:verifier.code 0} true;
  $i285 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp192"} boogie_si_record_i64($i285);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4651, 33} true;
  assume {:verifier.code 0} true;
  $i286 := $add.i64($i285, 248);
  call {:cexpr "__cil_tmp193"} boogie_si_record_i64($i286);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4652, 22} true;
  assume {:verifier.code 0} true;
  $p287 := $i2p.i64.ref($i286);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4652, 20} true;
  assume {:verifier.code 0} true;
  $p288 := $load.ref($M.0, $p287);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4653, 20} true;
  assume {:verifier.code 0} true;
  $p289 := $bitcast.ref.ref($p288);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4654, 20} true;
  assume {:verifier.code 0} true;
  $i290 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp196"} boogie_si_record_i64($i290);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4655, 33} true;
  assume {:verifier.code 0} true;
  $i291 := $add.i64($i290, 184);
  call {:cexpr "__cil_tmp197"} boogie_si_record_i64($i291);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4656, 22} true;
  assume {:verifier.code 0} true;
  $p292 := $i2p.i64.ref($i291);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4656, 20} true;
  assume {:verifier.code 0} true;
  $p293 := $load.ref($M.0, $p292);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4658, 20} true;
  assume {:verifier.code 0} true;
  $i294 := $p2i.ref.i64($p248);
  call {:cexpr "__cil_tmp200"} boogie_si_record_i64($i294);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4659, 33} true;
  assume {:verifier.code 0} true;
  $i295 := $add.i64($i294, 56);
  call {:cexpr "__cil_tmp201"} boogie_si_record_i64($i295);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4660, 22} true;
  assume {:verifier.code 0} true;
  $p296 := $i2p.i64.ref($i295);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4660, 20} true;
  assume {:verifier.code 0} true;
  $i297 := $load.i32($M.0, $p296);
  call {:cexpr "__cil_tmp202"} boogie_si_record_i32($i297);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4661, 20} true;
  assume {:verifier.code 0} true;
  $i298 := $zext.i32.i64($i297);
  call {:cexpr "__cil_tmp203"} boogie_si_record_i64($i298);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4662, 15} true;
  assume {:verifier.code 0} true;
  call $i299 := copy_from_user($p289, $p293, $i298);
  call {:cexpr "tmp___5"} boogie_si_record_i64($i299);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4664, 17} true;
  assume {:verifier.code 0} true;
  $i300 := $ne.i64($i299, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4664, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i300} true;
  goto $bb83, $bb84;
$bb82:
  assume !(($i284 == 1));
  assume {:verifier.code 0} true;
  goto $bb86;
$bb83:
  assume ($i300 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4665, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 14);
  goto $bb3;
$bb84:
  assume !(($i300 == 1));
  assume {:verifier.code 0} true;
  goto $bb85;
$bb85:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4668, 3} true;
  assume {:verifier.code 0} true;
  goto $bb86;
$bb86:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4671, 3} true;
  assume {:verifier.code 0} true;
  $i8 := 0;
  goto $bb3;
}
const mraid_mm_dealloc_kioc: ref;
axiom (mraid_mm_dealloc_kioc == $sub.ref(0, 78548));
procedure  mraid_mm_dealloc_kioc($p0: ref, $p1: ref)
{
  var $i2: i64;
  var $i3: i64;
  var $p4: ref;
  var $i5: i8;
  var $i6: i32;
  var $i7: i1;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $i11: i8;
  var $i12: i64;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i64;
  var $i19: i64;
  var $p20: ref;
  var $i21: i8;
  var $i22: i32;
  var $i23: i1;
  var $i24: i64;
  var $i25: i64;
  var $p26: ref;
  var $p27: ref;
  var $i28: i64;
  var $i29: i64;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $i33: i64;
  var $i34: i64;
  var $p35: ref;
  var $i36: i64;
  var $i37: i64;
  var $i38: i64;
  var $p39: ref;
  var $i40: i64;
  var $i41: i64;
  var $p42: ref;
  var $i43: i64;
  var $i44: i64;
  var $p45: ref;
  var $i46: i64;
  var $i47: i64;
  var $p48: ref;
  var $i49: i64;
  var $i50: i64;
  var $p51: ref;
  var $i52: i64;
  var $i53: i64;
  var $p54: ref;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5065, 16} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5065, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp5"} boogie_si_record_i64($i2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5066, 27} true;
  assume {:verifier.code 0} true;
  $i3 := $add.i64($i2, 264);
  call {:cexpr "__cil_tmp6"} boogie_si_record_i64($i3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5067, 18} true;
  assume {:verifier.code 0} true;
  $p4 := $i2p.i64.ref($i3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5067, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i8($M.0, $p4);
  call {:cexpr "__cil_tmp7"} boogie_si_record_i8($i5);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5068, 16} true;
  assume {:verifier.code 0} true;
  $i6 := $sext.i8.i32($i5);
  call {:cexpr "__cil_tmp8"} boogie_si_record_i32($i6);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5069, 18} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, $sub.i32(0, 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5069, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5071, 18} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i8);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5072, 30} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i64($i8, 264);
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i9);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5073, 21} true;
  assume {:verifier.code 0} true;
  $p10 := $i2p.i64.ref($i9);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5073, 19} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i8($M.0, $p10);
  call {:cexpr "__cil_tmp11"} boogie_si_record_i8($i11);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5074, 19} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i8.i64($i11);
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i12);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5075, 19} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i13);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5076, 31} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i64($i13, 272);
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i14);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5077, 19} true;
  assume {:verifier.code 0} true;
  $p15 := $i2p.i64.ref($i14);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5078, 19} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p15);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5079, 24} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p16, $mul.ref($i12, 112));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5080, 5} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock();
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5083, 19} true;
  assume {:verifier.code 0} true;
  $i18 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i18);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5084, 31} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i64($i18, 265);
  call {:cexpr "__cil_tmp18"} boogie_si_record_i64($i19);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5085, 21} true;
  assume {:verifier.code 0} true;
  $p20 := $i2p.i64.ref($i19);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5085, 19} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i8($M.0, $p20);
  call {:cexpr "__cil_tmp19"} boogie_si_record_i8($i21);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5086, 19} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i8.i32($i21);
  call {:cexpr "__cil_tmp20"} boogie_si_record_i32($i22);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5087, 21} true;
  assume {:verifier.code 0} true;
  $i23 := $eq.i32($i22, 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5087, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb3:
  assume ($i23 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5089, 21} true;
  assume {:verifier.code 0} true;
  $i24 := $p2i.ref.i64($p17);
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i24);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5090, 33} true;
  assume {:verifier.code 0} true;
  $i25 := $add.i64($i24, 24);
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i25);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5091, 23} true;
  assume {:verifier.code 0} true;
  $p26 := $i2p.i64.ref($i25);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5091, 21} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.0, $p26);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5092, 21} true;
  assume {:verifier.code 0} true;
  $i28 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i28);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5093, 33} true;
  assume {:verifier.code 0} true;
  $i29 := $add.i64($i28, 248);
  call {:cexpr "__cil_tmp25"} boogie_si_record_i64($i29);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5094, 23} true;
  assume {:verifier.code 0} true;
  $p30 := $i2p.i64.ref($i29);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5094, 21} true;
  assume {:verifier.code 0} true;
  $p31 := $load.ref($M.0, $p30);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5095, 21} true;
  assume {:verifier.code 0} true;
  $p32 := $bitcast.ref.ref($p31);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5096, 21} true;
  assume {:verifier.code 0} true;
  $i33 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp28"} boogie_si_record_i64($i33);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5097, 33} true;
  assume {:verifier.code 0} true;
  $i34 := $add.i64($i33, 256);
  call {:cexpr "__cil_tmp29"} boogie_si_record_i64($i34);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5098, 23} true;
  assume {:verifier.code 0} true;
  $p35 := $i2p.i64.ref($i34);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5098, 21} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i64($M.0, $p35);
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i36);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5099, 7} true;
  assume {:verifier.code 0} true;
  call dma_pool_free($p27, $p32, $i36);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5101, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i23 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5102, 21} true;
  assume {:verifier.code 0} true;
  $i37 := $p2i.ref.i64($p17);
  call {:cexpr "__cil_tmp31"} boogie_si_record_i64($i37);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5103, 33} true;
  assume {:verifier.code 0} true;
  $i38 := $add.i64($i37, 104);
  call {:cexpr "__cil_tmp32"} boogie_si_record_i64($i38);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5104, 9} true;
  assume {:verifier.code 0} true;
  $p39 := $i2p.i64.ref($i38);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5104, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p39, 0);
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5108, 19} true;
  assume {:verifier.code 0} true;
  $i40 := $p2i.ref.i64($p17);
  call {:cexpr "__cil_tmp33"} boogie_si_record_i64($i40);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5109, 31} true;
  assume {:verifier.code 0} true;
  $i41 := $add.i64($i40, 32);
  call {:cexpr "__cil_tmp34"} boogie_si_record_i64($i41);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5110, 19} true;
  assume {:verifier.code 0} true;
  $p42 := $i2p.i64.ref($i41);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5111, 5} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p42, $u3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5113, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5117, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock();
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5118, 17} true;
  assume {:verifier.code 0} true;
  $i43 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp36"} boogie_si_record_i64($i43);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5119, 29} true;
  assume {:verifier.code 0} true;
  $i44 := $add.i64($i43, 224);
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i44);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5120, 17} true;
  assume {:verifier.code 0} true;
  $p45 := $i2p.i64.ref($i44);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5121, 17} true;
  assume {:verifier.code 0} true;
  $i46 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp39"} boogie_si_record_i64($i46);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5122, 29} true;
  assume {:verifier.code 0} true;
  $i47 := $add.i64($i46, 72);
  call {:cexpr "__cil_tmp40"} boogie_si_record_i64($i47);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5123, 17} true;
  assume {:verifier.code 0} true;
  $p48 := $i2p.i64.ref($i47);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5124, 3} true;
  assume {:verifier.code 0} true;
  call list_add($p45, $p48);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5125, 17} true;
  assume {:verifier.code 0} true;
  $i49 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp42"} boogie_si_record_i64($i49);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5126, 29} true;
  assume {:verifier.code 0} true;
  $i50 := $add.i64($i49, 88);
  call {:cexpr "__cil_tmp43"} boogie_si_record_i64($i50);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5127, 17} true;
  assume {:verifier.code 0} true;
  $p51 := $i2p.i64.ref($i50);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5128, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p51, $u3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5129, 17} true;
  assume {:verifier.code 0} true;
  $i52 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp45"} boogie_si_record_i64($i52);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5130, 29} true;
  assume {:verifier.code 0} true;
  $i53 := $add.i64($i52, 160);
  call {:cexpr "__cil_tmp46"} boogie_si_record_i64($i53);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5131, 17} true;
  assume {:verifier.code 0} true;
  $p54 := $i2p.i64.ref($i53);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5132, 3} true;
  assume {:verifier.code 0} true;
  call up($p54);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5134, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ioctl_done: ref;
axiom (ioctl_done == $sub.ref(0, 79580));
procedure  ioctl_done($p0: ref)
{
  var $i1: i64;
  var $i2: i64;
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
  var $i9: i64;
  var $i10: i64;
  var $p11: ref;
  var $i12: i64;
  var $i13: i64;
  var $p14: ref;
  var $i15: i8;
  var $i16: i32;
  var $i17: i1;
  var $i18: i64;
  var $i19: i64;
  var $p20: ref;
  var $i21: i32;
  var $i22: i32;
  var $i23: i1;
  var $i24: i32;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $i29: i64;
  var $i30: i64;
  var $i31: i1;
  var $i35: i32;
  var $i36: i1;
  var $p37: ref;
  var $i39: i64;
  var $i40: i64;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $i45: i64;
  var $i46: i64;
  var $p47: ref;
  var $i48: i64;
  var $i49: i1;
  var $p33: ref;
  var $i34: i32;
  var $p50: ref;
  var $p32: ref;
  var $p38: ref;
  var $i51: i64;
  var $i52: i64;
  var $p53: ref;
  var $i54: i64;
  var $i55: i64;
  var $i56: i1;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5362, 16} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5362, 16} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp8"} boogie_si_record_i64($i1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5363, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i64($i1, 48);
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5364, 19} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.i64.ref($i2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5364, 17} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  call {:cexpr "__cil_tmp10"} boogie_si_record_i32($i4);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5365, 19} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i4, $sub.i32(0, 61));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5365, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5368, 19} true;
  assume {:verifier.code 0} true;
  $i6 := $M.3;
  call {:cexpr "__cil_tmp12"} boogie_si_record_i32($i6);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5369, 21} true;
  assume {:verifier.code 0} true;
  $i7 := $sge.i32($i6, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5369, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb3:
  assume ($i7 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5371, 7} true;
  assume {:verifier.code 0} true;
  call $i8 := printk.ref(.str.25);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5373, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5376, 19} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i9);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5377, 31} true;
  assume {:verifier.code 0} true;
  $i10 := $add.i64($i9, 48);
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i10);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5378, 7} true;
  assume {:verifier.code 0} true;
  $p11 := $i2p.i64.ref($i10);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5378, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p11, $sub.i32(0, 22));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5379, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5383, 17} true;
  assume {:verifier.code 0} true;
  $i12 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i12);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5384, 29} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i64($i12, 266);
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i13);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5385, 19} true;
  assume {:verifier.code 0} true;
  $p14 := $i2p.i64.ref($i13);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5385, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i8($M.0, $p14);
  call {:cexpr "__cil_tmp17"} boogie_si_record_i8($i15);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5386, 17} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i8.i32($i15);
  call {:cexpr "__cil_tmp18"} boogie_si_record_i32($i16);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5387, 19} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.i32($i16, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5387, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i17 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5390, 19} true;
  assume {:verifier.code 0} true;
  $i18 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp19"} boogie_si_record_i64($i18);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5391, 31} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i64($i18, 24);
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i19);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5392, 16} true;
  assume {:verifier.code 0} true;
  $p20 := $i2p.i64.ref($i19);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5392, 14} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i32($M.0, $p20);
  call {:cexpr "adapno"} boogie_si_record_i32($i21);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5395, 19} true;
  assume {:verifier.code 0} true;
  $i22 := $M.3;
  call {:cexpr "__cil_tmp22"} boogie_si_record_i32($i22);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5396, 21} true;
  assume {:verifier.code 0} true;
  $i23 := $sge.i32($i22, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5396, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb9, $bb10;
$bb8:
  assume !(($i17 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5456, 5} true;
  assume {:verifier.code 0} true;
  call __wake_up(wait_q, 3, 1, $0.ref);
  assume {:verifier.code 0} true;
  goto $bb26;
$bb9:
  assume ($i23 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5398, 7} true;
  assume {:verifier.code 0} true;
  call $i24 := printk.ref(.str.26);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5400, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5404, 19} true;
  assume {:verifier.code 0} true;
  $p25 := $bitcast.ref.ref(adapters_list_g);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5404, 19} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5406, 19} true;
  assume {:verifier.code 0} true;
  $p27 := $bitcast.ref.ref($p26);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5407, 27} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p27, $mul.ref($sub.ref(0, 48), 832));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5428, 19} true;
  assume {:verifier.code 0} true;
  $i29 := $p2i.ref.i64($p28);
  call {:cexpr "__cil_tmp32"} boogie_si_record_i64($i29);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5429, 31} true;
  assume {:verifier.code 0} true;
  $i30 := $add.i64($i29, 48);
  call {:cexpr "__cil_tmp33"} boogie_si_record_i64($i30);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5432, 21} true;
  assume {:verifier.code 0} true;
  $i31 := $ne.i64($i30, $p2i.ref.i64(adapters_list_g));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5432, 9} true;
  assume {:verifier.code 0} true;
  $p32 := $p28;
  assume {:branchcond $i31} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i31 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5432, 9} true;
  assume {:verifier.code 0} true;
  $p33, $i34 := $p28, 0;
  goto $bb15;
$bb13:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5432, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i31 == 1));
  goto $bb14;
$bb14:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5435, 7} true;
  assume {:verifier.code 0} true;
  $p38 := $p32;
  goto $bb19;
$bb15:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5433, 7} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5411, 25} true;
  assume {:verifier.code 0} true;
  $i35 := $add.i32($i34, 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5414, 21} true;
  assume {:verifier.code 0} true;
  $i36 := $eq.i32($i34, $i21);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5414, 9} true;
  assume {:verifier.code 0} true;
  $p37 := $p33;
  assume {:branchcond $i36} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i36 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5415, 7} true;
  assume {:verifier.code 0} true;
  $p38 := $p37;
  goto $bb19;
$bb18:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5439, 19} true;
  assume {:verifier.code 0} true;
  $i51 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp36"} boogie_si_record_i64($i51);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5440, 31} true;
  assume {:verifier.code 0} true;
  $i52 := $add.i64($i51, 266);
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i52);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5441, 7} true;
  assume {:verifier.code 0} true;
  $p53 := $i2p.i64.ref($i52);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5441, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p53, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5444, 19} true;
  assume {:verifier.code 0} true;
  $i54 := $p2i.ref.i64($0.ref);
  call {:cexpr "__cil_tmp39"} boogie_si_record_i64($i54);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5445, 19} true;
  assume {:verifier.code 0} true;
  $i55 := $p2i.ref.i64($p38);
  call {:cexpr "__cil_tmp40"} boogie_si_record_i64($i55);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5446, 21} true;
  assume {:verifier.code 0} true;
  $i56 := $ne.i64($i55, $i54);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5446, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i56} true;
  goto $bb23, $bb24;
$bb20:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5419, 19} true;
  assume {:verifier.code 0} true;
  $i39 := $p2i.ref.i64($p33);
  call {:cexpr "__cil_tmp27"} boogie_si_record_i64($i39);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5420, 31} true;
  assume {:verifier.code 0} true;
  $i40 := $add.i64($i39, 48);
  call {:cexpr "__cil_tmp28"} boogie_si_record_i64($i40);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5421, 21} true;
  assume {:verifier.code 0} true;
  $p41 := $i2p.i64.ref($i40);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5421, 19} true;
  assume {:verifier.code 0} true;
  $p42 := $load.ref($M.0, $p41);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5423, 19} true;
  assume {:verifier.code 0} true;
  $p43 := $bitcast.ref.ref($p42);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5424, 27} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p43, $mul.ref($sub.ref(0, 48), 832));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5428, 19} true;
  assume {:verifier.code 0} true;
  $i45 := $p2i.ref.i64($p44);
  call {:cexpr "__cil_tmp32"} boogie_si_record_i64($i45);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5429, 31} true;
  assume {:verifier.code 0} true;
  $i46 := $add.i64($i45, 48);
  call {:cexpr "__cil_tmp33"} boogie_si_record_i64($i46);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5430, 19} true;
  assume {:verifier.code 0} true;
  $p47 := $i2p.i64.ref($i46);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5431, 19} true;
  assume {:verifier.code 0} true;
  $i48 := $p2i.ref.i64($p47);
  call {:cexpr "__cil_tmp35"} boogie_si_record_i64($i48);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5432, 21} true;
  assume {:verifier.code 0} true;
  $i49 := $ne.i64($i48, $p2i.ref.i64(adapters_list_g));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5432, 9} true;
  assume {:verifier.code 0} true;
  $p50 := $p44;
  assume {:branchcond $i49} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i49 == 1);
  assume {:verifier.code 0} true;
  $p33, $i34 := $p44, $i35;
  goto $bb15;
$bb22:
  assume !(($i49 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5432, 9} true;
  assume {:verifier.code 0} true;
  $p32 := $p50;
  goto $bb14;
$bb23:
  assume ($i56 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5448, 7} true;
  assume {:verifier.code 0} true;
  call mraid_mm_dealloc_kioc($p38, $p0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5450, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i56 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5453, 3} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5460, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const lld_ioctl: ref;
axiom (lld_ioctl == $sub.ref(0, 80612));
procedure  lld_ioctl($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $p11: ref;
  var $i12: i64;
  var $i13: i64;
  var $p14: ref;
  var $i15: i64;
  var $i16: i32;
  var $i17: i1;
  var $i19: i64;
  var $i20: i64;
  var $p21: ref;
  var $i22: i16;
  var $i23: i32;
  var $i24: i1;
  var $i25: i64;
  var $i26: i64;
  var $p27: ref;
  var $i28: i64;
  var $i29: i64;
  var $i30: i64;
  var $p31: ref;
  var $i32: i64;
  var $i33: i64;
  var $i34: i64;
  var $i35: i64;
  var $i36: i64;
  var $p37: ref;
  var $i38: i16;
  var $i39: i32;
  var $i40: i32;
  var $i41: i64;
  var $i42: i64;
  var $p43: ref;
  var $p44: ref;
  var $i45: i64;
  var $i46: i64;
  var $p47: ref;
  var $i48: i32;
  var $i49: i1;
  var $p50: ref;
  var $p51: ref;
  var $i52: i64;
  var $i53: i64;
  var $p54: ref;
  var $p55: ref;
  var $i56: i64;
  var $i57: i64;
  var $p58: ref;
  var $i59: i64;
  var $i60: i64;
  var $i61: i64;
  var $i62: i64;
  var $p63: ref;
  var $p64: ref;
  var $i65: i64;
  var $i66: i64;
  var $i67: i64;
  var $i68: i64;
  var $p69: ref;
  var $p70: ref;
  var $i71: i64;
  var $i72: i64;
  var $p73: ref;
  var $i74: i32;
  var $i75: i1;
  var $i76: i32;
  var $i77: i1;
  var $i78: i64;
  var $i79: i64;
  var $i80: i1;
  var $i81: i32;
  var $i82: i64;
  var $i83: i64;
  var $p84: ref;
  var $i85: i8;
  var $i86: i32;
  var $i87: i1;
  var $i88: i64;
  var $i89: i64;
  var $p90: ref;
  var $i91: i64;
  var $i92: i64;
  var $p93: ref;
  var $i94: i32;
  var $i18: i32;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5197, 16} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(128, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume true;
  assume true;
  assume true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5197, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i5);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5198, 28} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i64($i5, 48);
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i6);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5199, 5} true;
  assume {:verifier.code 0} true;
  $p7 := $i2p.i64.ref($i6);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5199, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p7, $sub.i32(0, 61));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5200, 17} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i8);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5201, 29} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i64($i8, 32);
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i9);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5202, 19} true;
  assume {:verifier.code 0} true;
  $p10 := $i2p.i64.ref($i9);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5202, 17} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5203, 17} true;
  assume {:verifier.code 0} true;
  $i12 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i12);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5204, 29} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i64($i12, 8);
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i13);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5205, 19} true;
  assume {:verifier.code 0} true;
  $p14 := $i2p.i64.ref($i13);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5205, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i64($M.0, $p14);
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i15);
  call $i16 := devirtbounce($p11, $i15, $p1, 1);
  call {:cexpr "rval"} boogie_si_record_i32($i16);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5208, 12} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.i32($i16, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5208, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i17 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5209, 5} true;
  assume {:verifier.code 0} true;
  $i18 := $i16;
  goto $bb3;
$bb2:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5318, 1} true;
  assume {:verifier.code 0} true;
  $r := $i18;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5213, 17} true;
  assume {:verifier.code 0} true;
  $i19 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i19);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5214, 29} true;
  assume {:verifier.code 0} true;
  $i20 := $add.i64($i19, 16);
  call {:cexpr "__cil_tmp18"} boogie_si_record_i64($i20);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5215, 19} true;
  assume {:verifier.code 0} true;
  $p21 := $i2p.i64.ref($i20);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5215, 17} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i16($M.0, $p21);
  call {:cexpr "__cil_tmp19"} boogie_si_record_i16($i22);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5216, 17} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i16.i32($i22);
  call {:cexpr "__cil_tmp20"} boogie_si_record_i32($i23);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5217, 19} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i32($i23, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5217, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i24 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5220, 5} true;
  assume {:verifier.code 0} true;
  call init_timer_key($p2, .str.27, $p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5221, 19} true;
  assume {:verifier.code 0} true;
  $i25 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i25);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5222, 31} true;
  assume {:verifier.code 0} true;
  $i26 := $add.i64($i25, 32);
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i26);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5223, 7} true;
  assume {:verifier.code 0} true;
  $p27 := $i2p.i64.ref($i26);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5223, 47} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p27, lld_timedout);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5224, 19} true;
  assume {:verifier.code 0} true;
  $i28 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp23"} boogie_si_record_i64($i28);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5225, 31} true;
  assume {:verifier.code 0} true;
  $i29 := $add.i64($i28, 40);
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i29);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5226, 39} true;
  assume {:verifier.code 0} true;
  $i30 := $p2i.ref.i64($p1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5226, 7} true;
  assume {:verifier.code 0} true;
  $p31 := $i2p.i64.ref($i29);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5226, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p31, $i30);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5227, 19} true;
  assume {:verifier.code 0} true;
  $i32 := $p2i.ref.i64($p2);
  call {:cexpr "__cil_tmp25"} boogie_si_record_i64($i32);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5228, 31} true;
  assume {:verifier.code 0} true;
  $i33 := $add.i64($i32, 16);
  call {:cexpr "__cil_tmp26"} boogie_si_record_i64($i33);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5229, 35} true;
  assume {:verifier.code 0} true;
  $i34 := $M.6;
  call {:cexpr "__cil_tmp27"} boogie_si_record_i64($i34);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5230, 19} true;
  assume {:verifier.code 0} true;
  $i35 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp28"} boogie_si_record_i64($i35);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5231, 31} true;
  assume {:verifier.code 0} true;
  $i36 := $add.i64($i35, 16);
  call {:cexpr "__cil_tmp29"} boogie_si_record_i64($i36);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5232, 21} true;
  assume {:verifier.code 0} true;
  $p37 := $i2p.i64.ref($i36);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5232, 19} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i16($M.0, $p37);
  call {:cexpr "__cil_tmp30"} boogie_si_record_i16($i38);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5233, 19} true;
  assume {:verifier.code 0} true;
  $i39 := $zext.i16.i32($i38);
  call {:cexpr "__cil_tmp31"} boogie_si_record_i32($i39);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5234, 31} true;
  assume {:verifier.code 0} true;
  $i40 := $mul.i32($i39, 250);
  call {:cexpr "__cil_tmp32"} boogie_si_record_i32($i40);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5235, 19} true;
  assume {:verifier.code 0} true;
  $i41 := $sext.i32.i64($i40);
  call {:cexpr "__cil_tmp33"} boogie_si_record_i64($i41);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5236, 51} true;
  assume {:verifier.code 0} true;
  $i42 := $add.i64($i41, $i34);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5236, 7} true;
  assume {:verifier.code 0} true;
  $p43 := $i2p.i64.ref($i33);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5236, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p43, $i42);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5237, 5} true;
  assume {:verifier.code 0} true;
  call add_timer($p2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5239, 3} true;
  assume {:verifier.code 0} true;
  $p44 := $p2;
  goto $bb7;
$bb6:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  $p44 := $0.ref;
  goto $bb7;
$bb7:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5243, 17} true;
  assume {:verifier.code 0} true;
  $i45 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp34"} boogie_si_record_i64($i45);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5244, 29} true;
  assume {:verifier.code 0} true;
  $i46 := $add.i64($i45, 48);
  call {:cexpr "__cil_tmp35"} boogie_si_record_i64($i46);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5245, 19} true;
  assume {:verifier.code 0} true;
  $p47 := $i2p.i64.ref($i46);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5245, 17} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i32($M.0, $p47);
  call {:cexpr "__cil_tmp36"} boogie_si_record_i32($i48);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5246, 19} true;
  assume {:verifier.code 0} true;
  $i49 := $ne.i32($i48, $sub.i32(0, 61));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5246, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i49} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i49 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5247, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i49 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5291, 17} true;
  assume {:verifier.code 0} true;
  $i78 := $p2i.ref.i64($0.ref);
  call {:cexpr "__cil_tmp49"} boogie_si_record_i64($i78);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5292, 17} true;
  assume {:verifier.code 0} true;
  $i79 := $p2i.ref.i64($p44);
  call {:cexpr "__cil_tmp50"} boogie_si_record_i64($i79);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5293, 19} true;
  assume {:verifier.code 0} true;
  $i80 := $ne.i64($i79, $i78);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5293, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i80} true;
  goto $bb20, $bb21;
$bb11:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5252, 9} true;
  assume {:verifier.code 0} true;
  call $p50 := get_current();
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5254, 3} true;
  assume {:verifier.code 0} true;
  $p51 := $bitcast.ref.ref($p4);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5254, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p51, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5255, 17} true;
  assume {:verifier.code 0} true;
  $i52 := $p2i.ref.i64($p4);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5255, 44} true;
  assume {:verifier.code 0} true;
  $i53 := $add.i64($i52, 8);
  call {:cexpr "__cil_tmp38"} boogie_si_record_i64($i53);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5256, 29} true;
  assume {:verifier.code 0} true;
  $p54 := $bitcast.ref.ref($p50);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5256, 5} true;
  assume {:verifier.code 0} true;
  $p55 := $i2p.i64.ref($i53);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5256, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p55, $p50);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5257, 17} true;
  assume {:verifier.code 0} true;
  $i56 := $p2i.ref.i64($p4);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5257, 44} true;
  assume {:verifier.code 0} true;
  $i57 := $add.i64($i56, 16);
  call {:cexpr "__cil_tmp39"} boogie_si_record_i64($i57);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5258, 5} true;
  assume {:verifier.code 0} true;
  $p58 := $i2p.i64.ref($i57);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5258, 75} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p58, autoremove_wake_function);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5259, 17} true;
  assume {:verifier.code 0} true;
  $i59 := $p2i.ref.i64($p4);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5259, 44} true;
  assume {:verifier.code 0} true;
  $i60 := $add.i64($i59, 24);
  call {:cexpr "__cil_tmp40"} boogie_si_record_i64($i60);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5260, 17} true;
  assume {:verifier.code 0} true;
  $i61 := $p2i.ref.i64($p4);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5260, 44} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i64($i61, 24);
  call {:cexpr "__cil_tmp41"} boogie_si_record_i64($i62);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5261, 41} true;
  assume {:verifier.code 0} true;
  $p63 := $i2p.i64.ref($i62);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5261, 5} true;
  assume {:verifier.code 0} true;
  $p64 := $i2p.i64.ref($i60);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5261, 39} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p64, $p63);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5263, 17} true;
  assume {:verifier.code 0} true;
  $i65 := $p2i.ref.i64($p4);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5263, 44} true;
  assume {:verifier.code 0} true;
  $i66 := $add.i64($i65, 32);
  call {:cexpr "__cil_tmp43"} boogie_si_record_i64($i66);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5264, 17} true;
  assume {:verifier.code 0} true;
  $i67 := $p2i.ref.i64($p4);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5264, 44} true;
  assume {:verifier.code 0} true;
  $i68 := $add.i64($i67, 24);
  call {:cexpr "__cil_tmp44"} boogie_si_record_i64($i68);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5265, 41} true;
  assume {:verifier.code 0} true;
  $p69 := $i2p.i64.ref($i68);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5265, 5} true;
  assume {:verifier.code 0} true;
  $p70 := $i2p.i64.ref($i66);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5265, 39} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p70, $p69);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5269, 3} true;
  assume {:verifier.code 0} true;
  call prepare_to_wait(wait_q, $p4, 2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5272, 17} true;
  assume {:verifier.code 0} true;
  $i71 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp45"} boogie_si_record_i64($i71);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5273, 29} true;
  assume {:verifier.code 0} true;
  $i72 := $add.i64($i71, 48);
  call {:cexpr "__cil_tmp46"} boogie_si_record_i64($i72);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5274, 19} true;
  assume {:verifier.code 0} true;
  $p73 := $i2p.i64.ref($i72);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5274, 17} true;
  assume {:verifier.code 0} true;
  $i74 := $load.i32($M.0, $p73);
  call {:cexpr "__cil_tmp47"} boogie_si_record_i32($i74);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5275, 19} true;
  assume {:verifier.code 0} true;
  $i75 := $ne.i32($i74, $sub.i32(0, 61));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5275, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i75} true;
  goto $bb12, $bb14;
$bb12:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5275, 7} true;
  assume {:verifier.code 0} true;
  assume ($i75 == 1);
  goto $bb13;
$bb13:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5276, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb14:
  assume !(($i75 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5275, 7} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  goto $bb18;
$bb16:
  assume ($i77 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5275, 7} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb17:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5286, 3} true;
  assume {:verifier.code 0} true;
  call finish_wait(wait_q, $p4);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5287, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb18:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5281, 3} true;
  assume {:verifier.code 0} true;
  call schedule();
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5269, 3} true;
  assume {:verifier.code 0} true;
  call prepare_to_wait(wait_q, $p4, 2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5274, 17} true;
  assume {:verifier.code 0} true;
  $i76 := $load.i32($M.0, $p73);
  call {:cexpr "__cil_tmp47"} boogie_si_record_i32($i76);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5275, 19} true;
  assume {:verifier.code 0} true;
  $i77 := $ne.i32($i76, $sub.i32(0, 61));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5275, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i77} true;
  goto $bb16, $bb19;
$bb19:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5275, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i77 == 1));
  goto $bb15;
$bb20:
  assume ($i80 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5295, 5} true;
  assume {:verifier.code 0} true;
  call $i81 := del_timer_sync($p44);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5297, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i80 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5301, 17} true;
  assume {:verifier.code 0} true;
  $i82 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp51"} boogie_si_record_i64($i82);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5302, 29} true;
  assume {:verifier.code 0} true;
  $i83 := $add.i64($i82, 266);
  call {:cexpr "__cil_tmp52"} boogie_si_record_i64($i83);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5303, 19} true;
  assume {:verifier.code 0} true;
  $p84 := $i2p.i64.ref($i83);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5303, 17} true;
  assume {:verifier.code 0} true;
  $i85 := $load.i8($M.0, $p84);
  call {:cexpr "__cil_tmp53"} boogie_si_record_i8($i85);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5304, 17} true;
  assume {:verifier.code 0} true;
  $i86 := $zext.i8.i32($i85);
  call {:cexpr "__cil_tmp54"} boogie_si_record_i32($i86);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5305, 19} true;
  assume {:verifier.code 0} true;
  $i87 := $ne.i32($i86, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5305, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i87} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i87 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5306, 19} true;
  assume {:verifier.code 0} true;
  $i88 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp55"} boogie_si_record_i64($i88);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5307, 31} true;
  assume {:verifier.code 0} true;
  $i89 := $add.i64($i88, 40);
  call {:cexpr "__cil_tmp56"} boogie_si_record_i64($i89);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5308, 7} true;
  assume {:verifier.code 0} true;
  $p90 := $i2p.i64.ref($i89);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5308, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p90, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5309, 3} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i87 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5313, 17} true;
  assume {:verifier.code 0} true;
  $i91 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp57"} boogie_si_record_i64($i91);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5314, 29} true;
  assume {:verifier.code 0} true;
  $i92 := $add.i64($i91, 48);
  call {:cexpr "__cil_tmp58"} boogie_si_record_i64($i92);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5315, 13} true;
  assume {:verifier.code 0} true;
  $p93 := $i2p.i64.ref($i92);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5315, 11} true;
  assume {:verifier.code 0} true;
  $i94 := $load.i32($M.0, $p93);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5315, 3} true;
  assume {:verifier.code 0} true;
  $i18 := $i94;
  goto $bb3;
}
const kioc_to_mimd: ref;
axiom (kioc_to_mimd == $sub.ref(0, 81644));
procedure  kioc_to_mimd($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i1;
  var $i9: i64;
  var $i10: i64;
  var $p11: ref;
  var $i12: i8;
  var $i13: i64;
  var $i14: i64;
  var $i15: i64;
  var $p16: ref;
  var $i17: i8;
  var $i18: i32;
  var $i19: i1;
  var $i20: i32;
  var $i21: i1;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $i32: i32;
  var $i33: i1;
  var $i34: i64;
  var $i35: i64;
  var $p36: ref;
  var $i37: i64;
  var $p38: ref;
  var $i39: i64;
  var $i40: i64;
  var $i41: i64;
  var $p42: ref;
  var $p43: ref;
  var $i44: i64;
  var $i45: i1;
  var $i46: i64;
  var $i47: i64;
  var $p48: ref;
  var $p49: ref;
  var $i50: i64;
  var $i51: i64;
  var $p52: ref;
  var $p53: ref;
  var $i54: i64;
  var $i55: i64;
  var $p56: ref;
  var $i57: i64;
  var $i58: i64;
  var $p59: ref;
  var $i60: i32;
  var $i61: i1;
  var $i62: i64;
  var $i63: i64;
  var $i64: i64;
  var $p65: ref;
  var $p66: ref;
  var $i67: i64;
  var $i68: i1;
  var $i69: i64;
  var $i70: i64;
  var $p71: ref;
  var $p72: ref;
  var $i73: i64;
  var $i74: i64;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $i78: i64;
  var $i79: i64;
  var $p80: ref;
  var $i81: i32;
  var $i82: i32;
  var $i83: i1;
  var $i84: i64;
  var $i85: i64;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $i89: i64;
  var $i90: i64;
  var $p91: ref;
  var $i92: i32;
  var $i93: i1;
  var $i8: i32;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5574, 17} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(120, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(32, $zext.i32.i64(1)));
  assume true;
  assume true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5574, 17} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5575, 17} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5576, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := copy_from_user($p4, $p5, 110);
  call {:cexpr "tmp"} boogie_si_record_i64($i6);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5578, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i64($i6, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5578, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5579, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 14);
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5709, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5582, 17} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5582, 43} true;
  assume {:verifier.code 0} true;
  $i10 := $add.i64($i9, 8);
  call {:cexpr "__cil_tmp18"} boogie_si_record_i64($i10);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5583, 14} true;
  assume {:verifier.code 0} true;
  $p11 := $i2p.i64.ref($i10);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5583, 12} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i8($M.0, $p11);
  call {:cexpr "opcode"} boogie_si_record_i8($i12);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5585, 19} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i64(8, 1);
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i13);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5586, 17} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i64($p2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5586, 43} true;
  assume {:verifier.code 0} true;
  $i15 := $add.i64($i14, $i13);
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i15);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5587, 17} true;
  assume {:verifier.code 0} true;
  $p16 := $i2p.i64.ref($i15);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5587, 15} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i8($M.0, $p16);
  call {:cexpr "subopcode"} boogie_si_record_i8($i17);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5589, 17} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i8.i32($i12);
  call {:cexpr "__cil_tmp22"} boogie_si_record_i32($i18);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5590, 19} true;
  assume {:verifier.code 0} true;
  $i19 := $eq.i32($i18, 130);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5590, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i19 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5591, 9} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i8.i32($i17);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5591, 25} true;
  assume {:verifier.code 0} true;
  $i21 := $eq.i32($i20, 103);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5591, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb7, $bb8;
$bb6:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb7:
  assume ($i21 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5592, 7} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i21 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5595, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5599, 23} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp23"} boogie_si_record_i64($i22);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5600, 35} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i64($i22, 248);
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i23);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5601, 25} true;
  assume {:verifier.code 0} true;
  $p24 := $i2p.i64.ref($i23);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5601, 23} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.0, $p24);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5602, 17} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p25);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5603, 9} true;
  assume {:verifier.code 0} true;
  call hinfo_to_cinfo($p26, $p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5604, 23} true;
  assume {:verifier.code 0} true;
  $i27 := $p2i.ref.i64($p2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5604, 49} true;
  assume {:verifier.code 0} true;
  $i28 := $add.i64($i27, 112);
  call {:cexpr "__cil_tmp26"} boogie_si_record_i64($i28);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5605, 25} true;
  assume {:verifier.code 0} true;
  $p29 := $i2p.i64.ref($i28);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5605, 23} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.0, $p29);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5607, 23} true;
  assume {:verifier.code 0} true;
  $p31 := $bitcast.ref.ref($p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5608, 19} true;
  assume {:verifier.code 0} true;
  call $i32 := copy_to_user($p30, $p31, 23);
  call {:cexpr "tmp___0"} boogie_si_record_i32($i32);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5610, 21} true;
  assume {:verifier.code 0} true;
  $i33 := $ne.i32($i32, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5610, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb14, $bb15;
$bb10:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5616, 9} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 22);
  goto $bb3;
$bb11:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5596, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb12, $bb13;
$bb12:
  assume (0 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5596, 14} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb13:
  assume !((0 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5617, 14} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb14:
  assume ($i33 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5611, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 14);
  goto $bb3;
$bb15:
  assume !(($i33 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5614, 9} true;
  assume {:verifier.code 0} true;
  $i8 := 0;
  goto $bb3;
$bb17:
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5622, 5} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $u4, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5622, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $u2;
  goto $bb3;
$bb20:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5626, 17} true;
  assume {:verifier.code 0} true;
  $i34 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i34);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5627, 29} true;
  assume {:verifier.code 0} true;
  $i35 := $add.i64($i34, 32);
  call {:cexpr "__cil_tmp31"} boogie_si_record_i64($i35);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5628, 19} true;
  assume {:verifier.code 0} true;
  $p36 := $i2p.i64.ref($i35);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5628, 17} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i64($M.0, $p36);
  call {:cexpr "__cil_tmp32"} boogie_si_record_i64($i37);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5629, 12} true;
  assume {:verifier.code 0} true;
  $p38 := $i2p.i64.ref($i37);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5632, 17} true;
  assume {:verifier.code 0} true;
  $i39 := $p2i.ref.i64($0.ref);
  call {:cexpr "__cil_tmp34"} boogie_si_record_i64($i39);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5633, 17} true;
  assume {:verifier.code 0} true;
  $i40 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp35"} boogie_si_record_i64($i40);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5634, 29} true;
  assume {:verifier.code 0} true;
  $i41 := $add.i64($i40, 200);
  call {:cexpr "__cil_tmp36"} boogie_si_record_i64($i41);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5635, 19} true;
  assume {:verifier.code 0} true;
  $p42 := $i2p.i64.ref($i41);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5635, 17} true;
  assume {:verifier.code 0} true;
  $p43 := $load.ref($M.0, $p42);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5636, 17} true;
  assume {:verifier.code 0} true;
  $i44 := $p2i.ref.i64($p43);
  call {:cexpr "__cil_tmp38"} boogie_si_record_i64($i44);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5637, 19} true;
  assume {:verifier.code 0} true;
  $i45 := $ne.i64($i44, $i39);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5637, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i45 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5639, 19} true;
  assume {:verifier.code 0} true;
  $i46 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp39"} boogie_si_record_i64($i46);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5640, 31} true;
  assume {:verifier.code 0} true;
  $i47 := $add.i64($i46, 200);
  call {:cexpr "__cil_tmp40"} boogie_si_record_i64($i47);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5641, 18} true;
  assume {:verifier.code 0} true;
  $p48 := $i2p.i64.ref($i47);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5641, 16} true;
  assume {:verifier.code 0} true;
  $p49 := $load.ref($M.0, $p48);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5642, 19} true;
  assume {:verifier.code 0} true;
  $i50 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp41"} boogie_si_record_i64($i50);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5643, 31} true;
  assume {:verifier.code 0} true;
  $i51 := $add.i64($i50, 208);
  call {:cexpr "__cil_tmp42"} boogie_si_record_i64($i51);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5644, 18} true;
  assume {:verifier.code 0} true;
  $p52 := $i2p.i64.ref($i51);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5644, 16} true;
  assume {:verifier.code 0} true;
  $p53 := $load.ref($M.0, $p52);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5645, 19} true;
  assume {:verifier.code 0} true;
  $i54 := $p2i.ref.i64($p49);
  call {:cexpr "__cil_tmp43"} boogie_si_record_i64($i54);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5646, 31} true;
  assume {:verifier.code 0} true;
  $i55 := $add.i64($i54, 51);
  call {:cexpr "__cil_tmp44"} boogie_si_record_i64($i55);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5647, 19} true;
  assume {:verifier.code 0} true;
  $p56 := $i2p.i64.ref($i55);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5649, 19} true;
  assume {:verifier.code 0} true;
  $i57 := $p2i.ref.i64($p53);
  call {:cexpr "__cil_tmp47"} boogie_si_record_i64($i57);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5650, 31} true;
  assume {:verifier.code 0} true;
  $i58 := $add.i64($i57, 51);
  call {:cexpr "__cil_tmp48"} boogie_si_record_i64($i58);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5651, 19} true;
  assume {:verifier.code 0} true;
  $p59 := $i2p.i64.ref($i58);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5653, 15} true;
  assume {:verifier.code 0} true;
  call $i60 := copy_to_user($p56, $p59, 1);
  call {:cexpr "tmp___1"} boogie_si_record_i32($i60);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5655, 17} true;
  assume {:verifier.code 0} true;
  $i61 := $ne.i32($i60, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5655, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i61} true;
  goto $bb23, $bb24;
$bb22:
  assume !(($i45 == 1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb23:
  assume ($i61 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5656, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 14);
  goto $bb3;
$bb24:
  assume !(($i61 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5659, 3} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5664, 17} true;
  assume {:verifier.code 0} true;
  $i62 := $p2i.ref.i64($0.ref);
  call {:cexpr "__cil_tmp52"} boogie_si_record_i64($i62);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5665, 17} true;
  assume {:verifier.code 0} true;
  $i63 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp53"} boogie_si_record_i64($i63);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5666, 29} true;
  assume {:verifier.code 0} true;
  $i64 := $add.i64($i63, 184);
  call {:cexpr "__cil_tmp54"} boogie_si_record_i64($i64);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5667, 19} true;
  assume {:verifier.code 0} true;
  $p65 := $i2p.i64.ref($i64);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5667, 17} true;
  assume {:verifier.code 0} true;
  $p66 := $load.ref($M.0, $p65);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5668, 17} true;
  assume {:verifier.code 0} true;
  $i67 := $p2i.ref.i64($p66);
  call {:cexpr "__cil_tmp56"} boogie_si_record_i64($i67);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5669, 19} true;
  assume {:verifier.code 0} true;
  $i68 := $ne.i64($i67, $i62);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5669, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i68} true;
  goto $bb27, $bb28;
$bb27:
  assume ($i68 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5671, 19} true;
  assume {:verifier.code 0} true;
  $i69 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp57"} boogie_si_record_i64($i69);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5672, 31} true;
  assume {:verifier.code 0} true;
  $i70 := $add.i64($i69, 184);
  call {:cexpr "__cil_tmp58"} boogie_si_record_i64($i70);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5673, 21} true;
  assume {:verifier.code 0} true;
  $p71 := $i2p.i64.ref($i70);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5673, 19} true;
  assume {:verifier.code 0} true;
  $p72 := $load.ref($M.0, $p71);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5674, 19} true;
  assume {:verifier.code 0} true;
  $i73 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp60"} boogie_si_record_i64($i73);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5675, 31} true;
  assume {:verifier.code 0} true;
  $i74 := $add.i64($i73, 248);
  call {:cexpr "__cil_tmp61"} boogie_si_record_i64($i74);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5676, 21} true;
  assume {:verifier.code 0} true;
  $p75 := $i2p.i64.ref($i74);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5676, 19} true;
  assume {:verifier.code 0} true;
  $p76 := $load.ref($M.0, $p75);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5677, 19} true;
  assume {:verifier.code 0} true;
  $p77 := $bitcast.ref.ref($p76);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5678, 19} true;
  assume {:verifier.code 0} true;
  $i78 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp64"} boogie_si_record_i64($i78);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5679, 31} true;
  assume {:verifier.code 0} true;
  $i79 := $add.i64($i78, 192);
  call {:cexpr "__cil_tmp65"} boogie_si_record_i64($i79);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5680, 21} true;
  assume {:verifier.code 0} true;
  $p80 := $i2p.i64.ref($i79);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5680, 19} true;
  assume {:verifier.code 0} true;
  $i81 := $load.i32($M.0, $p80);
  call {:cexpr "__cil_tmp66"} boogie_si_record_i32($i81);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5681, 15} true;
  assume {:verifier.code 0} true;
  call $i82 := copy_to_user($p72, $p77, $i81);
  call {:cexpr "tmp___2"} boogie_si_record_i32($i82);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5683, 17} true;
  assume {:verifier.code 0} true;
  $i83 := $ne.i32($i82, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5683, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i83} true;
  goto $bb29, $bb30;
$bb28:
  assume !(($i68 == 1));
  assume {:verifier.code 0} true;
  goto $bb32;
$bb29:
  assume ($i83 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5684, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 14);
  goto $bb3;
$bb30:
  assume !(($i83 == 1));
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5687, 3} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb32:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5691, 17} true;
  assume {:verifier.code 0} true;
  $i84 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp67"} boogie_si_record_i64($i84);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5692, 29} true;
  assume {:verifier.code 0} true;
  $i85 := $add.i64($i84, 32);
  call {:cexpr "__cil_tmp68"} boogie_si_record_i64($i85);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5693, 17} true;
  assume {:verifier.code 0} true;
  $p86 := $i2p.i64.ref($i85);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5694, 17} true;
  assume {:verifier.code 0} true;
  $p87 := $bitcast.ref.ref($p86);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5695, 29} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p87, $mul.ref(17, 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5697, 17} true;
  assume {:verifier.code 0} true;
  $i89 := $p2i.ref.i64($p38);
  call {:cexpr "__cil_tmp73"} boogie_si_record_i64($i89);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5698, 29} true;
  assume {:verifier.code 0} true;
  $i90 := $add.i64($i89, 25);
  call {:cexpr "__cil_tmp74"} boogie_si_record_i64($i90);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5699, 17} true;
  assume {:verifier.code 0} true;
  $p91 := $i2p.i64.ref($i90);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5701, 13} true;
  assume {:verifier.code 0} true;
  call $i92 := copy_to_user($p88, $p91, 1);
  call {:cexpr "tmp___3"} boogie_si_record_i32($i92);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5703, 15} true;
  assume {:verifier.code 0} true;
  $i93 := $ne.i32($i92, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5703, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i93} true;
  goto $bb33, $bb34;
$bb33:
  assume ($i93 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5704, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 14);
  goto $bb3;
$bb34:
  assume !(($i93 == 1));
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5707, 3} true;
  assume {:verifier.code 0} true;
  $i8 := 0;
  goto $bb3;
}
const hinfo_to_cinfo: ref;
axiom (hinfo_to_cinfo == $sub.ref(0, 82676));
procedure  hinfo_to_cinfo($p0: ref, $p1: ref)
{
  var $i2: i64;
  var $i3: i64;
  var $i4: i1;
  var $i5: i64;
  var $i6: i64;
  var $i7: i1;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $i11: i64;
  var $p12: ref;
  var $i13: i64;
  var $i14: i64;
  var $i15: i64;
  var $i16: i64;
  var $p17: ref;
  var $i18: i8;
  var $p19: ref;
  var $i20: i64;
  var $i21: i64;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $i25: i8;
  var $p26: ref;
  var $i27: i64;
  var $i28: i64;
  var $i29: i64;
  var $i30: i64;
  var $p31: ref;
  var $i32: i8;
  var $p33: ref;
  var $i34: i64;
  var $i35: i64;
  var $i36: i64;
  var $i37: i64;
  var $p38: ref;
  var $i39: i8;
  var $i40: i16;
  var $p41: ref;
  var $i42: i64;
  var $i43: i64;
  var $i44: i64;
  var $i45: i64;
  var $p46: ref;
  var $i47: i8;
  var $i48: i32;
  var $i49: i32;
  var $i50: i8;
  var $p51: ref;
  var $i52: i64;
  var $i53: i64;
  var $i54: i64;
  var $i55: i64;
  var $p56: ref;
  var $i57: i16;
  var $p58: ref;
  var $i59: i64;
  var $i60: i64;
  var $p61: ref;
  var $i62: i16;
  var $p63: ref;
  var $i64: i64;
  var $i65: i64;
  var $i66: i64;
  var $i67: i64;
  var $p68: ref;
  var $i69: i8;
  var $p70: ref;
  var $i71: i64;
  var $i72: i64;
  var $i73: i64;
  var $i74: i64;
  var $p75: ref;
  var $i76: i32;
  var $p77: ref;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5760, 16} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5760, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($0.ref);
  call {:cexpr "__cil_tmp4"} boogie_si_record_i64($i2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5761, 16} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp5"} boogie_si_record_i64($i3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5762, 18} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i64($i3, $i2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5762, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5763, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5767, 18} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($0.ref);
  call {:cexpr "__cil_tmp7"} boogie_si_record_i64($i5);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5768, 18} true;
  assume {:verifier.code 0} true;
  $i6 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp8"} boogie_si_record_i64($i6);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5769, 20} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i64($i6, $i5);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5769, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb4, $bb5;
$bb3:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5828, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume ($i7 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5770, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb5:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5776, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i8);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5777, 28} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i64($i8, 8);
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i9);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5778, 28} true;
  assume {:verifier.code 0} true;
  $p10 := $i2p.i64.ref($i9);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5778, 26} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i64($M.0, $p10);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5778, 3} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5778, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p12, $i11);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5779, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i13);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5780, 29} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i64($i13, 8);
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i14);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5781, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i15);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5782, 29} true;
  assume {:verifier.code 0} true;
  $i16 := $add.i64($i15, 19);
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i16);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5783, 33} true;
  assume {:verifier.code 0} true;
  $p17 := $i2p.i64.ref($i16);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5783, 31} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i8($M.0, $p17);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5783, 5} true;
  assume {:verifier.code 0} true;
  $p19 := $i2p.i64.ref($i14);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5783, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p19, $i18);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5784, 17} true;
  assume {:verifier.code 0} true;
  $i20 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i20);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5785, 29} true;
  assume {:verifier.code 0} true;
  $i21 := $add.i64($i20, 9);
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i21);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5786, 17} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i22);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5787, 29} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i64($i22, 28);
  call {:cexpr "__cil_tmp18"} boogie_si_record_i64($i23);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5788, 33} true;
  assume {:verifier.code 0} true;
  $p24 := $i2p.i64.ref($i23);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5788, 31} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i8($M.0, $p24);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5788, 5} true;
  assume {:verifier.code 0} true;
  $p26 := $i2p.i64.ref($i21);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5788, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p26, $i25);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5789, 17} true;
  assume {:verifier.code 0} true;
  $i27 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp19"} boogie_si_record_i64($i27);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5790, 29} true;
  assume {:verifier.code 0} true;
  $i28 := $add.i64($i27, 10);
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i28);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5791, 17} true;
  assume {:verifier.code 0} true;
  $i29 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i29);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5792, 29} true;
  assume {:verifier.code 0} true;
  $i30 := $add.i64($i29, 16);
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i30);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5793, 33} true;
  assume {:verifier.code 0} true;
  $p31 := $i2p.i64.ref($i30);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5793, 31} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i8($M.0, $p31);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5793, 5} true;
  assume {:verifier.code 0} true;
  $p33 := $i2p.i64.ref($i28);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5793, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p33, $i32);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5794, 17} true;
  assume {:verifier.code 0} true;
  $i34 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp23"} boogie_si_record_i64($i34);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5795, 29} true;
  assume {:verifier.code 0} true;
  $i35 := $add.i64($i34, 12);
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i35);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5796, 17} true;
  assume {:verifier.code 0} true;
  $i36 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp25"} boogie_si_record_i64($i36);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5797, 29} true;
  assume {:verifier.code 0} true;
  $i37 := $add.i64($i36, 18);
  call {:cexpr "__cil_tmp26"} boogie_si_record_i64($i37);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5798, 19} true;
  assume {:verifier.code 0} true;
  $p38 := $i2p.i64.ref($i37);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5798, 17} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i8($M.0, $p38);
  call {:cexpr "__cil_tmp27"} boogie_si_record_i8($i39);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5799, 32} true;
  assume {:verifier.code 0} true;
  $i40 := $zext.i8.i16($i39);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5799, 5} true;
  assume {:verifier.code 0} true;
  $p41 := $i2p.i64.ref($i35);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5799, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p41, $i40);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5800, 17} true;
  assume {:verifier.code 0} true;
  $i42 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp28"} boogie_si_record_i64($i42);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5801, 29} true;
  assume {:verifier.code 0} true;
  $i43 := $add.i64($i42, 14);
  call {:cexpr "__cil_tmp29"} boogie_si_record_i64($i43);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5802, 17} true;
  assume {:verifier.code 0} true;
  $i44 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i44);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5803, 29} true;
  assume {:verifier.code 0} true;
  $i45 := $add.i64($i44, 17);
  call {:cexpr "__cil_tmp31"} boogie_si_record_i64($i45);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5804, 19} true;
  assume {:verifier.code 0} true;
  $p46 := $i2p.i64.ref($i45);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5804, 17} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i8($M.0, $p46);
  call {:cexpr "__cil_tmp32"} boogie_si_record_i8($i47);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5805, 17} true;
  assume {:verifier.code 0} true;
  $i48 := $zext.i8.i32($i47);
  call {:cexpr "__cil_tmp33"} boogie_si_record_i32($i48);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5806, 29} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i:5806:29: warning: over-approximating bitwise operation and;
  $i49 := $and.i32($i48, 7);
  call {:cexpr "__cil_tmp34"} boogie_si_record_i32($i49);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5807, 31} true;
  assume {:verifier.code 0} true;
  $i50 := $trunc.i32.i8($i49);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5807, 5} true;
  assume {:verifier.code 0} true;
  $p51 := $i2p.i64.ref($i43);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5807, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p51, $i50);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5808, 17} true;
  assume {:verifier.code 0} true;
  $i52 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp35"} boogie_si_record_i64($i52);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5809, 29} true;
  assume {:verifier.code 0} true;
  $i53 := $add.i64($i52, 16);
  call {:cexpr "__cil_tmp36"} boogie_si_record_i64($i53);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5810, 17} true;
  assume {:verifier.code 0} true;
  $i54 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i54);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5811, 29} true;
  assume {:verifier.code 0} true;
  $i55 := $add.i64($i54, 2);
  call {:cexpr "__cil_tmp38"} boogie_si_record_i64($i55);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5812, 34} true;
  assume {:verifier.code 0} true;
  $p56 := $i2p.i64.ref($i55);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5812, 32} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i16($M.0, $p56);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5812, 5} true;
  assume {:verifier.code 0} true;
  $p58 := $i2p.i64.ref($i53);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5812, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p58, $i57);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5813, 17} true;
  assume {:verifier.code 0} true;
  $i59 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp39"} boogie_si_record_i64($i59);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5814, 29} true;
  assume {:verifier.code 0} true;
  $i60 := $add.i64($i59, 18);
  call {:cexpr "__cil_tmp40"} boogie_si_record_i64($i60);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5815, 32} true;
  assume {:verifier.code 0} true;
  $p61 := $bitcast.ref.ref($p0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5815, 32} true;
  assume {:verifier.code 0} true;
  $i62 := $load.i16($M.0, $p61);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5815, 5} true;
  assume {:verifier.code 0} true;
  $p63 := $i2p.i64.ref($i60);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5815, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p63, $i62);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5816, 17} true;
  assume {:verifier.code 0} true;
  $i64 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp41"} boogie_si_record_i64($i64);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5817, 29} true;
  assume {:verifier.code 0} true;
  $i65 := $add.i64($i64, 20);
  call {:cexpr "__cil_tmp42"} boogie_si_record_i64($i65);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5818, 17} true;
  assume {:verifier.code 0} true;
  $i66 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp43"} boogie_si_record_i64($i66);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5819, 29} true;
  assume {:verifier.code 0} true;
  $i67 := $add.i64($i66, 18);
  call {:cexpr "__cil_tmp44"} boogie_si_record_i64($i67);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5820, 33} true;
  assume {:verifier.code 0} true;
  $p68 := $i2p.i64.ref($i67);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5820, 31} true;
  assume {:verifier.code 0} true;
  $i69 := $load.i8($M.0, $p68);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5820, 5} true;
  assume {:verifier.code 0} true;
  $p70 := $i2p.i64.ref($i65);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5820, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p70, $i69);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5821, 17} true;
  assume {:verifier.code 0} true;
  $i71 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp45"} boogie_si_record_i64($i71);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5822, 29} true;
  assume {:verifier.code 0} true;
  $i72 := $add.i64($i71, 24);
  call {:cexpr "__cil_tmp46"} boogie_si_record_i64($i72);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5823, 17} true;
  assume {:verifier.code 0} true;
  $i73 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp47"} boogie_si_record_i64($i73);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5824, 29} true;
  assume {:verifier.code 0} true;
  $i74 := $add.i64($i73, 20);
  call {:cexpr "__cil_tmp48"} boogie_si_record_i64($i74);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5825, 34} true;
  assume {:verifier.code 0} true;
  $p75 := $i2p.i64.ref($i74);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5825, 32} true;
  assume {:verifier.code 0} true;
  $i76 := $load.i32($M.0, $p75);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5825, 5} true;
  assume {:verifier.code 0} true;
  $p77 := $i2p.i64.ref($i72);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5825, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p77, $i76);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 5826, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const copy_to_user: ref;
axiom (copy_to_user == $sub.ref(0, 83708));
procedure  copy_to_user($p0: ref, $p1: ref, $i2: i32)
  returns ($r: i32)
{
  var $i3: i64;
  var $i4: i32;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3441, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "copy_to_user:arg:size"} boogie_si_record_i32($i2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3441, 3} true;
  assume {:verifier.code 0} true;
  call might_fault();
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3442, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := _copy_to_user($p0, $p1, $i2);
  call {:cexpr "tmp"} boogie_si_record_i64($i3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3444, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.i64.i32($i3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3444, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const might_fault: ref;
axiom (might_fault == $sub.ref(0, 84740));
procedure  might_fault()
{
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7263, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7263, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const _copy_to_user: ref;
axiom (_copy_to_user == $sub.ref(0, 85772));
procedure  _copy_to_user($p0: ref, $p1: ref, $i2: i32)
  returns ($r: i64)
{
  var $i3: i64;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7203, 10} true;
  assume {:verifier.code 1} true;
  call {:cexpr "_copy_to_user:arg:arg2"} boogie_si_record_i32($i2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7203, 10} true;
  assume {:verifier.code 1} true;
  call $i3 := __VERIFIER_nondet_ulong();
  call {:cexpr "smack:ext:__VERIFIER_nondet_ulong"} boogie_si_record_i64($i3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7203, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const init_timer_key: ref;
axiom (init_timer_key == $sub.ref(0, 86804));
procedure  init_timer_key($p0: ref, $p1: ref, $p2: ref)
{
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7240, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7240, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const add_timer: ref;
axiom (add_timer == $sub.ref(0, 87836));
procedure  add_timer($p0: ref)
{
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7209, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7209, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const get_current: ref;
axiom (get_current == $sub.ref(0, 88868));
procedure  get_current()
  returns ($r: ref)
{
  var $p0: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p1: ref;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3194, 7} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3194, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 1} true;
  goto $bb1, $bb2;
$bb1:
  assume (1 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3195, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !((1 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3198, 5} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  call $p4 := devirtbounce.1(0, current_task);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3211, 7} true;
  assume {:verifier.code 0} true;
  $p1 := $p4;
  goto $bb9;
$bb4:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3214, 7} true;
  assume {:verifier.code 0} true;
  call __bad_percpu_size();
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3216, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb5:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3199, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb6, $bb7;
$bb6:
  assume (0 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3199, 12} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !((0 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3216, 12} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb8:
  call $p0 := devirtbounce.1(0, current_task);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3201, 7} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $u5, $p0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3202, 7} true;
  assume {:verifier.code 0} true;
  $p1 := $u6;
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3222, 3} true;
  assume {:verifier.code 0} true;
  $r := $p1;
  $exn := false;
  return;
$bb10:
  call $p2 := devirtbounce.1(0, current_task);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3204, 7} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $u5, $p2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3205, 7} true;
  assume {:verifier.code 0} true;
  $p1 := $u6;
  goto $bb9;
$bb11:
  call $p3 := devirtbounce.1(0, current_task);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3207, 7} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $u5, $p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3208, 7} true;
  assume {:verifier.code 0} true;
  $p1 := $u6;
  goto $bb9;
$bb12:
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume {:verifier.code 0} true;
  goto $bb12;
$bb14:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3185, 12} true;
  assume {:verifier.code 0} true;
  $p1 := $u6;
  goto $bb9;
}
const autoremove_wake_function: ref;
axiom (autoremove_wake_function == $sub.ref(0, 89900));
procedure  autoremove_wake_function($p0: ref, $i1: i32, $i2: i32, $p3: ref)
  returns ($r: i32)
{
  var $i4: i32;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7297, 10} true;
  assume {:verifier.code 1} true;
  call {:cexpr "autoremove_wake_function:arg:arg1"} boogie_si_record_i32($i1);
  call {:cexpr "autoremove_wake_function:arg:arg2"} boogie_si_record_i32($i2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7297, 10} true;
  assume {:verifier.code 1} true;
  call $i4 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i4);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7297, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const prepare_to_wait: ref;
axiom (prepare_to_wait == $sub.ref(0, 90932));
procedure  prepare_to_wait($p0: ref, $p1: ref, $i2: i32)
{
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7280, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "prepare_to_wait:arg:arg2"} boogie_si_record_i32($i2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7280, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const schedule: ref;
axiom (schedule == $sub.ref(0, 91964));
procedure  schedule()
{
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7287, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7287, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const finish_wait: ref;
axiom (finish_wait == $sub.ref(0, 92996));
procedure  finish_wait($p0: ref, $p1: ref)
{
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7237, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7237, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const del_timer_sync: ref;
axiom (del_timer_sync == $sub.ref(0, 94028));
procedure  del_timer_sync($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7217, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7217, 10} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7217, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const __bad_percpu_size: ref;
axiom (__bad_percpu_size == $sub.ref(0, 95060));
procedure  __bad_percpu_size();
const ldv_spin_lock: ref;
axiom (ldv_spin_lock == $sub.ref(0, 96092));
procedure  ldv_spin_lock()
{
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7084, 12} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7084, 12} true;
  assume {:verifier.code 0} true;
  $M.1 := 1;
  call {:cexpr "ldv_spin"} boogie_si_record_i32(1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7085, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const spin_unlock_irqrestore: ref;
axiom (spin_unlock_irqrestore == $sub.ref(0, 97124));
procedure  spin_unlock_irqrestore($p0: ref, $i1: i64)
{
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7113, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "spin_unlock_irqrestore:arg:flags"} boogie_si_record_i64($i1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7113, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock();
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7114, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock_irqrestore_8($p0, $i1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7116, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const list_add: ref;
axiom (list_add == $sub.ref(0, 98156));
procedure  list_add($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3134, 16} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3134, 16} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3134, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3135, 3} true;
  assume {:verifier.code 0} true;
  call __list_add($p0, $p1, $p3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3137, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const up: ref;
axiom (up == $sub.ref(0, 99188));
procedure  up($p0: ref)
{
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7290, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7290, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_spin_unlock: ref;
axiom (ldv_spin_unlock == $sub.ref(0, 100220));
procedure  ldv_spin_unlock()
{
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7091, 12} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7091, 12} true;
  assume {:verifier.code 0} true;
  $M.1 := 0;
  call {:cexpr "ldv_spin"} boogie_si_record_i32(0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7092, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_spin_unlock_irqrestore_8: ref;
axiom (ldv_spin_unlock_irqrestore_8 == $sub.ref(0, 101252));
procedure  ldv_spin_unlock_irqrestore_8($p0: ref, $i1: i64)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3243, 16} true;
  assume {:verifier.code 0} true;
  call {:cexpr "ldv_spin_unlock_irqrestore_8:arg:flags"} boogie_si_record_i64($i1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3243, 16} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3244, 3} true;
  assume {:verifier.code 0} true;
  call _raw_spin_unlock_irqrestore($p2, $i1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3246, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const _raw_spin_unlock_irqrestore: ref;
axiom (_raw_spin_unlock_irqrestore == $sub.ref(0, 102284));
procedure  _raw_spin_unlock_irqrestore($p0: ref, $i1: i64)
{
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7206, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "_raw_spin_unlock_irqrestore:arg:arg1"} boogie_si_record_i64($i1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7206, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const mraid_mm_attach_buf: ref;
axiom (mraid_mm_attach_buf == $sub.ref(0, 103316));
procedure  mraid_mm_attach_buf($p0: ref, $p1: ref, $i2: i32)
  returns ($r: i32)
{
  var $i3: i64;
  var $i4: i64;
  var $p5: ref;
  var $i6: i64;
  var $i7: i64;
  var $p8: ref;
  var $i9: i64;
  var $i10: i64;
  var $p11: ref;
  var $i12: i64;
  var $i13: i64;
  var $p14: ref;
  var $i17: i64;
  var $i18: i64;
  var $i19: i64;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $i23: i64;
  var $i24: i64;
  var $p25: ref;
  var $i26: i32;
  var $i27: i1;
  var $i30: i1;
  var $i31: i32;
  var $i32: i64;
  var $i33: i64;
  var $p34: ref;
  var $i35: i8;
  var $i36: i32;
  var $i37: i1;
  var $p38: ref;
  var $i39: i32;
  var $i40: i64;
  var $i41: i64;
  var $p42: ref;
  var $i43: i64;
  var $i44: i64;
  var $i45: i8;
  var $p46: ref;
  var $i47: i64;
  var $i48: i64;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $i52: i64;
  var $i53: i64;
  var $i54: i64;
  var $i55: i64;
  var $p56: ref;
  var $i57: i64;
  var $p58: ref;
  var $i59: i64;
  var $i60: i64;
  var $p61: ref;
  var $i63: i64;
  var $i64: i64;
  var $p65: ref;
  var $i28: i32;
  var $i29: i32;
  var $i66: i32;
  var $i67: i1;
  var $i15: i32;
  var $i16: i32;
  var $i68: i32;
  var $i69: i1;
  var $i70: i64;
  var $i71: i64;
  var $i72: i64;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $i76: i64;
  var $i77: i64;
  var $i78: i8;
  var $p79: ref;
  var $i80: i64;
  var $i81: i64;
  var $p82: ref;
  var $i83: i64;
  var $i84: i64;
  var $p85: ref;
  var $p86: ref;
  var $i87: i64;
  var $i88: i64;
  var $p89: ref;
  var $p90: ref;
  var $i91: i64;
  var $i92: i64;
  var $p93: ref;
  var $p94: ref;
  var $i95: i64;
  var $i96: i64;
  var $p97: ref;
  var $i98: i64;
  var $i99: i64;
  var $i100: i64;
  var $p101: ref;
  var $p102: ref;
  var $i103: i64;
  var $i104: i1;
  var $i62: i32;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4745, 16} true;
  assume {:verifier.code 0} true;
  call {:cexpr "mraid_mm_attach_buf:arg:xferlen"} boogie_si_record_i32($i2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4745, 16} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4746, 28} true;
  assume {:verifier.code 0} true;
  $i4 := $add.i64($i3, 264);
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i4);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4747, 5} true;
  assume {:verifier.code 0} true;
  $p5 := $i2p.i64.ref($i4);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4747, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p5, $sub.i8(0, 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4748, 17} true;
  assume {:verifier.code 0} true;
  $i6 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i6);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4749, 29} true;
  assume {:verifier.code 0} true;
  $i7 := $add.i64($i6, 248);
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i7);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4750, 5} true;
  assume {:verifier.code 0} true;
  $p8 := $i2p.i64.ref($i7);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4750, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p8, $0.ref);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4751, 17} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i9);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4752, 29} true;
  assume {:verifier.code 0} true;
  $i10 := $add.i64($i9, 256);
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i10);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4753, 5} true;
  assume {:verifier.code 0} true;
  $p11 := $i2p.i64.ref($i10);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4753, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p11, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4754, 17} true;
  assume {:verifier.code 0} true;
  $i12 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i12);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4755, 29} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i64($i12, 265);
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i13);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4756, 5} true;
  assume {:verifier.code 0} true;
  $p14 := $i2p.i64.ref($i13);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4756, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p14, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4823, 7} true;
  assume {:verifier.code 0} true;
  $i15, $i16 := 0, $sub.i32(0, 1);
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4824, 5} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4760, 17} true;
  assume {:verifier.code 0} true;
  $i17 := $sext.i32.i64($i15);
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i17);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4761, 17} true;
  assume {:verifier.code 0} true;
  $i18 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp18"} boogie_si_record_i64($i18);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4762, 29} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i64($i18, 272);
  call {:cexpr "__cil_tmp19"} boogie_si_record_i64($i19);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4763, 17} true;
  assume {:verifier.code 0} true;
  $p20 := $i2p.i64.ref($i19);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4764, 17} true;
  assume {:verifier.code 0} true;
  $p21 := $bitcast.ref.ref($p20);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4765, 22} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p21, $mul.ref($i17, 112));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4767, 17} true;
  assume {:verifier.code 0} true;
  $i23 := $p2i.ref.i64($p22);
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i23);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4768, 29} true;
  assume {:verifier.code 0} true;
  $i24 := $add.i64($i23, 16);
  call {:cexpr "__cil_tmp23"} boogie_si_record_i64($i24);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4769, 19} true;
  assume {:verifier.code 0} true;
  $p25 := $i2p.i64.ref($i24);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4769, 17} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i32($M.0, $p25);
  call {:cexpr "__cil_tmp24"} boogie_si_record_i32($i26);
  call {:cexpr "mraid_mm_attach_buf:arg:__cil_tmp25"} boogie_si_record_i32($i2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4771, 19} true;
  assume {:verifier.code 0} true;
  $i27 := $ugt.i32($i2, $i26);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4771, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i27 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4772, 5} true;
  assume {:verifier.code 0} true;
  $i28, $i29 := $i15, $i16;
  goto $bb5;
$bb4:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4821, 9} true;
  assume {:verifier.code 0} true;
  $i66 := $add.i32($i28, 1);
  call {:cexpr "i"} boogie_si_record_i32($i66);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4823, 9} true;
  assume {:verifier.code 0} true;
  $i67 := $sle.i32($i66, 4);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4823, 7} true;
  assume {:verifier.code 0} true;
  $i68 := $i29;
  assume {:branchcond $i67} true;
  goto $bb13, $bb14;
$bb6:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4776, 18} true;
  assume {:verifier.code 0} true;
  $i30 := $eq.i32($i16, $sub.i32(0, 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4776, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i30 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4778, 3} true;
  assume {:verifier.code 0} true;
  $i31 := $i15;
  goto $bb9;
$bb8:
  assume !(($i30 == 1));
  assume {:verifier.code 0} true;
  $i31 := $i16;
  goto $bb9;
$bb9:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4781, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock();
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4784, 17} true;
  assume {:verifier.code 0} true;
  $i32 := $p2i.ref.i64($p22);
  call {:cexpr "__cil_tmp26"} boogie_si_record_i64($i32);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4785, 29} true;
  assume {:verifier.code 0} true;
  $i33 := $add.i64($i32, 104);
  call {:cexpr "__cil_tmp27"} boogie_si_record_i64($i33);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4786, 19} true;
  assume {:verifier.code 0} true;
  $p34 := $i2p.i64.ref($i33);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4786, 17} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i8($M.0, $p34);
  call {:cexpr "__cil_tmp28"} boogie_si_record_i8($i35);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4787, 17} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i8.i32($i35);
  call {:cexpr "__cil_tmp29"} boogie_si_record_i32($i36);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4788, 19} true;
  assume {:verifier.code 0} true;
  $i37 := $eq.i32($i36, 0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4788, 7} true;
  assume {:verifier.code 0} true;
  $p38, $i39 := $p22, $i15;
  assume {:branchcond $i37} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i37 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4765, 22} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4790, 19} true;
  assume {:verifier.code 0} true;
  $i40 := $p2i.ref.i64($p38);
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i40);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4791, 31} true;
  assume {:verifier.code 0} true;
  $i41 := $add.i64($i40, 104);
  call {:cexpr "__cil_tmp31"} boogie_si_record_i64($i41);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4792, 7} true;
  assume {:verifier.code 0} true;
  $p42 := $i2p.i64.ref($i41);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4792, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p42, 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4793, 19} true;
  assume {:verifier.code 0} true;
  $i43 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp32"} boogie_si_record_i64($i43);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4794, 31} true;
  assume {:verifier.code 0} true;
  $i44 := $add.i64($i43, 264);
  call {:cexpr "__cil_tmp33"} boogie_si_record_i64($i44);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4795, 32} true;
  assume {:verifier.code 0} true;
  $i45 := $trunc.i32.i8($i39);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4795, 7} true;
  assume {:verifier.code 0} true;
  $p46 := $i2p.i64.ref($i44);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4795, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p46, $i45);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4796, 19} true;
  assume {:verifier.code 0} true;
  $i47 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp34"} boogie_si_record_i64($i47);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4797, 31} true;
  assume {:verifier.code 0} true;
  $i48 := $add.i64($i47, 248);
  call {:cexpr "__cil_tmp35"} boogie_si_record_i64($i48);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4798, 33} true;
  assume {:verifier.code 0} true;
  $p49 := $bitcast.ref.ref($p38);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4798, 33} true;
  assume {:verifier.code 0} true;
  $p50 := $load.ref($M.0, $p49);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4798, 7} true;
  assume {:verifier.code 0} true;
  $p51 := $i2p.i64.ref($i48);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4798, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p51, $p50);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4799, 19} true;
  assume {:verifier.code 0} true;
  $i52 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp36"} boogie_si_record_i64($i52);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4800, 31} true;
  assume {:verifier.code 0} true;
  $i53 := $add.i64($i52, 256);
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i53);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4801, 19} true;
  assume {:verifier.code 0} true;
  $i54 := $p2i.ref.i64($p38);
  call {:cexpr "__cil_tmp38"} boogie_si_record_i64($i54);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4802, 31} true;
  assume {:verifier.code 0} true;
  $i55 := $add.i64($i54, 8);
  call {:cexpr "__cil_tmp39"} boogie_si_record_i64($i55);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4803, 38} true;
  assume {:verifier.code 0} true;
  $p56 := $i2p.i64.ref($i55);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4803, 36} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i64($M.0, $p56);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4803, 7} true;
  assume {:verifier.code 0} true;
  $p58 := $i2p.i64.ref($i53);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4803, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p58, $i57);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4804, 19} true;
  assume {:verifier.code 0} true;
  $i59 := $p2i.ref.i64($p38);
  call {:cexpr "__cil_tmp40"} boogie_si_record_i64($i59);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4805, 31} true;
  assume {:verifier.code 0} true;
  $i60 := $add.i64($i59, 32);
  call {:cexpr "__cil_tmp41"} boogie_si_record_i64($i60);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4806, 19} true;
  assume {:verifier.code 0} true;
  $p61 := $i2p.i64.ref($i60);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4807, 5} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p61, $u3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4809, 5} true;
  assume {:verifier.code 0} true;
  $i62 := 0;
  goto $bb12;
$bb11:
  assume !(($i37 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4812, 19} true;
  assume {:verifier.code 0} true;
  $i63 := $p2i.ref.i64($p22);
  call {:cexpr "__cil_tmp43"} boogie_si_record_i64($i63);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4813, 31} true;
  assume {:verifier.code 0} true;
  $i64 := $add.i64($i63, 32);
  call {:cexpr "__cil_tmp44"} boogie_si_record_i64($i64);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4814, 19} true;
  assume {:verifier.code 0} true;
  $p65 := $i2p.i64.ref($i64);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4815, 5} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p65, $u3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4817, 5} true;
  assume {:verifier.code 0} true;
  $i28, $i29 := $i15, $i31;
  goto $bb5;
$bb12:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4876, 1} true;
  assume {:verifier.code 0} true;
  $r := $i62;
  $exn := false;
  return;
$bb13:
  assume ($i67 == 1);
  assume {:verifier.code 0} true;
  $i15, $i16 := $i66, $i29;
  goto $bb1;
$bb14:
  assume !(($i67 == 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4744, 14} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4826, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4829, 18} true;
  assume {:verifier.code 0} true;
  $i69 := $eq.i32($i68, $sub.i32(0, 1));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4829, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i69} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i69 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4830, 5} true;
  assume {:verifier.code 0} true;
  $i62 := $sub.i32(0, 22);
  goto $bb12;
$bb17:
  assume !(($i69 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4834, 17} true;
  assume {:verifier.code 0} true;
  $i70 := $sext.i32.i64($i68);
  call {:cexpr "__cil_tmp46"} boogie_si_record_i64($i70);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4835, 17} true;
  assume {:verifier.code 0} true;
  $i71 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp47"} boogie_si_record_i64($i71);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4836, 29} true;
  assume {:verifier.code 0} true;
  $i72 := $add.i64($i71, 272);
  call {:cexpr "__cil_tmp48"} boogie_si_record_i64($i72);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4837, 17} true;
  assume {:verifier.code 0} true;
  $p73 := $i2p.i64.ref($i72);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4838, 17} true;
  assume {:verifier.code 0} true;
  $p74 := $bitcast.ref.ref($p73);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4839, 22} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p74, $mul.ref($i70, 112));
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4840, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock();
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4841, 17} true;
  assume {:verifier.code 0} true;
  $i76 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp51"} boogie_si_record_i64($i76);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4842, 29} true;
  assume {:verifier.code 0} true;
  $i77 := $add.i64($i76, 264);
  call {:cexpr "__cil_tmp52"} boogie_si_record_i64($i77);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4843, 30} true;
  assume {:verifier.code 0} true;
  $i78 := $trunc.i32.i8($i68);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4843, 5} true;
  assume {:verifier.code 0} true;
  $p79 := $i2p.i64.ref($i77);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4843, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p79, $i78);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4844, 17} true;
  assume {:verifier.code 0} true;
  $i80 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp53"} boogie_si_record_i64($i80);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4845, 29} true;
  assume {:verifier.code 0} true;
  $i81 := $add.i64($i80, 265);
  call {:cexpr "__cil_tmp54"} boogie_si_record_i64($i81);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4846, 5} true;
  assume {:verifier.code 0} true;
  $p82 := $i2p.i64.ref($i81);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4846, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p82, 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4847, 17} true;
  assume {:verifier.code 0} true;
  $i83 := $p2i.ref.i64($p75);
  call {:cexpr "__cil_tmp55"} boogie_si_record_i64($i83);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4848, 29} true;
  assume {:verifier.code 0} true;
  $i84 := $add.i64($i83, 24);
  call {:cexpr "__cil_tmp56"} boogie_si_record_i64($i84);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4849, 19} true;
  assume {:verifier.code 0} true;
  $p85 := $i2p.i64.ref($i84);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4849, 17} true;
  assume {:verifier.code 0} true;
  $p86 := $load.ref($M.0, $p85);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4850, 17} true;
  assume {:verifier.code 0} true;
  $i87 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp58"} boogie_si_record_i64($i87);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4851, 29} true;
  assume {:verifier.code 0} true;
  $i88 := $add.i64($i87, 256);
  call {:cexpr "__cil_tmp59"} boogie_si_record_i64($i88);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4852, 17} true;
  assume {:verifier.code 0} true;
  $p89 := $i2p.i64.ref($i88);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4853, 9} true;
  assume {:verifier.code 0} true;
  call $p90 := ldv_dma_pool_alloc_19($p86, 208, $p89);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4854, 17} true;
  assume {:verifier.code 0} true;
  $i91 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp61"} boogie_si_record_i64($i91);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4855, 29} true;
  assume {:verifier.code 0} true;
  $i92 := $add.i64($i91, 248);
  call {:cexpr "__cil_tmp62"} boogie_si_record_i64($i92);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4856, 31} true;
  assume {:verifier.code 0} true;
  $p93 := $bitcast.ref.ref($p90);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4856, 5} true;
  assume {:verifier.code 0} true;
  $p94 := $i2p.i64.ref($i92);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4856, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p94, $p90);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4857, 17} true;
  assume {:verifier.code 0} true;
  $i95 := $p2i.ref.i64($p75);
  call {:cexpr "__cil_tmp63"} boogie_si_record_i64($i95);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4858, 29} true;
  assume {:verifier.code 0} true;
  $i96 := $add.i64($i95, 32);
  call {:cexpr "__cil_tmp64"} boogie_si_record_i64($i96);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4859, 17} true;
  assume {:verifier.code 0} true;
  $p97 := $i2p.i64.ref($i96);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4860, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p97, $u3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4864, 17} true;
  assume {:verifier.code 0} true;
  $i98 := $p2i.ref.i64($0.ref);
  call {:cexpr "__cil_tmp67"} boogie_si_record_i64($i98);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4865, 17} true;
  assume {:verifier.code 0} true;
  $i99 := $p2i.ref.i64($p1);
  call {:cexpr "__cil_tmp68"} boogie_si_record_i64($i99);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4866, 29} true;
  assume {:verifier.code 0} true;
  $i100 := $add.i64($i99, 248);
  call {:cexpr "__cil_tmp69"} boogie_si_record_i64($i100);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4867, 19} true;
  assume {:verifier.code 0} true;
  $p101 := $i2p.i64.ref($i100);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4867, 17} true;
  assume {:verifier.code 0} true;
  $p102 := $load.ref($M.0, $p101);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4868, 17} true;
  assume {:verifier.code 0} true;
  $i103 := $p2i.ref.i64($p102);
  call {:cexpr "__cil_tmp71"} boogie_si_record_i64($i103);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4869, 19} true;
  assume {:verifier.code 0} true;
  $i104 := $eq.i64($i103, $i98);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4869, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i104} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i104 == 1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4870, 5} true;
  assume {:verifier.code 0} true;
  $i62 := $sub.i32(0, 12);
  goto $bb12;
$bb20:
  assume !(($i104 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 4874, 3} true;
  assume {:verifier.code 0} true;
  $i62 := 0;
  goto $bb12;
}
const memcpy: ref;
axiom (memcpy == $sub.ref(0, 104348));
procedure  memcpy($p0: ref, $p1: ref, $i2: i64)
  returns ($r: ref);
const ldv_dma_pool_alloc_19: ref;
axiom (ldv_dma_pool_alloc_19 == $sub.ref(0, 105380));
procedure  ldv_dma_pool_alloc_19($p0: ref, $i1: i32, $p2: ref)
  returns ($r: ref)
{
  var $p3: ref;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7154, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "ldv_dma_pool_alloc_19:arg:ldv_func_arg2"} boogie_si_record_i32($i1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7154, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_alloc_flags($i1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7155, 3} true;
  assume {:verifier.code 0} true;
  call $p3 := dma_pool_alloc($p0, $i1, $p2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7157, 3} true;
  assume {:verifier.code 0} true;
  $r := $0.ref;
  $exn := false;
  return;
}
const down: ref;
axiom (down == $sub.ref(0, 106412));
procedure  down($p0: ref)
{
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7234, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7234, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const list_empty: ref;
axiom (list_empty == $sub.ref(0, 107444));
procedure  list_empty($p0: ref)
  returns ($r: i32)
{
  var $i1: i64;
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $i5: i1;
  var $i6: i32;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3172, 16} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3172, 16} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  call {:cexpr "__cil_tmp2"} boogie_si_record_i64($i1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3173, 16} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3173, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3175, 16} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p3);
  call {:cexpr "__cil_tmp5"} boogie_si_record_i64($i4);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3176, 22} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i64($i4, $i1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3176, 22} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i32($i5);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 3176, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const llvm.memset.p0i8.i64: ref;
axiom (llvm.memset.p0i8.i64 == $sub.ref(0, 108476));
procedure  llvm.memset.p0i8.i64($p0: ref, $i1: i8, $i2: i64, $i3: i1);
const __builtinx_object_size: ref;
axiom (__builtinx_object_size == $sub.ref(0, 109508));
procedure  __builtinx_object_size()
  returns ($r: i32);
procedure  __builtinx_object_size.ref.i32(p.0: ref, p.1: i32)
  returns ($r: i32);
const __builtinx_expect: ref;
axiom (__builtinx_expect == $sub.ref(0, 110540));
procedure  __builtinx_expect()
  returns ($r: i32);
procedure  __builtinx_expect.i64.i64(p.0: i64, p.1: i64)
  returns ($r: i32);
const _copy_from_user: ref;
axiom (_copy_from_user == $sub.ref(0, 111572));
procedure  _copy_from_user($p0: ref, $p1: ref, $i2: i32)
  returns ($r: i64)
{
  var $i3: i64;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7199, 10} true;
  assume {:verifier.code 1} true;
  call {:cexpr "_copy_from_user:arg:arg2"} boogie_si_record_i32($i2);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7199, 10} true;
  assume {:verifier.code 1} true;
  call $i3 := __VERIFIER_nondet_ulong();
  call {:cexpr "smack:ext:__VERIFIER_nondet_ulong"} boogie_si_record_i64($i3);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7199, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const warn_slowpath_fmt: ref;
axiom (warn_slowpath_fmt == $sub.ref(0, 112604));
procedure  warn_slowpath_fmt.ref.i32.ref($p0: ref, $i1: i32, $p2: ref)
{
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7293, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "warn_slowpath_fmt:arg:arg1"} boogie_si_record_i32($i1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7293, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const mutex_lock_nested: ref;
axiom (mutex_lock_nested == $sub.ref(0, 113636));
procedure  mutex_lock_nested($p0: ref, $i1: i32)
{
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7274, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "mutex_lock_nested:arg:arg1"} boogie_si_record_i32($i1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7274, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const mutex_unlock: ref;
axiom (mutex_unlock == $sub.ref(0, 114668));
procedure  mutex_unlock($p0: ref)
{
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7277, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7277, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const capable: ref;
axiom (capable == $sub.ref(0, 115700));
procedure  capable($i0: i32)
  returns ($r: i1)
{
  var $i1: i1;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7213, 10} true;
  assume {:verifier.code 1} true;
  call {:cexpr "capable:arg:arg0"} boogie_si_record_i32($i0);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7213, 10} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_bool();
  call {:cexpr "smack:ext:__VERIFIER_nondet_bool"} boogie_si_record_i1($i1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7213, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const misc_register: ref;
axiom (misc_register == $sub.ref(0, 116732));
procedure  misc_register($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7271, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7271, 10} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7271, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const __init_waitqueue_head: ref;
axiom (__init_waitqueue_head == $sub.ref(0, 117764));
procedure  __init_waitqueue_head($p0: ref, $p1: ref, $p2: ref)
{
$bb0:
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7183, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "43_1a_cilled_ok_linux-43_1a-drivers--scsi--megaraid--megaraid_mm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-2etp2yh3.i", 7183, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_assume: ref;
axiom (__VERIFIER_assume == $sub.ref(0, 118796));
procedure  __VERIFIER_assume($i0: i32)
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__VERIFIER_assume:arg:x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 38, 3} true;
  assume {:verifier.code 1} true;
  assume $i0 != $0;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 39, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_code: ref;
axiom (__SMACK_code == $sub.ref(0, 119828));
procedure  __SMACK_code.ref($p0: ref);
procedure  __SMACK_code.ref.i32($p0: ref, p.1: i32);
const __SMACK_dummy: ref;
axiom (__SMACK_dummy == $sub.ref(0, 120860));
procedure  __SMACK_dummy($i0: i32)
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_dummy:arg:v"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 59} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_error: ref;
axiom (__VERIFIER_error == $sub.ref(0, 121892));
procedure  __VERIFIER_error()
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 52, 3} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 52, 3} true;
  assume {:verifier.code 1} true;
  assert false;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 59, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_check_overflow: ref;
axiom (__SMACK_check_overflow == $sub.ref(0, 122924));
procedure  __SMACK_check_overflow($i0: i32)
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_check_overflow:arg:flag"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 63, 3} true;
  assume {:verifier.code 1} true;
  assert {:overflow} $i0 == $0;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 64, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_nondet_char: ref;
axiom (__SMACK_nondet_char == $sub.ref(0, 123956));
procedure  __SMACK_nondet_char()
  returns ($r: i8);
const __SMACK_nondet_signed_char: ref;
axiom (__SMACK_nondet_signed_char == $sub.ref(0, 124988));
procedure  __SMACK_nondet_signed_char()
  returns ($r: i8);
const __SMACK_nondet_unsigned_char: ref;
axiom (__SMACK_nondet_unsigned_char == $sub.ref(0, 126020));
procedure  __SMACK_nondet_unsigned_char()
  returns ($r: i8);
const __SMACK_nondet_short: ref;
axiom (__SMACK_nondet_short == $sub.ref(0, 127052));
procedure  __SMACK_nondet_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short: ref;
axiom (__SMACK_nondet_signed_short == $sub.ref(0, 128084));
procedure  __SMACK_nondet_signed_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short_int: ref;
axiom (__SMACK_nondet_signed_short_int == $sub.ref(0, 129116));
procedure  __SMACK_nondet_signed_short_int()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short: ref;
axiom (__SMACK_nondet_unsigned_short == $sub.ref(0, 130148));
procedure  __SMACK_nondet_unsigned_short()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short_int: ref;
axiom (__SMACK_nondet_unsigned_short_int == $sub.ref(0, 131180));
procedure  __SMACK_nondet_unsigned_short_int()
  returns ($r: i16);
const __VERIFIER_nondet_int: ref;
axiom (__VERIFIER_nondet_int == $sub.ref(0, 132212));
procedure  __VERIFIER_nondet_int()
  returns ($r: i32)
{
  var $i0: i32;
  var $i1: i1;
  var $i3: i1;
  var $i2: i1;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 115, 11} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 115, 11} true;
  assume {:verifier.code 1} true;
  call $i0 := __SMACK_nondet_int();
  call {:cexpr "smack:ext:__SMACK_nondet_int"} boogie_si_record_i32($i0);
  call {:cexpr "x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 23} true;
  assume {:verifier.code 0} true;
  $i1 := $sge.i32($i0, $sub.i32(0, 2147483648));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 34} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 39} true;
  assume {:verifier.code 1} true;
  $i3 := $sle.i32($i0, 2147483647);
  assume {:verifier.code 0} true;
  $i2 := $i3;
  goto $bb3;
$bb2:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 34} true;
  assume {:verifier.code 0} true;
  assume !(($i1 == 1));
  goto $bb3;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 34} true;
  assume {:verifier.code 1} true;
  $i4 := $zext.i1.i32($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __SMACK_nondet_int: ref;
axiom (__SMACK_nondet_int == $sub.ref(0, 133244));
procedure  __SMACK_nondet_int()
  returns ($r: i32);
const __SMACK_nondet_signed_int: ref;
axiom (__SMACK_nondet_signed_int == $sub.ref(0, 134276));
procedure  __SMACK_nondet_signed_int()
  returns ($r: i32);
const __SMACK_nondet_unsigned: ref;
axiom (__SMACK_nondet_unsigned == $sub.ref(0, 135308));
procedure  __SMACK_nondet_unsigned()
  returns ($r: i32);
const __SMACK_nondet_unsigned_int: ref;
axiom (__SMACK_nondet_unsigned_int == $sub.ref(0, 136340));
procedure  __SMACK_nondet_unsigned_int()
  returns ($r: i32);
const __SMACK_nondet_long: ref;
axiom (__SMACK_nondet_long == $sub.ref(0, 137372));
procedure  __SMACK_nondet_long()
  returns ($r: i64);
const __SMACK_nondet_long_int: ref;
axiom (__SMACK_nondet_long_int == $sub.ref(0, 138404));
procedure  __SMACK_nondet_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long: ref;
axiom (__SMACK_nondet_signed_long == $sub.ref(0, 139436));
procedure  __SMACK_nondet_signed_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_int: ref;
axiom (__SMACK_nondet_signed_long_int == $sub.ref(0, 140468));
procedure  __SMACK_nondet_signed_long_int()
  returns ($r: i64);
const __VERIFIER_nondet_unsigned_long: ref;
axiom (__VERIFIER_nondet_unsigned_long == $sub.ref(0, 141500));
procedure  __VERIFIER_nondet_unsigned_long()
  returns ($r: i64)
{
  var $i0: i64;
  var $i1: i64;
  var $i2: i64;
  var $i3: i1;
  var $i5: i1;
  var $i6: i1;
  var $i4: i1;
  var $i7: i32;
  var $i8: i1;
  var $i10: i1;
  var $i9: i1;
  var $i11: i32;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 169, 21} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 169, 21} true;
  assume {:verifier.code 1} true;
  call $i0 := __SMACK_nondet_unsigned_long();
  call {:cexpr "smack:ext:__SMACK_nondet_unsigned_long"} boogie_si_record_i64($i0);
  call {:cexpr "x"} boogie_si_record_i64($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 170, 23} true;
  assume {:verifier.code 1} true;
  call $i1 := __SMACK_nondet_unsigned_long();
  call {:cexpr "smack:ext:__SMACK_nondet_unsigned_long"} boogie_si_record_i64($i1);
  call {:cexpr "min"} boogie_si_record_i64($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 171, 23} true;
  assume {:verifier.code 1} true;
  call $i2 := __SMACK_nondet_unsigned_long();
  call {:cexpr "smack:ext:__SMACK_nondet_unsigned_long"} boogie_si_record_i64($i2);
  call {:cexpr "max"} boogie_si_record_i64($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 25} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i64($i1, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 30} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 37} true;
  assume {:verifier.code 0} true;
  $i5 := $uge.i64($i2, 18446744073709551615);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 50} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  assume {:branchcond $i5} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 30} true;
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb3;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 50} true;
  assume {:verifier.code 1} true;
  $i7 := $zext.i1.i32($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i7);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 173, 23} true;
  assume {:verifier.code 0} true;
  $i8 := $uge.i64($i0, $i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 173, 30} true;
  assume {:verifier.code 0} true;
  $i9 := 0;
  assume {:branchcond $i8} true;
  goto $bb6, $bb7;
$bb4:
  assume ($i5 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 57} true;
  assume {:verifier.code 1} true;
  $i6 := $ule.i64($i2, 18446744073709551615);
  assume {:verifier.code 0} true;
  $i4 := $i6;
  goto $bb3;
$bb5:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 50} true;
  assume {:verifier.code 0} true;
  assume !(($i5 == 1));
  goto $bb3;
$bb6:
  assume ($i8 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 173, 35} true;
  assume {:verifier.code 1} true;
  $i10 := $ule.i64($i0, $i2);
  assume {:verifier.code 0} true;
  $i9 := $i10;
  goto $bb8;
$bb7:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 173, 30} true;
  assume {:verifier.code 0} true;
  assume !(($i8 == 1));
  goto $bb8;
$bb8:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 173, 30} true;
  assume {:verifier.code 1} true;
  $i11 := $zext.i1.i32($i9);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 173, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i11);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 174, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __SMACK_nondet_unsigned_long: ref;
axiom (__SMACK_nondet_unsigned_long == $sub.ref(0, 142532));
procedure  __SMACK_nondet_unsigned_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_int == $sub.ref(0, 143564));
procedure  __SMACK_nondet_unsigned_long_int()
  returns ($r: i64);
const __SMACK_nondet_long_long: ref;
axiom (__SMACK_nondet_long_long == $sub.ref(0, 144596));
procedure  __SMACK_nondet_long_long()
  returns ($r: i64);
const __SMACK_nondet_long_long_int: ref;
axiom (__SMACK_nondet_long_long_int == $sub.ref(0, 145628));
procedure  __SMACK_nondet_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long: ref;
axiom (__SMACK_nondet_signed_long_long == $sub.ref(0, 146660));
procedure  __SMACK_nondet_signed_long_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long_int: ref;
axiom (__SMACK_nondet_signed_long_long_int == $sub.ref(0, 147692));
procedure  __SMACK_nondet_signed_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long: ref;
axiom (__SMACK_nondet_unsigned_long_long == $sub.ref(0, 148724));
procedure  __SMACK_nondet_unsigned_long_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_long_int == $sub.ref(0, 149756));
procedure  __SMACK_nondet_unsigned_long_long_int()
  returns ($r: i64);
const __VERIFIER_nondet_bool: ref;
axiom (__VERIFIER_nondet_bool == $sub.ref(0, 150788));
procedure  __VERIFIER_nondet_bool()
  returns ($r: i1)
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i8;
  var $i3: i1;
  var $i4: i32;
  var $i5: i1;
  var $i7: i1;
  var $i8: i32;
  var $i9: i1;
  var $i6: i1;
  var $i10: i32;
  var $i11: i1;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 231, 20} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 231, 20} true;
  assume {:verifier.code 1} true;
  call $i0 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 231, 13} true;
  assume {:verifier.code 0} true;
  $i1 := $ne.i32($i0, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 231, 9} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i1.i8($i1);
  call {:cexpr "x"} boogie_si_record_i8($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 232, 21} true;
  assume {:verifier.code 0} true;
  $i3 := $trunc.i8.i1($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 232, 21} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i1.i32($i3);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 232, 23} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i4, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 232, 28} true;
  assume {:verifier.code 0} true;
  $i6 := 1;
  assume {:branchcond $i5} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 232, 28} true;
  assume {:verifier.code 0} true;
  assume ($i5 == 1);
  goto $bb2;
$bb2:
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 232, 28} true;
  assume {:verifier.code 1} true;
  $i10 := $zext.i1.i32($i6);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 232, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i10);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 233, 10} true;
  assume {:verifier.code 0} true;
  $i11 := $trunc.i8.i1($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 233, 3} true;
  assume {:verifier.code 0} true;
  $r := $i11;
  $exn := false;
  return;
$bb3:
  assume !(($i5 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 232, 31} true;
  assume {:verifier.code 1} true;
  $i7 := $trunc.i8.i1($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 232, 31} true;
  assume {:verifier.code 1} true;
  $i8 := $zext.i1.i32($i7);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 232, 33} true;
  assume {:verifier.code 1} true;
  $i9 := $eq.i32($i8, 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 232, 28} true;
  assume {:verifier.code 0} true;
  $i6 := $i9;
  goto $bb2;
}
const __VERIFIER_nondet_ulong: ref;
axiom (__VERIFIER_nondet_ulong == $sub.ref(0, 151820));
procedure  __VERIFIER_nondet_ulong()
  returns ($r: i64)
{
  var $i0: i64;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 252, 21} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 252, 21} true;
  assume {:verifier.code 1} true;
  call $i0 := __VERIFIER_nondet_unsigned_long();
  call {:cexpr "smack:ext:__VERIFIER_nondet_unsigned_long"} boogie_si_record_i64($i0);
  call {:cexpr "x"} boogie_si_record_i64($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 253, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __VERIFIER_nondet_pointer: ref;
axiom (__VERIFIER_nondet_pointer == $sub.ref(0, 152852));
procedure  __VERIFIER_nondet_pointer()
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 256, 48} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 256, 48} true;
  assume {:verifier.code 1} true;
  call $p0 := __VERIFIER_nondet();
  call {:cexpr "smack:ext:__VERIFIER_nondet"} boogie_si_record_ref($p0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 256, 41} true;
  assume {:verifier.code 0} true;
  $r := $p0;
  $exn := false;
  return;
}
const __VERIFIER_nondet: ref;
axiom (__VERIFIER_nondet == $sub.ref(0, 153884));
procedure  __VERIFIER_nondet()
  returns ($r: ref);
const __SMACK_decls: ref;
axiom (__SMACK_decls == $sub.ref(0, 154916));
type $mop;
procedure  boogie_si_record_mop(m: $mop);
const $MOP: $mop;
var $exn: bool;
var $exnv: int;
procedure  corral_atomic_begin();
procedure  corral_atomic_end();
procedure  $alloc(n: ref) returns (p: ref)
{
  call corral_atomic_begin();
  call p := $$alloc(n);
  call corral_atomic_end();
}

procedure  $malloc(n: ref) returns (p: ref)
{
  call corral_atomic_begin();
  call p := $$alloc(n);
  call corral_atomic_end();
}

var $CurrAddr:ref;

procedure {:inline 1} $$alloc(n: ref) returns (p: ref)
modifies $CurrAddr;
{
  assume $sge.ref.bool(n, $0.ref);
  if ($sgt.ref.bool(n, $0.ref)) {
    p := $CurrAddr;
    havoc $CurrAddr;
    assume $sge.ref.bool($sub.ref($CurrAddr, n), p);
    assume $sgt.ref.bool($CurrAddr, $0.ref) && $slt.ref.bool($CurrAddr, $MALLOC_TOP);
  } else {
    p := $0.ref;
  }
}

procedure  $free(p: ref);

const __SMACK_top_decl: ref;
axiom (__SMACK_top_decl == $sub.ref(0, 155948));
procedure  __SMACK_top_decl.ref($p0: ref);
const __SMACK_init_func_memory_model: ref;
axiom (__SMACK_init_func_memory_model == $sub.ref(0, 156980));
procedure  __SMACK_init_func_memory_model()
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 539, 3} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 539, 3} true;
  assume {:verifier.code 1} true;
  $CurrAddr := $1024.ref;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 544, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_atomic_begin: ref;
axiom (__VERIFIER_atomic_begin == $sub.ref(0, 158012));
procedure  __VERIFIER_atomic_begin()
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 34} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 34} true;
  assume {:verifier.code 1} true;
  call corral_atomic_begin();
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 79} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_atomic_end: ref;
axiom (__VERIFIER_atomic_end == $sub.ref(0, 159044));
procedure  __VERIFIER_atomic_end()
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 548, 32} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 548, 32} true;
  assume {:verifier.code 1} true;
  call corral_atomic_end();
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 548, 75} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const llvm.dbg.value: ref;
axiom (llvm.dbg.value == $sub.ref(0, 160076));
procedure  llvm.dbg.value($p0: ref, $p1: ref, $p2: ref);
const __SMACK_static_init: ref;
axiom (__SMACK_static_init == $sub.ref(0, 161108));
procedure  __SMACK_static_init()
{
$bb0:
  $M.2 := 0;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(0);
  $M.1 := 0;
  call {:cexpr "ldv_spin"} boogie_si_record_i32(0);
  $M.3 := 0;
  call {:cexpr "dbglevel"} boogie_si_record_i32(0);
  $M.0 := $store.ref($M.0, adapters_list_g, $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(adapters_list_g, $mul.ref(0, 16)), $mul.ref(8, 1)), $0.ref);
  $M.0 := $store.i32($M.0, adapters_count_g, 0);
  call {:cexpr "adapters_count_g"} boogie_si_record_i32(0);
  $M.7 := 40;
  $M.8 := 42;
  $M.9 := 115;
  $M.10 := 101;
  $M.11 := 109;
  $M.12 := 41;
  $M.13 := 46;
  $M.14 := 108;
  $M.15 := 111;
  $M.16 := 99;
  $M.17 := 107;
  $M.18 := 0;
  $M.19 := $store.i32($M.19, megaraid_mm_dev, 255);
  $M.20 := $store.ref($M.20, $add.ref($add.ref(megaraid_mm_dev, $mul.ref(0, 72)), $mul.ref(8, 1)), .str.14);
  $M.21 := $store.ref($M.21, $add.ref($add.ref(megaraid_mm_dev, $mul.ref(0, 72)), $mul.ref(16, 1)), lsi_fops);
  $M.22 := $store.ref($M.22, $add.ref($add.ref($add.ref(megaraid_mm_dev, $mul.ref(0, 72)), $mul.ref(24, 1)), $mul.ref(0, 1)), $0.ref);
  $M.23 := $store.ref($M.23, $add.ref($add.ref($add.ref(megaraid_mm_dev, $mul.ref(0, 72)), $mul.ref(24, 1)), $mul.ref(8, 1)), $0.ref);
  $M.24 := $store.ref($M.24, $add.ref($add.ref(megaraid_mm_dev, $mul.ref(0, 72)), $mul.ref(40, 1)), $0.ref);
  $M.25 := $store.ref($M.25, $add.ref($add.ref(megaraid_mm_dev, $mul.ref(0, 72)), $mul.ref(48, 1)), $0.ref);
  $M.26 := $store.ref($M.26, $add.ref($add.ref(megaraid_mm_dev, $mul.ref(0, 72)), $mul.ref(56, 1)), $0.ref);
  $M.27 := $store.i16($M.27, $add.ref($add.ref(megaraid_mm_dev, $mul.ref(0, 72)), $mul.ref(64, 1)), 0);
  $M.28 := __this_module;
  $M.29 := noop_llseek;
  $M.30 := $0.ref;
  $M.31 := $0.ref;
  $M.32 := $0.ref;
  $M.33 := $0.ref;
  $M.34 := $0.ref;
  $M.35 := $0.ref;
  $M.36 := mraid_mm_unlocked_ioctl;
  $M.37 := mraid_mm_compat_ioctl;
  $M.38 := $0.ref;
  $M.39 := mraid_mm_open;
  $M.40 := $0.ref;
  $M.41 := $0.ref;
  $M.42 := $0.ref;
  $M.43 := $0.ref;
  $M.44 := $0.ref;
  $M.45 := $0.ref;
  $M.46 := $0.ref;
  $M.47 := $0.ref;
  $M.48 := $0.ref;
  $M.49 := $0.ref;
  $M.50 := $0.ref;
  $M.51 := $0.ref;
  $M.52 := $0.ref;
  $M.53 := $0.ref;
  $M.54 := $store.i32($M.54, wait_q, 0);
  $M.55 := $store.i32($M.55, $add.ref($add.ref($add.ref($add.ref($add.ref(wait_q, $mul.ref(0, 88)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), 0);
  $M.56 := $store.i32($M.56, $add.ref($add.ref($add.ref($add.ref($add.ref(wait_q, $mul.ref(0, 88)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 0);
  $M.57 := $store.ref($M.57, $add.ref($add.ref($add.ref($add.ref($add.ref(wait_q, $mul.ref(0, 88)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
  $M.58 := $store.ref($M.58, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(wait_q, $mul.ref(0, 88)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $0.ref);
  $M.59 := $store.ref($M.59, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(wait_q, $mul.ref(0, 88)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(8, 1)), $mul.ref(0, 8)), $0.ref);
  $M.60 := $store.ref($M.60, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(wait_q, $mul.ref(0, 88)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(8, 1)), $mul.ref(1, 8)), $0.ref);
  $M.61 := $store.ref($M.61, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(wait_q, $mul.ref(0, 88)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(24, 1)), $0.ref);
  $M.62 := $store.i32($M.62, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(wait_q, $mul.ref(0, 88)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(32, 1)), 0);
  $M.63 := $store.i64($M.63, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(wait_q, $mul.ref(0, 88)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(40, 1)), 0);
  $M.64 := $store.ref($M.64, $add.ref($add.ref($add.ref(wait_q, $mul.ref(0, 88)), $mul.ref(72, 1)), $mul.ref(0, 1)), $0.ref);
  $M.65 := $store.ref($M.65, $add.ref($add.ref($add.ref(wait_q, $mul.ref(0, 88)), $mul.ref(72, 1)), $mul.ref(8, 1)), $0.ref);
  $M.0 := $store.i32($M.0, drvr_ver, 35652103);
  call {:cexpr "drvr_ver"} boogie_si_record_i32(35652103);
  $M.66 := $store.i32($M.66, mraid_mm_mutex, 1);
  $M.67 := $store.i32($M.67, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(mraid_mm_mutex, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
  $M.68 := $store.i32($M.68, $add.ref($add.ref($add.ref($add.ref($add.ref(mraid_mm_mutex, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $sub.i32(0, 559067475));
  $M.69 := $store.i32($M.69, $add.ref($add.ref($add.ref($add.ref($add.ref(mraid_mm_mutex, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), $sub.i32(0, 1));
  $M.70 := $store.ref($M.70, $add.ref($add.ref($add.ref($add.ref($add.ref(mraid_mm_mutex, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $i2p.i64.ref($sub.i64(0, 1)));
  $M.71 := $store.ref($M.71, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(mraid_mm_mutex, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $0.ref);
  $M.72 := $store.ref($M.72, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(mraid_mm_mutex, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(8, 1)), $mul.ref(0, 8)), $0.ref);
  $M.73 := $store.ref($M.73, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(mraid_mm_mutex, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(8, 1)), $mul.ref(1, 8)), $0.ref);
  $M.74 := $store.ref($M.74, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(mraid_mm_mutex, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(24, 1)), .str.16);
  $M.75 := $store.i32($M.75, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(mraid_mm_mutex, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(32, 1)), 0);
  $M.76 := $store.i64($M.76, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(mraid_mm_mutex, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(40, 1)), 0);
  $M.77 := $store.ref($M.77, $add.ref($add.ref($add.ref(mraid_mm_mutex, $mul.ref(0, 168)), $mul.ref(80, 1)), $mul.ref(0, 1)), $add.ref(mraid_mm_mutex, $mul.ref(80, 1)));
  $M.78 := $store.ref($M.78, $add.ref($add.ref($add.ref(mraid_mm_mutex, $mul.ref(0, 168)), $mul.ref(80, 1)), $mul.ref(8, 1)), $add.ref(mraid_mm_mutex, $mul.ref(80, 1)));
  $M.79 := $store.ref($M.79, $add.ref($add.ref(mraid_mm_mutex, $mul.ref(0, 168)), $mul.ref(96, 1)), $0.ref);
  $M.80 := $store.ref($M.80, $add.ref($add.ref(mraid_mm_mutex, $mul.ref(0, 168)), $mul.ref(104, 1)), $0.ref);
  $M.81 := $store.ref($M.81, $add.ref($add.ref(mraid_mm_mutex, $mul.ref(0, 168)), $mul.ref(112, 1)), mraid_mm_mutex);
  $M.82 := $store.ref($M.82, $add.ref($add.ref($add.ref(mraid_mm_mutex, $mul.ref(0, 168)), $mul.ref(120, 1)), $mul.ref(0, 1)), $0.ref);
  $M.83 := $store.ref($M.83, $add.ref($add.ref($add.ref($add.ref(mraid_mm_mutex, $mul.ref(0, 168)), $mul.ref(120, 1)), $mul.ref(8, 1)), $mul.ref(0, 8)), $0.ref);
  $M.84 := $store.ref($M.84, $add.ref($add.ref($add.ref($add.ref(mraid_mm_mutex, $mul.ref(0, 168)), $mul.ref(120, 1)), $mul.ref(8, 1)), $mul.ref(1, 8)), $0.ref);
  $M.85 := $store.ref($M.85, $add.ref($add.ref($add.ref(mraid_mm_mutex, $mul.ref(0, 168)), $mul.ref(120, 1)), $mul.ref(24, 1)), .str.17);
  $M.86 := $store.i32($M.86, $add.ref($add.ref($add.ref(mraid_mm_mutex, $mul.ref(0, 168)), $mul.ref(120, 1)), $mul.ref(32, 1)), 0);
  $M.87 := $store.i64($M.87, $add.ref($add.ref($add.ref(mraid_mm_mutex, $mul.ref(0, 168)), $mul.ref(120, 1)), $mul.ref(40, 1)), 0);
  $M.88 := .str.1.43;
  $M.89 := 0;
  call {:cexpr "errno_global"} boogie_si_record_i32(0);
  $exn := false;
  return;
}
const devirtbounce: ref;
axiom (devirtbounce == $sub.ref(0, 162140));
procedure  devirtbounce(funcPtr: ref, arg: i64, arg1: ref, arg2: i32)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i32;
  var $i3: i1;
  var $i4: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i4 := $eq.ref(__builtinx_expect, $p0);
  assume {:branchcond $i4} true;
  goto $bb3, $bb5;
$bb2:
  assume ($i3 == 1);
  call $i1 := __builtinx_object_size();
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume ($i4 == 1);
  call $i2 := __builtinx_expect();
  $r := $i2;
  $exn := false;
  return;
$bb4:
  assume !(($i3 == 1));
  assume false;
$bb5:
  assume !(($i4 == 1));
  $i3 := $eq.ref(__builtinx_object_size, $p0);
  assume {:branchcond $i3} true;
  goto $bb2, $bb4;
}
const devirtbounce.1: ref;
axiom (devirtbounce.1 == $sub.ref(0, 163172));
procedure  devirtbounce.1(funcPtr: ref, arg: ref)
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
procedure  $memset.i8(M: [ref] i8, dst: ref, val: i8, len: ref, isvolatile: bool) returns (M.ret: [ref] i8)
{
  assume (forall x: ref :: $sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len)) ==> M.ret[x] == val);
  assume (forall x: ref :: $slt.ref.bool(x,dst) ==> M.ret[x] == M[x]);
  assume (forall x: ref :: $sle.ref.bool($add.ref(dst,len),x) ==> M.ret[x] == M[x]);
}

const $u0: ref;
const $u1: ref;
const $u2: i32;
const $u3: i64;
const $u4: ref;
const $u5: ref;
const $u6: ref;
procedure  boogie_si_record_i1(x: i1);
procedure  boogie_si_record_i16(x: i16);
procedure  boogie_si_record_i32(x: i32);
procedure  boogie_si_record_i64(x: i64);
procedure  boogie_si_record_i8(x: i8);
procedure  boogie_si_record_ref(x: ref);
procedure  $initialize()
{
  call __SMACK_static_init();
  call __SMACK_init_func_memory_model();
  return;
}
