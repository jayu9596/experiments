// generated by SMACK version 2.4.1 for svcomp
// via /usr/local/bin/smack /proj/SMACK/SMACKBenchResults/data/sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out.i -x svcomp --verifier svcomp -t -q -bpl 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out.i.bpl

// Basic types
type i1 = int;
type i5 = int;
type i6 = int;
type i8 = int;
type i16 = int;
type i24 = int;
type i32 = int;
type i40 = int;
type i48 = int;
type i56 = int;
type i64 = int;
type i80 = int;
type i88 = int;
type i96 = int;
type i128 = int;
type i160 = int;
type i256 = int;
type ref = i64;
type float;

// Basic constants
const $0: i32;
axiom ($0 == 0);
const $1: i32;
axiom ($1 == 1);
const $0.ref: ref;
axiom ($0.ref == 0);
const $1.ref: ref;
axiom ($1.ref == 1);
const $1024.ref: ref;
axiom ($1024.ref == 1024);
// Memory model constants
const $GLOBALS_BOTTOM: ref;
const $EXTERNS_BOTTOM: ref;
const $MALLOC_TOP: ref;

// Memory maps (228 regions)
var $M.0: [ref] i8;
var $M.1: i32;
var $M.2: i32;
var $M.3: ref;
var $M.4: i32;
var $M.5: i32;
var $M.6: ref;
var $M.7: i32;
var $M.8: i32;
var $M.9: ref;
var $M.10: i32;
var $M.11: i32;
var $M.12: ref;
var $M.13: i32;
var $M.14: [ref] i8;
var $M.15: [ref] i8;
var $M.16: [ref] i8;
var $M.17: [ref] ref;
var $M.18: [ref] ref;
var $M.19: [ref] ref;
var $M.20: [ref] ref;
var $M.21: [ref] i24;
var $M.22: [ref] i8;
var $M.23: [ref] i8;
var $M.24: ref;
var $M.25: i32;
var $M.26: [ref] ref;
var $M.27: ref;
var $M.28: i32;
var $M.29: ref;
var $M.30: i32;
var $M.31: ref;
var $M.32: i32;
var $M.33: ref;
var $M.34: i32;
var $M.35: ref;
var $M.36: i32;
var $M.37: ref;
var $M.38: i32;
var $M.39: ref;
var $M.40: i32;
var $M.41: ref;
var $M.42: i32;
var $M.43: ref;
var $M.44: ref;
var $M.45: i32;
var $M.46: i32;
var $M.47: i32;
var $M.48: i32;
var $M.49: i32;
var $M.50: i32;
var $M.51: i32;
var $M.52: i32;
var $M.53: i32;
var $M.54: [ref] i8;
var $M.55: ref;
var $M.56: ref;
var $M.57: ref;
var $M.58: ref;
var $M.59: i8;
var $M.60: i8;
var $M.61: i8;
var $M.62: i8;
var $M.63: i8;
var $M.64: i8;
var $M.65: i8;
var $M.66: i8;
var $M.67: i8;
var $M.68: i8;
var $M.69: i8;
var $M.70: i8;
var $M.71: i8;
var $M.72: i8;
var $M.73: i8;
var $M.74: i8;
var $M.75: i8;
var $M.76: i8;
var $M.77: i8;
var $M.78: i8;
var $M.79: i8;
var $M.80: i8;
var $M.81: i8;
var $M.82: i8;
var $M.83: i8;
var $M.84: i8;
var $M.85: i8;
var $M.86: i8;
var $M.87: i8;
var $M.88: i8;
var $M.89: i8;
var $M.90: i8;
var $M.91: i64;
var $M.92: [ref] ref;
var $M.93: [ref] ref;
var $M.94: [ref] ref;
var $M.95: [ref] ref;
var $M.96: [ref] ref;
var $M.97: [ref] ref;
var $M.98: [ref] ref;
var $M.99: [ref] ref;
var $M.100: [ref] ref;
var $M.101: [ref] ref;
var $M.102: [ref] ref;
var $M.103: [ref] ref;
var $M.104: [ref] ref;
var $M.105: [ref] ref;
var $M.106: [ref] ref;
var $M.107: [ref] ref;
var $M.108: [ref] ref;
var $M.109: [ref] ref;
var $M.110: [ref] ref;
var $M.111: [ref] ref;
var $M.112: [ref] ref;
var $M.113: [ref] ref;
var $M.114: [ref] ref;
var $M.115: [ref] ref;
var $M.116: [ref] i8;
var $M.117: [ref] ref;
var $M.118: [ref] ref;
var $M.119: [ref] ref;
var $M.120: [ref] ref;
var $M.121: [ref] ref;
var $M.122: [ref] ref;
var $M.123: [ref] ref;
var $M.124: [ref] ref;
var $M.125: [ref] ref;
var $M.126: [ref] ref;
var $M.127: i8;
var $M.128: i8;
var $M.129: i8;
var $M.130: i8;
var $M.131: i8;
var $M.132: i8;
var $M.133: i8;
var $M.134: i8;
var $M.135: i8;
var $M.136: i8;
var $M.137: i8;
var $M.138: i8;
var $M.139: i8;
var $M.140: i8;
var $M.141: i8;
var $M.142: i8;
var $M.143: i8;
var $M.144: i8;
var $M.145: i8;
var $M.146: i8;
var $M.147: i8;
var $M.148: i8;
var $M.149: i8;
var $M.150: i8;
var $M.151: i8;
var $M.152: i8;
var $M.153: i8;
var $M.154: i8;
var $M.155: i8;
var $M.156: i8;
var $M.157: i8;
var $M.158: i8;
var $M.159: i64;
var $M.160: i8;
var $M.161: i8;
var $M.162: i8;
var $M.163: i8;
var $M.164: i8;
var $M.165: i8;
var $M.166: i8;
var $M.167: i8;
var $M.168: i8;
var $M.169: i8;
var $M.170: i8;
var $M.171: i8;
var $M.172: i8;
var $M.173: i8;
var $M.174: i8;
var $M.175: i8;
var $M.176: i8;
var $M.177: i8;
var $M.178: i8;
var $M.179: i8;
var $M.180: i8;
var $M.181: i8;
var $M.182: i8;
var $M.183: i8;
var $M.184: i8;
var $M.185: i8;
var $M.186: i8;
var $M.187: i8;
var $M.188: i8;
var $M.189: i8;
var $M.190: i8;
var $M.191: i8;
var $M.192: i64;
var $M.193: i8;
var $M.194: i8;
var $M.195: i8;
var $M.196: i8;
var $M.197: i8;
var $M.198: i8;
var $M.199: i8;
var $M.200: i8;
var $M.201: i8;
var $M.202: i8;
var $M.203: i8;
var $M.204: i8;
var $M.205: i8;
var $M.206: i8;
var $M.207: i8;
var $M.208: i8;
var $M.209: i8;
var $M.210: i8;
var $M.211: i8;
var $M.212: i8;
var $M.213: i8;
var $M.214: i8;
var $M.215: i8;
var $M.216: i8;
var $M.217: i8;
var $M.218: i8;
var $M.219: i8;
var $M.220: i8;
var $M.221: i8;
var $M.222: i8;
var $M.223: i8;
var $M.224: i8;
var $M.225: i64;
var $M.226: ref;
var $M.227: i32;

// Memory address bounds
axiom ($GLOBALS_BOTTOM == $sub.ref(0, 235505));
axiom ($EXTERNS_BOTTOM == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32784)));
axiom ($MALLOC_TOP == 9223372036854775807);
function {:inline} $isExternal(p: ref) returns (bool) { $slt.ref.bool(p, $EXTERNS_BOTTOM) }

// SMT bit-vector/integer conversion
function {:builtin "(_ int2bv 64)"} $int2bv.64(i: i64) returns (bv64);
function {:builtin "bv2nat"} $bv2int.64(i: bv64) returns (i64);

// Integer arithmetic operations
function {:inline} $add.i1(i1: i1, i2: i1) returns (i1) { (i1 + i2) }
function {:inline} $add.i5(i1: i5, i2: i5) returns (i5) { (i1 + i2) }
function {:inline} $add.i6(i1: i6, i2: i6) returns (i6) { (i1 + i2) }
function {:inline} $add.i8(i1: i8, i2: i8) returns (i8) { (i1 + i2) }
function {:inline} $add.i16(i1: i16, i2: i16) returns (i16) { (i1 + i2) }
function {:inline} $add.i24(i1: i24, i2: i24) returns (i24) { (i1 + i2) }
function {:inline} $add.i32(i1: i32, i2: i32) returns (i32) { (i1 + i2) }
function {:inline} $add.i40(i1: i40, i2: i40) returns (i40) { (i1 + i2) }
function {:inline} $add.i48(i1: i48, i2: i48) returns (i48) { (i1 + i2) }
function {:inline} $add.i56(i1: i56, i2: i56) returns (i56) { (i1 + i2) }
function {:inline} $add.i64(i1: i64, i2: i64) returns (i64) { (i1 + i2) }
function {:inline} $add.i80(i1: i80, i2: i80) returns (i80) { (i1 + i2) }
function {:inline} $add.i88(i1: i88, i2: i88) returns (i88) { (i1 + i2) }
function {:inline} $add.i96(i1: i96, i2: i96) returns (i96) { (i1 + i2) }
function {:inline} $add.i128(i1: i128, i2: i128) returns (i128) { (i1 + i2) }
function {:inline} $add.i160(i1: i160, i2: i160) returns (i160) { (i1 + i2) }
function {:inline} $add.i256(i1: i256, i2: i256) returns (i256) { (i1 + i2) }
function {:inline} $sub.i1(i1: i1, i2: i1) returns (i1) { (i1 - i2) }
function {:inline} $sub.i5(i1: i5, i2: i5) returns (i5) { (i1 - i2) }
function {:inline} $sub.i6(i1: i6, i2: i6) returns (i6) { (i1 - i2) }
function {:inline} $sub.i8(i1: i8, i2: i8) returns (i8) { (i1 - i2) }
function {:inline} $sub.i16(i1: i16, i2: i16) returns (i16) { (i1 - i2) }
function {:inline} $sub.i24(i1: i24, i2: i24) returns (i24) { (i1 - i2) }
function {:inline} $sub.i32(i1: i32, i2: i32) returns (i32) { (i1 - i2) }
function {:inline} $sub.i40(i1: i40, i2: i40) returns (i40) { (i1 - i2) }
function {:inline} $sub.i48(i1: i48, i2: i48) returns (i48) { (i1 - i2) }
function {:inline} $sub.i56(i1: i56, i2: i56) returns (i56) { (i1 - i2) }
function {:inline} $sub.i64(i1: i64, i2: i64) returns (i64) { (i1 - i2) }
function {:inline} $sub.i80(i1: i80, i2: i80) returns (i80) { (i1 - i2) }
function {:inline} $sub.i88(i1: i88, i2: i88) returns (i88) { (i1 - i2) }
function {:inline} $sub.i96(i1: i96, i2: i96) returns (i96) { (i1 - i2) }
function {:inline} $sub.i128(i1: i128, i2: i128) returns (i128) { (i1 - i2) }
function {:inline} $sub.i160(i1: i160, i2: i160) returns (i160) { (i1 - i2) }
function {:inline} $sub.i256(i1: i256, i2: i256) returns (i256) { (i1 - i2) }
function {:inline} $mul.i1(i1: i1, i2: i1) returns (i1) { (i1 * i2) }
function {:inline} $mul.i5(i1: i5, i2: i5) returns (i5) { (i1 * i2) }
function {:inline} $mul.i6(i1: i6, i2: i6) returns (i6) { (i1 * i2) }
function {:inline} $mul.i8(i1: i8, i2: i8) returns (i8) { (i1 * i2) }
function {:inline} $mul.i16(i1: i16, i2: i16) returns (i16) { (i1 * i2) }
function {:inline} $mul.i24(i1: i24, i2: i24) returns (i24) { (i1 * i2) }
function {:inline} $mul.i32(i1: i32, i2: i32) returns (i32) { (i1 * i2) }
function {:inline} $mul.i40(i1: i40, i2: i40) returns (i40) { (i1 * i2) }
function {:inline} $mul.i48(i1: i48, i2: i48) returns (i48) { (i1 * i2) }
function {:inline} $mul.i56(i1: i56, i2: i56) returns (i56) { (i1 * i2) }
function {:inline} $mul.i64(i1: i64, i2: i64) returns (i64) { (i1 * i2) }
function {:inline} $mul.i80(i1: i80, i2: i80) returns (i80) { (i1 * i2) }
function {:inline} $mul.i88(i1: i88, i2: i88) returns (i88) { (i1 * i2) }
function {:inline} $mul.i96(i1: i96, i2: i96) returns (i96) { (i1 * i2) }
function {:inline} $mul.i128(i1: i128, i2: i128) returns (i128) { (i1 * i2) }
function {:inline} $mul.i160(i1: i160, i2: i160) returns (i160) { (i1 * i2) }
function {:inline} $mul.i256(i1: i256, i2: i256) returns (i256) { (i1 * i2) }
function {:builtin "div"} $sdiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "div"} $sdiv.i5(i1: i5, i2: i5) returns (i5);
function {:builtin "div"} $sdiv.i6(i1: i6, i2: i6) returns (i6);
function {:builtin "div"} $sdiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $sdiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $sdiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $sdiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $sdiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $sdiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $sdiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $sdiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $sdiv.i80(i1: i80, i2: i80) returns (i80);
function {:builtin "div"} $sdiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $sdiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $sdiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $sdiv.i160(i1: i160, i2: i160) returns (i160);
function {:builtin "div"} $sdiv.i256(i1: i256, i2: i256) returns (i256);
function {:builtin "mod"} $smod.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "mod"} $smod.i5(i1: i5, i2: i5) returns (i5);
function {:builtin "mod"} $smod.i6(i1: i6, i2: i6) returns (i6);
function {:builtin "mod"} $smod.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "mod"} $smod.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "mod"} $smod.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "mod"} $smod.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "mod"} $smod.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "mod"} $smod.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "mod"} $smod.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "mod"} $smod.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "mod"} $smod.i80(i1: i80, i2: i80) returns (i80);
function {:builtin "mod"} $smod.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "mod"} $smod.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "mod"} $smod.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "mod"} $smod.i160(i1: i160, i2: i160) returns (i160);
function {:builtin "mod"} $smod.i256(i1: i256, i2: i256) returns (i256);
function {:builtin "div"} $udiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "div"} $udiv.i5(i1: i5, i2: i5) returns (i5);
function {:builtin "div"} $udiv.i6(i1: i6, i2: i6) returns (i6);
function {:builtin "div"} $udiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $udiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $udiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $udiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $udiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $udiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $udiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $udiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $udiv.i80(i1: i80, i2: i80) returns (i80);
function {:builtin "div"} $udiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $udiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $udiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $udiv.i160(i1: i160, i2: i160) returns (i160);
function {:builtin "div"} $udiv.i256(i1: i256, i2: i256) returns (i256);
function {:inline} $srem.i1(i1: i1, i2: i1) returns (i1) { (if ($ne.i1.bool($smod.i1(i1, i2), 0) && $slt.i1.bool(i1, 0)) then $sub.i1($smod.i1(i1, i2), $smax.i1(i2, $sub.i1(0, i2))) else $smod.i1(i1, i2)) }
function {:inline} $srem.i5(i1: i5, i2: i5) returns (i5) { (if ($ne.i5.bool($smod.i5(i1, i2), 0) && $slt.i5.bool(i1, 0)) then $sub.i5($smod.i5(i1, i2), $smax.i5(i2, $sub.i5(0, i2))) else $smod.i5(i1, i2)) }
function {:inline} $srem.i6(i1: i6, i2: i6) returns (i6) { (if ($ne.i6.bool($smod.i6(i1, i2), 0) && $slt.i6.bool(i1, 0)) then $sub.i6($smod.i6(i1, i2), $smax.i6(i2, $sub.i6(0, i2))) else $smod.i6(i1, i2)) }
function {:inline} $srem.i8(i1: i8, i2: i8) returns (i8) { (if ($ne.i8.bool($smod.i8(i1, i2), 0) && $slt.i8.bool(i1, 0)) then $sub.i8($smod.i8(i1, i2), $smax.i8(i2, $sub.i8(0, i2))) else $smod.i8(i1, i2)) }
function {:inline} $srem.i16(i1: i16, i2: i16) returns (i16) { (if ($ne.i16.bool($smod.i16(i1, i2), 0) && $slt.i16.bool(i1, 0)) then $sub.i16($smod.i16(i1, i2), $smax.i16(i2, $sub.i16(0, i2))) else $smod.i16(i1, i2)) }
function {:inline} $srem.i24(i1: i24, i2: i24) returns (i24) { (if ($ne.i24.bool($smod.i24(i1, i2), 0) && $slt.i24.bool(i1, 0)) then $sub.i24($smod.i24(i1, i2), $smax.i24(i2, $sub.i24(0, i2))) else $smod.i24(i1, i2)) }
function {:inline} $srem.i32(i1: i32, i2: i32) returns (i32) { (if ($ne.i32.bool($smod.i32(i1, i2), 0) && $slt.i32.bool(i1, 0)) then $sub.i32($smod.i32(i1, i2), $smax.i32(i2, $sub.i32(0, i2))) else $smod.i32(i1, i2)) }
function {:inline} $srem.i40(i1: i40, i2: i40) returns (i40) { (if ($ne.i40.bool($smod.i40(i1, i2), 0) && $slt.i40.bool(i1, 0)) then $sub.i40($smod.i40(i1, i2), $smax.i40(i2, $sub.i40(0, i2))) else $smod.i40(i1, i2)) }
function {:inline} $srem.i48(i1: i48, i2: i48) returns (i48) { (if ($ne.i48.bool($smod.i48(i1, i2), 0) && $slt.i48.bool(i1, 0)) then $sub.i48($smod.i48(i1, i2), $smax.i48(i2, $sub.i48(0, i2))) else $smod.i48(i1, i2)) }
function {:inline} $srem.i56(i1: i56, i2: i56) returns (i56) { (if ($ne.i56.bool($smod.i56(i1, i2), 0) && $slt.i56.bool(i1, 0)) then $sub.i56($smod.i56(i1, i2), $smax.i56(i2, $sub.i56(0, i2))) else $smod.i56(i1, i2)) }
function {:inline} $srem.i64(i1: i64, i2: i64) returns (i64) { (if ($ne.i64.bool($smod.i64(i1, i2), 0) && $slt.i64.bool(i1, 0)) then $sub.i64($smod.i64(i1, i2), $smax.i64(i2, $sub.i64(0, i2))) else $smod.i64(i1, i2)) }
function {:inline} $srem.i80(i1: i80, i2: i80) returns (i80) { (if ($ne.i80.bool($smod.i80(i1, i2), 0) && $slt.i80.bool(i1, 0)) then $sub.i80($smod.i80(i1, i2), $smax.i80(i2, $sub.i80(0, i2))) else $smod.i80(i1, i2)) }
function {:inline} $srem.i88(i1: i88, i2: i88) returns (i88) { (if ($ne.i88.bool($smod.i88(i1, i2), 0) && $slt.i88.bool(i1, 0)) then $sub.i88($smod.i88(i1, i2), $smax.i88(i2, $sub.i88(0, i2))) else $smod.i88(i1, i2)) }
function {:inline} $srem.i96(i1: i96, i2: i96) returns (i96) { (if ($ne.i96.bool($smod.i96(i1, i2), 0) && $slt.i96.bool(i1, 0)) then $sub.i96($smod.i96(i1, i2), $smax.i96(i2, $sub.i96(0, i2))) else $smod.i96(i1, i2)) }
function {:inline} $srem.i128(i1: i128, i2: i128) returns (i128) { (if ($ne.i128.bool($smod.i128(i1, i2), 0) && $slt.i128.bool(i1, 0)) then $sub.i128($smod.i128(i1, i2), $smax.i128(i2, $sub.i128(0, i2))) else $smod.i128(i1, i2)) }
function {:inline} $srem.i160(i1: i160, i2: i160) returns (i160) { (if ($ne.i160.bool($smod.i160(i1, i2), 0) && $slt.i160.bool(i1, 0)) then $sub.i160($smod.i160(i1, i2), $smax.i160(i2, $sub.i160(0, i2))) else $smod.i160(i1, i2)) }
function {:inline} $srem.i256(i1: i256, i2: i256) returns (i256) { (if ($ne.i256.bool($smod.i256(i1, i2), 0) && $slt.i256.bool(i1, 0)) then $sub.i256($smod.i256(i1, i2), $smax.i256(i2, $sub.i256(0, i2))) else $smod.i256(i1, i2)) }
function {:inline} $urem.i1(i1: i1, i2: i1) returns (i1) { $smod.i1(i1, i2) }
function {:inline} $urem.i5(i1: i5, i2: i5) returns (i5) { $smod.i5(i1, i2) }
function {:inline} $urem.i6(i1: i6, i2: i6) returns (i6) { $smod.i6(i1, i2) }
function {:inline} $urem.i8(i1: i8, i2: i8) returns (i8) { $smod.i8(i1, i2) }
function {:inline} $urem.i16(i1: i16, i2: i16) returns (i16) { $smod.i16(i1, i2) }
function {:inline} $urem.i24(i1: i24, i2: i24) returns (i24) { $smod.i24(i1, i2) }
function {:inline} $urem.i32(i1: i32, i2: i32) returns (i32) { $smod.i32(i1, i2) }
function {:inline} $urem.i40(i1: i40, i2: i40) returns (i40) { $smod.i40(i1, i2) }
function {:inline} $urem.i48(i1: i48, i2: i48) returns (i48) { $smod.i48(i1, i2) }
function {:inline} $urem.i56(i1: i56, i2: i56) returns (i56) { $smod.i56(i1, i2) }
function {:inline} $urem.i64(i1: i64, i2: i64) returns (i64) { $smod.i64(i1, i2) }
function {:inline} $urem.i80(i1: i80, i2: i80) returns (i80) { $smod.i80(i1, i2) }
function {:inline} $urem.i88(i1: i88, i2: i88) returns (i88) { $smod.i88(i1, i2) }
function {:inline} $urem.i96(i1: i96, i2: i96) returns (i96) { $smod.i96(i1, i2) }
function {:inline} $urem.i128(i1: i128, i2: i128) returns (i128) { $smod.i128(i1, i2) }
function {:inline} $urem.i160(i1: i160, i2: i160) returns (i160) { $smod.i160(i1, i2) }
function {:inline} $urem.i256(i1: i256, i2: i256) returns (i256) { $smod.i256(i1, i2) }
function $shl.i1(i1: i1, i2: i1) returns (i1);
function $shl.i5(i1: i5, i2: i5) returns (i5);
function $shl.i6(i1: i6, i2: i6) returns (i6);
function $shl.i8(i1: i8, i2: i8) returns (i8);
function $shl.i16(i1: i16, i2: i16) returns (i16);
function $shl.i24(i1: i24, i2: i24) returns (i24);
function $shl.i32(i1: i32, i2: i32) returns (i32);
function $shl.i40(i1: i40, i2: i40) returns (i40);
function $shl.i48(i1: i48, i2: i48) returns (i48);
function $shl.i56(i1: i56, i2: i56) returns (i56);
function $shl.i64(i1: i64, i2: i64) returns (i64);
function $shl.i80(i1: i80, i2: i80) returns (i80);
function $shl.i88(i1: i88, i2: i88) returns (i88);
function $shl.i96(i1: i96, i2: i96) returns (i96);
function $shl.i128(i1: i128, i2: i128) returns (i128);
function $shl.i160(i1: i160, i2: i160) returns (i160);
function $shl.i256(i1: i256, i2: i256) returns (i256);
function $lshr.i1(i1: i1, i2: i1) returns (i1);
function $lshr.i5(i1: i5, i2: i5) returns (i5);
function $lshr.i6(i1: i6, i2: i6) returns (i6);
function $lshr.i8(i1: i8, i2: i8) returns (i8);
function $lshr.i16(i1: i16, i2: i16) returns (i16);
function $lshr.i24(i1: i24, i2: i24) returns (i24);
function $lshr.i32(i1: i32, i2: i32) returns (i32);
function $lshr.i40(i1: i40, i2: i40) returns (i40);
function $lshr.i48(i1: i48, i2: i48) returns (i48);
function $lshr.i56(i1: i56, i2: i56) returns (i56);
function $lshr.i64(i1: i64, i2: i64) returns (i64);
function $lshr.i80(i1: i80, i2: i80) returns (i80);
function $lshr.i88(i1: i88, i2: i88) returns (i88);
function $lshr.i96(i1: i96, i2: i96) returns (i96);
function $lshr.i128(i1: i128, i2: i128) returns (i128);
function $lshr.i160(i1: i160, i2: i160) returns (i160);
function $lshr.i256(i1: i256, i2: i256) returns (i256);
function $ashr.i1(i1: i1, i2: i1) returns (i1);
function $ashr.i5(i1: i5, i2: i5) returns (i5);
function $ashr.i6(i1: i6, i2: i6) returns (i6);
function $ashr.i8(i1: i8, i2: i8) returns (i8);
function $ashr.i16(i1: i16, i2: i16) returns (i16);
function $ashr.i24(i1: i24, i2: i24) returns (i24);
function $ashr.i32(i1: i32, i2: i32) returns (i32);
function $ashr.i40(i1: i40, i2: i40) returns (i40);
function $ashr.i48(i1: i48, i2: i48) returns (i48);
function $ashr.i56(i1: i56, i2: i56) returns (i56);
function $ashr.i64(i1: i64, i2: i64) returns (i64);
function $ashr.i80(i1: i80, i2: i80) returns (i80);
function $ashr.i88(i1: i88, i2: i88) returns (i88);
function $ashr.i96(i1: i96, i2: i96) returns (i96);
function $ashr.i128(i1: i128, i2: i128) returns (i128);
function $ashr.i160(i1: i160, i2: i160) returns (i160);
function $ashr.i256(i1: i256, i2: i256) returns (i256);
function $and.i1(i1: i1, i2: i1) returns (i1);
function $and.i5(i1: i5, i2: i5) returns (i5);
function $and.i6(i1: i6, i2: i6) returns (i6);
function $and.i8(i1: i8, i2: i8) returns (i8);
function $and.i16(i1: i16, i2: i16) returns (i16);
function $and.i24(i1: i24, i2: i24) returns (i24);
function $and.i32(i1: i32, i2: i32) returns (i32);
function $and.i40(i1: i40, i2: i40) returns (i40);
function $and.i48(i1: i48, i2: i48) returns (i48);
function $and.i56(i1: i56, i2: i56) returns (i56);
function $and.i64(i1: i64, i2: i64) returns (i64);
function $and.i80(i1: i80, i2: i80) returns (i80);
function $and.i88(i1: i88, i2: i88) returns (i88);
function $and.i96(i1: i96, i2: i96) returns (i96);
function $and.i128(i1: i128, i2: i128) returns (i128);
function $and.i160(i1: i160, i2: i160) returns (i160);
function $and.i256(i1: i256, i2: i256) returns (i256);
function $or.i1(i1: i1, i2: i1) returns (i1);
function $or.i5(i1: i5, i2: i5) returns (i5);
function $or.i6(i1: i6, i2: i6) returns (i6);
function $or.i8(i1: i8, i2: i8) returns (i8);
function $or.i16(i1: i16, i2: i16) returns (i16);
function $or.i24(i1: i24, i2: i24) returns (i24);
function $or.i32(i1: i32, i2: i32) returns (i32);
function $or.i40(i1: i40, i2: i40) returns (i40);
function $or.i48(i1: i48, i2: i48) returns (i48);
function $or.i56(i1: i56, i2: i56) returns (i56);
function $or.i64(i1: i64, i2: i64) returns (i64);
function $or.i80(i1: i80, i2: i80) returns (i80);
function $or.i88(i1: i88, i2: i88) returns (i88);
function $or.i96(i1: i96, i2: i96) returns (i96);
function $or.i128(i1: i128, i2: i128) returns (i128);
function $or.i160(i1: i160, i2: i160) returns (i160);
function $or.i256(i1: i256, i2: i256) returns (i256);
function $xor.i1(i1: i1, i2: i1) returns (i1);
function $xor.i5(i1: i5, i2: i5) returns (i5);
function $xor.i6(i1: i6, i2: i6) returns (i6);
function $xor.i8(i1: i8, i2: i8) returns (i8);
function $xor.i16(i1: i16, i2: i16) returns (i16);
function $xor.i24(i1: i24, i2: i24) returns (i24);
function $xor.i32(i1: i32, i2: i32) returns (i32);
function $xor.i40(i1: i40, i2: i40) returns (i40);
function $xor.i48(i1: i48, i2: i48) returns (i48);
function $xor.i56(i1: i56, i2: i56) returns (i56);
function $xor.i64(i1: i64, i2: i64) returns (i64);
function $xor.i80(i1: i80, i2: i80) returns (i80);
function $xor.i88(i1: i88, i2: i88) returns (i88);
function $xor.i96(i1: i96, i2: i96) returns (i96);
function $xor.i128(i1: i128, i2: i128) returns (i128);
function $xor.i160(i1: i160, i2: i160) returns (i160);
function $xor.i256(i1: i256, i2: i256) returns (i256);
function $nand.i1(i1: i1, i2: i1) returns (i1);
function $nand.i5(i1: i5, i2: i5) returns (i5);
function $nand.i6(i1: i6, i2: i6) returns (i6);
function $nand.i8(i1: i8, i2: i8) returns (i8);
function $nand.i16(i1: i16, i2: i16) returns (i16);
function $nand.i24(i1: i24, i2: i24) returns (i24);
function $nand.i32(i1: i32, i2: i32) returns (i32);
function $nand.i40(i1: i40, i2: i40) returns (i40);
function $nand.i48(i1: i48, i2: i48) returns (i48);
function $nand.i56(i1: i56, i2: i56) returns (i56);
function $nand.i64(i1: i64, i2: i64) returns (i64);
function $nand.i80(i1: i80, i2: i80) returns (i80);
function $nand.i88(i1: i88, i2: i88) returns (i88);
function $nand.i96(i1: i96, i2: i96) returns (i96);
function $nand.i128(i1: i128, i2: i128) returns (i128);
function $nand.i160(i1: i160, i2: i160) returns (i160);
function $nand.i256(i1: i256, i2: i256) returns (i256);
function $not.i1(i: i1) returns (i1);
function $not.i5(i: i5) returns (i5);
function $not.i6(i: i6) returns (i6);
function $not.i8(i: i8) returns (i8);
function $not.i16(i: i16) returns (i16);
function $not.i24(i: i24) returns (i24);
function $not.i32(i: i32) returns (i32);
function $not.i40(i: i40) returns (i40);
function $not.i48(i: i48) returns (i48);
function $not.i56(i: i56) returns (i56);
function $not.i64(i: i64) returns (i64);
function $not.i80(i: i80) returns (i80);
function $not.i88(i: i88) returns (i88);
function $not.i96(i: i96) returns (i96);
function $not.i128(i: i128) returns (i128);
function $not.i160(i: i160) returns (i160);
function $not.i256(i: i256) returns (i256);
function {:inline} $smin.i1(i1: i1, i2: i1) returns (i1) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i5(i1: i5, i2: i5) returns (i5) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i6(i1: i6, i2: i6) returns (i6) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i8(i1: i8, i2: i8) returns (i8) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i16(i1: i16, i2: i16) returns (i16) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i24(i1: i24, i2: i24) returns (i24) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i32(i1: i32, i2: i32) returns (i32) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i40(i1: i40, i2: i40) returns (i40) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i48(i1: i48, i2: i48) returns (i48) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i56(i1: i56, i2: i56) returns (i56) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i64(i1: i64, i2: i64) returns (i64) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i80(i1: i80, i2: i80) returns (i80) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i88(i1: i88, i2: i88) returns (i88) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i96(i1: i96, i2: i96) returns (i96) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i128(i1: i128, i2: i128) returns (i128) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i160(i1: i160, i2: i160) returns (i160) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i256(i1: i256, i2: i256) returns (i256) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smax.i1(i1: i1, i2: i1) returns (i1) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i5(i1: i5, i2: i5) returns (i5) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i6(i1: i6, i2: i6) returns (i6) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i8(i1: i8, i2: i8) returns (i8) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i16(i1: i16, i2: i16) returns (i16) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i24(i1: i24, i2: i24) returns (i24) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i32(i1: i32, i2: i32) returns (i32) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i40(i1: i40, i2: i40) returns (i40) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i48(i1: i48, i2: i48) returns (i48) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i56(i1: i56, i2: i56) returns (i56) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i64(i1: i64, i2: i64) returns (i64) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i80(i1: i80, i2: i80) returns (i80) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i88(i1: i88, i2: i88) returns (i88) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i96(i1: i96, i2: i96) returns (i96) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i128(i1: i128, i2: i128) returns (i128) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i160(i1: i160, i2: i160) returns (i160) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i256(i1: i256, i2: i256) returns (i256) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umin.i1(i1: i1, i2: i1) returns (i1) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i5(i1: i5, i2: i5) returns (i5) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i6(i1: i6, i2: i6) returns (i6) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i8(i1: i8, i2: i8) returns (i8) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i16(i1: i16, i2: i16) returns (i16) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i24(i1: i24, i2: i24) returns (i24) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i32(i1: i32, i2: i32) returns (i32) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i40(i1: i40, i2: i40) returns (i40) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i48(i1: i48, i2: i48) returns (i48) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i56(i1: i56, i2: i56) returns (i56) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i64(i1: i64, i2: i64) returns (i64) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i80(i1: i80, i2: i80) returns (i80) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i88(i1: i88, i2: i88) returns (i88) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i96(i1: i96, i2: i96) returns (i96) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i128(i1: i128, i2: i128) returns (i128) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i160(i1: i160, i2: i160) returns (i160) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i256(i1: i256, i2: i256) returns (i256) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umax.i1(i1: i1, i2: i1) returns (i1) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i5(i1: i5, i2: i5) returns (i5) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i6(i1: i6, i2: i6) returns (i6) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i8(i1: i8, i2: i8) returns (i8) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i16(i1: i16, i2: i16) returns (i16) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i24(i1: i24, i2: i24) returns (i24) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i32(i1: i32, i2: i32) returns (i32) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i40(i1: i40, i2: i40) returns (i40) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i48(i1: i48, i2: i48) returns (i48) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i56(i1: i56, i2: i56) returns (i56) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i64(i1: i64, i2: i64) returns (i64) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i80(i1: i80, i2: i80) returns (i80) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i88(i1: i88, i2: i88) returns (i88) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i96(i1: i96, i2: i96) returns (i96) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i128(i1: i128, i2: i128) returns (i128) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i160(i1: i160, i2: i160) returns (i160) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i256(i1: i256, i2: i256) returns (i256) { (if (i2 < i1) then i1 else i2) }
axiom ($and.i1(0, 0) == 0);
axiom ($or.i1(0, 0) == 0);
axiom ($xor.i1(0, 0) == 0);
axiom ($and.i1(0, 1) == 0);
axiom ($or.i1(0, 1) == 1);
axiom ($xor.i1(0, 1) == 1);
axiom ($and.i1(1, 0) == 0);
axiom ($or.i1(1, 0) == 1);
axiom ($xor.i1(1, 0) == 1);
axiom ($and.i1(1, 1) == 1);
axiom ($or.i1(1, 1) == 1);
axiom ($xor.i1(1, 1) == 0);
axiom ($and.i32(32, 16) == 0);
// Integer predicates
function {:inline} $ule.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i1(i1: i1, i2: i1) returns (i1) { (if $ule.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i5(i1: i5, i2: i5) returns (i1) { (if $ule.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i6(i1: i6, i2: i6) returns (i1) { (if $ule.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i8(i1: i8, i2: i8) returns (i1) { (if $ule.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i16(i1: i16, i2: i16) returns (i1) { (if $ule.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i24(i1: i24, i2: i24) returns (i1) { (if $ule.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i32(i1: i32, i2: i32) returns (i1) { (if $ule.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i40(i1: i40, i2: i40) returns (i1) { (if $ule.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i48(i1: i48, i2: i48) returns (i1) { (if $ule.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i56(i1: i56, i2: i56) returns (i1) { (if $ule.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i64(i1: i64, i2: i64) returns (i1) { (if $ule.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i80(i1: i80, i2: i80) returns (i1) { (if $ule.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i88(i1: i88, i2: i88) returns (i1) { (if $ule.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i96(i1: i96, i2: i96) returns (i1) { (if $ule.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i128(i1: i128, i2: i128) returns (i1) { (if $ule.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i160(i1: i160, i2: i160) returns (i1) { (if $ule.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i256(i1: i256, i2: i256) returns (i1) { (if $ule.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 < i2) }
function {:inline} $ult.i1(i1: i1, i2: i1) returns (i1) { (if $ult.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 < i2) }
function {:inline} $ult.i5(i1: i5, i2: i5) returns (i1) { (if $ult.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 < i2) }
function {:inline} $ult.i6(i1: i6, i2: i6) returns (i1) { (if $ult.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 < i2) }
function {:inline} $ult.i8(i1: i8, i2: i8) returns (i1) { (if $ult.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 < i2) }
function {:inline} $ult.i16(i1: i16, i2: i16) returns (i1) { (if $ult.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 < i2) }
function {:inline} $ult.i24(i1: i24, i2: i24) returns (i1) { (if $ult.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 < i2) }
function {:inline} $ult.i32(i1: i32, i2: i32) returns (i1) { (if $ult.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 < i2) }
function {:inline} $ult.i40(i1: i40, i2: i40) returns (i1) { (if $ult.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 < i2) }
function {:inline} $ult.i48(i1: i48, i2: i48) returns (i1) { (if $ult.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 < i2) }
function {:inline} $ult.i56(i1: i56, i2: i56) returns (i1) { (if $ult.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 < i2) }
function {:inline} $ult.i64(i1: i64, i2: i64) returns (i1) { (if $ult.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 < i2) }
function {:inline} $ult.i80(i1: i80, i2: i80) returns (i1) { (if $ult.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 < i2) }
function {:inline} $ult.i88(i1: i88, i2: i88) returns (i1) { (if $ult.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 < i2) }
function {:inline} $ult.i96(i1: i96, i2: i96) returns (i1) { (if $ult.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 < i2) }
function {:inline} $ult.i128(i1: i128, i2: i128) returns (i1) { (if $ult.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 < i2) }
function {:inline} $ult.i160(i1: i160, i2: i160) returns (i1) { (if $ult.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 < i2) }
function {:inline} $ult.i256(i1: i256, i2: i256) returns (i1) { (if $ult.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i1(i1: i1, i2: i1) returns (i1) { (if $uge.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i5(i1: i5, i2: i5) returns (i1) { (if $uge.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i6(i1: i6, i2: i6) returns (i1) { (if $uge.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i8(i1: i8, i2: i8) returns (i1) { (if $uge.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i16(i1: i16, i2: i16) returns (i1) { (if $uge.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i24(i1: i24, i2: i24) returns (i1) { (if $uge.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i32(i1: i32, i2: i32) returns (i1) { (if $uge.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i40(i1: i40, i2: i40) returns (i1) { (if $uge.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i48(i1: i48, i2: i48) returns (i1) { (if $uge.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i56(i1: i56, i2: i56) returns (i1) { (if $uge.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i64(i1: i64, i2: i64) returns (i1) { (if $uge.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i80(i1: i80, i2: i80) returns (i1) { (if $uge.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i88(i1: i88, i2: i88) returns (i1) { (if $uge.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i96(i1: i96, i2: i96) returns (i1) { (if $uge.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i128(i1: i128, i2: i128) returns (i1) { (if $uge.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i160(i1: i160, i2: i160) returns (i1) { (if $uge.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i256(i1: i256, i2: i256) returns (i1) { (if $uge.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i1(i1: i1, i2: i1) returns (i1) { (if $ugt.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i5(i1: i5, i2: i5) returns (i1) { (if $ugt.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i6(i1: i6, i2: i6) returns (i1) { (if $ugt.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i8(i1: i8, i2: i8) returns (i1) { (if $ugt.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i16(i1: i16, i2: i16) returns (i1) { (if $ugt.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i24(i1: i24, i2: i24) returns (i1) { (if $ugt.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i32(i1: i32, i2: i32) returns (i1) { (if $ugt.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i40(i1: i40, i2: i40) returns (i1) { (if $ugt.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i48(i1: i48, i2: i48) returns (i1) { (if $ugt.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i56(i1: i56, i2: i56) returns (i1) { (if $ugt.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i64(i1: i64, i2: i64) returns (i1) { (if $ugt.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i80(i1: i80, i2: i80) returns (i1) { (if $ugt.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i88(i1: i88, i2: i88) returns (i1) { (if $ugt.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i96(i1: i96, i2: i96) returns (i1) { (if $ugt.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i128(i1: i128, i2: i128) returns (i1) { (if $ugt.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i160(i1: i160, i2: i160) returns (i1) { (if $ugt.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i256(i1: i256, i2: i256) returns (i1) { (if $ugt.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i1(i1: i1, i2: i1) returns (i1) { (if $sle.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i5(i1: i5, i2: i5) returns (i1) { (if $sle.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i6(i1: i6, i2: i6) returns (i1) { (if $sle.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i8(i1: i8, i2: i8) returns (i1) { (if $sle.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i16(i1: i16, i2: i16) returns (i1) { (if $sle.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i24(i1: i24, i2: i24) returns (i1) { (if $sle.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i32(i1: i32, i2: i32) returns (i1) { (if $sle.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i40(i1: i40, i2: i40) returns (i1) { (if $sle.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i48(i1: i48, i2: i48) returns (i1) { (if $sle.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i56(i1: i56, i2: i56) returns (i1) { (if $sle.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i64(i1: i64, i2: i64) returns (i1) { (if $sle.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i80(i1: i80, i2: i80) returns (i1) { (if $sle.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i88(i1: i88, i2: i88) returns (i1) { (if $sle.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i96(i1: i96, i2: i96) returns (i1) { (if $sle.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i128(i1: i128, i2: i128) returns (i1) { (if $sle.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i160(i1: i160, i2: i160) returns (i1) { (if $sle.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i256(i1: i256, i2: i256) returns (i1) { (if $sle.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 < i2) }
function {:inline} $slt.i1(i1: i1, i2: i1) returns (i1) { (if $slt.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 < i2) }
function {:inline} $slt.i5(i1: i5, i2: i5) returns (i1) { (if $slt.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 < i2) }
function {:inline} $slt.i6(i1: i6, i2: i6) returns (i1) { (if $slt.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 < i2) }
function {:inline} $slt.i8(i1: i8, i2: i8) returns (i1) { (if $slt.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 < i2) }
function {:inline} $slt.i16(i1: i16, i2: i16) returns (i1) { (if $slt.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 < i2) }
function {:inline} $slt.i24(i1: i24, i2: i24) returns (i1) { (if $slt.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 < i2) }
function {:inline} $slt.i32(i1: i32, i2: i32) returns (i1) { (if $slt.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 < i2) }
function {:inline} $slt.i40(i1: i40, i2: i40) returns (i1) { (if $slt.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 < i2) }
function {:inline} $slt.i48(i1: i48, i2: i48) returns (i1) { (if $slt.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 < i2) }
function {:inline} $slt.i56(i1: i56, i2: i56) returns (i1) { (if $slt.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 < i2) }
function {:inline} $slt.i64(i1: i64, i2: i64) returns (i1) { (if $slt.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 < i2) }
function {:inline} $slt.i80(i1: i80, i2: i80) returns (i1) { (if $slt.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 < i2) }
function {:inline} $slt.i88(i1: i88, i2: i88) returns (i1) { (if $slt.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 < i2) }
function {:inline} $slt.i96(i1: i96, i2: i96) returns (i1) { (if $slt.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 < i2) }
function {:inline} $slt.i128(i1: i128, i2: i128) returns (i1) { (if $slt.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 < i2) }
function {:inline} $slt.i160(i1: i160, i2: i160) returns (i1) { (if $slt.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 < i2) }
function {:inline} $slt.i256(i1: i256, i2: i256) returns (i1) { (if $slt.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i1(i1: i1, i2: i1) returns (i1) { (if $sge.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i5(i1: i5, i2: i5) returns (i1) { (if $sge.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i6(i1: i6, i2: i6) returns (i1) { (if $sge.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i8(i1: i8, i2: i8) returns (i1) { (if $sge.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i16(i1: i16, i2: i16) returns (i1) { (if $sge.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i24(i1: i24, i2: i24) returns (i1) { (if $sge.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i32(i1: i32, i2: i32) returns (i1) { (if $sge.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i40(i1: i40, i2: i40) returns (i1) { (if $sge.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i48(i1: i48, i2: i48) returns (i1) { (if $sge.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i56(i1: i56, i2: i56) returns (i1) { (if $sge.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i64(i1: i64, i2: i64) returns (i1) { (if $sge.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i80(i1: i80, i2: i80) returns (i1) { (if $sge.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i88(i1: i88, i2: i88) returns (i1) { (if $sge.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i96(i1: i96, i2: i96) returns (i1) { (if $sge.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i128(i1: i128, i2: i128) returns (i1) { (if $sge.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i160(i1: i160, i2: i160) returns (i1) { (if $sge.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i256(i1: i256, i2: i256) returns (i1) { (if $sge.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i1(i1: i1, i2: i1) returns (i1) { (if $sgt.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i5(i1: i5, i2: i5) returns (i1) { (if $sgt.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i6(i1: i6, i2: i6) returns (i1) { (if $sgt.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i8(i1: i8, i2: i8) returns (i1) { (if $sgt.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i16(i1: i16, i2: i16) returns (i1) { (if $sgt.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i24(i1: i24, i2: i24) returns (i1) { (if $sgt.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i32(i1: i32, i2: i32) returns (i1) { (if $sgt.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i40(i1: i40, i2: i40) returns (i1) { (if $sgt.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i48(i1: i48, i2: i48) returns (i1) { (if $sgt.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i56(i1: i56, i2: i56) returns (i1) { (if $sgt.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i64(i1: i64, i2: i64) returns (i1) { (if $sgt.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i80(i1: i80, i2: i80) returns (i1) { (if $sgt.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i88(i1: i88, i2: i88) returns (i1) { (if $sgt.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i96(i1: i96, i2: i96) returns (i1) { (if $sgt.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i128(i1: i128, i2: i128) returns (i1) { (if $sgt.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i160(i1: i160, i2: i160) returns (i1) { (if $sgt.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i256(i1: i256, i2: i256) returns (i1) { (if $sgt.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 == i2) }
function {:inline} $eq.i1(i1: i1, i2: i1) returns (i1) { (if $eq.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 == i2) }
function {:inline} $eq.i5(i1: i5, i2: i5) returns (i1) { (if $eq.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 == i2) }
function {:inline} $eq.i6(i1: i6, i2: i6) returns (i1) { (if $eq.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 == i2) }
function {:inline} $eq.i8(i1: i8, i2: i8) returns (i1) { (if $eq.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 == i2) }
function {:inline} $eq.i16(i1: i16, i2: i16) returns (i1) { (if $eq.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 == i2) }
function {:inline} $eq.i24(i1: i24, i2: i24) returns (i1) { (if $eq.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 == i2) }
function {:inline} $eq.i32(i1: i32, i2: i32) returns (i1) { (if $eq.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 == i2) }
function {:inline} $eq.i40(i1: i40, i2: i40) returns (i1) { (if $eq.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 == i2) }
function {:inline} $eq.i48(i1: i48, i2: i48) returns (i1) { (if $eq.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 == i2) }
function {:inline} $eq.i56(i1: i56, i2: i56) returns (i1) { (if $eq.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 == i2) }
function {:inline} $eq.i64(i1: i64, i2: i64) returns (i1) { (if $eq.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 == i2) }
function {:inline} $eq.i80(i1: i80, i2: i80) returns (i1) { (if $eq.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 == i2) }
function {:inline} $eq.i88(i1: i88, i2: i88) returns (i1) { (if $eq.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 == i2) }
function {:inline} $eq.i96(i1: i96, i2: i96) returns (i1) { (if $eq.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 == i2) }
function {:inline} $eq.i128(i1: i128, i2: i128) returns (i1) { (if $eq.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 == i2) }
function {:inline} $eq.i160(i1: i160, i2: i160) returns (i1) { (if $eq.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 == i2) }
function {:inline} $eq.i256(i1: i256, i2: i256) returns (i1) { (if $eq.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 != i2) }
function {:inline} $ne.i1(i1: i1, i2: i1) returns (i1) { (if $ne.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 != i2) }
function {:inline} $ne.i5(i1: i5, i2: i5) returns (i1) { (if $ne.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 != i2) }
function {:inline} $ne.i6(i1: i6, i2: i6) returns (i1) { (if $ne.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 != i2) }
function {:inline} $ne.i8(i1: i8, i2: i8) returns (i1) { (if $ne.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 != i2) }
function {:inline} $ne.i16(i1: i16, i2: i16) returns (i1) { (if $ne.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 != i2) }
function {:inline} $ne.i24(i1: i24, i2: i24) returns (i1) { (if $ne.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 != i2) }
function {:inline} $ne.i32(i1: i32, i2: i32) returns (i1) { (if $ne.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 != i2) }
function {:inline} $ne.i40(i1: i40, i2: i40) returns (i1) { (if $ne.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 != i2) }
function {:inline} $ne.i48(i1: i48, i2: i48) returns (i1) { (if $ne.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 != i2) }
function {:inline} $ne.i56(i1: i56, i2: i56) returns (i1) { (if $ne.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 != i2) }
function {:inline} $ne.i64(i1: i64, i2: i64) returns (i1) { (if $ne.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 != i2) }
function {:inline} $ne.i80(i1: i80, i2: i80) returns (i1) { (if $ne.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 != i2) }
function {:inline} $ne.i88(i1: i88, i2: i88) returns (i1) { (if $ne.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 != i2) }
function {:inline} $ne.i96(i1: i96, i2: i96) returns (i1) { (if $ne.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 != i2) }
function {:inline} $ne.i128(i1: i128, i2: i128) returns (i1) { (if $ne.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 != i2) }
function {:inline} $ne.i160(i1: i160, i2: i160) returns (i1) { (if $ne.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 != i2) }
function {:inline} $ne.i256(i1: i256, i2: i256) returns (i1) { (if $ne.i256.bool(i1, i2) then 1 else 0) }
// Integer load/store operations
function {:inline} $load.i1(M: [ref] i1, p: ref) returns (i1) { M[p] }
function {:inline} $store.i1(M: [ref] i1, p: ref, i: i1) returns ([ref] i1) { M[p := i] }
function {:inline} $load.i5(M: [ref] i5, p: ref) returns (i5) { M[p] }
function {:inline} $store.i5(M: [ref] i5, p: ref, i: i5) returns ([ref] i5) { M[p := i] }
function {:inline} $load.i6(M: [ref] i6, p: ref) returns (i6) { M[p] }
function {:inline} $store.i6(M: [ref] i6, p: ref, i: i6) returns ([ref] i6) { M[p := i] }
function {:inline} $load.i8(M: [ref] i8, p: ref) returns (i8) { M[p] }
function {:inline} $store.i8(M: [ref] i8, p: ref, i: i8) returns ([ref] i8) { M[p := i] }
function {:inline} $load.i16(M: [ref] i16, p: ref) returns (i16) { M[p] }
function {:inline} $store.i16(M: [ref] i16, p: ref, i: i16) returns ([ref] i16) { M[p := i] }
function {:inline} $load.i24(M: [ref] i24, p: ref) returns (i24) { M[p] }
function {:inline} $store.i24(M: [ref] i24, p: ref, i: i24) returns ([ref] i24) { M[p := i] }
function {:inline} $load.i32(M: [ref] i32, p: ref) returns (i32) { M[p] }
function {:inline} $store.i32(M: [ref] i32, p: ref, i: i32) returns ([ref] i32) { M[p := i] }
function {:inline} $load.i40(M: [ref] i40, p: ref) returns (i40) { M[p] }
function {:inline} $store.i40(M: [ref] i40, p: ref, i: i40) returns ([ref] i40) { M[p := i] }
function {:inline} $load.i48(M: [ref] i48, p: ref) returns (i48) { M[p] }
function {:inline} $store.i48(M: [ref] i48, p: ref, i: i48) returns ([ref] i48) { M[p := i] }
function {:inline} $load.i56(M: [ref] i56, p: ref) returns (i56) { M[p] }
function {:inline} $store.i56(M: [ref] i56, p: ref, i: i56) returns ([ref] i56) { M[p := i] }
function {:inline} $load.i64(M: [ref] i64, p: ref) returns (i64) { M[p] }
function {:inline} $store.i64(M: [ref] i64, p: ref, i: i64) returns ([ref] i64) { M[p := i] }
function {:inline} $load.i80(M: [ref] i80, p: ref) returns (i80) { M[p] }
function {:inline} $store.i80(M: [ref] i80, p: ref, i: i80) returns ([ref] i80) { M[p := i] }
function {:inline} $load.i88(M: [ref] i88, p: ref) returns (i88) { M[p] }
function {:inline} $store.i88(M: [ref] i88, p: ref, i: i88) returns ([ref] i88) { M[p := i] }
function {:inline} $load.i96(M: [ref] i96, p: ref) returns (i96) { M[p] }
function {:inline} $store.i96(M: [ref] i96, p: ref, i: i96) returns ([ref] i96) { M[p := i] }
function {:inline} $load.i128(M: [ref] i128, p: ref) returns (i128) { M[p] }
function {:inline} $store.i128(M: [ref] i128, p: ref, i: i128) returns ([ref] i128) { M[p := i] }
function {:inline} $load.i160(M: [ref] i160, p: ref) returns (i160) { M[p] }
function {:inline} $store.i160(M: [ref] i160, p: ref, i: i160) returns ([ref] i160) { M[p := i] }
function {:inline} $load.i256(M: [ref] i256, p: ref) returns (i256) { M[p] }
function {:inline} $store.i256(M: [ref] i256, p: ref, i: i256) returns ([ref] i256) { M[p := i] }
// Conversion between integer types
function {:inline} $trunc.i5.i1(i: i5) returns (i1) { i }
function {:inline} $trunc.i6.i1(i: i6) returns (i1) { i }
function {:inline} $trunc.i8.i1(i: i8) returns (i1) { i }
function {:inline} $trunc.i16.i1(i: i16) returns (i1) { i }
function {:inline} $trunc.i24.i1(i: i24) returns (i1) { i }
function {:inline} $trunc.i32.i1(i: i32) returns (i1) { i }
function {:inline} $trunc.i40.i1(i: i40) returns (i1) { i }
function {:inline} $trunc.i48.i1(i: i48) returns (i1) { i }
function {:inline} $trunc.i56.i1(i: i56) returns (i1) { i }
function {:inline} $trunc.i64.i1(i: i64) returns (i1) { i }
function {:inline} $trunc.i80.i1(i: i80) returns (i1) { i }
function {:inline} $trunc.i88.i1(i: i88) returns (i1) { i }
function {:inline} $trunc.i96.i1(i: i96) returns (i1) { i }
function {:inline} $trunc.i128.i1(i: i128) returns (i1) { i }
function {:inline} $trunc.i160.i1(i: i160) returns (i1) { i }
function {:inline} $trunc.i256.i1(i: i256) returns (i1) { i }
function {:inline} $trunc.i6.i5(i: i6) returns (i5) { i }
function {:inline} $trunc.i8.i5(i: i8) returns (i5) { i }
function {:inline} $trunc.i16.i5(i: i16) returns (i5) { i }
function {:inline} $trunc.i24.i5(i: i24) returns (i5) { i }
function {:inline} $trunc.i32.i5(i: i32) returns (i5) { i }
function {:inline} $trunc.i40.i5(i: i40) returns (i5) { i }
function {:inline} $trunc.i48.i5(i: i48) returns (i5) { i }
function {:inline} $trunc.i56.i5(i: i56) returns (i5) { i }
function {:inline} $trunc.i64.i5(i: i64) returns (i5) { i }
function {:inline} $trunc.i80.i5(i: i80) returns (i5) { i }
function {:inline} $trunc.i88.i5(i: i88) returns (i5) { i }
function {:inline} $trunc.i96.i5(i: i96) returns (i5) { i }
function {:inline} $trunc.i128.i5(i: i128) returns (i5) { i }
function {:inline} $trunc.i160.i5(i: i160) returns (i5) { i }
function {:inline} $trunc.i256.i5(i: i256) returns (i5) { i }
function {:inline} $trunc.i8.i6(i: i8) returns (i6) { i }
function {:inline} $trunc.i16.i6(i: i16) returns (i6) { i }
function {:inline} $trunc.i24.i6(i: i24) returns (i6) { i }
function {:inline} $trunc.i32.i6(i: i32) returns (i6) { i }
function {:inline} $trunc.i40.i6(i: i40) returns (i6) { i }
function {:inline} $trunc.i48.i6(i: i48) returns (i6) { i }
function {:inline} $trunc.i56.i6(i: i56) returns (i6) { i }
function {:inline} $trunc.i64.i6(i: i64) returns (i6) { i }
function {:inline} $trunc.i80.i6(i: i80) returns (i6) { i }
function {:inline} $trunc.i88.i6(i: i88) returns (i6) { i }
function {:inline} $trunc.i96.i6(i: i96) returns (i6) { i }
function {:inline} $trunc.i128.i6(i: i128) returns (i6) { i }
function {:inline} $trunc.i160.i6(i: i160) returns (i6) { i }
function {:inline} $trunc.i256.i6(i: i256) returns (i6) { i }
function {:inline} $trunc.i16.i8(i: i16) returns (i8) { i }
function {:inline} $trunc.i24.i8(i: i24) returns (i8) { i }
function {:inline} $trunc.i32.i8(i: i32) returns (i8) { i }
function {:inline} $trunc.i40.i8(i: i40) returns (i8) { i }
function {:inline} $trunc.i48.i8(i: i48) returns (i8) { i }
function {:inline} $trunc.i56.i8(i: i56) returns (i8) { i }
function {:inline} $trunc.i64.i8(i: i64) returns (i8) { i }
function {:inline} $trunc.i80.i8(i: i80) returns (i8) { i }
function {:inline} $trunc.i88.i8(i: i88) returns (i8) { i }
function {:inline} $trunc.i96.i8(i: i96) returns (i8) { i }
function {:inline} $trunc.i128.i8(i: i128) returns (i8) { i }
function {:inline} $trunc.i160.i8(i: i160) returns (i8) { i }
function {:inline} $trunc.i256.i8(i: i256) returns (i8) { i }
function {:inline} $trunc.i24.i16(i: i24) returns (i16) { i }
function {:inline} $trunc.i32.i16(i: i32) returns (i16) { i }
function {:inline} $trunc.i40.i16(i: i40) returns (i16) { i }
function {:inline} $trunc.i48.i16(i: i48) returns (i16) { i }
function {:inline} $trunc.i56.i16(i: i56) returns (i16) { i }
function {:inline} $trunc.i64.i16(i: i64) returns (i16) { i }
function {:inline} $trunc.i80.i16(i: i80) returns (i16) { i }
function {:inline} $trunc.i88.i16(i: i88) returns (i16) { i }
function {:inline} $trunc.i96.i16(i: i96) returns (i16) { i }
function {:inline} $trunc.i128.i16(i: i128) returns (i16) { i }
function {:inline} $trunc.i160.i16(i: i160) returns (i16) { i }
function {:inline} $trunc.i256.i16(i: i256) returns (i16) { i }
function {:inline} $trunc.i32.i24(i: i32) returns (i24) { i }
function {:inline} $trunc.i40.i24(i: i40) returns (i24) { i }
function {:inline} $trunc.i48.i24(i: i48) returns (i24) { i }
function {:inline} $trunc.i56.i24(i: i56) returns (i24) { i }
function {:inline} $trunc.i64.i24(i: i64) returns (i24) { i }
function {:inline} $trunc.i80.i24(i: i80) returns (i24) { i }
function {:inline} $trunc.i88.i24(i: i88) returns (i24) { i }
function {:inline} $trunc.i96.i24(i: i96) returns (i24) { i }
function {:inline} $trunc.i128.i24(i: i128) returns (i24) { i }
function {:inline} $trunc.i160.i24(i: i160) returns (i24) { i }
function {:inline} $trunc.i256.i24(i: i256) returns (i24) { i }
function {:inline} $trunc.i40.i32(i: i40) returns (i32) { i }
function {:inline} $trunc.i48.i32(i: i48) returns (i32) { i }
function {:inline} $trunc.i56.i32(i: i56) returns (i32) { i }
function {:inline} $trunc.i64.i32(i: i64) returns (i32) { i }
function {:inline} $trunc.i80.i32(i: i80) returns (i32) { i }
function {:inline} $trunc.i88.i32(i: i88) returns (i32) { i }
function {:inline} $trunc.i96.i32(i: i96) returns (i32) { i }
function {:inline} $trunc.i128.i32(i: i128) returns (i32) { i }
function {:inline} $trunc.i160.i32(i: i160) returns (i32) { i }
function {:inline} $trunc.i256.i32(i: i256) returns (i32) { i }
function {:inline} $trunc.i48.i40(i: i48) returns (i40) { i }
function {:inline} $trunc.i56.i40(i: i56) returns (i40) { i }
function {:inline} $trunc.i64.i40(i: i64) returns (i40) { i }
function {:inline} $trunc.i80.i40(i: i80) returns (i40) { i }
function {:inline} $trunc.i88.i40(i: i88) returns (i40) { i }
function {:inline} $trunc.i96.i40(i: i96) returns (i40) { i }
function {:inline} $trunc.i128.i40(i: i128) returns (i40) { i }
function {:inline} $trunc.i160.i40(i: i160) returns (i40) { i }
function {:inline} $trunc.i256.i40(i: i256) returns (i40) { i }
function {:inline} $trunc.i56.i48(i: i56) returns (i48) { i }
function {:inline} $trunc.i64.i48(i: i64) returns (i48) { i }
function {:inline} $trunc.i80.i48(i: i80) returns (i48) { i }
function {:inline} $trunc.i88.i48(i: i88) returns (i48) { i }
function {:inline} $trunc.i96.i48(i: i96) returns (i48) { i }
function {:inline} $trunc.i128.i48(i: i128) returns (i48) { i }
function {:inline} $trunc.i160.i48(i: i160) returns (i48) { i }
function {:inline} $trunc.i256.i48(i: i256) returns (i48) { i }
function {:inline} $trunc.i64.i56(i: i64) returns (i56) { i }
function {:inline} $trunc.i80.i56(i: i80) returns (i56) { i }
function {:inline} $trunc.i88.i56(i: i88) returns (i56) { i }
function {:inline} $trunc.i96.i56(i: i96) returns (i56) { i }
function {:inline} $trunc.i128.i56(i: i128) returns (i56) { i }
function {:inline} $trunc.i160.i56(i: i160) returns (i56) { i }
function {:inline} $trunc.i256.i56(i: i256) returns (i56) { i }
function {:inline} $trunc.i80.i64(i: i80) returns (i64) { i }
function {:inline} $trunc.i88.i64(i: i88) returns (i64) { i }
function {:inline} $trunc.i96.i64(i: i96) returns (i64) { i }
function {:inline} $trunc.i128.i64(i: i128) returns (i64) { i }
function {:inline} $trunc.i160.i64(i: i160) returns (i64) { i }
function {:inline} $trunc.i256.i64(i: i256) returns (i64) { i }
function {:inline} $trunc.i88.i80(i: i88) returns (i80) { i }
function {:inline} $trunc.i96.i80(i: i96) returns (i80) { i }
function {:inline} $trunc.i128.i80(i: i128) returns (i80) { i }
function {:inline} $trunc.i160.i80(i: i160) returns (i80) { i }
function {:inline} $trunc.i256.i80(i: i256) returns (i80) { i }
function {:inline} $trunc.i96.i88(i: i96) returns (i88) { i }
function {:inline} $trunc.i128.i88(i: i128) returns (i88) { i }
function {:inline} $trunc.i160.i88(i: i160) returns (i88) { i }
function {:inline} $trunc.i256.i88(i: i256) returns (i88) { i }
function {:inline} $trunc.i128.i96(i: i128) returns (i96) { i }
function {:inline} $trunc.i160.i96(i: i160) returns (i96) { i }
function {:inline} $trunc.i256.i96(i: i256) returns (i96) { i }
function {:inline} $trunc.i160.i128(i: i160) returns (i128) { i }
function {:inline} $trunc.i256.i128(i: i256) returns (i128) { i }
function {:inline} $trunc.i256.i160(i: i256) returns (i160) { i }
function {:inline} $sext.i1.i5(i: i1) returns (i5) { i }
function {:inline} $sext.i1.i6(i: i1) returns (i6) { i }
function {:inline} $sext.i1.i8(i: i1) returns (i8) { i }
function {:inline} $sext.i1.i16(i: i1) returns (i16) { i }
function {:inline} $sext.i1.i24(i: i1) returns (i24) { i }
function {:inline} $sext.i1.i32(i: i1) returns (i32) { i }
function {:inline} $sext.i1.i40(i: i1) returns (i40) { i }
function {:inline} $sext.i1.i48(i: i1) returns (i48) { i }
function {:inline} $sext.i1.i56(i: i1) returns (i56) { i }
function {:inline} $sext.i1.i64(i: i1) returns (i64) { i }
function {:inline} $sext.i1.i80(i: i1) returns (i80) { i }
function {:inline} $sext.i1.i88(i: i1) returns (i88) { i }
function {:inline} $sext.i1.i96(i: i1) returns (i96) { i }
function {:inline} $sext.i1.i128(i: i1) returns (i128) { i }
function {:inline} $sext.i1.i160(i: i1) returns (i160) { i }
function {:inline} $sext.i1.i256(i: i1) returns (i256) { i }
function {:inline} $sext.i5.i6(i: i5) returns (i6) { i }
function {:inline} $sext.i5.i8(i: i5) returns (i8) { i }
function {:inline} $sext.i5.i16(i: i5) returns (i16) { i }
function {:inline} $sext.i5.i24(i: i5) returns (i24) { i }
function {:inline} $sext.i5.i32(i: i5) returns (i32) { i }
function {:inline} $sext.i5.i40(i: i5) returns (i40) { i }
function {:inline} $sext.i5.i48(i: i5) returns (i48) { i }
function {:inline} $sext.i5.i56(i: i5) returns (i56) { i }
function {:inline} $sext.i5.i64(i: i5) returns (i64) { i }
function {:inline} $sext.i5.i80(i: i5) returns (i80) { i }
function {:inline} $sext.i5.i88(i: i5) returns (i88) { i }
function {:inline} $sext.i5.i96(i: i5) returns (i96) { i }
function {:inline} $sext.i5.i128(i: i5) returns (i128) { i }
function {:inline} $sext.i5.i160(i: i5) returns (i160) { i }
function {:inline} $sext.i5.i256(i: i5) returns (i256) { i }
function {:inline} $sext.i6.i8(i: i6) returns (i8) { i }
function {:inline} $sext.i6.i16(i: i6) returns (i16) { i }
function {:inline} $sext.i6.i24(i: i6) returns (i24) { i }
function {:inline} $sext.i6.i32(i: i6) returns (i32) { i }
function {:inline} $sext.i6.i40(i: i6) returns (i40) { i }
function {:inline} $sext.i6.i48(i: i6) returns (i48) { i }
function {:inline} $sext.i6.i56(i: i6) returns (i56) { i }
function {:inline} $sext.i6.i64(i: i6) returns (i64) { i }
function {:inline} $sext.i6.i80(i: i6) returns (i80) { i }
function {:inline} $sext.i6.i88(i: i6) returns (i88) { i }
function {:inline} $sext.i6.i96(i: i6) returns (i96) { i }
function {:inline} $sext.i6.i128(i: i6) returns (i128) { i }
function {:inline} $sext.i6.i160(i: i6) returns (i160) { i }
function {:inline} $sext.i6.i256(i: i6) returns (i256) { i }
function {:inline} $sext.i8.i16(i: i8) returns (i16) { i }
function {:inline} $sext.i8.i24(i: i8) returns (i24) { i }
function {:inline} $sext.i8.i32(i: i8) returns (i32) { i }
function {:inline} $sext.i8.i40(i: i8) returns (i40) { i }
function {:inline} $sext.i8.i48(i: i8) returns (i48) { i }
function {:inline} $sext.i8.i56(i: i8) returns (i56) { i }
function {:inline} $sext.i8.i64(i: i8) returns (i64) { i }
function {:inline} $sext.i8.i80(i: i8) returns (i80) { i }
function {:inline} $sext.i8.i88(i: i8) returns (i88) { i }
function {:inline} $sext.i8.i96(i: i8) returns (i96) { i }
function {:inline} $sext.i8.i128(i: i8) returns (i128) { i }
function {:inline} $sext.i8.i160(i: i8) returns (i160) { i }
function {:inline} $sext.i8.i256(i: i8) returns (i256) { i }
function {:inline} $sext.i16.i24(i: i16) returns (i24) { i }
function {:inline} $sext.i16.i32(i: i16) returns (i32) { i }
function {:inline} $sext.i16.i40(i: i16) returns (i40) { i }
function {:inline} $sext.i16.i48(i: i16) returns (i48) { i }
function {:inline} $sext.i16.i56(i: i16) returns (i56) { i }
function {:inline} $sext.i16.i64(i: i16) returns (i64) { i }
function {:inline} $sext.i16.i80(i: i16) returns (i80) { i }
function {:inline} $sext.i16.i88(i: i16) returns (i88) { i }
function {:inline} $sext.i16.i96(i: i16) returns (i96) { i }
function {:inline} $sext.i16.i128(i: i16) returns (i128) { i }
function {:inline} $sext.i16.i160(i: i16) returns (i160) { i }
function {:inline} $sext.i16.i256(i: i16) returns (i256) { i }
function {:inline} $sext.i24.i32(i: i24) returns (i32) { i }
function {:inline} $sext.i24.i40(i: i24) returns (i40) { i }
function {:inline} $sext.i24.i48(i: i24) returns (i48) { i }
function {:inline} $sext.i24.i56(i: i24) returns (i56) { i }
function {:inline} $sext.i24.i64(i: i24) returns (i64) { i }
function {:inline} $sext.i24.i80(i: i24) returns (i80) { i }
function {:inline} $sext.i24.i88(i: i24) returns (i88) { i }
function {:inline} $sext.i24.i96(i: i24) returns (i96) { i }
function {:inline} $sext.i24.i128(i: i24) returns (i128) { i }
function {:inline} $sext.i24.i160(i: i24) returns (i160) { i }
function {:inline} $sext.i24.i256(i: i24) returns (i256) { i }
function {:inline} $sext.i32.i40(i: i32) returns (i40) { i }
function {:inline} $sext.i32.i48(i: i32) returns (i48) { i }
function {:inline} $sext.i32.i56(i: i32) returns (i56) { i }
function {:inline} $sext.i32.i64(i: i32) returns (i64) { i }
function {:inline} $sext.i32.i80(i: i32) returns (i80) { i }
function {:inline} $sext.i32.i88(i: i32) returns (i88) { i }
function {:inline} $sext.i32.i96(i: i32) returns (i96) { i }
function {:inline} $sext.i32.i128(i: i32) returns (i128) { i }
function {:inline} $sext.i32.i160(i: i32) returns (i160) { i }
function {:inline} $sext.i32.i256(i: i32) returns (i256) { i }
function {:inline} $sext.i40.i48(i: i40) returns (i48) { i }
function {:inline} $sext.i40.i56(i: i40) returns (i56) { i }
function {:inline} $sext.i40.i64(i: i40) returns (i64) { i }
function {:inline} $sext.i40.i80(i: i40) returns (i80) { i }
function {:inline} $sext.i40.i88(i: i40) returns (i88) { i }
function {:inline} $sext.i40.i96(i: i40) returns (i96) { i }
function {:inline} $sext.i40.i128(i: i40) returns (i128) { i }
function {:inline} $sext.i40.i160(i: i40) returns (i160) { i }
function {:inline} $sext.i40.i256(i: i40) returns (i256) { i }
function {:inline} $sext.i48.i56(i: i48) returns (i56) { i }
function {:inline} $sext.i48.i64(i: i48) returns (i64) { i }
function {:inline} $sext.i48.i80(i: i48) returns (i80) { i }
function {:inline} $sext.i48.i88(i: i48) returns (i88) { i }
function {:inline} $sext.i48.i96(i: i48) returns (i96) { i }
function {:inline} $sext.i48.i128(i: i48) returns (i128) { i }
function {:inline} $sext.i48.i160(i: i48) returns (i160) { i }
function {:inline} $sext.i48.i256(i: i48) returns (i256) { i }
function {:inline} $sext.i56.i64(i: i56) returns (i64) { i }
function {:inline} $sext.i56.i80(i: i56) returns (i80) { i }
function {:inline} $sext.i56.i88(i: i56) returns (i88) { i }
function {:inline} $sext.i56.i96(i: i56) returns (i96) { i }
function {:inline} $sext.i56.i128(i: i56) returns (i128) { i }
function {:inline} $sext.i56.i160(i: i56) returns (i160) { i }
function {:inline} $sext.i56.i256(i: i56) returns (i256) { i }
function {:inline} $sext.i64.i80(i: i64) returns (i80) { i }
function {:inline} $sext.i64.i88(i: i64) returns (i88) { i }
function {:inline} $sext.i64.i96(i: i64) returns (i96) { i }
function {:inline} $sext.i64.i128(i: i64) returns (i128) { i }
function {:inline} $sext.i64.i160(i: i64) returns (i160) { i }
function {:inline} $sext.i64.i256(i: i64) returns (i256) { i }
function {:inline} $sext.i80.i88(i: i80) returns (i88) { i }
function {:inline} $sext.i80.i96(i: i80) returns (i96) { i }
function {:inline} $sext.i80.i128(i: i80) returns (i128) { i }
function {:inline} $sext.i80.i160(i: i80) returns (i160) { i }
function {:inline} $sext.i80.i256(i: i80) returns (i256) { i }
function {:inline} $sext.i88.i96(i: i88) returns (i96) { i }
function {:inline} $sext.i88.i128(i: i88) returns (i128) { i }
function {:inline} $sext.i88.i160(i: i88) returns (i160) { i }
function {:inline} $sext.i88.i256(i: i88) returns (i256) { i }
function {:inline} $sext.i96.i128(i: i96) returns (i128) { i }
function {:inline} $sext.i96.i160(i: i96) returns (i160) { i }
function {:inline} $sext.i96.i256(i: i96) returns (i256) { i }
function {:inline} $sext.i128.i160(i: i128) returns (i160) { i }
function {:inline} $sext.i128.i256(i: i128) returns (i256) { i }
function {:inline} $sext.i160.i256(i: i160) returns (i256) { i }
function {:inline} $zext.i1.i5(i: i1) returns (i5) { i }
function {:inline} $zext.i1.i6(i: i1) returns (i6) { i }
function {:inline} $zext.i1.i8(i: i1) returns (i8) { i }
function {:inline} $zext.i1.i16(i: i1) returns (i16) { i }
function {:inline} $zext.i1.i24(i: i1) returns (i24) { i }
function {:inline} $zext.i1.i32(i: i1) returns (i32) { i }
function {:inline} $zext.i1.i40(i: i1) returns (i40) { i }
function {:inline} $zext.i1.i48(i: i1) returns (i48) { i }
function {:inline} $zext.i1.i56(i: i1) returns (i56) { i }
function {:inline} $zext.i1.i64(i: i1) returns (i64) { i }
function {:inline} $zext.i1.i80(i: i1) returns (i80) { i }
function {:inline} $zext.i1.i88(i: i1) returns (i88) { i }
function {:inline} $zext.i1.i96(i: i1) returns (i96) { i }
function {:inline} $zext.i1.i128(i: i1) returns (i128) { i }
function {:inline} $zext.i1.i160(i: i1) returns (i160) { i }
function {:inline} $zext.i1.i256(i: i1) returns (i256) { i }
function {:inline} $zext.i5.i6(i: i5) returns (i6) { i }
function {:inline} $zext.i5.i8(i: i5) returns (i8) { i }
function {:inline} $zext.i5.i16(i: i5) returns (i16) { i }
function {:inline} $zext.i5.i24(i: i5) returns (i24) { i }
function {:inline} $zext.i5.i32(i: i5) returns (i32) { i }
function {:inline} $zext.i5.i40(i: i5) returns (i40) { i }
function {:inline} $zext.i5.i48(i: i5) returns (i48) { i }
function {:inline} $zext.i5.i56(i: i5) returns (i56) { i }
function {:inline} $zext.i5.i64(i: i5) returns (i64) { i }
function {:inline} $zext.i5.i80(i: i5) returns (i80) { i }
function {:inline} $zext.i5.i88(i: i5) returns (i88) { i }
function {:inline} $zext.i5.i96(i: i5) returns (i96) { i }
function {:inline} $zext.i5.i128(i: i5) returns (i128) { i }
function {:inline} $zext.i5.i160(i: i5) returns (i160) { i }
function {:inline} $zext.i5.i256(i: i5) returns (i256) { i }
function {:inline} $zext.i6.i8(i: i6) returns (i8) { i }
function {:inline} $zext.i6.i16(i: i6) returns (i16) { i }
function {:inline} $zext.i6.i24(i: i6) returns (i24) { i }
function {:inline} $zext.i6.i32(i: i6) returns (i32) { i }
function {:inline} $zext.i6.i40(i: i6) returns (i40) { i }
function {:inline} $zext.i6.i48(i: i6) returns (i48) { i }
function {:inline} $zext.i6.i56(i: i6) returns (i56) { i }
function {:inline} $zext.i6.i64(i: i6) returns (i64) { i }
function {:inline} $zext.i6.i80(i: i6) returns (i80) { i }
function {:inline} $zext.i6.i88(i: i6) returns (i88) { i }
function {:inline} $zext.i6.i96(i: i6) returns (i96) { i }
function {:inline} $zext.i6.i128(i: i6) returns (i128) { i }
function {:inline} $zext.i6.i160(i: i6) returns (i160) { i }
function {:inline} $zext.i6.i256(i: i6) returns (i256) { i }
function {:inline} $zext.i8.i16(i: i8) returns (i16) { i }
function {:inline} $zext.i8.i24(i: i8) returns (i24) { i }
function {:inline} $zext.i8.i32(i: i8) returns (i32) { i }
function {:inline} $zext.i8.i40(i: i8) returns (i40) { i }
function {:inline} $zext.i8.i48(i: i8) returns (i48) { i }
function {:inline} $zext.i8.i56(i: i8) returns (i56) { i }
function {:inline} $zext.i8.i64(i: i8) returns (i64) { i }
function {:inline} $zext.i8.i80(i: i8) returns (i80) { i }
function {:inline} $zext.i8.i88(i: i8) returns (i88) { i }
function {:inline} $zext.i8.i96(i: i8) returns (i96) { i }
function {:inline} $zext.i8.i128(i: i8) returns (i128) { i }
function {:inline} $zext.i8.i160(i: i8) returns (i160) { i }
function {:inline} $zext.i8.i256(i: i8) returns (i256) { i }
function {:inline} $zext.i16.i24(i: i16) returns (i24) { i }
function {:inline} $zext.i16.i32(i: i16) returns (i32) { i }
function {:inline} $zext.i16.i40(i: i16) returns (i40) { i }
function {:inline} $zext.i16.i48(i: i16) returns (i48) { i }
function {:inline} $zext.i16.i56(i: i16) returns (i56) { i }
function {:inline} $zext.i16.i64(i: i16) returns (i64) { i }
function {:inline} $zext.i16.i80(i: i16) returns (i80) { i }
function {:inline} $zext.i16.i88(i: i16) returns (i88) { i }
function {:inline} $zext.i16.i96(i: i16) returns (i96) { i }
function {:inline} $zext.i16.i128(i: i16) returns (i128) { i }
function {:inline} $zext.i16.i160(i: i16) returns (i160) { i }
function {:inline} $zext.i16.i256(i: i16) returns (i256) { i }
function {:inline} $zext.i24.i32(i: i24) returns (i32) { i }
function {:inline} $zext.i24.i40(i: i24) returns (i40) { i }
function {:inline} $zext.i24.i48(i: i24) returns (i48) { i }
function {:inline} $zext.i24.i56(i: i24) returns (i56) { i }
function {:inline} $zext.i24.i64(i: i24) returns (i64) { i }
function {:inline} $zext.i24.i80(i: i24) returns (i80) { i }
function {:inline} $zext.i24.i88(i: i24) returns (i88) { i }
function {:inline} $zext.i24.i96(i: i24) returns (i96) { i }
function {:inline} $zext.i24.i128(i: i24) returns (i128) { i }
function {:inline} $zext.i24.i160(i: i24) returns (i160) { i }
function {:inline} $zext.i24.i256(i: i24) returns (i256) { i }
function {:inline} $zext.i32.i40(i: i32) returns (i40) { i }
function {:inline} $zext.i32.i48(i: i32) returns (i48) { i }
function {:inline} $zext.i32.i56(i: i32) returns (i56) { i }
function {:inline} $zext.i32.i64(i: i32) returns (i64) { i }
function {:inline} $zext.i32.i80(i: i32) returns (i80) { i }
function {:inline} $zext.i32.i88(i: i32) returns (i88) { i }
function {:inline} $zext.i32.i96(i: i32) returns (i96) { i }
function {:inline} $zext.i32.i128(i: i32) returns (i128) { i }
function {:inline} $zext.i32.i160(i: i32) returns (i160) { i }
function {:inline} $zext.i32.i256(i: i32) returns (i256) { i }
function {:inline} $zext.i40.i48(i: i40) returns (i48) { i }
function {:inline} $zext.i40.i56(i: i40) returns (i56) { i }
function {:inline} $zext.i40.i64(i: i40) returns (i64) { i }
function {:inline} $zext.i40.i80(i: i40) returns (i80) { i }
function {:inline} $zext.i40.i88(i: i40) returns (i88) { i }
function {:inline} $zext.i40.i96(i: i40) returns (i96) { i }
function {:inline} $zext.i40.i128(i: i40) returns (i128) { i }
function {:inline} $zext.i40.i160(i: i40) returns (i160) { i }
function {:inline} $zext.i40.i256(i: i40) returns (i256) { i }
function {:inline} $zext.i48.i56(i: i48) returns (i56) { i }
function {:inline} $zext.i48.i64(i: i48) returns (i64) { i }
function {:inline} $zext.i48.i80(i: i48) returns (i80) { i }
function {:inline} $zext.i48.i88(i: i48) returns (i88) { i }
function {:inline} $zext.i48.i96(i: i48) returns (i96) { i }
function {:inline} $zext.i48.i128(i: i48) returns (i128) { i }
function {:inline} $zext.i48.i160(i: i48) returns (i160) { i }
function {:inline} $zext.i48.i256(i: i48) returns (i256) { i }
function {:inline} $zext.i56.i64(i: i56) returns (i64) { i }
function {:inline} $zext.i56.i80(i: i56) returns (i80) { i }
function {:inline} $zext.i56.i88(i: i56) returns (i88) { i }
function {:inline} $zext.i56.i96(i: i56) returns (i96) { i }
function {:inline} $zext.i56.i128(i: i56) returns (i128) { i }
function {:inline} $zext.i56.i160(i: i56) returns (i160) { i }
function {:inline} $zext.i56.i256(i: i56) returns (i256) { i }
function {:inline} $zext.i64.i80(i: i64) returns (i80) { i }
function {:inline} $zext.i64.i88(i: i64) returns (i88) { i }
function {:inline} $zext.i64.i96(i: i64) returns (i96) { i }
function {:inline} $zext.i64.i128(i: i64) returns (i128) { i }
function {:inline} $zext.i64.i160(i: i64) returns (i160) { i }
function {:inline} $zext.i64.i256(i: i64) returns (i256) { i }
function {:inline} $zext.i80.i88(i: i80) returns (i88) { i }
function {:inline} $zext.i80.i96(i: i80) returns (i96) { i }
function {:inline} $zext.i80.i128(i: i80) returns (i128) { i }
function {:inline} $zext.i80.i160(i: i80) returns (i160) { i }
function {:inline} $zext.i80.i256(i: i80) returns (i256) { i }
function {:inline} $zext.i88.i96(i: i88) returns (i96) { i }
function {:inline} $zext.i88.i128(i: i88) returns (i128) { i }
function {:inline} $zext.i88.i160(i: i88) returns (i160) { i }
function {:inline} $zext.i88.i256(i: i88) returns (i256) { i }
function {:inline} $zext.i96.i128(i: i96) returns (i128) { i }
function {:inline} $zext.i96.i160(i: i96) returns (i160) { i }
function {:inline} $zext.i96.i256(i: i96) returns (i256) { i }
function {:inline} $zext.i128.i160(i: i128) returns (i160) { i }
function {:inline} $zext.i128.i256(i: i128) returns (i256) { i }
function {:inline} $zext.i160.i256(i: i160) returns (i256) { i }
function $extractvalue.i1(p: ref, i: int) returns (i1);
function $extractvalue.i5(p: ref, i: int) returns (i5);
function $extractvalue.i6(p: ref, i: int) returns (i6);
function $extractvalue.i8(p: ref, i: int) returns (i8);
function $extractvalue.i16(p: ref, i: int) returns (i16);
function $extractvalue.i24(p: ref, i: int) returns (i24);
function $extractvalue.i32(p: ref, i: int) returns (i32);
function $extractvalue.i40(p: ref, i: int) returns (i40);
function $extractvalue.i48(p: ref, i: int) returns (i48);
function $extractvalue.i56(p: ref, i: int) returns (i56);
function $extractvalue.i64(p: ref, i: int) returns (i64);
function $extractvalue.i80(p: ref, i: int) returns (i80);
function $extractvalue.i88(p: ref, i: int) returns (i88);
function $extractvalue.i96(p: ref, i: int) returns (i96);
function $extractvalue.i128(p: ref, i: int) returns (i128);
function $extractvalue.i160(p: ref, i: int) returns (i160);
function $extractvalue.i256(p: ref, i: int) returns (i256);
// Pointer arithmetic operations
function {:inline} $add.ref(p1: ref, p2: ref) returns (ref) { $add.i64(p1, p2) }
function {:inline} $sub.ref(p1: ref, p2: ref) returns (ref) { $sub.i64(p1, p2) }
function {:inline} $mul.ref(p1: ref, p2: ref) returns (ref) { $mul.i64(p1, p2) }

// Pointer predicates
function {:inline} $eq.ref(p1: ref, p2: ref) returns (i1) { (if $eq.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $eq.ref.bool(p1: ref, p2: ref) returns (bool) { $eq.i64.bool(p1, p2) }
function {:inline} $ne.ref(p1: ref, p2: ref) returns (i1) { (if $ne.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $ne.ref.bool(p1: ref, p2: ref) returns (bool) { $ne.i64.bool(p1, p2) }
function {:inline} $ugt.ref(p1: ref, p2: ref) returns (i1) { (if $ugt.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $ugt.ref.bool(p1: ref, p2: ref) returns (bool) { $ugt.i64.bool(p1, p2) }
function {:inline} $uge.ref(p1: ref, p2: ref) returns (i1) { (if $uge.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $uge.ref.bool(p1: ref, p2: ref) returns (bool) { $uge.i64.bool(p1, p2) }
function {:inline} $ult.ref(p1: ref, p2: ref) returns (i1) { (if $ult.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $ult.ref.bool(p1: ref, p2: ref) returns (bool) { $ult.i64.bool(p1, p2) }
function {:inline} $ule.ref(p1: ref, p2: ref) returns (i1) { (if $ule.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $ule.ref.bool(p1: ref, p2: ref) returns (bool) { $ule.i64.bool(p1, p2) }
function {:inline} $sgt.ref(p1: ref, p2: ref) returns (i1) { (if $sgt.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $sgt.ref.bool(p1: ref, p2: ref) returns (bool) { $sgt.i64.bool(p1, p2) }
function {:inline} $sge.ref(p1: ref, p2: ref) returns (i1) { (if $sge.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $sge.ref.bool(p1: ref, p2: ref) returns (bool) { $sge.i64.bool(p1, p2) }
function {:inline} $slt.ref(p1: ref, p2: ref) returns (i1) { (if $slt.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $slt.ref.bool(p1: ref, p2: ref) returns (bool) { $slt.i64.bool(p1, p2) }
function {:inline} $sle.ref(p1: ref, p2: ref) returns (i1) { (if $sle.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $sle.ref.bool(p1: ref, p2: ref) returns (bool) { $sle.i64.bool(p1, p2) }

// Pointer load/store operations
function {:inline} $load.ref(M: [ref] ref, p: ref) returns (ref) { M[p] }
function {:inline} $store.ref(M: [ref] ref, p: ref, i: ref) returns ([ref] ref) { M[p := i] }

// Pointer conversion
function {:inline} $bitcast.ref.ref(p: ref) returns (ref) { p }
function $extractvalue.ref(p: ref, i: int) returns (ref);
// Pointer-number conversion
function {:inline} $p2i.ref.i8(p: ref) returns (i8) { $trunc.i64.i8(p) }
function {:inline} $i2p.i8.ref(i: i8) returns (ref) { $zext.i8.i64(i) }
function {:inline} $p2i.ref.i16(p: ref) returns (i16) { $trunc.i64.i16(p) }
function {:inline} $i2p.i16.ref(i: i16) returns (ref) { $zext.i16.i64(i) }
function {:inline} $p2i.ref.i32(p: ref) returns (i32) { $trunc.i64.i32(p) }
function {:inline} $i2p.i32.ref(i: i32) returns (ref) { $zext.i32.i64(i) }
function {:inline} $p2i.ref.i64(p: ref) returns (i64) { p }
function {:inline} $i2p.i64.ref(i: i64) returns (ref) { i }

function $fp(ipart: int, fpart: int, epart: int) returns (float);
// Floating-point arithmetic operations
function $abs.float(f: float) returns (float);
function $round.float(f: float) returns (float);
function $sqrt.float(f: float) returns (float);
function $fadd.float(f1: float, f2: float) returns (float);
function $fsub.float(f1: float, f2: float) returns (float);
function $fmul.float(f1: float, f2: float) returns (float);
function $fdiv.float(f1: float, f2: float) returns (float);
function $frem.float(f1: float, f2: float) returns (float);
function $min.float(f1: float, f2: float) returns (float);
function $max.float(f1: float, f2: float) returns (float);
function $fma.float(f1: float, f2: float, f3: float) returns (float);
// Floating-point predicates
function $foeq.float.bool(f1: float, f2: float) returns (bool);
function $fole.float.bool(f1: float, f2: float) returns (bool);
function $folt.float.bool(f1: float, f2: float) returns (bool);
function $foge.float.bool(f1: float, f2: float) returns (bool);
function $fogt.float.bool(f1: float, f2: float) returns (bool);
function $fone.float.bool(f1: float, f2: float) returns (bool);
function $ford.float.bool(f1: float, f2: float) returns (bool);
function $fueq.float.bool(f1: float, f2: float) returns (bool);
function $fugt.float.bool(f1: float, f2: float) returns (bool);
function $fuge.float.bool(f1: float, f2: float) returns (bool);
function $fult.float.bool(f1: float, f2: float) returns (bool);
function $fule.float.bool(f1: float, f2: float) returns (bool);
function $fune.float.bool(f1: float, f2: float) returns (bool);
function $funo.float.bool(f1: float, f2: float) returns (bool);
function $ffalse.float.bool(f1: float, f2: float) returns (bool);
function $ftrue.float.bool(f1: float, f2: float) returns (bool);
// Floating-point/integer conversion
function $bitcast.float.i8(f: float) returns (i8);
function $bitcast.float.i16(f: float) returns (i16);
function $bitcast.float.i32(f: float) returns (i32);
function $bitcast.float.i64(f: float) returns (i64);
function $bitcast.float.i80(f: float) returns (i80);
function $bitcast.i8.float(i: i8) returns (float);
function $bitcast.i16.float(i: i16) returns (float);
function $bitcast.i32.float(i: i32) returns (float);
function $bitcast.i64.float(i: i64) returns (float);
function $bitcast.i80.float(i: i80) returns (float);
function $fp2si.float.i1(f: float) returns (i1);
function $fp2si.float.i5(f: float) returns (i5);
function $fp2si.float.i6(f: float) returns (i6);
function $fp2si.float.i8(f: float) returns (i8);
function $fp2si.float.i16(f: float) returns (i16);
function $fp2si.float.i24(f: float) returns (i24);
function $fp2si.float.i32(f: float) returns (i32);
function $fp2si.float.i40(f: float) returns (i40);
function $fp2si.float.i48(f: float) returns (i48);
function $fp2si.float.i56(f: float) returns (i56);
function $fp2si.float.i64(f: float) returns (i64);
function $fp2si.float.i80(f: float) returns (i80);
function $fp2si.float.i88(f: float) returns (i88);
function $fp2si.float.i96(f: float) returns (i96);
function $fp2si.float.i128(f: float) returns (i128);
function $fp2si.float.i160(f: float) returns (i160);
function $fp2si.float.i256(f: float) returns (i256);
function $fp2ui.float.i1(f: float) returns (i1);
function $fp2ui.float.i5(f: float) returns (i5);
function $fp2ui.float.i6(f: float) returns (i6);
function $fp2ui.float.i8(f: float) returns (i8);
function $fp2ui.float.i16(f: float) returns (i16);
function $fp2ui.float.i24(f: float) returns (i24);
function $fp2ui.float.i32(f: float) returns (i32);
function $fp2ui.float.i40(f: float) returns (i40);
function $fp2ui.float.i48(f: float) returns (i48);
function $fp2ui.float.i56(f: float) returns (i56);
function $fp2ui.float.i64(f: float) returns (i64);
function $fp2ui.float.i80(f: float) returns (i80);
function $fp2ui.float.i88(f: float) returns (i88);
function $fp2ui.float.i96(f: float) returns (i96);
function $fp2ui.float.i128(f: float) returns (i128);
function $fp2ui.float.i160(f: float) returns (i160);
function $fp2ui.float.i256(f: float) returns (i256);
function $si2fp.i1.float(i: i1) returns (float);
function $si2fp.i5.float(i: i5) returns (float);
function $si2fp.i6.float(i: i6) returns (float);
function $si2fp.i8.float(i: i8) returns (float);
function $si2fp.i16.float(i: i16) returns (float);
function $si2fp.i24.float(i: i24) returns (float);
function $si2fp.i32.float(i: i32) returns (float);
function $si2fp.i40.float(i: i40) returns (float);
function $si2fp.i48.float(i: i48) returns (float);
function $si2fp.i56.float(i: i56) returns (float);
function $si2fp.i64.float(i: i64) returns (float);
function $si2fp.i80.float(i: i80) returns (float);
function $si2fp.i88.float(i: i88) returns (float);
function $si2fp.i96.float(i: i96) returns (float);
function $si2fp.i128.float(i: i128) returns (float);
function $si2fp.i160.float(i: i160) returns (float);
function $si2fp.i256.float(i: i256) returns (float);
function $ui2fp.i1.float(i: i1) returns (float);
function $ui2fp.i5.float(i: i5) returns (float);
function $ui2fp.i6.float(i: i6) returns (float);
function $ui2fp.i8.float(i: i8) returns (float);
function $ui2fp.i16.float(i: i16) returns (float);
function $ui2fp.i24.float(i: i24) returns (float);
function $ui2fp.i32.float(i: i32) returns (float);
function $ui2fp.i40.float(i: i40) returns (float);
function $ui2fp.i48.float(i: i48) returns (float);
function $ui2fp.i56.float(i: i56) returns (float);
function $ui2fp.i64.float(i: i64) returns (float);
function $ui2fp.i80.float(i: i80) returns (float);
function $ui2fp.i88.float(i: i88) returns (float);
function $ui2fp.i96.float(i: i96) returns (float);
function $ui2fp.i128.float(i: i128) returns (float);
function $ui2fp.i160.float(i: i160) returns (float);
function $ui2fp.i256.float(i: i256) returns (float);
// Floating-point conversion
function $fpext.float.float(f: float) returns (float);
function $fptrunc.float.float(f: float) returns (float);
// Floating-point load/store operations
function {:inline} $load.float(M: [ref] float, p: ref) returns (float) { M[p] }
function {:inline} $store.float(M: [ref] float, p: ref, f: float) returns ([ref] float) { M[p := f] }
function {:inline} $load.unsafe.float(M: [ref] i8, p: ref) returns (float) { $bitcast.i8.float(M[p]) }
function {:inline} $store.unsafe.float(M: [ref] i8, p: ref, f: float) returns ([ref] i8) { M[p := $bitcast.float.i8(f)] }
function $extractvalue.float(p: ref, i: int) returns (float);
const ldv_irq_1_3: ref;
axiom (ldv_irq_1_3 == $sub.ref(0, 1028));
const ldv_irq_1_0: ref;
axiom (ldv_irq_1_0 == $sub.ref(0, 2056));
const ldv_irq_2_0: ref;
axiom (ldv_irq_2_0 == $sub.ref(0, 3084));
const ldv_irq_1_2: ref;
axiom (ldv_irq_1_2 == $sub.ref(0, 4112));
const LDV_IN_INTERRUPT: ref;
axiom (LDV_IN_INTERRUPT == $sub.ref(0, 5140));
const ldv_irq_1_1: ref;
axiom (ldv_irq_1_1 == $sub.ref(0, 6168));
const ldv_irq_2_3: ref;
axiom (ldv_irq_2_3 == $sub.ref(0, 7196));
const ldv_irq_2_2: ref;
axiom (ldv_irq_2_2 == $sub.ref(0, 8224));
const ldv_irq_2_1: ref;
axiom (ldv_irq_2_1 == $sub.ref(0, 9252));
const ldv_irq_line_2_0: ref;
axiom (ldv_irq_line_2_0 == $sub.ref(0, 10280));
const ldv_irq_data_2_0: ref;
axiom (ldv_irq_data_2_0 == $sub.ref(0, 11312));
const ldv_irq_line_2_1: ref;
axiom (ldv_irq_line_2_1 == $sub.ref(0, 12340));
const ldv_irq_data_2_1: ref;
axiom (ldv_irq_data_2_1 == $sub.ref(0, 13372));
const ldv_irq_line_2_2: ref;
axiom (ldv_irq_line_2_2 == $sub.ref(0, 14400));
const ldv_irq_data_2_2: ref;
axiom (ldv_irq_data_2_2 == $sub.ref(0, 15432));
const ldv_irq_line_2_3: ref;
axiom (ldv_irq_line_2_3 == $sub.ref(0, 16460));
const ldv_irq_data_2_3: ref;
axiom (ldv_irq_data_2_3 == $sub.ref(0, 17492));
const ldv_irq_dev_2_0: ref;
axiom (ldv_irq_dev_2_0 == $sub.ref(0, 18524));
const ldv_irq_dev_2_1: ref;
axiom (ldv_irq_dev_2_1 == $sub.ref(0, 19556));
const ldv_irq_dev_2_2: ref;
axiom (ldv_irq_dev_2_2 == $sub.ref(0, 20588));
const ldv_irq_dev_2_3: ref;
axiom (ldv_irq_dev_2_3 == $sub.ref(0, 21620));
const mrf24j40_ops_group0: ref;
axiom (mrf24j40_ops_group0 == $sub.ref(0, 22652));
const ldv_irq_line_1_0: ref;
axiom (ldv_irq_line_1_0 == $sub.ref(0, 23680));
const ldv_irq_dev_1_0: ref;
axiom (ldv_irq_dev_1_0 == $sub.ref(0, 24712));
const ldv_irq_line_1_1: ref;
axiom (ldv_irq_line_1_1 == $sub.ref(0, 25740));
const ldv_irq_dev_1_1: ref;
axiom (ldv_irq_dev_1_1 == $sub.ref(0, 26772));
const ldv_irq_line_1_2: ref;
axiom (ldv_irq_line_1_2 == $sub.ref(0, 27800));
const ldv_irq_dev_1_2: ref;
axiom (ldv_irq_dev_1_2 == $sub.ref(0, 28832));
const ldv_irq_line_1_3: ref;
axiom (ldv_irq_line_1_3 == $sub.ref(0, 29860));
const ldv_irq_dev_1_3: ref;
axiom (ldv_irq_dev_1_3 == $sub.ref(0, 30892));
const ldv_irq_data_1_0: ref;
axiom (ldv_irq_data_1_0 == $sub.ref(0, 31924));
const ldv_irq_data_1_1: ref;
axiom (ldv_irq_data_1_1 == $sub.ref(0, 32956));
const ldv_irq_data_1_2: ref;
axiom (ldv_irq_data_1_2 == $sub.ref(0, 33988));
const ldv_irq_data_1_3: ref;
axiom (ldv_irq_data_1_3 == $sub.ref(0, 35020));
const mrf24j40_driver_group0: ref;
axiom (mrf24j40_driver_group0 == $sub.ref(0, 36052));
const ldv_state_variable_4: ref;
axiom (ldv_state_variable_4 == $sub.ref(0, 37080));
const ldv_state_variable_1: ref;
axiom (ldv_state_variable_1 == $sub.ref(0, 38108));
const ref_cnt: ref;
axiom (ref_cnt == $sub.ref(0, 39136));
const ldv_state_variable_0: ref;
axiom (ldv_state_variable_0 == $sub.ref(0, 40164));
const ldv_state_variable_3: ref;
axiom (ldv_state_variable_3 == $sub.ref(0, 41192));
const ldv_state_variable_2: ref;
axiom (ldv_state_variable_2 == $sub.ref(0, 42220));
const ldv_retval_0: ref;
axiom (ldv_retval_0 == $sub.ref(0, 43248));
const ldv_retval_1: ref;
axiom (ldv_retval_1 == $sub.ref(0, 44276));
const ldv_retval_2: ref;
axiom (ldv_retval_2 == $sub.ref(0, 45304));
const last_index: ref;
axiom (last_index == $sub.ref(0, 46332));
const LDV_SKBS: ref;
axiom (LDV_SKBS == $sub.ref(0, 47364));
const __mod_spi__mrf24j40_ids_device_table: ref;
axiom (__mod_spi__mrf24j40_ids_device_table == $sub.ref(0, 48428));
const {:count 15} set_impl: ref;
axiom (set_impl == $sub.ref(0, 49572));
const {:count 25} .str.1: ref;
axiom (.str.1 == $sub.ref(0, 50621));
const {:count 9} .str.2: ref;
axiom (.str.2 == $sub.ref(0, 51654));
const {:count 19} .str.3: ref;
axiom (.str.3 == $sub.ref(0, 52697));
const {:count 230} .str.4: ref;
axiom (.str.4 == $sub.ref(0, 53951));
const {:count 12} .str.5: ref;
axiom (.str.5 == $sub.ref(0, 54987));
const {:count 57} .str.7: ref;
axiom (.str.7 == $sub.ref(0, 56068));
const {:count 46} .str.8: ref;
axiom (.str.8 == $sub.ref(0, 57138));
const {:count 28} .str.9: ref;
axiom (.str.9 == $sub.ref(0, 58190));
const {:count 41} .str.10: ref;
axiom (.str.10 == $sub.ref(0, 59255));
const {:count 44} .str.6: ref;
axiom (.str.6 == $sub.ref(0, 60323));
const .str: ref;
axiom (.str == $sub.ref(0, 61390));
const {:count 16} .str.40: ref;
axiom (.str.40 == $sub.ref(0, 62430));
const {:count 8} .str.41: ref;
axiom (.str.41 == $sub.ref(0, 63462));
const {:count 29} .str.34: ref;
axiom (.str.34 == $sub.ref(0, 64515));
const {:count 22} .str.35: ref;
axiom (.str.35 == $sub.ref(0, 65561));
const mrf24j40_ops: ref;
axiom (mrf24j40_ops == $sub.ref(0, 66697));
const {:count 15} .str.36: ref;
axiom (.str.36 == $sub.ref(0, 67736));
const {:count 21} .str.37: ref;
axiom (.str.37 == $sub.ref(0, 68781));
const {:count 18} .str.38: ref;
axiom (.str.38 == $sub.ref(0, 69823));
const {:count 42} .str.22: ref;
axiom (.str.22 == $sub.ref(0, 70889));
const __this_module: ref;
axiom (__this_module == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32776)));
const {:count 9} .str.39: ref;
axiom (.str.39 == $sub.ref(0, 71922));
const mrf24j40_driver: ref;
axiom (mrf24j40_driver == $sub.ref(0, 73114));
const mrf24j40_ids: ref;
axiom (mrf24j40_ids == $sub.ref(0, 74258));
const spi_bus_type: ref;
axiom (spi_bus_type == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32784)));
const {:count 14} .str.31: ref;
axiom (.str.31 == $sub.ref(0, 75296));
const {:count 6} .str.32: ref;
axiom (.str.32 == $sub.ref(0, 76326));
const {:count 31} .str.30: ref;
axiom (.str.30 == $sub.ref(0, 77381));
const {:count 12} .str.23: ref;
axiom (.str.23 == $sub.ref(0, 78417));
const {:count 23} .str.24: ref;
axiom (.str.24 == $sub.ref(0, 79464));
const {:count 34} .str.25: ref;
axiom (.str.25 == $sub.ref(0, 80522));
const {:count 37} .str.26: ref;
axiom (.str.26 == $sub.ref(0, 81583));
const {:count 13} .str.27: ref;
axiom (.str.27 == $sub.ref(0, 82620));
const {:count 71} .str.28: ref;
axiom (.str.28 == $sub.ref(0, 83715));
const {:count 29} .str.29: ref;
axiom (.str.29 == $sub.ref(0, 84768));
const {:count 21} .str.20: ref;
axiom (.str.20 == $sub.ref(0, 85813));
const {:count 16} .str.21: ref;
axiom (.str.21 == $sub.ref(0, 86853));
const {:count 16} .str.13: ref;
axiom (.str.13 == $sub.ref(0, 87893));
const {:count 8} .str.14: ref;
axiom (.str.14 == $sub.ref(0, 88925));
const {:count 25} .str.15: ref;
axiom (.str.15 == $sub.ref(0, 89974));
const {:count 20} .str.16: ref;
axiom (.str.16 == $sub.ref(0, 91018));
const {:count 21} .str.17: ref;
axiom (.str.17 == $sub.ref(0, 92063));
const {:count 3} .str.18: ref;
axiom (.str.18 == $sub.ref(0, 93090));
const {:count 4} .str.19: ref;
axiom (.str.19 == $sub.ref(0, 94118));
const {:count 15} .str.11: ref;
axiom (.str.11 == $sub.ref(0, 95157));
const {:count 7} .str.12: ref;
axiom (.str.12 == $sub.ref(0, 96188));
const env_value_str: ref;
axiom (env_value_str == $sub.ref(0, 97220));
const {:count 3} .str.1.61: ref;
axiom (.str.1.61 == $sub.ref(0, 98247));
const {:count 14} .str.62: ref;
axiom (.str.62 == $sub.ref(0, 99285));
const errno_global: ref;
axiom (errno_global == $sub.ref(0, 100313));
const llvm.dbg.declare: ref;
axiom (llvm.dbg.declare == $sub.ref(0, 101345));
procedure  llvm.dbg.declare($p0: ref, $p1: ref, $p2: ref);
const malloc: ref;
axiom (malloc == $sub.ref(0, 102377));
procedure  malloc($i0: i64)
  returns ($r: ref)
{
  call $r := $malloc($i0);
}
const ldv_zalloc: ref;
axiom (ldv_zalloc == $sub.ref(0, 103409));
procedure  ldv_zalloc($i0: i64)
  returns ($r: ref)
{
  var $i1: i32;
  var $i2: i1;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $i7: i32;
  var $p3: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5494, 13} true;
  assume {:verifier.code 1} true;
  call {:cexpr "ldv_zalloc:arg:size"} boogie_si_record_i64($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5494, 13} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
  call {:cexpr "tmp___0"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5495, 15} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5495, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5496, 5} true;
  assume {:verifier.code 0} true;
  $p3 := $0.ref;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5498, 11} true;
  assume {:verifier.code 0} true;
  call $p4 := calloc(1, $i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5500, 23} true;
  assume {:verifier.code 1} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5500, 41} true;
  assume {:verifier.code 1} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5500, 41} true;
  assume {:verifier.code 1} true;
  $i7 := $zext.i1.i32($i6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5500, 5} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5501, 5} true;
  assume {:verifier.code 0} true;
  $p3 := $p4;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5504, 1} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const ldv__builtin_expect: ref;
axiom (ldv__builtin_expect == $sub.ref(0, 104441));
procedure  ldv__builtin_expect($i0: i64, $i1: i64)
  returns ($r: i64)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5546, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "ldv__builtin_expect:arg:exp"} boogie_si_record_i64($i0);
  call {:cexpr "ldv__builtin_expect:arg:c"} boogie_si_record_i64($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5546, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const ldv_error: ref;
axiom (ldv_error == $sub.ref(0, 105473));
procedure  ldv_error()
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5531, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5531, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5533, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_error();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5535, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const spi_sync: ref;
axiom (spi_sync == $sub.ref(0, 106505));
procedure  spi_sync($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
  var $i14: i1;
  var $i15: i32;
  var $p16: ref;
  var $p17: ref;
  var $i18: i32;
  var $i19: i8;
  var $i20: i64;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i32;
  var $i25: i8;
  var $i26: i64;
  var $p27: ref;
  var $i28: i32;
  var $i29: i32;
  var $i30: i1;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $i38: i1;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5657, 65} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5657, 65} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p1, $mul.ref(0, 88)), $mul.ref(0, 1));
  $p3 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 88)), $mul.ref(0, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5657, 77} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5657, 109} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5657, 124} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p5, $mul.ref($sub.i64(0, $p2i.ref.i64($add.ref($add.ref($0.ref, $mul.ref(0, 96)), $mul.ref(80, 1)))), 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5657, 84} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5657, 193} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p7, $mul.ref(0, 96)), $mul.ref(80, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5657, 221} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p1, $mul.ref(0, 88)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5657, 207} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.ref($p8, $p9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5657, 5} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5657, 5} true;
  assume {:verifier.code 0} true;
  $p11 := $p6;
  goto $bb4;
$bb2:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5657, 5} true;
  assume {:verifier.code 0} true;
  assume !(($i10 == 1));
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5665, 1} true;
  assume {:verifier.code 0} true;
  $r := $u0;
  $exn := false;
  return;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5658, 31} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p11, $mul.ref(0, 96)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5658, 31} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i32($M.0, $p12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5658, 23} true;
  assume {:verifier.code 0} true;
  $i14 := $ult.i32(0, $i13);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5658, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i14 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5658, 9} true;
  assume {:verifier.code 0} true;
  $i15 := 0;
  goto $bb8;
$bb6:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5658, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i14 == 1));
  goto $bb7;
$bb7:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5664, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5659, 30} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p11, $mul.ref(0, 96)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5659, 30} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5660, 22} true;
  assume {:verifier.code 1} true;
  call $i18 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i18);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5660, 22} true;
  assume {:verifier.code 0} true;
  $i19 := $trunc.i32.i8($i18);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5660, 13} true;
  assume {:verifier.code 0} true;
  $i20 := $sext.i32.i64($i15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5660, 13} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p17, $mul.ref($i20, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5660, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p21, $i19);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5661, 30} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p11, $mul.ref(0, 96)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5661, 30} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.0, $p22);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5662, 22} true;
  assume {:verifier.code 1} true;
  call $i24 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i24);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5662, 22} true;
  assume {:verifier.code 0} true;
  $i25 := $trunc.i32.i8($i24);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5662, 13} true;
  assume {:verifier.code 0} true;
  $i26 := $sext.i32.i64($i15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5662, 13} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p23, $mul.ref($i26, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5662, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p27, $i25);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5663, 9} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5658, 37} true;
  assume {:verifier.code 0} true;
  $i28 := $add.i32($i15, 1);
  call {:cexpr "i"} boogie_si_record_i32($i28);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5658, 31} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i32($M.0, $p12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5658, 23} true;
  assume {:verifier.code 0} true;
  $i30 := $ult.i32($i28, $i29);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5658, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i30 == 1);
  assume {:verifier.code 0} true;
  $i15 := $i28;
  goto $bb8;
$bb11:
  assume !(($i30 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5658, 9} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb12:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5657, 285} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($add.ref($p11, $mul.ref(0, 96)), $mul.ref(80, 1));
  $p32 := $add.ref($add.ref($add.ref($p11, $mul.ref(0, 96)), $mul.ref(80, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5657, 299} true;
  assume {:verifier.code 0} true;
  $p33 := $load.ref($M.0, $p32);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5657, 331} true;
  assume {:verifier.code 0} true;
  $p34 := $bitcast.ref.ref($p33);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5657, 346} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p34, $mul.ref($sub.i64(0, $p2i.ref.i64($add.ref($add.ref($0.ref, $mul.ref(0, 96)), $mul.ref(80, 1)))), 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5657, 306} true;
  assume {:verifier.code 0} true;
  $p36 := $bitcast.ref.ref($p35);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5657, 193} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p36, $mul.ref(0, 96)), $mul.ref(80, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5657, 207} true;
  assume {:verifier.code 0} true;
  $i38 := $ne.ref($p37, $p9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5657, 5} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i38 == 1);
  assume {:verifier.code 0} true;
  $p11 := $p35;
  goto $bb4;
$bb14:
  assume !(($i38 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5657, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const choose_interrupt_2: ref;
axiom (choose_interrupt_2 == $sub.ref(0, 107537));
procedure  choose_interrupt_2()
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i1;
  var $i3: i1;
  var $i4: i1;
  var $i5: i1;
  var $i6: i32;
  var $i7: i32;
  var $p8: ref;
  var $i9: i32;
  var $i10: i32;
  var $i11: i32;
  var $p12: ref;
  var $i13: i32;
  var $i14: i32;
  var $i15: i32;
  var $p16: ref;
  var $i17: i32;
  var $i18: i32;
  var $i19: i32;
  var $p20: ref;
  var $i21: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6651, 9} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6651, 9} true;
  assume {:verifier.code 1} true;
  call $i0 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
  call {:cexpr "tmp"} boogie_si_record_i32($i0);
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  $i1 := $slt.i32($i0, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i1 == 1);
  assume {:verifier.code 0} true;
  $i4 := $slt.i32($i0, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb9, $bb10;
$bb3:
  assume !(($i1 == 1));
  assume {:verifier.code 0} true;
  $i2 := $slt.i32($i0, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i2 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6660, 27} true;
  assume {:verifier.code 0} true;
  $i14 := $M.7;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6660, 40} true;
  assume {:verifier.code 0} true;
  $i15 := $M.8;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6660, 58} true;
  assume {:verifier.code 0} true;
  $p16 := $M.9;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6660, 17} true;
  assume {:verifier.code 0} true;
  call $i17 := ldv_irq_2($i14, $i15, $p16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6660, 15} true;
  assume {:verifier.code 0} true;
  $M.1 := $i17;
  call {:cexpr "ldv_irq_2_0"} boogie_si_record_i32($i17);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6661, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb5:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  $i3 := $eq.i32($i0, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i3 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6663, 27} true;
  assume {:verifier.code 0} true;
  $i18 := $M.10;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6663, 40} true;
  assume {:verifier.code 0} true;
  $i19 := $M.11;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6663, 58} true;
  assume {:verifier.code 0} true;
  $p20 := $M.12;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6663, 17} true;
  assume {:verifier.code 0} true;
  call $i21 := ldv_irq_2($i18, $i19, $p20);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6663, 15} true;
  assume {:verifier.code 0} true;
  $M.1 := $i21;
  call {:cexpr "ldv_irq_2_0"} boogie_si_record_i32($i21);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6664, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb7:
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  goto $bb14;
$bb9:
  assume ($i4 == 1);
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i0, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb11, $bb12;
$bb10:
  assume !(($i4 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6657, 27} true;
  assume {:verifier.code 0} true;
  $i10 := $M.4;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6657, 40} true;
  assume {:verifier.code 0} true;
  $i11 := $M.5;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6657, 58} true;
  assume {:verifier.code 0} true;
  $p12 := $M.6;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6657, 17} true;
  assume {:verifier.code 0} true;
  call $i13 := ldv_irq_2($i10, $i11, $p12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6657, 15} true;
  assume {:verifier.code 0} true;
  $M.1 := $i13;
  call {:cexpr "ldv_irq_2_0"} boogie_si_record_i32($i13);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6658, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb11:
  assume ($i5 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6654, 27} true;
  assume {:verifier.code 0} true;
  $i6 := $M.1;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6654, 40} true;
  assume {:verifier.code 0} true;
  $i7 := $M.2;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6654, 58} true;
  assume {:verifier.code 0} true;
  $p8 := $M.3;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6654, 17} true;
  assume {:verifier.code 0} true;
  call $i9 := ldv_irq_2($i6, $i7, $p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6654, 15} true;
  assume {:verifier.code 0} true;
  $M.1 := $i9;
  call {:cexpr "ldv_irq_2_0"} boogie_si_record_i32($i9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6655, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume {:verifier.code 0} true;
  assume !(($i5 == 1));
  goto $bb8;
$bb13:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6669, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb14:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6666, 3} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6667, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6667, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
}
const ldv_irq_2: ref;
axiom (ldv_irq_2 == $sub.ref(0, 108569));
procedure  ldv_irq_2($i0: i32, $i1: i32, $p2: ref)
  returns ($r: i32)
{
  var $i3: i1;
  var $i4: i32;
  var $i5: i1;
  var $i6: i1;
  var $i7: i1;
  var $i8: i1;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i1;
  var $i13: i32;
  var $i15: i1;
  var $i16: i32;
  var $i14: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6878, 13} true;
  assume {:verifier.code 0} true;
  call {:cexpr "ldv_irq_2:arg:state"} boogie_si_record_i32($i0);
  call {:cexpr "ldv_irq_2:arg:line"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6878, 13} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i0, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6878, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6879, 11} true;
  assume {:verifier.code 1} true;
  call $i4 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i4);
  call {:cexpr "tmp"} boogie_si_record_i32($i4);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb3:
  assume {:verifier.code 0} true;
  $i5 := $slt.i32($i4, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i5 == 1);
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i4, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb9, $bb10;
$bb5:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i4, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i6 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6900, 15} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i0, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6900, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb22, $bb23;
$bb7:
  assume {:verifier.code 0} true;
  assume !(($i6 == 1));
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  goto $bb25;
$bb9:
  assume ($i7 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6882, 15} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i0, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6882, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb11, $bb12;
$bb10:
  assume {:verifier.code 0} true;
  assume !(($i7 == 1));
  goto $bb8;
$bb11:
  assume ($i8 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6883, 24} true;
  assume {:verifier.code 0} true;
  $M.13 := 2;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6884, 17} true;
  assume {:verifier.code 0} true;
  call $i9 := ldv_handler1_2($i1, $p2);
  call {:cexpr "tmp___0"} boogie_si_record_i32($i9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6886, 24} true;
  assume {:verifier.code 0} true;
  $M.13 := 1;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6887, 37} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i32($i9, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6887, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb13, $bb14;
$bb12:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb13:
  assume ($i10 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6889, 7} true;
  assume {:verifier.code 0} true;
  $i11 := 2;
  goto $bb15;
$bb14:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  $i11 := $i0;
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6891, 37} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i32($i9, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6891, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i12 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6893, 7} true;
  assume {:verifier.code 0} true;
  $i13 := 1;
  goto $bb18;
$bb17:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  $i13 := $i11;
  goto $bb18;
$bb18:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6895, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $i13;
  goto $bb19;
$bb19:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6914, 1} true;
  assume {:verifier.code 0} true;
  $r := $i14;
  $exn := false;
  return;
$bb20:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6898, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6910, 3} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb22:
  assume ($i15 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6901, 20} true;
  assume {:verifier.code 0} true;
  call $i16 := mrf24j40_isr($i1, $p2);
  call {:cexpr "irq_retval"} boogie_si_record_i32($i16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6902, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $i0;
  goto $bb19;
$bb23:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6905, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb25:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6907, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6908, 5} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6908, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb27:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6912, 3} true;
  assume {:verifier.code 0} true;
  $i14 := $i0;
  goto $bb19;
}
const ldv_stop: ref;
axiom (ldv_stop == $sub.ref(0, 109601));
procedure  ldv_stop()
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5538, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5538, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5540, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb2:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5542, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_handler1_2: ref;
axiom (ldv_handler1_2 == $sub.ref(0, 110633));
procedure  ldv_handler1_2($i0: i32, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7526, 10} true;
  assume {:verifier.code 1} true;
  call {:cexpr "ldv_handler1_2:arg:arg0"} boogie_si_record_i32($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7526, 10} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7526, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const mrf24j40_isr: ref;
axiom (mrf24j40_isr == $sub.ref(0, 111665));
procedure  mrf24j40_isr($i0: i32, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $i6: i8;
  var $i7: i32;
  var $i8: i32;
  var $i9: i1;
  var $p10: ref;
  var $i11: i8;
  var $i12: i32;
  var $i13: i32;
  var $i14: i1;
  var $i15: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6472, 12} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  call {:cexpr "mrf24j40_isr:arg:irq"} boogie_si_record_i32($i0);
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6472, 12} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6473, 9} true;
  assume {:verifier.code 0} true;
  call $i4 := read_short_reg($p3, 49, $p2);
  call {:cexpr "ret"} boogie_si_record_i32($i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6474, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6474, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6475, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6487, 3} true;
  assume {:verifier.code 0} true;
  $r := 1;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6478, 13} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i8($M.14, $p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6478, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i8.i32($i6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6478, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6478:21: warning: over-approximating bitwise operation and;
  $i8 := $and.i32($i7, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6478, 21} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i8, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6478, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i9 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6479, 24} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p3, $mul.ref(0, 288)), $mul.ref(184, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6479, 5} true;
  assume {:verifier.code 0} true;
  call complete_($p10);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6480, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6482, 14} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i8($M.14, $p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6482, 8} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i8.i32($i11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6482, 22} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6482:22: warning: over-approximating bitwise operation and;
  $i13 := $and.i32($i12, 8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6482, 27} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i32($i13, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6482, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i14 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6483, 5} true;
  assume {:verifier.code 0} true;
  call $i15 := mrf24j40_handle_rx($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6484, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6482, 30} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const read_short_reg: ref;
axiom (read_short_reg == $sub.ref(0, 112697));
procedure  read_short_reg($p0: ref, $i1: i8, $p2: ref)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i8;
  var $i28: i8;
  var $p29: ref;
  var $i30: i8;
  var $i31: i8;
  var $p32: ref;
  var $i33: i8;
  var $i34: i8;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i32;
  var $i44: i32;
  var $i45: i8;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $i53: i32;
  var $i54: i1;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $i58: i32;
  var $i59: i32;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $i63: i8;
  var $p64: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5733, 39} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(88, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(96, $zext.i32.i64(1)));
  call {:cexpr "read_short_reg:arg:reg"} boogie_si_record_i8($i1);
  assume true;
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5733, 39} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(280, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5733, 39} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5733, 8} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5733, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p7, $p6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5734, 33} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(280, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5734, 33} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5734, 8} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5734, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p10, $p9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5735, 8} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5735, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p11, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5736, 8} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5736, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p12, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5737, 8} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5737, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p13, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5738, 8} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p15 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5738, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p15, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5739, 8} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p17 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5739, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p17, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5740, 8} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p19 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(12, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5740, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p19, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5741, 8} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p21 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5741, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p21, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5742, 8} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p23 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5742, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p23, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5743, 8} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p25 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(12, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5743, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p25, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5744, 8} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5744, 18} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i8($M.0, $p26);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5744, 18} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5744:18: warning: over-approximating bitwise operation and;
  $i28 := $and.i8($i27, $sub.i8(0, 2));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5744, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p26, $i28);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5745, 8} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5745, 17} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i8($M.0, $p29);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5745, 17} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5745:17: warning: over-approximating bitwise operation and;
  $i31 := $and.i8($i30, $sub.i8(0, 15));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5745, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p29, $i31);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5746, 8} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5746, 17} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i8($M.0, $p32);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5746, 17} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5746:17: warning: over-approximating bitwise operation and;
  $i34 := $and.i8($i33, $sub.i8(0, 113));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5746, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p32, $i34);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5747, 8} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(73, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5747, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p35, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5748, 8} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(74, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5748, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p36, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5749, 8} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(76, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5749, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p37, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5750, 8} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(80, 1));
  $p39 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(80, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5750, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p39, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5751, 8} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(80, 1));
  $p41 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(80, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5751, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p41, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5752, 3} true;
  assume {:verifier.code 0} true;
  call spi_message_init($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5753, 3} true;
  assume {:verifier.code 0} true;
  call spi_message_add_tail($p4, $p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5754, 31} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5754, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p42, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5755, 20} true;
  assume {:verifier.code 0} true;
  $i43 := $zext.i8.i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5755, 30} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5755:30: warning: over-approximating bitwise operation shl;
  $i44 := $shl.i32($i43, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5755, 20} true;
  assume {:verifier.code 0} true;
  $i45 := $trunc.i32.i8($i44);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5755, 13} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(280, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5755, 13} true;
  assume {:verifier.code 0} true;
  $p47 := $load.ref($M.0, $p46);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5755, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p47, $i45);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5756, 13} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(280, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5756, 13} true;
  assume {:verifier.code 0} true;
  $p49 := $load.ref($M.0, $p48);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5756, 17} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p49, $mul.ref(1, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5756, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p50, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5757, 26} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5757, 26} true;
  assume {:verifier.code 0} true;
  $p52 := $load.ref($M.0, $p51);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5757, 9} true;
  assume {:verifier.code 0} true;
  call $i53 := spi_sync($p52, $p3);
  call {:cexpr "ret"} boogie_si_record_i32($i53);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5758, 11} true;
  assume {:verifier.code 0} true;
  $i54 := $ne.i32($i53, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5758, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i54 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5759, 48} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5759, 48} true;
  assume {:verifier.code 0} true;
  $p56 := $load.ref($M.0, $p55);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5759, 54} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($add.ref($p56, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5760, 13} true;
  assume {:verifier.code 0} true;
  $i58 := $zext.i8.i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5759, 5} true;
  assume {:verifier.code 0} true;
  call $i59 := dev_err.ref.ref.i32($p57, .str, $i58);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5761, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i54 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5762, 22} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(280, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5762, 22} true;
  assume {:verifier.code 0} true;
  $p61 := $load.ref($M.0, $p60);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5762, 26} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p61, $mul.ref(1, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5762, 12} true;
  assume {:verifier.code 0} true;
  $i63 := $load.i8($M.0, $p62);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5762, 10} true;
  assume {:verifier.code 0} true;
  $M.14 := $store.i8($M.14, $p2, $i63);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5764, 26} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5764, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p64);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5765, 3} true;
  assume {:verifier.code 0} true;
  $r := $i53;
  $exn := false;
  return;
}
const complete_: ref;
axiom (complete_ == $sub.ref(0, 113729));
procedure  complete_($p0: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7482, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7482, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const mrf24j40_handle_rx: ref;
axiom (mrf24j40_handle_rx == $sub.ref(0, 114761));
procedure  mrf24j40_handle_rx($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $i7: i8;
  var $i8: i32;
  var $i9: i32;
  var $i10: i8;
  var $i11: i8;
  var $i12: i32;
  var $i13: i8;
  var $i14: i32;
  var $i15: i8;
  var $i16: i32;
  var $p17: ref;
  var $i18: i64;
  var $i19: i1;
  var $i20: i8;
  var $i21: i32;
  var $p22: ref;
  var $i23: i32;
  var $i24: i1;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i32;
  var $i29: i8;
  var $i30: i32;
  var $i31: i32;
  var $p32: ref;
  var $p33: ref;
  var $i34: i8;
  var $i35: i32;
  var $i36: i8;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i24;
  var $i44: i24;
  var $i45: i24;
  var $p46: ref;
  var $p47: ref;
  var $i48: i8;
  var $i49: i64;
  var $i50: i64;
  var $i51: i64;
  var $i52: i1;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $i56: i32;
  var $i57: i32;
  var $i58: i1;
  var $i59: i8;
  var $i60: i32;
  var $i61: i32;
  var $i62: i8;
  var $i63: i8;
  var $i64: i32;
  var $i65: i8;
  var $i66: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6413, 7} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume true;
  assume true;
  assume true;
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6413, 7} true;
  assume {:verifier.code 0} true;
  $M.15 := $store.i8($M.15, $p1, $sub.i8(0, 112));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6414, 7} true;
  assume {:verifier.code 0} true;
  $M.16 := $store.i8($M.16, $p2, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6416, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := read_short_reg($p0, 57, $p3);
  call {:cexpr "ret"} boogie_si_record_i32($i5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6417, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6417, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6418, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6453, 9} true;
  assume {:verifier.code 0} true;
  call $i57 := read_short_reg($p0, 57, $p3);
  call {:cexpr "ret"} boogie_si_record_i32($i57);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6454, 11} true;
  assume {:verifier.code 0} true;
  $i58 := $ne.i32($i57, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6454, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb14, $bb15;
$bb4:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6421, 30} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i8($M.14, $p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6421, 15} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i8.i32($i7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6421, 34} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6421:34: warning: over-approximating bitwise operation or;
  $i9 := $or.i32($i8, 4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6421, 9} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i32.i8($i9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6421, 7} true;
  assume {:verifier.code 0} true;
  $M.14 := $store.i8($M.14, $p3, $i10);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6422, 37} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i8($M.14, $p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6422, 31} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i8.i32($i11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6422, 31} true;
  assume {:verifier.code 0} true;
  $i13 := $trunc.i32.i8($i12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6422, 3} true;
  assume {:verifier.code 0} true;
  call $i14 := write_short_reg($p0, 57, $i13);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6423, 41} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i8($M.15, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6423, 26} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i8.i32($i15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6423, 9} true;
  assume {:verifier.code 0} true;
  call $p17 := ldv_alloc_skb_13($i16, 208);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6424, 7} true;
  assume {:verifier.code 0} true;
  $i18 := $p2i.ref.i64($p17);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6424, 27} true;
  assume {:verifier.code 0} true;
  $i19 := $eq.i64($i18, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6424, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i19 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6426, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb6:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6429, 37} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i8($M.15, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6429, 22} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i8.i32($i20);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6429, 9} true;
  assume {:verifier.code 0} true;
  call $p22 := skb_put($p17, $i21);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6430, 9} true;
  assume {:verifier.code 0} true;
  call $i23 := mrf24j40_read_rx_buf($p0, $p22, $p1, $p2);
  call {:cexpr "ret"} boogie_si_record_i32($i23);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6431, 11} true;
  assume {:verifier.code 0} true;
  $i24 := $slt.i32($i23, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6431, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i24 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6432, 48} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6432, 48} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6432, 54} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p26, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6432, 5} true;
  assume {:verifier.code 0} true;
  call $i28 := dev_err.ref.ref($p27, .str.1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6433, 5} true;
  assume {:verifier.code 0} true;
  call ldv_kfree_skb_14($p17);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6435, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb9:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6438, 39} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i8($M.15, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6438, 33} true;
  assume {:verifier.code 0} true;
  $i30 := $zext.i8.i32($i29);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6438, 43} true;
  assume {:verifier.code 0} true;
  $i31 := $add.i32($i30, $sub.i32(0, 2));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6438, 3} true;
  assume {:verifier.code 0} true;
  call skb_trim($p17, $i31);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6439, 33} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6439, 33} true;
  assume {:verifier.code 0} true;
  $p33 := $load.ref($M.0, $p32);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6439, 49} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i8($M.16, $p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6439, 43} true;
  assume {:verifier.code 0} true;
  $i35 := $zext.i8.i32($i34);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6439, 43} true;
  assume {:verifier.code 0} true;
  $i36 := $trunc.i32.i8($i35);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6439, 3} true;
  assume {:verifier.code 0} true;
  call ieee802154_rx_irqsafe($p33, $p17, $i36);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6440, 14} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6440, 22} true;
  assume {:verifier.code 0} true;
  $M.17 := $store.ref($M.17, $p37, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6441, 14} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6441, 23} true;
  assume {:verifier.code 0} true;
  $M.18 := $store.ref($M.18, $p38, .str.3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6442, 14} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6442, 23} true;
  assume {:verifier.code 0} true;
  $M.19 := $store.ref($M.19, $p39, .str.4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6443, 14} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6443, 21} true;
  assume {:verifier.code 0} true;
  $M.20 := $store.ref($M.20, $p40, .str.5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6444, 14} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6444, 14} true;
  assume {:verifier.code 0} true;
  $p42 := $bitcast.ref.ref($p41);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6444, 21} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i24($M.21, $p42);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6444, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6444:21: warning: over-approximating bitwise operation and;
  $i44 := $and.i24($i43, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6444, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6444:21: warning: over-approximating bitwise operation or;
  $i45 := $or.i24($i44, 644);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6444, 21} true;
  assume {:verifier.code 0} true;
  $M.21 := $store.i24($M.21, $p42, $i45);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6445, 14} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6445, 20} true;
  assume {:verifier.code 0} true;
  $M.22 := $store.i8($M.22, $p46, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6446, 51} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6446, 51} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i8($M.22, $p47);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6446, 33} true;
  assume {:verifier.code 0} true;
  $i49 := $zext.i8.i64($i48);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6446, 57} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6446:57: warning: over-approximating bitwise operation and;
  $i50 := $and.i64($i49, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6446, 13} true;
  assume {:verifier.code 0} true;
  call $i51 := ldv__builtin_expect($i50, 0);
  call {:cexpr "tmp___0"} boogie_si_record_i64($i51);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6447, 15} true;
  assume {:verifier.code 0} true;
  $i52 := $ne.i64($i51, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6447, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i52} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i52 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6448, 72} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6448, 72} true;
  assume {:verifier.code 0} true;
  $p54 := $load.ref($M.0, $p53);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6448, 78} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($add.ref($p54, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6448, 5} true;
  assume {:verifier.code 0} true;
  call $i56 := __dynamic_dev_dbg.ref.ref.ref($p4, $p55, .str.5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6450, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i52 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6447, 18} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb14:
  assume ($i58 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6455, 5} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i58 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6462, 1} true;
  assume {:verifier.code 0} true;
  $r := $i57;
  $exn := false;
  return;
$bb17:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6458, 24} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i8($M.14, $p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6458, 9} true;
  assume {:verifier.code 0} true;
  $i60 := $zext.i8.i32($i59);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6458, 28} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6458:28: warning: over-approximating bitwise operation and;
  $i61 := $and.i32($i60, 251);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6458, 9} true;
  assume {:verifier.code 0} true;
  $i62 := $trunc.i32.i8($i61);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6458, 7} true;
  assume {:verifier.code 0} true;
  $M.14 := $store.i8($M.14, $p3, $i62);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6459, 37} true;
  assume {:verifier.code 0} true;
  $i63 := $load.i8($M.14, $p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6459, 31} true;
  assume {:verifier.code 0} true;
  $i64 := $zext.i8.i32($i63);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6459, 31} true;
  assume {:verifier.code 0} true;
  $i65 := $trunc.i32.i8($i64);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6459, 3} true;
  assume {:verifier.code 0} true;
  call $i66 := write_short_reg($p0, 57, $i65);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6460, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
}
const write_short_reg: ref;
axiom (write_short_reg == $sub.ref(0, 115793));
procedure  write_short_reg($p0: ref, $i1: i8, $i2: i8)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i8;
  var $i28: i8;
  var $p29: ref;
  var $i30: i8;
  var $i31: i8;
  var $p32: ref;
  var $i33: i8;
  var $i34: i8;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i32;
  var $i44: i32;
  var $i45: i8;
  var $i46: i32;
  var $i47: i32;
  var $i48: i8;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $i56: i32;
  var $i57: i1;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $i61: i32;
  var $i62: i32;
  var $p63: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5692, 39} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(88, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(96, $zext.i32.i64(1)));
  call {:cexpr "write_short_reg:arg:reg"} boogie_si_record_i8($i1);
  call {:cexpr "write_short_reg:arg:value"} boogie_si_record_i8($i2);
  assume true;
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5692, 39} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(280, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5692, 39} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5692, 8} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5692, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p7, $p6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5693, 33} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(280, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5693, 33} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5693, 8} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5693, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p10, $p9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5694, 8} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5694, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p11, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5695, 8} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5695, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p12, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5696, 8} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5696, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p13, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5697, 8} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p15 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5697, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p15, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5698, 8} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p17 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5698, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p17, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5699, 8} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p19 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(12, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5699, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p19, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5700, 8} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p21 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5700, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p21, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5701, 8} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p23 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5701, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p23, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5702, 8} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p25 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(12, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5702, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p25, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5703, 8} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5703, 18} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i8($M.0, $p26);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5703, 18} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5703:18: warning: over-approximating bitwise operation and;
  $i28 := $and.i8($i27, $sub.i8(0, 2));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5703, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p26, $i28);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5704, 8} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5704, 17} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i8($M.0, $p29);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5704, 17} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5704:17: warning: over-approximating bitwise operation and;
  $i31 := $and.i8($i30, $sub.i8(0, 15));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5704, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p29, $i31);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5705, 8} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5705, 17} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i8($M.0, $p32);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5705, 17} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5705:17: warning: over-approximating bitwise operation and;
  $i34 := $and.i8($i33, $sub.i8(0, 113));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5705, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p32, $i34);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5706, 8} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(73, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5706, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p35, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5707, 8} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(74, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5707, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p36, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5708, 8} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(76, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5708, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p37, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5709, 8} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(80, 1));
  $p39 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(80, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5709, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p39, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5710, 8} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(80, 1));
  $p41 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(80, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5710, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p41, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5711, 3} true;
  assume {:verifier.code 0} true;
  call spi_message_init($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5712, 3} true;
  assume {:verifier.code 0} true;
  call spi_message_add_tail($p4, $p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5713, 31} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5713, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p42, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5714, 48} true;
  assume {:verifier.code 0} true;
  $i43 := $zext.i8.i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5714, 58} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5714:58: warning: over-approximating bitwise operation shl;
  $i44 := $shl.i32($i43, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5714, 33} true;
  assume {:verifier.code 0} true;
  $i45 := $trunc.i32.i8($i44);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5714, 26} true;
  assume {:verifier.code 0} true;
  $i46 := $sext.i8.i32($i45);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5714, 65} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5714:65: warning: over-approximating bitwise operation or;
  $i47 := $or.i32($i46, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5714, 20} true;
  assume {:verifier.code 0} true;
  $i48 := $trunc.i32.i8($i47);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5714, 13} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(280, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5714, 13} true;
  assume {:verifier.code 0} true;
  $p50 := $load.ref($M.0, $p49);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5714, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p50, $i48);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5715, 13} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(280, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5715, 13} true;
  assume {:verifier.code 0} true;
  $p52 := $load.ref($M.0, $p51);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5715, 17} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p52, $mul.ref(1, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5715, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p53, $i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5716, 26} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5716, 26} true;
  assume {:verifier.code 0} true;
  $p55 := $load.ref($M.0, $p54);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5716, 9} true;
  assume {:verifier.code 0} true;
  call $i56 := spi_sync($p55, $p3);
  call {:cexpr "ret"} boogie_si_record_i32($i56);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5717, 11} true;
  assume {:verifier.code 0} true;
  $i57 := $ne.i32($i56, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5717, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i57} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i57 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5718, 48} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5718, 48} true;
  assume {:verifier.code 0} true;
  $p59 := $load.ref($M.0, $p58);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5718, 54} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($add.ref($p59, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5719, 13} true;
  assume {:verifier.code 0} true;
  $i61 := $zext.i8.i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5718, 5} true;
  assume {:verifier.code 0} true;
  call $i62 := dev_err.ref.ref.i32($p60, .str.6, $i61);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5720, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i57 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5722, 26} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5722, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p63);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5723, 3} true;
  assume {:verifier.code 0} true;
  $r := $i56;
  $exn := false;
  return;
}
const ldv_alloc_skb_13: ref;
axiom (ldv_alloc_skb_13 == $sub.ref(0, 116825));
procedure  ldv_alloc_skb_13($i0: i32, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7220, 9} true;
  assume {:verifier.code 0} true;
  call {:cexpr "ldv_alloc_skb_13:arg:size"} boogie_si_record_i32($i0);
  call {:cexpr "ldv_alloc_skb_13:arg:priority"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7220, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := ldv_skb_alloc();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7220, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7221, 3} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const skb_put: ref;
axiom (skb_put == $sub.ref(0, 117857));
procedure  skb_put($p0: ref, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7540, 27} true;
  assume {:verifier.code 0} true;
  call {:cexpr "skb_put:arg:arg1"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7540, 27} true;
  assume {:verifier.code 0} true;
  call $p2 := external_alloc();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7540, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const mrf24j40_read_rx_buf: ref;
axiom (mrf24j40_read_rx_buf == $sub.ref(0, 118889));
procedure  mrf24j40_read_rx_buf($p0: ref, $p1: ref, $p2: ref, $p3: ref)
  returns ($r: i32)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $i30: i8;
  var $i31: i8;
  var $p32: ref;
  var $i33: i8;
  var $i34: i8;
  var $p35: ref;
  var $i36: i8;
  var $i37: i8;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $i63: i8;
  var $i64: i8;
  var $p65: ref;
  var $i66: i8;
  var $i67: i8;
  var $p68: ref;
  var $i69: i8;
  var $i70: i8;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $p96: ref;
  var $i97: i8;
  var $i98: i8;
  var $p99: ref;
  var $i100: i8;
  var $i101: i8;
  var $p102: ref;
  var $i103: i8;
  var $i104: i8;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $p109: ref;
  var $p110: ref;
  var $p111: ref;
  var $i112: i32;
  var $i113: i1;
  var $i115: i8;
  var $i116: i32;
  var $i117: i1;
  var $p118: ref;
  var $p119: ref;
  var $p120: ref;
  var $i121: i32;
  var $i122: i8;
  var $i123: i32;
  var $i124: i8;
  var $i125: i32;
  var $i126: i1;
  var $p127: ref;
  var $p128: ref;
  var $p129: ref;
  var $i130: i32;
  var $i131: i8;
  var $i132: i32;
  var $i133: i32;
  var $i134: i8;
  var $p135: ref;
  var $i136: i8;
  var $p137: ref;
  var $i138: i8;
  var $i139: i32;
  var $p140: ref;
  var $p141: ref;
  var $p142: ref;
  var $i143: i32;
  var $i144: i1;
  var $p145: ref;
  var $p146: ref;
  var $p147: ref;
  var $i148: i32;
  var $p149: ref;
  var $i150: i8;
  var $i151: i8;
  var $i114: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5958, 22} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p7 := $alloc($mul.ref(88, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p8 := $alloc($mul.ref(96, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p9 := $alloc($mul.ref(96, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p10 := $alloc($mul.ref(96, $zext.i32.i64(1)));
  assume true;
  assume true;
  assume true;
  assume true;
  assume true;
  assume true;
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5958, 22} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5958, 13} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5958, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p12, $p5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5959, 13} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5959, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p13, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5960, 13} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5960, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p14, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5961, 13} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5961, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p15, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5962, 13} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5962, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p16, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5963, 13} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p18 := $add.ref($add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5963, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p18, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5964, 13} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p20 := $add.ref($add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5964, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p20, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5965, 13} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p22 := $add.ref($add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(12, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5965, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p22, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5966, 13} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p24 := $add.ref($add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5966, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p24, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5967, 13} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p26 := $add.ref($add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5967, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p26, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5968, 13} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p28 := $add.ref($add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(12, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5968, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p28, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5969, 13} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5969, 23} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i8($M.0, $p29);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5969, 23} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5969:23: warning: over-approximating bitwise operation and;
  $i31 := $and.i8($i30, $sub.i8(0, 2));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5969, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p29, $i31);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5970, 13} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5970, 22} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i8($M.0, $p32);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5970, 22} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5970:22: warning: over-approximating bitwise operation and;
  $i34 := $and.i8($i33, $sub.i8(0, 15));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5970, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p32, $i34);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5971, 13} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5971, 22} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i8($M.0, $p35);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5971, 22} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5971:22: warning: over-approximating bitwise operation and;
  $i37 := $and.i8($i36, $sub.i8(0, 113));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5971, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p35, $i37);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5972, 13} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(73, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5972, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p38, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5973, 13} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(74, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5973, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p39, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5974, 13} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(76, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5974, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p40, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5975, 13} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(80, 1));
  $p42 := $add.ref($add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(80, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5975, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p42, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5976, 13} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(80, 1));
  $p44 := $add.ref($add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(80, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5976, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p44, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5977, 13} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($add.ref($p9, $mul.ref(0, 96)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5977, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p45, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5978, 13} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p9, $mul.ref(0, 96)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5978, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p46, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5979, 13} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($add.ref($p9, $mul.ref(0, 96)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5979, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p47, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5980, 13} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($add.ref($p9, $mul.ref(0, 96)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5980, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p48, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5981, 13} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($add.ref($p9, $mul.ref(0, 96)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5981, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p49, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5982, 13} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($add.ref($p9, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p51 := $add.ref($add.ref($add.ref($p9, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5982, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p51, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5983, 13} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($add.ref($p9, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p53 := $add.ref($add.ref($add.ref($p9, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5983, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p53, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5984, 13} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($add.ref($p9, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p55 := $add.ref($add.ref($add.ref($p9, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(12, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5984, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p55, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5985, 13} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($add.ref($p9, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p57 := $add.ref($add.ref($add.ref($p9, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5985, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p57, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5986, 13} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($add.ref($p9, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p59 := $add.ref($add.ref($add.ref($p9, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5986, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p59, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5987, 13} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($add.ref($p9, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p61 := $add.ref($add.ref($add.ref($p9, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(12, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5987, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p61, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5988, 13} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($add.ref($p9, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5988, 23} true;
  assume {:verifier.code 0} true;
  $i63 := $load.i8($M.0, $p62);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5988, 23} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5988:23: warning: over-approximating bitwise operation and;
  $i64 := $and.i8($i63, $sub.i8(0, 2));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5988, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p62, $i64);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5989, 13} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($add.ref($p9, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5989, 22} true;
  assume {:verifier.code 0} true;
  $i66 := $load.i8($M.0, $p65);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5989, 22} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5989:22: warning: over-approximating bitwise operation and;
  $i67 := $and.i8($i66, $sub.i8(0, 15));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5989, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p65, $i67);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5990, 13} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($add.ref($p9, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5990, 22} true;
  assume {:verifier.code 0} true;
  $i69 := $load.i8($M.0, $p68);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5990, 22} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5990:22: warning: over-approximating bitwise operation and;
  $i70 := $and.i8($i69, $sub.i8(0, 113));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5990, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p68, $i70);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5991, 13} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($add.ref($p9, $mul.ref(0, 96)), $mul.ref(73, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5991, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p71, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5992, 13} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($add.ref($p9, $mul.ref(0, 96)), $mul.ref(74, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5992, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p72, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5993, 13} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($add.ref($p9, $mul.ref(0, 96)), $mul.ref(76, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5993, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p73, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5994, 13} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($add.ref($p9, $mul.ref(0, 96)), $mul.ref(80, 1));
  $p75 := $add.ref($add.ref($add.ref($p9, $mul.ref(0, 96)), $mul.ref(80, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5994, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p75, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5995, 13} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($add.ref($p9, $mul.ref(0, 96)), $mul.ref(80, 1));
  $p77 := $add.ref($add.ref($add.ref($p9, $mul.ref(0, 96)), $mul.ref(80, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5995, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p77, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5996, 15} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($add.ref($p10, $mul.ref(0, 96)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5996, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p78, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5997, 24} true;
  assume {:verifier.code 0} true;
  $p79 := $bitcast.ref.ref($p6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5997, 15} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($add.ref($p10, $mul.ref(0, 96)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5997, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p80, $p6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5998, 15} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($add.ref($p10, $mul.ref(0, 96)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5998, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p81, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5999, 15} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($add.ref($p10, $mul.ref(0, 96)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5999, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p82, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6000, 15} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($add.ref($p10, $mul.ref(0, 96)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6000, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p83, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6001, 15} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($add.ref($p10, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p85 := $add.ref($add.ref($add.ref($p10, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6001, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p85, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6002, 15} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($add.ref($p10, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p87 := $add.ref($add.ref($add.ref($p10, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6002, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p87, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6003, 15} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($add.ref($p10, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p89 := $add.ref($add.ref($add.ref($p10, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(12, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6003, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p89, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6004, 15} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($add.ref($p10, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p91 := $add.ref($add.ref($add.ref($p10, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6004, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p91, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6005, 15} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($add.ref($p10, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p93 := $add.ref($add.ref($add.ref($p10, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6005, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p93, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6006, 15} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($add.ref($p10, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p95 := $add.ref($add.ref($add.ref($p10, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(12, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6006, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p95, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6007, 15} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($add.ref($p10, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6007, 25} true;
  assume {:verifier.code 0} true;
  $i97 := $load.i8($M.0, $p96);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6007, 25} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6007:25: warning: over-approximating bitwise operation and;
  $i98 := $and.i8($i97, $sub.i8(0, 2));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6007, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p96, $i98);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6008, 15} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($add.ref($p10, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6008, 24} true;
  assume {:verifier.code 0} true;
  $i100 := $load.i8($M.0, $p99);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6008, 24} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6008:24: warning: over-approximating bitwise operation and;
  $i101 := $and.i8($i100, $sub.i8(0, 15));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6008, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p99, $i101);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6009, 15} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($add.ref($p10, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6009, 24} true;
  assume {:verifier.code 0} true;
  $i103 := $load.i8($M.0, $p102);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6009, 24} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6009:24: warning: over-approximating bitwise operation and;
  $i104 := $and.i8($i103, $sub.i8(0, 113));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6009, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p102, $i104);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6010, 15} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($add.ref($p10, $mul.ref(0, 96)), $mul.ref(73, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6010, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p105, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6011, 15} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($add.ref($p10, $mul.ref(0, 96)), $mul.ref(74, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6011, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p106, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6012, 15} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($add.ref($p10, $mul.ref(0, 96)), $mul.ref(76, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6012, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p107, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6013, 15} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($add.ref($p10, $mul.ref(0, 96)), $mul.ref(80, 1));
  $p109 := $add.ref($add.ref($add.ref($p10, $mul.ref(0, 96)), $mul.ref(80, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6013, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p109, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6014, 15} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($add.ref($p10, $mul.ref(0, 96)), $mul.ref(80, 1));
  $p111 := $add.ref($add.ref($add.ref($p10, $mul.ref(0, 96)), $mul.ref(80, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6014, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p111, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6015, 9} true;
  assume {:verifier.code 0} true;
  call $i112 := read_long_reg($p0, 768, $p4);
  call {:cexpr "ret"} boogie_si_record_i32($i112);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6016, 11} true;
  assume {:verifier.code 0} true;
  $i113 := $ne.i32($i112, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6016, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i113} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i113 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6017, 5} true;
  assume {:verifier.code 0} true;
  $i114 := $i112;
  goto $bb3;
$bb2:
  assume !(($i113 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6047, 3} true;
  assume {:verifier.code 0} true;
  $r := $i114;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6020, 22} true;
  assume {:verifier.code 0} true;
  $i115 := $load.i8($M.23, $p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6020, 7} true;
  assume {:verifier.code 0} true;
  $i116 := $zext.i8.i32($i115);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6020, 29} true;
  assume {:verifier.code 0} true;
  $i117 := $ugt.i32($i116, 143);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6020, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i117} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i117 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6021, 48} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6021, 48} true;
  assume {:verifier.code 0} true;
  $p119 := $load.ref($M.0, $p118);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6021, 54} true;
  assume {:verifier.code 0} true;
  $p120 := $add.ref($add.ref($p119, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6021, 5} true;
  assume {:verifier.code 0} true;
  call $i121 := dev_err.ref.ref($p120, .str.7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6022, 12} true;
  assume {:verifier.code 0} true;
  $M.23 := $store.i8($M.23, $p4, $sub.i8(0, 113));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6023, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i117 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6025, 13} true;
  assume {:verifier.code 0} true;
  $i122 := $load.i8($M.15, $p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6025, 7} true;
  assume {:verifier.code 0} true;
  $i123 := $zext.i8.i32($i122);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6025, 26} true;
  assume {:verifier.code 0} true;
  $i124 := $load.i8($M.23, $p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6025, 20} true;
  assume {:verifier.code 0} true;
  $i125 := $zext.i8.i32($i124);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6025, 18} true;
  assume {:verifier.code 0} true;
  $i126 := $slt.i32($i123, $i125);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6025, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i126} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i126 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6026, 48} true;
  assume {:verifier.code 0} true;
  $p127 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6026, 48} true;
  assume {:verifier.code 0} true;
  $p128 := $load.ref($M.0, $p127);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6026, 54} true;
  assume {:verifier.code 0} true;
  $p129 := $add.ref($add.ref($p128, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6026, 5} true;
  assume {:verifier.code 0} true;
  call $i130 := dev_err.ref.ref($p129, .str.8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6027, 14} true;
  assume {:verifier.code 0} true;
  $i131 := $load.i8($M.15, $p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6027, 12} true;
  assume {:verifier.code 0} true;
  $M.23 := $store.i8($M.23, $p4, $i131);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6028, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i126 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6031, 19} true;
  assume {:verifier.code 0} true;
  $i132 := $zext.i16.i32($sub.i16(0, 8160));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6031, 29} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6031:29: warning: over-approximating bitwise operation ashr;
  $i133 := $ashr.i32($i132, 8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6031, 13} true;
  assume {:verifier.code 0} true;
  $i134 := $trunc.i32.i8($i133);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6031, 3} true;
  assume {:verifier.code 0} true;
  $p135 := $add.ref($add.ref($p5, $mul.ref(0, 2)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6031, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p135, $i134);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6032, 13} true;
  assume {:verifier.code 0} true;
  $i136 := $trunc.i16.i8($sub.i16(0, 8160));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6032, 3} true;
  assume {:verifier.code 0} true;
  $p137 := $add.ref($add.ref($p5, $mul.ref(0, 2)), $mul.ref(1, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6032, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p137, $i136);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6033, 34} true;
  assume {:verifier.code 0} true;
  $i138 := $load.i8($M.23, $p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6033, 19} true;
  assume {:verifier.code 0} true;
  $i139 := $zext.i8.i32($i138);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6033, 13} true;
  assume {:verifier.code 0} true;
  $p140 := $add.ref($add.ref($p9, $mul.ref(0, 96)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6033, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p140, $i139);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6034, 3} true;
  assume {:verifier.code 0} true;
  call spi_message_init($p7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6035, 3} true;
  assume {:verifier.code 0} true;
  call spi_message_add_tail($p8, $p7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6036, 3} true;
  assume {:verifier.code 0} true;
  call spi_message_add_tail($p9, $p7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6037, 3} true;
  assume {:verifier.code 0} true;
  call spi_message_add_tail($p10, $p7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6038, 26} true;
  assume {:verifier.code 0} true;
  $p141 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6038, 26} true;
  assume {:verifier.code 0} true;
  $p142 := $load.ref($M.0, $p141);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6038, 9} true;
  assume {:verifier.code 0} true;
  call $i143 := spi_sync($p142, $p7);
  call {:cexpr "ret"} boogie_si_record_i32($i143);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6039, 11} true;
  assume {:verifier.code 0} true;
  $i144 := $ne.i32($i143, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6039, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i144} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i144 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6040, 48} true;
  assume {:verifier.code 0} true;
  $p145 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6040, 48} true;
  assume {:verifier.code 0} true;
  $p146 := $load.ref($M.0, $p145);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6040, 54} true;
  assume {:verifier.code 0} true;
  $p147 := $add.ref($add.ref($p146, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6040, 5} true;
  assume {:verifier.code 0} true;
  call $i148 := dev_err.ref.ref($p147, .str.9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6041, 5} true;
  assume {:verifier.code 0} true;
  $i114 := $i143;
  goto $bb3;
$bb12:
  assume !(($i144 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6044, 10} true;
  assume {:verifier.code 0} true;
  $p149 := $add.ref($add.ref($p6, $mul.ref(0, 2)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6044, 10} true;
  assume {:verifier.code 0} true;
  $i150 := $load.i8($M.0, $p149);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6044, 8} true;
  assume {:verifier.code 0} true;
  $M.16 := $store.i8($M.16, $p3, $i150);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6045, 10} true;
  assume {:verifier.code 0} true;
  $i151 := $load.i8($M.23, $p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6045, 8} true;
  assume {:verifier.code 0} true;
  $M.15 := $store.i8($M.15, $p2, $i151);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6045, 3} true;
  assume {:verifier.code 0} true;
  $i114 := $i143;
  goto $bb3;
}
const dev_err: ref;
axiom (dev_err == $sub.ref(0, 119921));
procedure  dev_err.ref.ref($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7486, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7486, 10} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7486, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
procedure  dev_err.ref.ref.i32($p0: ref, $p1: ref, p.2: i32)
  returns ($r: i32)
{
  var $i2: i32;
$bb1:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7486, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7486, 10} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7486, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const ldv_kfree_skb_14: ref;
axiom (ldv_kfree_skb_14 == $sub.ref(0, 120953));
procedure  ldv_kfree_skb_14($p0: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7227, 16} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7227, 16} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7227, 3} true;
  assume {:verifier.code 0} true;
  call ldv_skb_free($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7228, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const skb_trim: ref;
axiom (skb_trim == $sub.ref(0, 121985));
procedure  skb_trim($p0: ref, $i1: i32)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7543, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "skb_trim:arg:arg1"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7543, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ieee802154_rx_irqsafe: ref;
axiom (ieee802154_rx_irqsafe == $sub.ref(0, 123017));
procedure  ieee802154_rx_irqsafe($p0: ref, $p1: ref, $i2: i8)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7515, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "ieee802154_rx_irqsafe:arg:arg2"} boogie_si_record_i8($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7515, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __dynamic_dev_dbg: ref;
axiom (__dynamic_dev_dbg == $sub.ref(0, 124049));
procedure  __dynamic_dev_dbg.ref.ref.ref($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32)
{
  var $i3: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7473, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7473, 10} true;
  assume {:verifier.code 1} true;
  call $i3 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7473, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
procedure  __dynamic_dev_dbg.ref.ref.ref.ref($p0: ref, $p1: ref, $p2: ref, p.3: ref)
  returns ($r: i32)
{
  var $i3: i32;
$bb1:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7473, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7473, 10} true;
  assume {:verifier.code 1} true;
  call $i3 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7473, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
procedure  __dynamic_dev_dbg.ref.ref.ref.i32($p0: ref, $p1: ref, $p2: ref, p.3: i32)
  returns ($r: i32)
{
  var $i3: i32;
$bb2:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7473, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7473, 10} true;
  assume {:verifier.code 1} true;
  call $i3 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7473, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const ldv_skb_free: ref;
axiom (ldv_skb_free == $sub.ref(0, 125081));
procedure  ldv_skb_free($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7414, 18} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7414, 18} true;
  assume {:verifier.code 0} true;
  $p1 := $M.24;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7414, 28} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7414, 3} true;
  assume {:verifier.code 0} true;
  call ldv_set_remove($p1, $p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7415, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_set_remove: ref;
axiom (ldv_set_remove == $sub.ref(0, 126113));
procedure  ldv_set_remove($p0: ref, $p1: ref)
{
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i64;
  var $i11: i1;
  var $i12: i32;
  var $i13: i32;
  var $i14: i32;
  var $i15: i1;
  var $i5: i32;
  var $i16: i1;
  var $i17: i32;
  var $i18: i32;
  var $i19: i1;
  var $i20: i32;
  var $i21: i64;
  var $p22: ref;
  var $p23: ref;
  var $i24: i32;
  var $i25: i64;
  var $p26: ref;
  var $i27: i32;
  var $i28: i32;
  var $i29: i1;
  var $i30: i32;
  var $i31: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7298, 13} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7298, 13} true;
  assume {:verifier.code 0} true;
  $i2 := $M.25;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7298, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $slt.i32(0, $i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7298, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7298, 9} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  goto $bb4;
$bb2:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7298, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7300, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i32(0, 1);
  goto $bb7;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7299, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7302, 25} true;
  assume {:verifier.code 0} true;
  $i6 := $sext.i32.i64($i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7302, 25} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref($i6, 8));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7302, 25} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.26, $p7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7302, 9} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7302, 40} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7302, 37} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i64($i9, $i10);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7302, 9} true;
  assume {:verifier.code 0} true;
  $i12 := $i4;
  assume {:branchcond $i11} true;
  goto $bb8, $bb9;
$bb6:
  assume !(($i15 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7298, 9} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb7:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7309, 21} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i32($i5, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7309, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb12, $bb13;
$bb8:
  assume ($i11 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7304, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $i12;
  goto $bb7;
$bb9:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7307, 11} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i32($i4, 1);
  call {:cexpr "i"} boogie_si_record_i32($i13);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7298, 13} true;
  assume {:verifier.code 0} true;
  $i14 := $M.25;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7298, 11} true;
  assume {:verifier.code 0} true;
  $i15 := $slt.i32($i13, $i14);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7298, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb11, $bb6;
$bb11:
  assume ($i15 == 1);
  assume {:verifier.code 0} true;
  $i4 := $i13;
  goto $bb4;
$bb12:
  assume ($i16 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7310, 23} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i32($i5, 1);
  call {:cexpr "i"} boogie_si_record_i32($i17);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7312, 15} true;
  assume {:verifier.code 0} true;
  $i18 := $M.25;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7312, 13} true;
  assume {:verifier.code 0} true;
  $i19 := $slt.i32($i17, $i18);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7312, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb14, $bb15;
$bb13:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb14:
  assume ($i19 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7312, 11} true;
  assume {:verifier.code 0} true;
  $i20 := $i17;
  goto $bb17;
$bb15:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7312, 11} true;
  assume {:verifier.code 0} true;
  assume !(($i19 == 1));
  goto $bb16;
$bb16:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7314, 9} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb17:
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7313, 7} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7316, 25} true;
  assume {:verifier.code 0} true;
  $i21 := $sext.i32.i64($i20);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7316, 25} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref($i21, 8));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7316, 25} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.26, $p22);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7316, 18} true;
  assume {:verifier.code 0} true;
  $i24 := $sub.i32($i20, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7316, 7} true;
  assume {:verifier.code 0} true;
  $i25 := $sext.i32.i64($i24);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7316, 7} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref($i25, 8));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7316, 23} true;
  assume {:verifier.code 0} true;
  $M.26 := $store.ref($M.26, $p26, $p23);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7317, 13} true;
  assume {:verifier.code 0} true;
  $i27 := $add.i32($i20, 1);
  call {:cexpr "i"} boogie_si_record_i32($i27);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7312, 15} true;
  assume {:verifier.code 0} true;
  $i28 := $M.25;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7312, 13} true;
  assume {:verifier.code 0} true;
  $i29 := $slt.i32($i27, $i28);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7312, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb21, $bb19;
$bb19:
  assume !(($i29 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7312, 11} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb20:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7319, 18} true;
  assume {:verifier.code 0} true;
  $i30 := $M.25;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7319, 29} true;
  assume {:verifier.code 0} true;
  $i31 := $sub.i32($i30, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7319, 16} true;
  assume {:verifier.code 0} true;
  $M.25 := $i31;
  call {:cexpr "last_index"} boogie_si_record_i32($i31);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7320, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume ($i29 == 1);
  assume {:verifier.code 0} true;
  $i20 := $i27;
  goto $bb17;
$bb22:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7322, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const read_long_reg: ref;
axiom (read_long_reg == $sub.ref(0, 127145));
procedure  read_long_reg($p0: ref, $i1: i16, $p2: ref)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i8;
  var $i28: i8;
  var $p29: ref;
  var $i30: i8;
  var $i31: i8;
  var $p32: ref;
  var $i33: i8;
  var $i34: i8;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $i42: i32;
  var $i43: i32;
  var $i44: i16;
  var $i45: i32;
  var $i46: i32;
  var $i47: i16;
  var $p48: ref;
  var $i49: i32;
  var $i50: i32;
  var $i51: i8;
  var $p52: ref;
  var $p53: ref;
  var $i54: i8;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $i63: i32;
  var $i64: i1;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $i68: i32;
  var $i69: i32;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $i73: i8;
  var $p74: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5775, 39} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(88, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(96, $zext.i32.i64(1)));
  call {:cexpr "read_long_reg:arg:reg"} boogie_si_record_i16($i1);
  assume true;
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5775, 39} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(280, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5775, 39} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5775, 8} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5775, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p7, $p6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5776, 33} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(280, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5776, 33} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5776, 8} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5776, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p10, $p9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5777, 8} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5777, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p11, 3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5778, 8} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5778, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p12, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5779, 8} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5779, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p13, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5780, 8} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p15 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5780, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p15, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5781, 8} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p17 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5781, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p17, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5782, 8} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p19 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(12, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5782, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p19, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5783, 8} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p21 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5783, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p21, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5784, 8} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p23 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5784, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p23, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5785, 8} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p25 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(12, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5785, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p25, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5786, 8} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5786, 18} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i8($M.0, $p26);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5786, 18} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5786:18: warning: over-approximating bitwise operation and;
  $i28 := $and.i8($i27, $sub.i8(0, 2));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5786, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p26, $i28);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5787, 8} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5787, 17} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i8($M.0, $p29);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5787, 17} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5787:17: warning: over-approximating bitwise operation and;
  $i31 := $and.i8($i30, $sub.i8(0, 15));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5787, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p29, $i31);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5788, 8} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5788, 17} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i8($M.0, $p32);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5788, 17} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5788:17: warning: over-approximating bitwise operation and;
  $i34 := $and.i8($i33, $sub.i8(0, 113));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5788, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p32, $i34);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5789, 8} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(73, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5789, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p35, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5790, 8} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(74, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5790, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p36, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5791, 8} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(76, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5791, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p37, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5792, 8} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(80, 1));
  $p39 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(80, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5792, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p39, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5793, 8} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(80, 1));
  $p41 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(80, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5793, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p41, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5794, 3} true;
  assume {:verifier.code 0} true;
  call spi_message_init($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5795, 3} true;
  assume {:verifier.code 0} true;
  call spi_message_add_tail($p4, $p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5796, 32} true;
  assume {:verifier.code 0} true;
  $i42 := $zext.i16.i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5796, 42} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5796:42: warning: over-approximating bitwise operation shl;
  $i43 := $shl.i32($i42, 5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5796, 23} true;
  assume {:verifier.code 0} true;
  $i44 := $trunc.i32.i16($i43);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5796, 16} true;
  assume {:verifier.code 0} true;
  $i45 := $sext.i16.i32($i44);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5796, 49} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5796:49: warning: over-approximating bitwise operation or;
  $i46 := $or.i32($i45, $sub.i32(0, 32768));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5796, 9} true;
  assume {:verifier.code 0} true;
  $i47 := $trunc.i32.i16($i46);
  call {:cexpr "cmd"} boogie_si_record_i16($i47);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5797, 31} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5797, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p48, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5798, 26} true;
  assume {:verifier.code 0} true;
  $i49 := $zext.i16.i32($i47);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5798, 36} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5798:36: warning: over-approximating bitwise operation ashr;
  $i50 := $ashr.i32($i49, 8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5798, 20} true;
  assume {:verifier.code 0} true;
  $i51 := $trunc.i32.i8($i50);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5798, 13} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(280, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5798, 13} true;
  assume {:verifier.code 0} true;
  $p53 := $load.ref($M.0, $p52);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5798, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p53, $i51);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5799, 26} true;
  assume {:verifier.code 0} true;
  $i54 := $trunc.i16.i8($i47);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5799, 13} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(280, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5799, 13} true;
  assume {:verifier.code 0} true;
  $p56 := $load.ref($M.0, $p55);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5799, 17} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p56, $mul.ref(1, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5799, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p57, $i54);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5800, 13} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(280, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5800, 13} true;
  assume {:verifier.code 0} true;
  $p59 := $load.ref($M.0, $p58);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5800, 17} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p59, $mul.ref(2, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5800, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p60, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5801, 26} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5801, 26} true;
  assume {:verifier.code 0} true;
  $p62 := $load.ref($M.0, $p61);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5801, 9} true;
  assume {:verifier.code 0} true;
  call $i63 := spi_sync($p62, $p3);
  call {:cexpr "ret"} boogie_si_record_i32($i63);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5802, 11} true;
  assume {:verifier.code 0} true;
  $i64 := $ne.i32($i63, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5802, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i64} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i64 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5803, 48} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5803, 48} true;
  assume {:verifier.code 0} true;
  $p66 := $load.ref($M.0, $p65);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5803, 54} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($add.ref($p66, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5804, 13} true;
  assume {:verifier.code 0} true;
  $i68 := $zext.i16.i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5803, 5} true;
  assume {:verifier.code 0} true;
  call $i69 := dev_err.ref.ref.i32($p67, .str.10, $i68);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5805, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i64 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5806, 24} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(280, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5806, 24} true;
  assume {:verifier.code 0} true;
  $p71 := $load.ref($M.0, $p70);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5806, 28} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p71, $mul.ref(2, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5806, 14} true;
  assume {:verifier.code 0} true;
  $i73 := $load.i8($M.0, $p72);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5806, 12} true;
  assume {:verifier.code 0} true;
  $M.23 := $store.i8($M.23, $p2, $i73);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5808, 26} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5808, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p74);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5809, 3} true;
  assume {:verifier.code 0} true;
  $r := $i63;
  $exn := false;
  return;
}
const spi_message_init: ref;
axiom (spi_message_init == $sub.ref(0, 128177));
procedure  spi_message_init($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5641, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5641, 3} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5641, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p1, 0, 88, false);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5642, 23} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 88)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5642, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5643, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const spi_message_add_tail: ref;
axiom (spi_message_add_tail == $sub.ref(0, 129209));
procedure  spi_message_add_tail($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5649, 22} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5649, 22} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 96)), $mul.ref(80, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5649, 42} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p1, $mul.ref(0, 88)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5649, 3} true;
  assume {:verifier.code 0} true;
  call list_add_tail($p2, $p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5650, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const list_add_tail: ref;
axiom (list_add_tail == $sub.ref(0, 130241));
procedure  list_add_tail($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5382, 25} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5382, 25} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p1, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5382, 25} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5382, 3} true;
  assume {:verifier.code 0} true;
  call __list_add($p0, $p3, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5383, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __list_add: ref;
axiom (__list_add == $sub.ref(0, 131273));
procedure  __list_add($p0: ref, $p1: ref, $p2: ref)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5374, 16} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5374, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p2, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5374, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p3, $p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5375, 15} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p0, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5375, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p4, $p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5376, 15} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p0, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5376, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p5, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5377, 16} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p1, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5377, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p6, $p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5378, 2} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const llvm.memset.p0i8.i64: ref;
axiom (llvm.memset.p0i8.i64 == $sub.ref(0, 132305));
procedure  llvm.memset.p0i8.i64($p0: ref, $i1: i8, $i2: i64, $i3: i1);
const INIT_LIST_HEAD: ref;
axiom (INIT_LIST_HEAD == $sub.ref(0, 133337));
procedure  INIT_LIST_HEAD($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5365, 9} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5365, 9} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5365, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p1, $p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5366, 9} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5366, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p2, $p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5367, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const mutex_lock_nested: ref;
axiom (mutex_lock_nested == $sub.ref(0, 134369));
procedure  mutex_lock_nested($p0: ref, $i1: i32)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7529, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "mutex_lock_nested:arg:arg1"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7529, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const mutex_unlock: ref;
axiom (mutex_unlock == $sub.ref(0, 135401));
procedure  mutex_unlock($p0: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7532, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7532, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const external_alloc: ref;
axiom (external_alloc == $sub.ref(0, 136433));
procedure  external_alloc()
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7558, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7558, 10} true;
  assume {:verifier.code 1} true;
  call $p0 := __VERIFIER_nondet_pointer();
  call {:cexpr "smack:ext:__VERIFIER_nondet_pointer"} boogie_si_record_ref($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7558, 3} true;
  assume {:verifier.code 0} true;
  $r := $p0;
  $exn := false;
  return;
}
const ldv_skb_alloc: ref;
axiom (ldv_skb_alloc == $sub.ref(0, 137465));
procedure  ldv_skb_alloc()
  returns ($r: ref)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $i3: i1;
  var $p5: ref;
  var $p6: ref;
  var $p4: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7394, 13} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7394, 13} true;
  assume {:verifier.code 0} true;
  call $p0 := ldv_zalloc(232);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7395, 9} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7395, 9} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7396, 9} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.ref($p2, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7396, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7399, 17} true;
  assume {:verifier.code 0} true;
  $p5 := $M.24;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7399, 5} true;
  assume {:verifier.code 0} true;
  call ldv_set_add($p5, $p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7400, 12} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7400, 5} true;
  assume {:verifier.code 0} true;
  $p4 := $p0;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7397, 5} true;
  assume {:verifier.code 0} true;
  $p4 := $0.ref;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7403, 1} true;
  assume {:verifier.code 0} true;
  $r := $p4;
  $exn := false;
  return;
}
const ldv_set_add: ref;
axiom (ldv_set_add == $sub.ref(0, 138497));
procedure  ldv_set_add($p0: ref, $p1: ref)
{
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $i10: i1;
  var $i11: i32;
  var $i12: i32;
  var $i13: i1;
  var $i14: i32;
  var $i15: i1;
  var $i16: i32;
  var $i17: i64;
  var $p18: ref;
  var $i19: i32;
  var $i20: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7271, 13} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7271, 13} true;
  assume {:verifier.code 0} true;
  $i2 := $M.25;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7271, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $slt.i32(0, $i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7271, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7271, 9} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  goto $bb4;
$bb2:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7271, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7273, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7272, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7275, 25} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7275, 25} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref($i5, 8));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7275, 25} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.26, $p6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7275, 9} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7275, 40} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7275, 37} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i64($i8, $i9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7275, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb8, $bb9;
$bb6:
  assume !(($i13 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7271, 9} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb7:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7281, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $M.25;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7281, 18} true;
  assume {:verifier.code 0} true;
  $i15 := $slt.i32($i14, 15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7281, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb13, $bb14;
$bb8:
  assume ($i10 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7276, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7288, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb11:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7279, 11} true;
  assume {:verifier.code 0} true;
  $i11 := $add.i32($i4, 1);
  call {:cexpr "i"} boogie_si_record_i32($i11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7271, 13} true;
  assume {:verifier.code 0} true;
  $i12 := $M.25;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7271, 11} true;
  assume {:verifier.code 0} true;
  $i13 := $slt.i32($i11, $i12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7271, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb12, $bb6;
$bb12:
  assume ($i13 == 1);
  assume {:verifier.code 0} true;
  $i4 := $i11;
  goto $bb4;
$bb13:
  assume ($i15 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7282, 14} true;
  assume {:verifier.code 0} true;
  $i16 := $M.25;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7282, 5} true;
  assume {:verifier.code 0} true;
  $i17 := $sext.i32.i64($i16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7282, 5} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref($i17, 8));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7282, 26} true;
  assume {:verifier.code 0} true;
  $M.26 := $store.ref($M.26, $p18, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7283, 18} true;
  assume {:verifier.code 0} true;
  $i19 := $M.25;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7283, 29} true;
  assume {:verifier.code 0} true;
  $i20 := $add.i32($i19, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7283, 16} true;
  assume {:verifier.code 0} true;
  $M.25 := $i20;
  call {:cexpr "last_index"} boogie_si_record_i32($i20);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7284, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7286, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
}
const ldv_initialize_ieee802154_ops_4: ref;
axiom (ldv_initialize_ieee802154_ops_4 == $sub.ref(0, 139529));
procedure  ldv_initialize_ieee802154_ops_4()
{
  var $p0: ref;
  var $p1: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6702, 9} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6702, 9} true;
  assume {:verifier.code 0} true;
  call $p0 := ldv_zalloc(56);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6703, 25} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6703, 23} true;
  assume {:verifier.code 0} true;
  $M.27 := $p0;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6704, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const reg_check_1: ref;
axiom (reg_check_1 == $sub.ref(0, 140561));
procedure  reg_check_1($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i64;
  var $i3: i1;
  var $i4: i64;
  var $i5: i1;
  var $i6: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6775, 7} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6775, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6775, 31} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i64($i2, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6775, 86} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6775, 89} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6775, 115} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i64($i4, $p2i.ref.i64(mrf24j40_isr));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6775, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6775, 86} true;
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb7;
$bb4:
  assume ($i5 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6776, 5} true;
  assume {:verifier.code 0} true;
  $i6 := 1;
  goto $bb6;
$bb5:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6775, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i5 == 1));
  goto $bb3;
$bb6:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6781, 1} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6779, 3} true;
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb6;
}
const activate_suitable_irq_1: ref;
axiom (activate_suitable_irq_1 == $sub.ref(0, 141593));
procedure  activate_suitable_irq_1($p0: ref, $i1: i32, $p2: ref)
{
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i1;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6785, 7} true;
  assume {:verifier.code 0} true;
  call {:cexpr "activate_suitable_irq_1:arg:line"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6785, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $M.28;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6785, 19} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i3, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6785, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6786, 21} true;
  assume {:verifier.code 0} true;
  $M.29 := $p0;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6787, 22} true;
  assume {:verifier.code 0} true;
  $M.30 := $i1;
  call {:cexpr "ldv_irq_line_1_0"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6788, 22} true;
  assume {:verifier.code 0} true;
  $M.31 := $p2;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6789, 17} true;
  assume {:verifier.code 0} true;
  $M.28 := 1;
  call {:cexpr "ldv_irq_1_0"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6790, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6819, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6793, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $M.32;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6793, 19} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i5, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6793, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i6 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6794, 21} true;
  assume {:verifier.code 0} true;
  $M.33 := $p0;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6795, 22} true;
  assume {:verifier.code 0} true;
  $M.34 := $i1;
  call {:cexpr "ldv_irq_line_1_1"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6796, 22} true;
  assume {:verifier.code 0} true;
  $M.35 := $p2;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6797, 17} true;
  assume {:verifier.code 0} true;
  $M.32 := 1;
  call {:cexpr "ldv_irq_1_1"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6798, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb6:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6801, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $M.36;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6801, 19} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i7, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6801, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i8 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6802, 21} true;
  assume {:verifier.code 0} true;
  $M.37 := $p0;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6803, 22} true;
  assume {:verifier.code 0} true;
  $M.38 := $i1;
  call {:cexpr "ldv_irq_line_1_2"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6804, 22} true;
  assume {:verifier.code 0} true;
  $M.39 := $p2;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6805, 17} true;
  assume {:verifier.code 0} true;
  $M.36 := 1;
  call {:cexpr "ldv_irq_1_2"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6806, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb9:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6809, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $M.40;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6809, 19} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i32($i9, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6809, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i10 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6810, 21} true;
  assume {:verifier.code 0} true;
  $M.41 := $p0;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6811, 22} true;
  assume {:verifier.code 0} true;
  $M.42 := $i1;
  call {:cexpr "ldv_irq_line_1_3"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6812, 22} true;
  assume {:verifier.code 0} true;
  $M.43 := $p2;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6813, 17} true;
  assume {:verifier.code 0} true;
  $M.40 := 1;
  call {:cexpr "ldv_irq_1_3"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6814, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb12:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6817, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const ldv_irq_1: ref;
axiom (ldv_irq_1 == $sub.ref(0, 142625));
procedure  ldv_irq_1($i0: i32, $i1: i32, $p2: ref)
  returns ($r: i32)
{
  var $i3: i1;
  var $i4: i32;
  var $i5: i1;
  var $i6: i1;
  var $i7: i1;
  var $i8: i1;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i1;
  var $i13: i32;
  var $i15: i1;
  var $i16: i32;
  var $i14: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6826, 13} true;
  assume {:verifier.code 0} true;
  call {:cexpr "ldv_irq_1:arg:state"} boogie_si_record_i32($i0);
  call {:cexpr "ldv_irq_1:arg:line"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6826, 13} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i0, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6826, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6827, 11} true;
  assume {:verifier.code 1} true;
  call $i4 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i4);
  call {:cexpr "tmp"} boogie_si_record_i32($i4);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb3:
  assume {:verifier.code 0} true;
  $i5 := $slt.i32($i4, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i5 == 1);
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i4, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb9, $bb10;
$bb5:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i4, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i6 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6848, 15} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i0, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6848, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb22, $bb23;
$bb7:
  assume {:verifier.code 0} true;
  assume !(($i6 == 1));
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  goto $bb25;
$bb9:
  assume ($i7 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6830, 15} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i0, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6830, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb11, $bb12;
$bb10:
  assume {:verifier.code 0} true;
  assume !(($i7 == 1));
  goto $bb8;
$bb11:
  assume ($i8 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6831, 24} true;
  assume {:verifier.code 0} true;
  $M.13 := 2;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6832, 17} true;
  assume {:verifier.code 0} true;
  call $i9 := ldv_handler1_1($i1, $p2);
  call {:cexpr "tmp___0"} boogie_si_record_i32($i9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6834, 24} true;
  assume {:verifier.code 0} true;
  $M.13 := 1;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6835, 37} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i32($i9, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6835, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb13, $bb14;
$bb12:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb13:
  assume ($i10 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6837, 7} true;
  assume {:verifier.code 0} true;
  $i11 := 2;
  goto $bb15;
$bb14:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  $i11 := $i0;
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6839, 37} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i32($i9, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6839, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i12 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6841, 7} true;
  assume {:verifier.code 0} true;
  $i13 := 1;
  goto $bb18;
$bb17:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  $i13 := $i11;
  goto $bb18;
$bb18:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6843, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $i13;
  goto $bb19;
$bb19:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6862, 1} true;
  assume {:verifier.code 0} true;
  $r := $i14;
  $exn := false;
  return;
$bb20:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6846, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6858, 3} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb22:
  assume ($i15 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6849, 20} true;
  assume {:verifier.code 0} true;
  call $i16 := mrf24j40_isr($i1, $p2);
  call {:cexpr "irq_retval"} boogie_si_record_i32($i16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6850, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $i0;
  goto $bb19;
$bb23:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6853, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb25:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6855, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6856, 5} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6856, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb27:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6860, 3} true;
  assume {:verifier.code 0} true;
  $i14 := $i0;
  goto $bb19;
}
const ldv_handler1_1: ref;
axiom (ldv_handler1_1 == $sub.ref(0, 143657));
procedure  ldv_handler1_1($i0: i32, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7522, 10} true;
  assume {:verifier.code 1} true;
  call {:cexpr "ldv_handler1_1:arg:arg0"} boogie_si_record_i32($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7522, 10} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7522, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const ldv_initialize_spi_driver_3: ref;
axiom (ldv_initialize_spi_driver_3 == $sub.ref(0, 144689));
procedure  ldv_initialize_spi_driver_3()
{
  var $p0: ref;
  var $p1: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6867, 9} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6867, 9} true;
  assume {:verifier.code 0} true;
  call $p0 := ldv_zalloc(1496);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6868, 28} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6868, 26} true;
  assume {:verifier.code 0} true;
  $M.44 := $p0;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6869, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const choose_interrupt_1: ref;
axiom (choose_interrupt_1 == $sub.ref(0, 145721));
procedure  choose_interrupt_1()
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i1;
  var $i3: i1;
  var $i4: i1;
  var $i5: i1;
  var $i6: i32;
  var $i7: i32;
  var $p8: ref;
  var $i9: i32;
  var $i10: i32;
  var $i11: i32;
  var $p12: ref;
  var $i13: i32;
  var $i14: i32;
  var $i15: i32;
  var $p16: ref;
  var $i17: i32;
  var $i18: i32;
  var $i19: i32;
  var $p20: ref;
  var $i21: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6919, 9} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6919, 9} true;
  assume {:verifier.code 1} true;
  call $i0 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
  call {:cexpr "tmp"} boogie_si_record_i32($i0);
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  $i1 := $slt.i32($i0, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i1 == 1);
  assume {:verifier.code 0} true;
  $i4 := $slt.i32($i0, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb9, $bb10;
$bb3:
  assume !(($i1 == 1));
  assume {:verifier.code 0} true;
  $i2 := $slt.i32($i0, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i2 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6928, 27} true;
  assume {:verifier.code 0} true;
  $i14 := $M.36;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6928, 40} true;
  assume {:verifier.code 0} true;
  $i15 := $M.38;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6928, 58} true;
  assume {:verifier.code 0} true;
  $p16 := $M.39;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6928, 17} true;
  assume {:verifier.code 0} true;
  call $i17 := ldv_irq_1($i14, $i15, $p16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6928, 15} true;
  assume {:verifier.code 0} true;
  $M.28 := $i17;
  call {:cexpr "ldv_irq_1_0"} boogie_si_record_i32($i17);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6929, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb5:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  $i3 := $eq.i32($i0, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i3 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6931, 27} true;
  assume {:verifier.code 0} true;
  $i18 := $M.40;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6931, 40} true;
  assume {:verifier.code 0} true;
  $i19 := $M.42;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6931, 58} true;
  assume {:verifier.code 0} true;
  $p20 := $M.43;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6931, 17} true;
  assume {:verifier.code 0} true;
  call $i21 := ldv_irq_1($i18, $i19, $p20);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6931, 15} true;
  assume {:verifier.code 0} true;
  $M.28 := $i21;
  call {:cexpr "ldv_irq_1_0"} boogie_si_record_i32($i21);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6932, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb7:
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  goto $bb14;
$bb9:
  assume ($i4 == 1);
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i0, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb11, $bb12;
$bb10:
  assume !(($i4 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6925, 27} true;
  assume {:verifier.code 0} true;
  $i10 := $M.32;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6925, 40} true;
  assume {:verifier.code 0} true;
  $i11 := $M.34;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6925, 58} true;
  assume {:verifier.code 0} true;
  $p12 := $M.35;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6925, 17} true;
  assume {:verifier.code 0} true;
  call $i13 := ldv_irq_1($i10, $i11, $p12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6925, 15} true;
  assume {:verifier.code 0} true;
  $M.28 := $i13;
  call {:cexpr "ldv_irq_1_0"} boogie_si_record_i32($i13);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6926, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb11:
  assume ($i5 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6922, 27} true;
  assume {:verifier.code 0} true;
  $i6 := $M.28;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6922, 40} true;
  assume {:verifier.code 0} true;
  $i7 := $M.30;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6922, 58} true;
  assume {:verifier.code 0} true;
  $p8 := $M.31;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6922, 17} true;
  assume {:verifier.code 0} true;
  call $i9 := ldv_irq_1($i6, $i7, $p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6922, 15} true;
  assume {:verifier.code 0} true;
  $M.28 := $i9;
  call {:cexpr "ldv_irq_1_0"} boogie_si_record_i32($i9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6923, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume {:verifier.code 0} true;
  assume !(($i5 == 1));
  goto $bb8;
$bb13:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6937, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb14:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6934, 3} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6935, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6935, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
}
const main: ref;
axiom (main == $sub.ref(0, 146753));
procedure {:entrypoint} main()
  returns ($r: i32)
{
  var $p0: ref;
  var $p1: ref;
  var $i2: i64;
  var $i3: i32;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $i8: i32;
  var $i9: i1;
  var $i10: i1;
  var $i11: i1;
  var $i12: i1;
  var $i13: i1;
  var $i14: i1;
  var $i15: i32;
  var $i16: i1;
  var $i17: i32;
  var $i18: i1;
  var $i19: i1;
  var $i20: i1;
  var $i21: i1;
  var $i22: i1;
  var $i23: i1;
  var $i24: i1;
  var $i25: i32;
  var $i26: i1;
  var $p27: ref;
  var $i28: i32;
  var $i29: i32;
  var $i30: i1;
  var $i31: i32;
  var $i32: i32;
  var $i33: i32;
  var $i34: i1;
  var $p35: ref;
  var $i36: i32;
  var $i37: i32;
  var $i38: i1;
  var $p39: ref;
  var $i40: i32;
  var $i41: i32;
  var $i42: i1;
  var $p43: ref;
  var $i44: i32;
  var $i45: i32;
  var $i46: i1;
  var $p47: ref;
  var $i48: i32;
  var $i49: i32;
  var $i50: i1;
  var $p51: ref;
  var $i52: i32;
  var $i53: i32;
  var $i54: i1;
  var $p55: ref;
  var $i56: i32;
  var $i57: i32;
  var $i58: i1;
  var $p59: ref;
  var $i60: i32;
  var $i61: i32;
  var $i62: i1;
  var $p63: ref;
  var $i64: i32;
  var $i65: i32;
  var $i66: i1;
  var $p67: ref;
  var $i68: i32;
  var $i69: i32;
  var $i70: i32;
  var $i71: i1;
  var $i72: i32;
  var $i73: i1;
  var $i74: i32;
  var $i75: i1;
  var $i76: i1;
  var $i77: i1;
  var $i78: i32;
  var $i79: i1;
  var $i80: i32;
  var $i81: i1;
  var $i82: i32;
  var $i83: i1;
  var $i84: i32;
  var $i85: i32;
  var $i86: i1;
  var $i87: i32;
  var $i88: i1;
  var $i89: i32;
  var $i90: i1;
  var $i91: i32;
  var $i92: i1;
  var $i93: i1;
  var $i94: i1;
  var $i95: i32;
  var $i96: i1;
  var $p97: ref;
  var $i98: i32;
  var $i99: i32;
  var $i100: i1;
  var $i101: i32;
  var $i102: i32;
  var $i103: i32;
  var $i104: i1;
  var $p105: ref;
  var $i106: i32;
  var $i107: i32;
  var $i108: i32;
  var $i109: i32;
  var $i110: i1;
$bb0:
  call $initialize();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6970, 9} true;
  assume {:verifier.code 0} true;
  call {:cexpr "smack:entry:main"} boogie_si_record_ref(main);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6970, 9} true;
  assume {:verifier.code 0} true;
  call $p0 := ldv_zalloc(232);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6971, 13} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6972, 13} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_ulong();
  call {:cexpr "smack:ext:__VERIFIER_nondet_ulong"} boogie_si_record_i64($i2);
  call {:cexpr "tmp___0"} boogie_si_record_i64($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6974, 13} true;
  assume {:verifier.code 1} true;
  call $i3 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i3);
  call {:cexpr "tmp___1"} boogie_si_record_i32($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6976, 13} true;
  assume {:verifier.code 0} true;
  call $p4 := ldv_zalloc(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6978, 13} true;
  assume {:verifier.code 0} true;
  call $p5 := ldv_zalloc(24);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6979, 13} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6980, 13} true;
  assume {:verifier.code 1} true;
  call $i7 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i7);
  call {:cexpr "tmp___4"} boogie_si_record_i32($i7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6982, 3} true;
  assume {:verifier.code 0} true;
  call ldv_initialize();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6983, 24} true;
  assume {:verifier.code 0} true;
  $M.45 := 0;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6984, 24} true;
  assume {:verifier.code 0} true;
  $M.46 := 1;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6985, 11} true;
  assume {:verifier.code 0} true;
  $M.47 := 0;
  call {:cexpr "ref_cnt"} boogie_si_record_i32(0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6986, 24} true;
  assume {:verifier.code 0} true;
  $M.48 := 1;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6987, 24} true;
  assume {:verifier.code 0} true;
  $M.49 := 0;
  call {:cexpr "ldv_state_variable_3"} boogie_si_record_i32(0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6988, 24} true;
  assume {:verifier.code 0} true;
  $M.50 := 1;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6988, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6990, 13} true;
  assume {:verifier.code 1} true;
  call $i8 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i8);
  call {:cexpr "tmp___5"} boogie_si_record_i32($i8);
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:verifier.code 0} true;
  $i9 := $slt.i32($i8, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i9 == 1);
  assume {:verifier.code 0} true;
  $i13 := $slt.i32($i8, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb12, $bb13;
$bb4:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  $i10 := $slt.i32($i8, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i10 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7077, 7} true;
  assume {:verifier.code 0} true;
  $i72 := $M.48;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7077, 28} true;
  assume {:verifier.code 0} true;
  $i73 := $ne.i32($i72, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7077, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i73} true;
  goto $bb75, $bb76;
$bb6:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  $i11 := $slt.i32($i8, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i11 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7115, 7} true;
  assume {:verifier.code 0} true;
  $i89 := $M.49;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7115, 28} true;
  assume {:verifier.code 0} true;
  $i90 := $ne.i32($i89, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7115, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i90} true;
  goto $bb105, $bb106;
$bb8:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i8, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i12 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7145, 7} true;
  assume {:verifier.code 0} true;
  $i109 := $M.50;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7145, 28} true;
  assume {:verifier.code 0} true;
  $i110 := $ne.i32($i109, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7145, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i110} true;
  goto $bb128, $bb129;
$bb10:
  assume {:verifier.code 0} true;
  assume !(($i12 == 1));
  goto $bb11;
$bb11:
  assume {:verifier.code 0} true;
  goto $bb131;
$bb12:
  assume ($i13 == 1);
  assume {:verifier.code 0} true;
  $i14 := $eq.i32($i8, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb14, $bb15;
$bb13:
  assume !(($i13 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7071, 7} true;
  assume {:verifier.code 0} true;
  $i70 := $M.46;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7071, 28} true;
  assume {:verifier.code 0} true;
  $i71 := $ne.i32($i70, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7071, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i71} true;
  goto $bb72, $bb73;
$bb14:
  assume ($i14 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6993, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $M.45;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6993, 28} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i32($i15, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6993, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb16, $bb17;
$bb15:
  assume {:verifier.code 0} true;
  assume !(($i14 == 1));
  goto $bb11;
$bb16:
  assume ($i16 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6994, 15} true;
  assume {:verifier.code 1} true;
  call $i17 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i17);
  call {:cexpr "tmp___6"} boogie_si_record_i32($i17);
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb70;
$bb18:
  assume {:verifier.code 0} true;
  $i18 := $slt.i32($i17, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i18 == 1);
  assume {:verifier.code 0} true;
  $i22 := $slt.i32($i17, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb28, $bb29;
$bb20:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  $i19 := $slt.i32($i17, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i19 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7032, 9} true;
  assume {:verifier.code 0} true;
  $i49 := $M.45;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7032, 30} true;
  assume {:verifier.code 0} true;
  $i50 := $eq.i32($i49, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7032, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i50} true;
  goto $bb53, $bb54;
$bb22:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  $i20 := $slt.i32($i17, 5);
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i20 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7044, 9} true;
  assume {:verifier.code 0} true;
  $i57 := $M.45;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7044, 30} true;
  assume {:verifier.code 0} true;
  $i58 := $eq.i32($i57, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7044, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb59, $bb60;
$bb24:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  $i21 := $eq.i32($i17, 5);
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i21 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7056, 9} true;
  assume {:verifier.code 0} true;
  $i65 := $M.45;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7056, 30} true;
  assume {:verifier.code 0} true;
  $i66 := $eq.i32($i65, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7056, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i66} true;
  goto $bb65, $bb66;
$bb26:
  assume {:verifier.code 0} true;
  assume !(($i21 == 1));
  goto $bb27;
$bb27:
  assume {:verifier.code 0} true;
  goto $bb68;
$bb28:
  assume ($i22 == 1);
  assume {:verifier.code 0} true;
  $i24 := $eq.i32($i17, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb32, $bb33;
$bb29:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  $i23 := $slt.i32($i17, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb30, $bb31;
$bb30:
  assume ($i23 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7008, 9} true;
  assume {:verifier.code 0} true;
  $i33 := $M.45;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7008, 30} true;
  assume {:verifier.code 0} true;
  $i34 := $eq.i32($i33, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7008, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb41, $bb42;
$bb31:
  assume !(($i23 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7020, 9} true;
  assume {:verifier.code 0} true;
  $i41 := $M.45;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7020, 30} true;
  assume {:verifier.code 0} true;
  $i42 := $eq.i32($i41, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7020, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb47, $bb48;
$bb32:
  assume ($i24 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6997, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $M.45;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6997, 30} true;
  assume {:verifier.code 0} true;
  $i26 := $eq.i32($i25, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6997, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb34, $bb35;
$bb33:
  assume {:verifier.code 0} true;
  assume !(($i24 == 1));
  goto $bb27;
$bb34:
  assume ($i26 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6998, 37} true;
  assume {:verifier.code 0} true;
  $p27 := $M.27;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6998, 22} true;
  assume {:verifier.code 0} true;
  call $i28 := mrf24j40_start($p27);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6998, 20} true;
  assume {:verifier.code 0} true;
  $M.51 := $i28;
  call {:cexpr "ldv_retval_0"} boogie_si_record_i32($i28);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6999, 11} true;
  assume {:verifier.code 0} true;
  $i29 := $M.51;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6999, 24} true;
  assume {:verifier.code 0} true;
  $i30 := $eq.i32($i29, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6999, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb36, $bb37;
$bb35:
  assume !(($i26 == 1));
  assume {:verifier.code 0} true;
  goto $bb39;
$bb36:
  assume ($i30 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7000, 30} true;
  assume {:verifier.code 0} true;
  $M.45 := 2;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7001, 19} true;
  assume {:verifier.code 0} true;
  $i31 := $M.47;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7001, 27} true;
  assume {:verifier.code 0} true;
  $i32 := $add.i32($i31, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7001, 17} true;
  assume {:verifier.code 0} true;
  $M.47 := $i32;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i32);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7002, 7} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb37:
  assume !(($i30 == 1));
  assume {:verifier.code 0} true;
  goto $bb38;
$bb38:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7004, 5} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb39:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7006, 5} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb40:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7067, 3} true;
  assume {:verifier.code 0} true;
  goto $bb70;
$bb41:
  assume ($i34 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7009, 23} true;
  assume {:verifier.code 0} true;
  $p35 := $M.27;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7009, 7} true;
  assume {:verifier.code 0} true;
  call $i36 := mrf24j40_filter($p35, $p6, $i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7010, 28} true;
  assume {:verifier.code 0} true;
  $M.45 := 1;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7011, 5} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7013, 9} true;
  assume {:verifier.code 0} true;
  $i37 := $M.45;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7013, 30} true;
  assume {:verifier.code 0} true;
  $i38 := $eq.i32($i37, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7013, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb44, $bb45;
$bb44:
  assume ($i38 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7014, 23} true;
  assume {:verifier.code 0} true;
  $p39 := $M.27;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7014, 7} true;
  assume {:verifier.code 0} true;
  call $i40 := mrf24j40_filter($p39, $p6, $i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7015, 28} true;
  assume {:verifier.code 0} true;
  $M.45 := 2;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7016, 5} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb45:
  assume !(($i38 == 1));
  assume {:verifier.code 0} true;
  goto $bb46;
$bb46:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7018, 5} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb47:
  assume ($i42 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7021, 28} true;
  assume {:verifier.code 0} true;
  $p43 := $M.27;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7021, 7} true;
  assume {:verifier.code 0} true;
  call $i44 := mrf24j40_set_channel($p43, $i3, $i7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7022, 28} true;
  assume {:verifier.code 0} true;
  $M.45 := 1;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7023, 5} true;
  assume {:verifier.code 0} true;
  goto $bb49;
$bb48:
  assume !(($i42 == 1));
  assume {:verifier.code 0} true;
  goto $bb49;
$bb49:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7025, 9} true;
  assume {:verifier.code 0} true;
  $i45 := $M.45;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7025, 30} true;
  assume {:verifier.code 0} true;
  $i46 := $eq.i32($i45, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7025, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb50, $bb51;
$bb50:
  assume ($i46 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7026, 28} true;
  assume {:verifier.code 0} true;
  $p47 := $M.27;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7026, 7} true;
  assume {:verifier.code 0} true;
  call $i48 := mrf24j40_set_channel($p47, $i3, $i7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7027, 28} true;
  assume {:verifier.code 0} true;
  $M.45 := 2;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7028, 5} true;
  assume {:verifier.code 0} true;
  goto $bb52;
$bb51:
  assume !(($i46 == 1));
  assume {:verifier.code 0} true;
  goto $bb52;
$bb52:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7030, 5} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb53:
  assume ($i50 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7033, 19} true;
  assume {:verifier.code 0} true;
  $p51 := $M.27;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7033, 7} true;
  assume {:verifier.code 0} true;
  call $i52 := mrf24j40_tx($p51, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7034, 28} true;
  assume {:verifier.code 0} true;
  $M.45 := 1;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7035, 5} true;
  assume {:verifier.code 0} true;
  goto $bb55;
$bb54:
  assume !(($i50 == 1));
  assume {:verifier.code 0} true;
  goto $bb55;
$bb55:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7037, 9} true;
  assume {:verifier.code 0} true;
  $i53 := $M.45;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7037, 30} true;
  assume {:verifier.code 0} true;
  $i54 := $eq.i32($i53, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7037, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb56, $bb57;
$bb56:
  assume ($i54 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7038, 19} true;
  assume {:verifier.code 0} true;
  $p55 := $M.27;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7038, 7} true;
  assume {:verifier.code 0} true;
  call $i56 := mrf24j40_tx($p55, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7039, 28} true;
  assume {:verifier.code 0} true;
  $M.45 := 2;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7040, 5} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb57:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  goto $bb58;
$bb58:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7042, 5} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb59:
  assume ($i58 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7045, 19} true;
  assume {:verifier.code 0} true;
  $p59 := $M.27;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7045, 7} true;
  assume {:verifier.code 0} true;
  call $i60 := mrf24j40_ed($p59, $p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7046, 28} true;
  assume {:verifier.code 0} true;
  $M.45 := 1;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7047, 5} true;
  assume {:verifier.code 0} true;
  goto $bb61;
$bb60:
  assume !(($i58 == 1));
  assume {:verifier.code 0} true;
  goto $bb61;
$bb61:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7049, 9} true;
  assume {:verifier.code 0} true;
  $i61 := $M.45;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7049, 30} true;
  assume {:verifier.code 0} true;
  $i62 := $eq.i32($i61, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7049, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i62} true;
  goto $bb62, $bb63;
$bb62:
  assume ($i62 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7050, 19} true;
  assume {:verifier.code 0} true;
  $p63 := $M.27;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7050, 7} true;
  assume {:verifier.code 0} true;
  call $i64 := mrf24j40_ed($p63, $p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7051, 28} true;
  assume {:verifier.code 0} true;
  $M.45 := 2;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7052, 5} true;
  assume {:verifier.code 0} true;
  goto $bb64;
$bb63:
  assume !(($i62 == 1));
  assume {:verifier.code 0} true;
  goto $bb64;
$bb64:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7054, 5} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb65:
  assume ($i66 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7057, 21} true;
  assume {:verifier.code 0} true;
  $p67 := $M.27;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7057, 7} true;
  assume {:verifier.code 0} true;
  call mrf24j40_stop($p67);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7058, 28} true;
  assume {:verifier.code 0} true;
  $M.45 := 1;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7059, 17} true;
  assume {:verifier.code 0} true;
  $i68 := $M.47;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7059, 25} true;
  assume {:verifier.code 0} true;
  $i69 := $sub.i32($i68, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7059, 15} true;
  assume {:verifier.code 0} true;
  $M.47 := $i69;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i69);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7060, 5} true;
  assume {:verifier.code 0} true;
  goto $bb67;
$bb66:
  assume !(($i66 == 1));
  assume {:verifier.code 0} true;
  goto $bb67;
$bb67:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7062, 5} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb68:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7064, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7065, 5} true;
  assume {:verifier.code 0} true;
  goto $bb69;
$bb69:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7065, 5} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb70:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7069, 3} true;
  assume {:verifier.code 0} true;
  goto $bb71;
$bb71:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7154, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb72:
  assume ($i71 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7072, 5} true;
  assume {:verifier.code 0} true;
  call choose_interrupt_1();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7073, 3} true;
  assume {:verifier.code 0} true;
  goto $bb74;
$bb73:
  assume !(($i71 == 1));
  assume {:verifier.code 0} true;
  goto $bb74;
$bb74:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7075, 3} true;
  assume {:verifier.code 0} true;
  goto $bb71;
$bb75:
  assume ($i73 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7078, 15} true;
  assume {:verifier.code 1} true;
  call $i74 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i74);
  call {:cexpr "tmp___7"} boogie_si_record_i32($i74);
  assume {:verifier.code 0} true;
  goto $bb77;
$bb76:
  assume !(($i73 == 1));
  assume {:verifier.code 0} true;
  goto $bb104;
$bb77:
  assume {:verifier.code 0} true;
  $i75 := $slt.i32($i74, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i75} true;
  goto $bb78, $bb79;
$bb78:
  assume ($i75 == 1);
  assume {:verifier.code 0} true;
  $i77 := $eq.i32($i74, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i77} true;
  goto $bb83, $bb84;
$bb79:
  assume !(($i75 == 1));
  assume {:verifier.code 0} true;
  $i76 := $eq.i32($i74, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i76} true;
  goto $bb80, $bb81;
$bb80:
  assume ($i76 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7089, 9} true;
  assume {:verifier.code 0} true;
  $i82 := $M.48;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7089, 30} true;
  assume {:verifier.code 0} true;
  $i83 := $eq.i32($i82, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7089, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i83} true;
  goto $bb93, $bb94;
$bb81:
  assume {:verifier.code 0} true;
  assume !(($i76 == 1));
  goto $bb82;
$bb82:
  assume {:verifier.code 0} true;
  goto $bb102;
$bb83:
  assume ($i77 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7081, 9} true;
  assume {:verifier.code 0} true;
  $i78 := $M.48;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7081, 30} true;
  assume {:verifier.code 0} true;
  $i79 := $eq.i32($i78, 3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7081, 35} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i79} true;
  goto $bb85, $bb86;
$bb84:
  assume {:verifier.code 0} true;
  assume !(($i77 == 1));
  goto $bb82;
$bb85:
  assume ($i79 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7081, 38} true;
  assume {:verifier.code 0} true;
  $i80 := $M.47;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7081, 46} true;
  assume {:verifier.code 0} true;
  $i81 := $eq.i32($i80, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7081, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i81} true;
  goto $bb88, $bb89;
$bb86:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7081, 35} true;
  assume {:verifier.code 0} true;
  assume !(($i79 == 1));
  goto $bb87;
$bb87:
  assume {:verifier.code 0} true;
  goto $bb91;
$bb88:
  assume ($i81 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7082, 7} true;
  assume {:verifier.code 0} true;
  call mrf24j40_driver_exit();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7083, 28} true;
  assume {:verifier.code 0} true;
  $M.48 := 2;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7084, 7} true;
  assume {:verifier.code 0} true;
  goto $bb90;
$bb89:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7081, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i81 == 1));
  goto $bb87;
$bb90:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7156, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_final_state();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7157, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
$bb91:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7087, 5} true;
  assume {:verifier.code 0} true;
  goto $bb92;
$bb92:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7111, 3} true;
  assume {:verifier.code 0} true;
  goto $bb104;
$bb93:
  assume ($i83 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7090, 22} true;
  assume {:verifier.code 0} true;
  call $i84 := mrf24j40_driver_init();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7090, 20} true;
  assume {:verifier.code 0} true;
  $M.52 := $i84;
  call {:cexpr "ldv_retval_1"} boogie_si_record_i32($i84);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7091, 11} true;
  assume {:verifier.code 0} true;
  $i85 := $M.52;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7091, 24} true;
  assume {:verifier.code 0} true;
  $i86 := $eq.i32($i85, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7091, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i86} true;
  goto $bb95, $bb96;
$bb94:
  assume !(($i83 == 1));
  assume {:verifier.code 0} true;
  goto $bb101;
$bb95:
  assume ($i86 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7092, 30} true;
  assume {:verifier.code 0} true;
  $M.48 := 3;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7093, 30} true;
  assume {:verifier.code 0} true;
  $M.49 := 1;
  call {:cexpr "ldv_state_variable_3"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7094, 9} true;
  assume {:verifier.code 0} true;
  call ldv_initialize_spi_driver_3();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7095, 30} true;
  assume {:verifier.code 0} true;
  $M.45 := 1;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7096, 9} true;
  assume {:verifier.code 0} true;
  call ldv_initialize_ieee802154_ops_4();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7097, 7} true;
  assume {:verifier.code 0} true;
  goto $bb97;
$bb96:
  assume !(($i86 == 1));
  assume {:verifier.code 0} true;
  goto $bb97;
$bb97:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7099, 11} true;
  assume {:verifier.code 0} true;
  $i87 := $M.52;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7099, 24} true;
  assume {:verifier.code 0} true;
  $i88 := $ne.i32($i87, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7099, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i88} true;
  goto $bb98, $bb99;
$bb98:
  assume ($i88 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7100, 30} true;
  assume {:verifier.code 0} true;
  $M.48 := 2;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7101, 9} true;
  assume {:verifier.code 0} true;
  goto $bb90;
$bb99:
  assume !(($i88 == 1));
  assume {:verifier.code 0} true;
  goto $bb100;
$bb100:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7104, 5} true;
  assume {:verifier.code 0} true;
  goto $bb101;
$bb101:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7106, 5} true;
  assume {:verifier.code 0} true;
  goto $bb92;
$bb102:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7108, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7109, 5} true;
  assume {:verifier.code 0} true;
  goto $bb103;
$bb103:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7109, 5} true;
  assume {:verifier.code 0} true;
  goto $bb92;
$bb104:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7113, 3} true;
  assume {:verifier.code 0} true;
  goto $bb71;
$bb105:
  assume ($i90 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7116, 15} true;
  assume {:verifier.code 1} true;
  call $i91 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i91);
  call {:cexpr "tmp___8"} boogie_si_record_i32($i91);
  assume {:verifier.code 0} true;
  goto $bb107;
$bb106:
  assume !(($i90 == 1));
  assume {:verifier.code 0} true;
  goto $bb127;
$bb107:
  assume {:verifier.code 0} true;
  $i92 := $slt.i32($i91, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i92} true;
  goto $bb108, $bb109;
$bb108:
  assume ($i92 == 1);
  assume {:verifier.code 0} true;
  $i94 := $eq.i32($i91, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i94} true;
  goto $bb113, $bb114;
$bb109:
  assume !(($i92 == 1));
  assume {:verifier.code 0} true;
  $i93 := $eq.i32($i91, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i93} true;
  goto $bb110, $bb111;
$bb110:
  assume ($i93 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7130, 9} true;
  assume {:verifier.code 0} true;
  $i103 := $M.49;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7130, 30} true;
  assume {:verifier.code 0} true;
  $i104 := $eq.i32($i103, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7130, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i104} true;
  goto $bb122, $bb123;
$bb111:
  assume {:verifier.code 0} true;
  assume !(($i93 == 1));
  goto $bb112;
$bb112:
  assume {:verifier.code 0} true;
  goto $bb125;
$bb113:
  assume ($i94 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7119, 9} true;
  assume {:verifier.code 0} true;
  $i95 := $M.49;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7119, 30} true;
  assume {:verifier.code 0} true;
  $i96 := $eq.i32($i95, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7119, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i96} true;
  goto $bb115, $bb116;
$bb114:
  assume {:verifier.code 0} true;
  assume !(($i94 == 1));
  goto $bb112;
$bb115:
  assume ($i96 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7120, 37} true;
  assume {:verifier.code 0} true;
  $p97 := $M.44;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7120, 22} true;
  assume {:verifier.code 0} true;
  call $i98 := mrf24j40_probe($p97);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7120, 20} true;
  assume {:verifier.code 0} true;
  $M.53 := $i98;
  call {:cexpr "ldv_retval_2"} boogie_si_record_i32($i98);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7121, 11} true;
  assume {:verifier.code 0} true;
  $i99 := $M.53;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7121, 24} true;
  assume {:verifier.code 0} true;
  $i100 := $eq.i32($i99, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7121, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i100} true;
  goto $bb117, $bb118;
$bb116:
  assume !(($i96 == 1));
  assume {:verifier.code 0} true;
  goto $bb120;
$bb117:
  assume ($i100 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7122, 30} true;
  assume {:verifier.code 0} true;
  $M.49 := 2;
  call {:cexpr "ldv_state_variable_3"} boogie_si_record_i32(2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7123, 19} true;
  assume {:verifier.code 0} true;
  $i101 := $M.47;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7123, 27} true;
  assume {:verifier.code 0} true;
  $i102 := $add.i32($i101, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7123, 17} true;
  assume {:verifier.code 0} true;
  $M.47 := $i102;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i102);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7124, 7} true;
  assume {:verifier.code 0} true;
  goto $bb119;
$bb118:
  assume !(($i100 == 1));
  assume {:verifier.code 0} true;
  goto $bb119;
$bb119:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7126, 5} true;
  assume {:verifier.code 0} true;
  goto $bb120;
$bb120:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7128, 5} true;
  assume {:verifier.code 0} true;
  goto $bb121;
$bb121:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7141, 3} true;
  assume {:verifier.code 0} true;
  goto $bb127;
$bb122:
  assume ($i104 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7131, 23} true;
  assume {:verifier.code 0} true;
  $p105 := $M.44;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7131, 7} true;
  assume {:verifier.code 0} true;
  call $i106 := mrf24j40_remove($p105);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7132, 28} true;
  assume {:verifier.code 0} true;
  $M.49 := 1;
  call {:cexpr "ldv_state_variable_3"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7133, 17} true;
  assume {:verifier.code 0} true;
  $i107 := $M.47;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7133, 25} true;
  assume {:verifier.code 0} true;
  $i108 := $sub.i32($i107, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7133, 15} true;
  assume {:verifier.code 0} true;
  $M.47 := $i108;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i108);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7134, 5} true;
  assume {:verifier.code 0} true;
  goto $bb124;
$bb123:
  assume !(($i104 == 1));
  assume {:verifier.code 0} true;
  goto $bb124;
$bb124:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7136, 5} true;
  assume {:verifier.code 0} true;
  goto $bb121;
$bb125:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7138, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7139, 5} true;
  assume {:verifier.code 0} true;
  goto $bb126;
$bb126:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7139, 5} true;
  assume {:verifier.code 0} true;
  goto $bb121;
$bb127:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7143, 3} true;
  assume {:verifier.code 0} true;
  goto $bb71;
$bb128:
  assume ($i110 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7146, 5} true;
  assume {:verifier.code 0} true;
  call choose_interrupt_2();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7147, 3} true;
  assume {:verifier.code 0} true;
  goto $bb130;
$bb129:
  assume !(($i110 == 1));
  assume {:verifier.code 0} true;
  goto $bb130;
$bb130:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7149, 3} true;
  assume {:verifier.code 0} true;
  goto $bb71;
$bb131:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7151, 3} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7152, 3} true;
  assume {:verifier.code 0} true;
  goto $bb132;
$bb132:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7152, 3} true;
  assume {:verifier.code 0} true;
  goto $bb71;
}
const ldv_initialize: ref;
axiom (ldv_initialize == $sub.ref(0, 147785));
procedure  ldv_initialize()
{
  var $p0: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7407, 16} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7407, 16} true;
  assume {:verifier.code 0} true;
  $p0 := $M.24;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7407, 3} true;
  assume {:verifier.code 0} true;
  call ldv_set_init($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7408, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const mrf24j40_start: ref;
axiom (mrf24j40_start == $sub.ref(0, 148817));
procedure  mrf24j40_start($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i24;
  var $i13: i24;
  var $i14: i24;
  var $p15: ref;
  var $p16: ref;
  var $i17: i8;
  var $i18: i64;
  var $i19: i64;
  var $i20: i64;
  var $i21: i1;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $i25: i32;
  var $i26: i32;
  var $i27: i1;
  var $i29: i8;
  var $i30: i32;
  var $i31: i32;
  var $i32: i8;
  var $i33: i8;
  var $i34: i32;
  var $i35: i8;
  var $i36: i32;
  var $i28: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6159, 36} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume true;
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6159, 36} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p0, $mul.ref(0, 56)), $mul.ref(40, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6159, 36} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6159, 12} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6160, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6160, 22} true;
  assume {:verifier.code 0} true;
  $M.17 := $store.ref($M.17, $p6, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6161, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6161, 23} true;
  assume {:verifier.code 0} true;
  $M.18 := $store.ref($M.18, $p7, .str.11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6162, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6162, 23} true;
  assume {:verifier.code 0} true;
  $M.19 := $store.ref($M.19, $p8, .str.4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6163, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6163, 21} true;
  assume {:verifier.code 0} true;
  $M.20 := $store.ref($M.20, $p9, .str.12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6164, 14} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6164, 14} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6164, 21} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i24($M.21, $p11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6164, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6164:21: warning: over-approximating bitwise operation and;
  $i13 := $and.i24($i12, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6164, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6164:21: warning: over-approximating bitwise operation or;
  $i14 := $or.i24($i13, 476);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6164, 21} true;
  assume {:verifier.code 0} true;
  $M.21 := $store.i24($M.21, $p11, $i14);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6165, 14} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6165, 20} true;
  assume {:verifier.code 0} true;
  $M.22 := $store.i8($M.22, $p15, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6166, 47} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6166, 47} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i8($M.22, $p16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6166, 29} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i8.i64($i17);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6166, 53} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6166:53: warning: over-approximating bitwise operation and;
  $i19 := $and.i64($i18, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6166, 9} true;
  assume {:verifier.code 0} true;
  call $i20 := ldv__builtin_expect($i19, 0);
  call {:cexpr "tmp"} boogie_si_record_i64($i20);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6167, 11} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i64($i20, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6167, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i21 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6168, 72} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p5, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6168, 72} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.0, $p22);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6168, 78} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p23, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6168, 5} true;
  assume {:verifier.code 0} true;
  call $i25 := __dynamic_dev_dbg.ref.ref.ref($p2, $p24, .str.12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6170, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6172, 9} true;
  assume {:verifier.code 0} true;
  call $i26 := read_short_reg($p5, 50, $p1);
  call {:cexpr "ret"} boogie_si_record_i32($i26);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6173, 11} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i32($i26, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6173, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i27 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6174, 5} true;
  assume {:verifier.code 0} true;
  $i28 := $i26;
  goto $bb6;
$bb5:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6181, 1} true;
  assume {:verifier.code 0} true;
  $r := $i28;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6177, 24} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i8($M.14, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6177, 9} true;
  assume {:verifier.code 0} true;
  $i30 := $zext.i8.i32($i29);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6177, 28} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6177:28: warning: over-approximating bitwise operation and;
  $i31 := $and.i32($i30, 246);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6177, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $trunc.i32.i8($i31);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6177, 7} true;
  assume {:verifier.code 0} true;
  $M.14 := $store.i8($M.14, $p1, $i32);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6178, 37} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i8($M.14, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6178, 31} true;
  assume {:verifier.code 0} true;
  $i34 := $zext.i8.i32($i33);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6178, 31} true;
  assume {:verifier.code 0} true;
  $i35 := $trunc.i32.i8($i34);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6178, 3} true;
  assume {:verifier.code 0} true;
  call $i36 := write_short_reg($p5, 50, $i35);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6179, 3} true;
  assume {:verifier.code 0} true;
  $i28 := 0;
  goto $bb6;
}
const mrf24j40_filter: ref;
axiom (mrf24j40_filter == $sub.ref(0, 149849));
procedure  mrf24j40_filter($p0: ref, $p1: ref, $i2: i64)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i24;
  var $i19: i24;
  var $i20: i24;
  var $p21: ref;
  var $p22: ref;
  var $i23: i8;
  var $i24: i64;
  var $i25: i64;
  var $i26: i64;
  var $i27: i1;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i32;
  var $i32: i32;
  var $i33: i32;
  var $i34: i1;
  var $p35: ref;
  var $i36: i16;
  var $i37: i32;
  var $i38: i32;
  var $i39: i8;
  var $p40: ref;
  var $i41: i16;
  var $i42: i8;
  var $i43: i32;
  var $i44: i8;
  var $i45: i32;
  var $i46: i32;
  var $i47: i8;
  var $i48: i32;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $i55: i24;
  var $i56: i24;
  var $i57: i24;
  var $p58: ref;
  var $p59: ref;
  var $i60: i8;
  var $i61: i64;
  var $i62: i64;
  var $i63: i64;
  var $i64: i1;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $i69: i16;
  var $i70: i32;
  var $i71: i32;
  var $i72: i64;
  var $i73: i1;
  var $i74: i1;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $i82: i8;
  var $i83: i32;
  var $i84: i64;
  var $i85: i1;
  var $p86: ref;
  var $i87: i16;
  var $i88: i32;
  var $i89: i32;
  var $i90: i8;
  var $p91: ref;
  var $i92: i16;
  var $i93: i8;
  var $i94: i32;
  var $i95: i8;
  var $i96: i32;
  var $i97: i32;
  var $i98: i8;
  var $i99: i32;
  var $p100: ref;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $i106: i24;
  var $i107: i24;
  var $i108: i24;
  var $p109: ref;
  var $p110: ref;
  var $i111: i8;
  var $i112: i64;
  var $i113: i64;
  var $i114: i64;
  var $i115: i1;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $p119: ref;
  var $i120: i16;
  var $i121: i32;
  var $i122: i32;
  var $i123: i64;
  var $i124: i1;
  var $i125: i32;
  var $i126: i1;
  var $p128: ref;
  var $i129: i8;
  var $i130: i32;
  var $i131: i1;
  var $i132: i8;
  var $i133: i32;
  var $i134: i32;
  var $i135: i8;
  var $i136: i8;
  var $i137: i32;
  var $i138: i32;
  var $i139: i8;
  var $i140: i8;
  var $i141: i32;
  var $i142: i8;
  var $i143: i32;
  var $p144: ref;
  var $p145: ref;
  var $p146: ref;
  var $p147: ref;
  var $p148: ref;
  var $p149: ref;
  var $i150: i24;
  var $i151: i24;
  var $i152: i24;
  var $p153: ref;
  var $p154: ref;
  var $i155: i8;
  var $i156: i64;
  var $i157: i64;
  var $i158: i64;
  var $i159: i1;
  var $p160: ref;
  var $p161: ref;
  var $p162: ref;
  var $p163: ref;
  var $i164: i8;
  var $i165: i32;
  var $i166: i1;
  var $p167: ref;
  var $i168: i32;
  var $i127: i32;
  var $p169: ref;
  var $i170: i8;
  var $i171: i32;
  var $p172: ref;
  var $i173: i8;
  var $i174: i32;
  var $p175: ref;
  var $i176: i8;
  var $i177: i32;
  var $p178: ref;
  var $i179: i8;
  var $i180: i32;
  var $p181: ref;
  var $i182: i8;
  var $i183: i32;
  var $p184: ref;
  var $i185: i8;
  var $i186: i32;
  var $p187: ref;
  var $i188: i8;
  var $i189: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6302, 36} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p7 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p8 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  call {:cexpr "mrf24j40_filter:arg:changed"} boogie_si_record_i64($i2);
  assume true;
  assume true;
  assume true;
  assume true;
  assume true;
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6302, 36} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p0, $mul.ref(0, 56)), $mul.ref(40, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6302, 36} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6302, 12} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6303, 14} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6303, 22} true;
  assume {:verifier.code 0} true;
  $M.17 := $store.ref($M.17, $p12, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6304, 14} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6304, 23} true;
  assume {:verifier.code 0} true;
  $M.18 := $store.ref($M.18, $p13, .str.13);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6305, 14} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6305, 23} true;
  assume {:verifier.code 0} true;
  $M.19 := $store.ref($M.19, $p14, .str.4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6306, 14} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6306, 21} true;
  assume {:verifier.code 0} true;
  $M.20 := $store.ref($M.20, $p15, .str.14);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6307, 14} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6307, 14} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6307, 21} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i24($M.21, $p17);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6307, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6307:21: warning: over-approximating bitwise operation and;
  $i19 := $and.i24($i18, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6307, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6307:21: warning: over-approximating bitwise operation or;
  $i20 := $or.i24($i19, 540);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6307, 21} true;
  assume {:verifier.code 0} true;
  $M.21 := $store.i24($M.21, $p17, $i20);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6308, 14} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6308, 20} true;
  assume {:verifier.code 0} true;
  $M.22 := $store.i8($M.22, $p21, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6309, 47} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6309, 47} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i8($M.22, $p22);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6309, 29} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i8.i64($i23);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6309, 53} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6309:53: warning: over-approximating bitwise operation and;
  $i25 := $and.i64($i24, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6309, 9} true;
  assume {:verifier.code 0} true;
  call $i26 := ldv__builtin_expect($i25, 0);
  call {:cexpr "tmp"} boogie_si_record_i64($i26);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6310, 11} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i64($i26, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6310, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i27 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6311, 72} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($add.ref($p11, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6311, 72} true;
  assume {:verifier.code 0} true;
  $p29 := $load.ref($M.0, $p28);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6311, 78} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p29, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6311, 5} true;
  assume {:verifier.code 0} true;
  call $i31 := __dynamic_dev_dbg.ref.ref.ref($p3, $p30, .str.14);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6313, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6315, 7} true;
  assume {:verifier.code 0} true;
  $i32 := $trunc.i64.i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6315, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6315:21: warning: over-approximating bitwise operation and;
  $i33 := $and.i32($i32, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6315, 21} true;
  assume {:verifier.code 0} true;
  $i34 := $ne.i32($i33, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6315, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i34 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6316, 31} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($add.ref($p1, $mul.ref(0, 24)), $mul.ref(2, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6316, 31} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i16($M.0, $p35);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6316, 19} true;
  assume {:verifier.code 0} true;
  $i37 := $zext.i16.i32($i36);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6316, 42} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6316:42: warning: over-approximating bitwise operation ashr;
  $i38 := $ashr.i32($i37, 8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6316, 13} true;
  assume {:verifier.code 0} true;
  $i39 := $trunc.i32.i8($i38);
  call {:cexpr "addrh"} boogie_si_record_i8($i39);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6317, 24} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p1, $mul.ref(0, 24)), $mul.ref(2, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6317, 24} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i16($M.0, $p40);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6317, 13} true;
  assume {:verifier.code 0} true;
  $i42 := $trunc.i16.i8($i41);
  call {:cexpr "addrl"} boogie_si_record_i8($i42);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6318, 32} true;
  assume {:verifier.code 0} true;
  $i43 := $zext.i8.i32($i39);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6318, 32} true;
  assume {:verifier.code 0} true;
  $i44 := $trunc.i32.i8($i43);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6318, 5} true;
  assume {:verifier.code 0} true;
  call $i45 := write_short_reg($p11, 4, $i44);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6319, 32} true;
  assume {:verifier.code 0} true;
  $i46 := $zext.i8.i32($i42);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6319, 32} true;
  assume {:verifier.code 0} true;
  $i47 := $trunc.i32.i8($i46);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6319, 5} true;
  assume {:verifier.code 0} true;
  call $i48 := write_short_reg($p11, 3, $i47);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6320, 20} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6320, 28} true;
  assume {:verifier.code 0} true;
  $M.17 := $store.ref($M.17, $p49, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6321, 20} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6321, 29} true;
  assume {:verifier.code 0} true;
  $M.18 := $store.ref($M.18, $p50, .str.13);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6322, 20} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6322, 29} true;
  assume {:verifier.code 0} true;
  $M.19 := $store.ref($M.19, $p51, .str.4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6323, 20} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6323, 27} true;
  assume {:verifier.code 0} true;
  $M.20 := $store.ref($M.20, $p52, .str.15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6324, 20} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6324, 20} true;
  assume {:verifier.code 0} true;
  $p54 := $bitcast.ref.ref($p53);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6324, 27} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i24($M.21, $p54);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6324, 27} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6324:27: warning: over-approximating bitwise operation and;
  $i56 := $and.i24($i55, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6324, 27} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6324:27: warning: over-approximating bitwise operation or;
  $i57 := $or.i24($i56, 551);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6324, 27} true;
  assume {:verifier.code 0} true;
  $M.21 := $store.i24($M.21, $p54, $i57);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6325, 20} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6325, 26} true;
  assume {:verifier.code 0} true;
  $M.22 := $store.i8($M.22, $p58, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6326, 57} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6326, 57} true;
  assume {:verifier.code 0} true;
  $i60 := $load.i8($M.22, $p59);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6326, 35} true;
  assume {:verifier.code 0} true;
  $i61 := $zext.i8.i64($i60);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6326, 63} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6326:63: warning: over-approximating bitwise operation and;
  $i62 := $and.i64($i61, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6326, 15} true;
  assume {:verifier.code 0} true;
  call $i63 := ldv__builtin_expect($i62, 0);
  call {:cexpr "tmp___0"} boogie_si_record_i64($i63);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6327, 17} true;
  assume {:verifier.code 0} true;
  $i64 := $ne.i64($i63, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6327, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i64} true;
  goto $bb6, $bb7;
$bb5:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb6:
  assume ($i64 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6328, 78} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($add.ref($p11, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6328, 78} true;
  assume {:verifier.code 0} true;
  $p66 := $load.ref($M.0, $p65);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6328, 84} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($add.ref($p66, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6329, 66} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($add.ref($p1, $mul.ref(0, 24)), $mul.ref(2, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6329, 66} true;
  assume {:verifier.code 0} true;
  $i69 := $load.i16($M.0, $p68);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6329, 54} true;
  assume {:verifier.code 0} true;
  $i70 := $zext.i16.i32($i69);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6328, 7} true;
  assume {:verifier.code 0} true;
  call $i71 := __dynamic_dev_dbg.ref.ref.ref.i32($p4, $p67, .str.15, $i70);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6330, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i64 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6332, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6334, 16} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6334:16: warning: over-approximating bitwise operation and;
  $i72 := $and.i64($i2, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6334, 23} true;
  assume {:verifier.code 0} true;
  $i73 := $ne.i64($i72, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6334, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i73} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i73 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6336, 15} true;
  assume {:verifier.code 0} true;
  $i74 := $ugt.i64(8, 63);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6336, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i74} true;
  goto $bb12, $bb13;
$bb11:
  assume !(($i73 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb12:
  assume ($i74 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6337, 15} true;
  assume {:verifier.code 0} true;
  $p75 := $bitcast.ref.ref($p5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6337, 63} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($add.ref($p1, $mul.ref(0, 24)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6337, 15} true;
  assume {:verifier.code 0} true;
  $p77 := $bitcast.ref.ref($p76);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6337, 15} true;
  assume {:verifier.code 0} true;
  call $M.54 := $memcpy.i8($M.54, $M.0, $p75, $p77, 8, false);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6338, 5} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !(($i74 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6339, 15} true;
  assume {:verifier.code 0} true;
  $p78 := $bitcast.ref.ref($p5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6339, 63} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($add.ref($p1, $mul.ref(0, 24)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6339, 15} true;
  assume {:verifier.code 0} true;
  $p80 := $bitcast.ref.ref($p79);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6339, 15} true;
  assume {:verifier.code 0} true;
  call $M.54 := $memcpy.i8($M.54, $M.0, $p78, $p80, 8, false);
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6348, 9} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6349, 7} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6345, 66} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($add.ref($p5, $mul.ref(0, 8)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6345, 66} true;
  assume {:verifier.code 0} true;
  $i82 := $load.i8($M.54, $p81);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6345, 5} true;
  assume {:verifier.code 0} true;
  call $i83 := write_short_reg($p11, 5, $i82);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6349, 7} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6345, 66} true;
  assume {:verifier.code 0} true;
  $p169 := $add.ref($add.ref($p5, $mul.ref(0, 8)), $mul.ref(1, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6345, 66} true;
  assume {:verifier.code 0} true;
  $i170 := $load.i8($M.54, $p169);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6345, 5} true;
  assume {:verifier.code 0} true;
  call $i171 := write_short_reg($p11, 6, $i170);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6349, 7} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb18:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6352, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6354, 16} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6354:16: warning: over-approximating bitwise operation and;
  $i84 := $and.i64($i2, 4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6354, 23} true;
  assume {:verifier.code 0} true;
  $i85 := $ne.i64($i84, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6354, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i85} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i85 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6355, 32} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($add.ref($p1, $mul.ref(0, 24)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6355, 32} true;
  assume {:verifier.code 0} true;
  $i87 := $load.i16($M.0, $p86);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6355, 20} true;
  assume {:verifier.code 0} true;
  $i88 := $zext.i16.i32($i87);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6355, 39} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6355:39: warning: over-approximating bitwise operation ashr;
  $i89 := $ashr.i32($i88, 8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6355, 14} true;
  assume {:verifier.code 0} true;
  $i90 := $trunc.i32.i8($i89);
  call {:cexpr "panidh"} boogie_si_record_i8($i90);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6356, 25} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($add.ref($p1, $mul.ref(0, 24)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6356, 25} true;
  assume {:verifier.code 0} true;
  $i92 := $load.i16($M.0, $p91);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6356, 14} true;
  assume {:verifier.code 0} true;
  $i93 := $trunc.i16.i8($i92);
  call {:cexpr "panidl"} boogie_si_record_i8($i93);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6357, 32} true;
  assume {:verifier.code 0} true;
  $i94 := $zext.i8.i32($i90);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6357, 32} true;
  assume {:verifier.code 0} true;
  $i95 := $trunc.i32.i8($i94);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6357, 5} true;
  assume {:verifier.code 0} true;
  call $i96 := write_short_reg($p11, 2, $i95);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6358, 32} true;
  assume {:verifier.code 0} true;
  $i97 := $zext.i8.i32($i93);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6358, 32} true;
  assume {:verifier.code 0} true;
  $i98 := $trunc.i32.i8($i97);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6358, 5} true;
  assume {:verifier.code 0} true;
  call $i99 := write_short_reg($p11, 1, $i98);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6359, 20} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($add.ref($p6, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6359, 28} true;
  assume {:verifier.code 0} true;
  $M.17 := $store.ref($M.17, $p100, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6360, 20} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($add.ref($p6, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6360, 29} true;
  assume {:verifier.code 0} true;
  $M.18 := $store.ref($M.18, $p101, .str.13);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6361, 20} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($add.ref($p6, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6361, 29} true;
  assume {:verifier.code 0} true;
  $M.19 := $store.ref($M.19, $p102, .str.4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6362, 20} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($add.ref($p6, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6362, 27} true;
  assume {:verifier.code 0} true;
  $M.20 := $store.ref($M.20, $p103, .str.16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6363, 20} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($add.ref($p6, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6363, 20} true;
  assume {:verifier.code 0} true;
  $p105 := $bitcast.ref.ref($p104);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6363, 27} true;
  assume {:verifier.code 0} true;
  $i106 := $load.i24($M.21, $p105);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6363, 27} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6363:27: warning: over-approximating bitwise operation and;
  $i107 := $and.i24($i106, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6363, 27} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6363:27: warning: over-approximating bitwise operation or;
  $i108 := $or.i24($i107, 578);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6363, 27} true;
  assume {:verifier.code 0} true;
  $M.21 := $store.i24($M.21, $p105, $i108);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6364, 20} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($add.ref($p6, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6364, 26} true;
  assume {:verifier.code 0} true;
  $M.22 := $store.i8($M.22, $p109, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6365, 57} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($add.ref($p6, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6365, 57} true;
  assume {:verifier.code 0} true;
  $i111 := $load.i8($M.22, $p110);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6365, 35} true;
  assume {:verifier.code 0} true;
  $i112 := $zext.i8.i64($i111);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6365, 63} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6365:63: warning: over-approximating bitwise operation and;
  $i113 := $and.i64($i112, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6365, 15} true;
  assume {:verifier.code 0} true;
  call $i114 := ldv__builtin_expect($i113, 0);
  call {:cexpr "tmp___1"} boogie_si_record_i64($i114);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6366, 17} true;
  assume {:verifier.code 0} true;
  $i115 := $ne.i64($i114, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6366, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i115} true;
  goto $bb22, $bb23;
$bb21:
  assume !(($i85 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb22:
  assume ($i115 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6367, 78} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($add.ref($p11, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6367, 78} true;
  assume {:verifier.code 0} true;
  $p117 := $load.ref($M.0, $p116);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6367, 84} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($add.ref($p117, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6368, 61} true;
  assume {:verifier.code 0} true;
  $p119 := $add.ref($add.ref($p1, $mul.ref(0, 24)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6368, 61} true;
  assume {:verifier.code 0} true;
  $i120 := $load.i16($M.0, $p119);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6368, 49} true;
  assume {:verifier.code 0} true;
  $i121 := $zext.i16.i32($i120);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6367, 7} true;
  assume {:verifier.code 0} true;
  call $i122 := __dynamic_dev_dbg.ref.ref.ref.i32($p6, $p118, .str.16, $i121);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6369, 5} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume !(($i115 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6371, 3} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6373, 16} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6373:16: warning: over-approximating bitwise operation and;
  $i123 := $and.i64($i2, 8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6373, 23} true;
  assume {:verifier.code 0} true;
  $i124 := $ne.i64($i123, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6373, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i124} true;
  goto $bb26, $bb27;
$bb26:
  assume ($i124 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6374, 11} true;
  assume {:verifier.code 0} true;
  call $i125 := read_short_reg($p11, 0, $p7);
  call {:cexpr "ret"} boogie_si_record_i32($i125);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6375, 13} true;
  assume {:verifier.code 0} true;
  $i126 := $ne.i32($i125, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6375, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i126} true;
  goto $bb28, $bb29;
$bb27:
  assume !(($i124 == 1));
  assume {:verifier.code 0} true;
  goto $bb38;
$bb28:
  assume ($i126 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6376, 7} true;
  assume {:verifier.code 0} true;
  $i127 := $i125;
  goto $bb30;
$bb29:
  assume !(($i126 == 1));
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6401, 1} true;
  assume {:verifier.code 0} true;
  $r := $i127;
  $exn := false;
  return;
$bb31:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6379, 30} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($add.ref($p1, $mul.ref(0, 24)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6379, 30} true;
  assume {:verifier.code 0} true;
  $i129 := $load.i8($M.0, $p128);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6379, 9} true;
  assume {:verifier.code 0} true;
  $i130 := $zext.i8.i32($i129);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6379, 40} true;
  assume {:verifier.code 0} true;
  $i131 := $ne.i32($i130, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6379, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i131} true;
  goto $bb32, $bb33;
$bb32:
  assume ($i131 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6380, 34} true;
  assume {:verifier.code 0} true;
  $i132 := $load.i8($M.14, $p7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6380, 19} true;
  assume {:verifier.code 0} true;
  $i133 := $zext.i8.i32($i132);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6380, 38} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6380:38: warning: over-approximating bitwise operation or;
  $i134 := $or.i32($i133, 8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6380, 13} true;
  assume {:verifier.code 0} true;
  $i135 := $trunc.i32.i8($i134);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6380, 11} true;
  assume {:verifier.code 0} true;
  $M.14 := $store.i8($M.14, $p7, $i135);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6381, 5} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume !(($i131 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6382, 28} true;
  assume {:verifier.code 0} true;
  $i136 := $load.i8($M.14, $p7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6382, 13} true;
  assume {:verifier.code 0} true;
  $i137 := $zext.i8.i32($i136);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6382, 32} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6382:32: warning: over-approximating bitwise operation and;
  $i138 := $and.i32($i137, 247);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6382, 13} true;
  assume {:verifier.code 0} true;
  $i139 := $trunc.i32.i8($i138);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6382, 11} true;
  assume {:verifier.code 0} true;
  $M.14 := $store.i8($M.14, $p7, $i139);
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6384, 38} true;
  assume {:verifier.code 0} true;
  $i140 := $load.i8($M.14, $p7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6384, 32} true;
  assume {:verifier.code 0} true;
  $i141 := $zext.i8.i32($i140);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6384, 32} true;
  assume {:verifier.code 0} true;
  $i142 := $trunc.i32.i8($i141);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6384, 5} true;
  assume {:verifier.code 0} true;
  call $i143 := write_short_reg($p11, 0, $i142);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6385, 20} true;
  assume {:verifier.code 0} true;
  $p144 := $add.ref($add.ref($p8, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6385, 28} true;
  assume {:verifier.code 0} true;
  $M.17 := $store.ref($M.17, $p144, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6386, 20} true;
  assume {:verifier.code 0} true;
  $p145 := $add.ref($add.ref($p8, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6386, 29} true;
  assume {:verifier.code 0} true;
  $M.18 := $store.ref($M.18, $p145, .str.13);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6387, 20} true;
  assume {:verifier.code 0} true;
  $p146 := $add.ref($add.ref($p8, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6387, 29} true;
  assume {:verifier.code 0} true;
  $M.19 := $store.ref($M.19, $p146, .str.4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6388, 20} true;
  assume {:verifier.code 0} true;
  $p147 := $add.ref($add.ref($p8, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6388, 27} true;
  assume {:verifier.code 0} true;
  $M.20 := $store.ref($M.20, $p147, .str.17);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6389, 20} true;
  assume {:verifier.code 0} true;
  $p148 := $add.ref($add.ref($p8, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6389, 20} true;
  assume {:verifier.code 0} true;
  $p149 := $bitcast.ref.ref($p148);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6389, 27} true;
  assume {:verifier.code 0} true;
  $i150 := $load.i24($M.21, $p149);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6389, 27} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6389:27: warning: over-approximating bitwise operation and;
  $i151 := $and.i24($i150, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6389, 27} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6389:27: warning: over-approximating bitwise operation or;
  $i152 := $or.i24($i151, 600);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6389, 27} true;
  assume {:verifier.code 0} true;
  $M.21 := $store.i24($M.21, $p149, $i152);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6390, 20} true;
  assume {:verifier.code 0} true;
  $p153 := $add.ref($add.ref($p8, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6390, 26} true;
  assume {:verifier.code 0} true;
  $M.22 := $store.i8($M.22, $p153, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6391, 57} true;
  assume {:verifier.code 0} true;
  $p154 := $add.ref($add.ref($p8, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6391, 57} true;
  assume {:verifier.code 0} true;
  $i155 := $load.i8($M.22, $p154);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6391, 35} true;
  assume {:verifier.code 0} true;
  $i156 := $zext.i8.i64($i155);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6391, 63} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6391:63: warning: over-approximating bitwise operation and;
  $i157 := $and.i64($i156, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6391, 15} true;
  assume {:verifier.code 0} true;
  call $i158 := ldv__builtin_expect($i157, 0);
  call {:cexpr "tmp___2"} boogie_si_record_i64($i158);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6392, 17} true;
  assume {:verifier.code 0} true;
  $i159 := $ne.i64($i158, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6392, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i159} true;
  goto $bb35, $bb36;
$bb35:
  assume ($i159 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6393, 78} true;
  assume {:verifier.code 0} true;
  $p160 := $add.ref($add.ref($p11, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6393, 78} true;
  assume {:verifier.code 0} true;
  $p161 := $load.ref($M.0, $p160);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6393, 84} true;
  assume {:verifier.code 0} true;
  $p162 := $add.ref($add.ref($p161, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6394, 71} true;
  assume {:verifier.code 0} true;
  $p163 := $add.ref($add.ref($p1, $mul.ref(0, 24)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6394, 71} true;
  assume {:verifier.code 0} true;
  $i164 := $load.i8($M.0, $p163);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6394, 50} true;
  assume {:verifier.code 0} true;
  $i165 := $zext.i8.i32($i164);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6394, 81} true;
  assume {:verifier.code 0} true;
  $i166 := $ne.i32($i165, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6394, 50} true;
  assume {:verifier.code 0} true;
  $p167 := (if ($i166 == 1) then .str.18 else .str.19);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6393, 7} true;
  assume {:verifier.code 0} true;
  call $i168 := __dynamic_dev_dbg.ref.ref.ref.ref($p8, $p162, .str.17, $p167);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6395, 5} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb36:
  assume !(($i159 == 1));
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6397, 3} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb38:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6399, 3} true;
  assume {:verifier.code 0} true;
  $i127 := 0;
  goto $bb30;
$bb39:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6345, 66} true;
  assume {:verifier.code 0} true;
  $p172 := $add.ref($add.ref($p5, $mul.ref(0, 8)), $mul.ref(2, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6345, 66} true;
  assume {:verifier.code 0} true;
  $i173 := $load.i8($M.54, $p172);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6345, 5} true;
  assume {:verifier.code 0} true;
  call $i174 := write_short_reg($p11, 7, $i173);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6349, 7} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb40:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6345, 66} true;
  assume {:verifier.code 0} true;
  $p175 := $add.ref($add.ref($p5, $mul.ref(0, 8)), $mul.ref(3, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6345, 66} true;
  assume {:verifier.code 0} true;
  $i176 := $load.i8($M.54, $p175);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6345, 5} true;
  assume {:verifier.code 0} true;
  call $i177 := write_short_reg($p11, 8, $i176);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6349, 7} true;
  assume {:verifier.code 0} true;
  goto $bb41;
$bb41:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6345, 66} true;
  assume {:verifier.code 0} true;
  $p178 := $add.ref($add.ref($p5, $mul.ref(0, 8)), $mul.ref(4, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6345, 66} true;
  assume {:verifier.code 0} true;
  $i179 := $load.i8($M.54, $p178);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6345, 5} true;
  assume {:verifier.code 0} true;
  call $i180 := write_short_reg($p11, 9, $i179);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6349, 7} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb42:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6345, 66} true;
  assume {:verifier.code 0} true;
  $p181 := $add.ref($add.ref($p5, $mul.ref(0, 8)), $mul.ref(5, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6345, 66} true;
  assume {:verifier.code 0} true;
  $i182 := $load.i8($M.54, $p181);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6345, 5} true;
  assume {:verifier.code 0} true;
  call $i183 := write_short_reg($p11, 10, $i182);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6349, 7} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6345, 66} true;
  assume {:verifier.code 0} true;
  $p184 := $add.ref($add.ref($p5, $mul.ref(0, 8)), $mul.ref(6, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6345, 66} true;
  assume {:verifier.code 0} true;
  $i185 := $load.i8($M.54, $p184);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6345, 5} true;
  assume {:verifier.code 0} true;
  call $i186 := write_short_reg($p11, 11, $i185);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6349, 7} true;
  assume {:verifier.code 0} true;
  goto $bb44;
$bb44:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6345, 66} true;
  assume {:verifier.code 0} true;
  $p187 := $add.ref($add.ref($p5, $mul.ref(0, 8)), $mul.ref(7, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6345, 66} true;
  assume {:verifier.code 0} true;
  $i188 := $load.i8($M.54, $p187);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6345, 5} true;
  assume {:verifier.code 0} true;
  call $i189 := write_short_reg($p11, 12, $i188);
  assume {:verifier.code 0} true;
  goto $bb18;
}
const mrf24j40_set_channel: ref;
axiom (mrf24j40_set_channel == $sub.ref(0, 150881));
procedure  mrf24j40_set_channel($p0: ref, $i1: i32, $i2: i32)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i24;
  var $i15: i24;
  var $i16: i24;
  var $p17: ref;
  var $p18: ref;
  var $i19: i8;
  var $i20: i64;
  var $i21: i64;
  var $i22: i64;
  var $i23: i1;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i32;
  var $i28: i1;
  var $i29: i32;
  var $i30: i1;
  var $i31: i32;
  var $i32: i64;
  var $i33: i64;
  var $i34: i1;
  var $i35: i1;
  var $i36: i32;
  var $i37: i64;
  var $i38: i64;
  var $i39: i1;
  var $i40: i32;
  var $i41: i1;
  var $i42: i32;
  var $i43: i64;
  var $i44: i64;
  var $i45: i1;
  var $i46: i1;
  var $i47: i32;
  var $i48: i64;
  var $i49: i64;
  var $i50: i1;
  var $i51: i32;
  var $i52: i1;
  var $i53: i32;
  var $i54: i64;
  var $i55: i64;
  var $i56: i1;
  var $i57: i1;
  var $i58: i32;
  var $i59: i64;
  var $i60: i64;
  var $i61: i32;
  var $i62: i32;
  var $i63: i8;
  var $i64: i32;
  var $i65: i32;
  var $i66: i8;
  var $i67: i8;
  var $i68: i32;
  var $i69: i8;
  var $i70: i32;
  var $i71: i32;
  var $i72: i1;
  var $i74: i8;
  var $i75: i32;
  var $i76: i32;
  var $i77: i8;
  var $i78: i8;
  var $i79: i32;
  var $i80: i8;
  var $i81: i32;
  var $i82: i8;
  var $i83: i32;
  var $i84: i32;
  var $i85: i8;
  var $i86: i8;
  var $i87: i32;
  var $i88: i8;
  var $i89: i32;
  var $i73: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6227, 36} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  call {:cexpr "mrf24j40_set_channel:arg:page"} boogie_si_record_i32($i1);
  call {:cexpr "mrf24j40_set_channel:arg:channel"} boogie_si_record_i32($i2);
  assume true;
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6227, 36} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p0, $mul.ref(0, 56)), $mul.ref(40, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6227, 36} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6227, 12} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6228, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6228, 22} true;
  assume {:verifier.code 0} true;
  $M.17 := $store.ref($M.17, $p8, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6229, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6229, 23} true;
  assume {:verifier.code 0} true;
  $M.18 := $store.ref($M.18, $p9, .str.20);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6230, 14} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6230, 23} true;
  assume {:verifier.code 0} true;
  $M.19 := $store.ref($M.19, $p10, .str.4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6231, 14} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6231, 21} true;
  assume {:verifier.code 0} true;
  $M.20 := $store.ref($M.20, $p11, .str.21);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6232, 14} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6232, 14} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6232, 21} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i24($M.21, $p13);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6232, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6232:21: warning: over-approximating bitwise operation and;
  $i15 := $and.i24($i14, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6232, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6232:21: warning: over-approximating bitwise operation or;
  $i16 := $or.i24($i15, 510);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6232, 21} true;
  assume {:verifier.code 0} true;
  $M.21 := $store.i24($M.21, $p13, $i16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6233, 14} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6233, 20} true;
  assume {:verifier.code 0} true;
  $M.22 := $store.i8($M.22, $p17, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6234, 47} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6234, 47} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i8($M.22, $p18);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6234, 29} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i8.i64($i19);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6234, 53} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6234:53: warning: over-approximating bitwise operation and;
  $i21 := $and.i64($i20, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6234, 9} true;
  assume {:verifier.code 0} true;
  call $i22 := ldv__builtin_expect($i21, 0);
  call {:cexpr "tmp"} boogie_si_record_i64($i22);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6235, 11} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i64($i22, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6235, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i23 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6236, 72} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p7, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6236, 72} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.0, $p24);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6236, 78} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p25, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6236, 5} true;
  assume {:verifier.code 0} true;
  call $i27 := __dynamic_dev_dbg.ref.ref.ref.i32($p4, $p26, .str.21, $i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6238, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6240, 24} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.i32($i1, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6240, 24} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.i1.i32($i28);
  call {:cexpr "__ret_warn_on"} boogie_si_record_i32($i29);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6241, 47} true;
  assume {:verifier.code 0} true;
  $i30 := $ne.i32($i29, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6241, 47} true;
  assume {:verifier.code 0} true;
  $i31 := $zext.i1.i32($i30);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6241, 33} true;
  assume {:verifier.code 0} true;
  $i32 := $sext.i32.i64($i31);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6241, 13} true;
  assume {:verifier.code 0} true;
  call $i33 := ldv__builtin_expect($i32, 0);
  call {:cexpr "tmp___0"} boogie_si_record_i64($i33);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6242, 15} true;
  assume {:verifier.code 0} true;
  $i34 := $ne.i64($i33, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6242, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i34 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6243, 5} true;
  assume {:verifier.code 0} true;
  call warn_slowpath_null(.str.4, 512);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6245, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6247, 37} true;
  assume {:verifier.code 0} true;
  $i35 := $ne.i32($i29, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6247, 37} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i1.i32($i35);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6247, 23} true;
  assume {:verifier.code 0} true;
  $i37 := $sext.i32.i64($i36);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6247, 3} true;
  assume {:verifier.code 0} true;
  call $i38 := ldv__builtin_expect($i37, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6248, 31} true;
  assume {:verifier.code 0} true;
  $i39 := $sle.i32($i2, 10);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6248, 31} true;
  assume {:verifier.code 0} true;
  $i40 := $zext.i1.i32($i39);
  call {:cexpr "__ret_warn_on___0"} boogie_si_record_i32($i40);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6249, 51} true;
  assume {:verifier.code 0} true;
  $i41 := $ne.i32($i40, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6249, 51} true;
  assume {:verifier.code 0} true;
  $i42 := $zext.i1.i32($i41);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6249, 33} true;
  assume {:verifier.code 0} true;
  $i43 := $sext.i32.i64($i42);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6249, 13} true;
  assume {:verifier.code 0} true;
  call $i44 := ldv__builtin_expect($i43, 0);
  call {:cexpr "tmp___1"} boogie_si_record_i64($i44);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6250, 15} true;
  assume {:verifier.code 0} true;
  $i45 := $ne.i64($i44, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6250, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i45 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6251, 5} true;
  assume {:verifier.code 0} true;
  call warn_slowpath_null(.str.4, 513);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6253, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i45 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6255, 41} true;
  assume {:verifier.code 0} true;
  $i46 := $ne.i32($i40, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6255, 41} true;
  assume {:verifier.code 0} true;
  $i47 := $zext.i1.i32($i46);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6255, 23} true;
  assume {:verifier.code 0} true;
  $i48 := $sext.i32.i64($i47);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6255, 3} true;
  assume {:verifier.code 0} true;
  call $i49 := ldv__builtin_expect($i48, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6256, 31} true;
  assume {:verifier.code 0} true;
  $i50 := $sgt.i32($i2, 26);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6256, 31} true;
  assume {:verifier.code 0} true;
  $i51 := $zext.i1.i32($i50);
  call {:cexpr "__ret_warn_on___1"} boogie_si_record_i32($i51);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6257, 51} true;
  assume {:verifier.code 0} true;
  $i52 := $ne.i32($i51, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6257, 51} true;
  assume {:verifier.code 0} true;
  $i53 := $zext.i1.i32($i52);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6257, 33} true;
  assume {:verifier.code 0} true;
  $i54 := $sext.i32.i64($i53);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6257, 13} true;
  assume {:verifier.code 0} true;
  call $i55 := ldv__builtin_expect($i54, 0);
  call {:cexpr "tmp___2"} boogie_si_record_i64($i55);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6258, 15} true;
  assume {:verifier.code 0} true;
  $i56 := $ne.i64($i55, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6258, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i56} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i56 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6259, 5} true;
  assume {:verifier.code 0} true;
  call warn_slowpath_null(.str.4, 514);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6261, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i56 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6263, 41} true;
  assume {:verifier.code 0} true;
  $i57 := $ne.i32($i51, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6263, 41} true;
  assume {:verifier.code 0} true;
  $i58 := $zext.i1.i32($i57);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6263, 23} true;
  assume {:verifier.code 0} true;
  $i59 := $sext.i32.i64($i58);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6263, 3} true;
  assume {:verifier.code 0} true;
  call $i60 := ldv__builtin_expect($i59, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6264, 46} true;
  assume {:verifier.code 0} true;
  $i61 := $add.i32($i2, $sub.i32(0, 11));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6264, 53} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6264:53: warning: over-approximating bitwise operation shl;
  $i62 := $shl.i32($i61, 4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6264, 22} true;
  assume {:verifier.code 0} true;
  $i63 := $trunc.i32.i8($i62);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6264, 15} true;
  assume {:verifier.code 0} true;
  $i64 := $sext.i8.i32($i63);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6264, 60} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6264:60: warning: over-approximating bitwise operation or;
  $i65 := $or.i32($i64, 3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6264, 9} true;
  assume {:verifier.code 0} true;
  $i66 := $trunc.i32.i8($i65);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6264, 7} true;
  assume {:verifier.code 0} true;
  $M.14 := $store.i8($M.14, $p3, $i66);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6265, 37} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i8($M.14, $p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6265, 31} true;
  assume {:verifier.code 0} true;
  $i68 := $zext.i8.i32($i67);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6265, 31} true;
  assume {:verifier.code 0} true;
  $i69 := $trunc.i32.i8($i68);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6265, 3} true;
  assume {:verifier.code 0} true;
  call $i70 := write_long_reg($p7, 512, $i69);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6266, 9} true;
  assume {:verifier.code 0} true;
  call $i71 := read_short_reg($p7, 54, $p3);
  call {:cexpr "ret"} boogie_si_record_i32($i71);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6267, 11} true;
  assume {:verifier.code 0} true;
  $i72 := $ne.i32($i71, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6267, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i72} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i72 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6268, 5} true;
  assume {:verifier.code 0} true;
  $i73 := $i71;
  goto $bb15;
$bb14:
  assume !(($i72 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6278, 1} true;
  assume {:verifier.code 0} true;
  $r := $i73;
  $exn := false;
  return;
$bb16:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6271, 30} true;
  assume {:verifier.code 0} true;
  $i74 := $load.i8($M.14, $p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6271, 15} true;
  assume {:verifier.code 0} true;
  $i75 := $zext.i8.i32($i74);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6271, 34} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6271:34: warning: over-approximating bitwise operation or;
  $i76 := $or.i32($i75, 4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6271, 9} true;
  assume {:verifier.code 0} true;
  $i77 := $trunc.i32.i8($i76);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6271, 7} true;
  assume {:verifier.code 0} true;
  $M.14 := $store.i8($M.14, $p3, $i77);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6272, 37} true;
  assume {:verifier.code 0} true;
  $i78 := $load.i8($M.14, $p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6272, 31} true;
  assume {:verifier.code 0} true;
  $i79 := $zext.i8.i32($i78);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6272, 31} true;
  assume {:verifier.code 0} true;
  $i80 := $trunc.i32.i8($i79);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6272, 3} true;
  assume {:verifier.code 0} true;
  call $i81 := write_short_reg($p7, 54, $i80);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6273, 24} true;
  assume {:verifier.code 0} true;
  $i82 := $load.i8($M.14, $p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6273, 9} true;
  assume {:verifier.code 0} true;
  $i83 := $zext.i8.i32($i82);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6273, 28} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6273:28: warning: over-approximating bitwise operation and;
  $i84 := $and.i32($i83, 251);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6273, 9} true;
  assume {:verifier.code 0} true;
  $i85 := $trunc.i32.i8($i84);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6273, 7} true;
  assume {:verifier.code 0} true;
  $M.14 := $store.i8($M.14, $p3, $i85);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6274, 37} true;
  assume {:verifier.code 0} true;
  $i86 := $load.i8($M.14, $p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6274, 31} true;
  assume {:verifier.code 0} true;
  $i87 := $zext.i8.i32($i86);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6274, 31} true;
  assume {:verifier.code 0} true;
  $i88 := $trunc.i32.i8($i87);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6274, 3} true;
  assume {:verifier.code 0} true;
  call $i89 := write_short_reg($p7, 54, $i88);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6275, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(824640);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6276, 3} true;
  assume {:verifier.code 0} true;
  $i73 := 0;
  goto $bb15;
}
const mrf24j40_tx: ref;
axiom (mrf24j40_tx == $sub.ref(0, 151913));
procedure  mrf24j40_tx($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i24;
  var $i16: i24;
  var $i17: i24;
  var $p18: ref;
  var $p19: ref;
  var $i20: i8;
  var $i21: i64;
  var $i22: i64;
  var $i23: i64;
  var $i24: i1;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $i29: i32;
  var $i30: i32;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $i34: i32;
  var $i35: i64;
  var $i36: i32;
  var $i37: i1;
  var $p39: ref;
  var $i40: i32;
  var $i41: i1;
  var $i42: i8;
  var $i43: i32;
  var $i44: i32;
  var $i45: i8;
  var $p46: ref;
  var $p47: ref;
  var $i48: i8;
  var $i49: i32;
  var $i50: i32;
  var $i51: i1;
  var $i52: i8;
  var $i53: i32;
  var $i54: i32;
  var $i55: i8;
  var $i56: i8;
  var $i57: i32;
  var $i58: i8;
  var $i59: i32;
  var $p60: ref;
  var $i61: i64;
  var $i62: i32;
  var $i63: i1;
  var $i64: i1;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $i68: i32;
  var $i69: i32;
  var $i70: i1;
  var $i71: i8;
  var $i72: i32;
  var $i73: i32;
  var $i74: i1;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $i81: i24;
  var $i82: i24;
  var $i83: i24;
  var $p84: ref;
  var $p85: ref;
  var $i86: i8;
  var $i87: i64;
  var $i88: i64;
  var $i89: i64;
  var $i90: i1;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $i94: i32;
  var $p96: ref;
  var $p97: ref;
  var $p98: ref;
  var $p99: ref;
  var $p100: ref;
  var $p101: ref;
  var $i102: i24;
  var $i103: i24;
  var $i104: i24;
  var $p105: ref;
  var $p106: ref;
  var $i107: i8;
  var $i108: i64;
  var $i109: i64;
  var $i110: i64;
  var $i111: i1;
  var $p112: ref;
  var $p113: ref;
  var $p114: ref;
  var $i115: i32;
  var $i95: i32;
  var $i38: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6063, 36} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume true;
  assume true;
  assume true;
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6063, 36} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p0, $mul.ref(0, 56)), $mul.ref(40, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6063, 36} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6063, 12} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6065, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6065, 22} true;
  assume {:verifier.code 0} true;
  $M.17 := $store.ref($M.17, $p9, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6066, 14} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6066, 23} true;
  assume {:verifier.code 0} true;
  $M.18 := $store.ref($M.18, $p10, .str.23);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6067, 14} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6067, 23} true;
  assume {:verifier.code 0} true;
  $M.19 := $store.ref($M.19, $p11, .str.4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6068, 14} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6068, 21} true;
  assume {:verifier.code 0} true;
  $M.20 := $store.ref($M.20, $p12, .str.24);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6069, 14} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6069, 14} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p13);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6069, 21} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i24($M.21, $p14);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6069, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6069:21: warning: over-approximating bitwise operation and;
  $i16 := $and.i24($i15, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6069, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6069:21: warning: over-approximating bitwise operation or;
  $i17 := $or.i24($i16, 417);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6069, 21} true;
  assume {:verifier.code 0} true;
  $M.21 := $store.i24($M.21, $p14, $i17);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6070, 14} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6070, 20} true;
  assume {:verifier.code 0} true;
  $M.22 := $store.i8($M.22, $p18, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6071, 47} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6071, 47} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i8($M.22, $p19);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6071, 29} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i8.i64($i20);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6071, 53} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6071:53: warning: over-approximating bitwise operation and;
  $i22 := $and.i64($i21, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6071, 9} true;
  assume {:verifier.code 0} true;
  call $i23 := ldv__builtin_expect($i22, 0);
  call {:cexpr "tmp"} boogie_si_record_i64($i23);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6072, 11} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i64($i23, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6072, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i24 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6073, 72} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p8, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6073, 72} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6073, 78} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p26, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6074, 55} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($add.ref($p1, $mul.ref(0, 232)), $mul.ref(104, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6074, 55} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i32($M.0, $p28);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6073, 5} true;
  assume {:verifier.code 0} true;
  call $i30 := __dynamic_dev_dbg.ref.ref.ref.i32($p3, $p27, .str.24, $i29);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6075, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6077, 50} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($add.ref($p1, $mul.ref(0, 232)), $mul.ref(216, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6077, 50} true;
  assume {:verifier.code 0} true;
  $p32 := $load.ref($M.0, $p31);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6077, 70} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($add.ref($p1, $mul.ref(0, 232)), $mul.ref(104, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6077, 70} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i32($M.0, $p33);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6077, 56} true;
  assume {:verifier.code 0} true;
  $i35 := $zext.i32.i64($i34);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6077, 9} true;
  assume {:verifier.code 0} true;
  call $i36 := write_tx_buf($p8, 0, $p32, $i35);
  call {:cexpr "ret"} boogie_si_record_i32($i36);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6078, 11} true;
  assume {:verifier.code 0} true;
  $i37 := $ne.i32($i36, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6078, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i37 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6079, 5} true;
  assume {:verifier.code 0} true;
  $i38 := $i36;
  goto $bb6;
$bb5:
  assume !(($i37 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6140, 3} true;
  assume {:verifier.code 0} true;
  $r := $i38;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6082, 31} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($add.ref($p8, $mul.ref(0, 288)), $mul.ref(184, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6082, 3} true;
  assume {:verifier.code 0} true;
  call reinit_completion($p39);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6083, 9} true;
  assume {:verifier.code 0} true;
  call $i40 := read_short_reg($p8, 27, $p2);
  call {:cexpr "ret"} boogie_si_record_i32($i40);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6084, 11} true;
  assume {:verifier.code 0} true;
  $i41 := $ne.i32($i40, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6084, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i41 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6085, 5} true;
  assume {:verifier.code 0} true;
  $i38 := $i40;
  goto $bb6;
$bb9:
  assume !(($i41 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6088, 30} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i8($M.14, $p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6088, 15} true;
  assume {:verifier.code 0} true;
  $i43 := $zext.i8.i32($i42);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6088, 34} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6088:34: warning: over-approximating bitwise operation or;
  $i44 := $or.i32($i43, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6088, 9} true;
  assume {:verifier.code 0} true;
  $i45 := $trunc.i32.i8($i44);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6088, 7} true;
  assume {:verifier.code 0} true;
  $M.14 := $store.i8($M.14, $p2, $i45);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6089, 21} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p1, $mul.ref(0, 232)), $mul.ref(216, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6089, 21} true;
  assume {:verifier.code 0} true;
  $p47 := $load.ref($M.0, $p46);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6089, 14} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i8($M.0, $p47);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6089, 8} true;
  assume {:verifier.code 0} true;
  $i49 := $zext.i8.i32($i48);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6089, 27} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6089:27: warning: over-approximating bitwise operation and;
  $i50 := $and.i32($i49, 32);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6089, 33} true;
  assume {:verifier.code 0} true;
  $i51 := $ne.i32($i50, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6089, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i51} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i51 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6090, 32} true;
  assume {:verifier.code 0} true;
  $i52 := $load.i8($M.14, $p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6090, 17} true;
  assume {:verifier.code 0} true;
  $i53 := $zext.i8.i32($i52);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6090, 36} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6090:36: warning: over-approximating bitwise operation or;
  $i54 := $or.i32($i53, 4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6090, 11} true;
  assume {:verifier.code 0} true;
  $i55 := $trunc.i32.i8($i54);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6090, 9} true;
  assume {:verifier.code 0} true;
  $M.14 := $store.i8($M.14, $p2, $i55);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6091, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i51 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6093, 37} true;
  assume {:verifier.code 0} true;
  $i56 := $load.i8($M.14, $p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6093, 31} true;
  assume {:verifier.code 0} true;
  $i57 := $zext.i8.i32($i56);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6093, 31} true;
  assume {:verifier.code 0} true;
  $i58 := $trunc.i32.i8($i57);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6093, 3} true;
  assume {:verifier.code 0} true;
  call $i59 := write_short_reg($p8, 27, $i58);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6094, 65} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($add.ref($p8, $mul.ref(0, 288)), $mul.ref(184, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6094, 13} true;
  assume {:verifier.code 0} true;
  call $i61 := wait_for_completion_interruptible_timeout($p60, 1250);
  call {:cexpr "tmp___0"} boogie_si_record_i64($i61);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6095, 9} true;
  assume {:verifier.code 0} true;
  $i62 := $trunc.i64.i32($i61);
  call {:cexpr "ret"} boogie_si_record_i32($i62);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6096, 11} true;
  assume {:verifier.code 0} true;
  $i63 := $eq.i32($i62, $sub.i32(0, 512));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6096, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i63 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6097, 5} true;
  assume {:verifier.code 0} true;
  $i38 := $i62;
  goto $bb6;
$bb15:
  assume !(($i63 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6100, 11} true;
  assume {:verifier.code 0} true;
  $i64 := $eq.i32($i62, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6100, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i64} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i64 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6101, 49} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($add.ref($p8, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6101, 49} true;
  assume {:verifier.code 0} true;
  $p66 := $load.ref($M.0, $p65);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6101, 55} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($add.ref($p66, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6101, 5} true;
  assume {:verifier.code 0} true;
  call $i68 := dev_warn.ref.ref($p67, .str.25);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6103, 5} true;
  assume {:verifier.code 0} true;
  $i38 := $sub.i32(0, 110);
  goto $bb6;
$bb18:
  assume !(($i64 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6106, 9} true;
  assume {:verifier.code 0} true;
  call $i69 := read_short_reg($p8, 36, $p2);
  call {:cexpr "ret"} boogie_si_record_i32($i69);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6107, 11} true;
  assume {:verifier.code 0} true;
  $i70 := $ne.i32($i69, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6107, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i70} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i70 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6108, 5} true;
  assume {:verifier.code 0} true;
  $i38 := $i69;
  goto $bb6;
$bb21:
  assume !(($i70 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6111, 13} true;
  assume {:verifier.code 0} true;
  $i71 := $load.i8($M.14, $p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6111, 7} true;
  assume {:verifier.code 0} true;
  $i72 := $zext.i8.i32($i71);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6111, 17} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6111:17: warning: over-approximating bitwise operation and;
  $i73 := $and.i32($i72, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6111, 17} true;
  assume {:verifier.code 0} true;
  $i74 := $ne.i32($i73, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6111, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i74} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i74 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6112, 20} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6112, 28} true;
  assume {:verifier.code 0} true;
  $M.17 := $store.ref($M.17, $p75, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6113, 20} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6113, 29} true;
  assume {:verifier.code 0} true;
  $M.18 := $store.ref($M.18, $p76, .str.23);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6114, 20} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6114, 29} true;
  assume {:verifier.code 0} true;
  $M.19 := $store.ref($M.19, $p77, .str.4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6115, 20} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6115, 27} true;
  assume {:verifier.code 0} true;
  $M.20 := $store.ref($M.20, $p78, .str.26);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6116, 20} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6116, 20} true;
  assume {:verifier.code 0} true;
  $p80 := $bitcast.ref.ref($p79);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6116, 27} true;
  assume {:verifier.code 0} true;
  $i81 := $load.i24($M.21, $p80);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6116, 27} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6116:27: warning: over-approximating bitwise operation and;
  $i82 := $and.i24($i81, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6116, 27} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6116:27: warning: over-approximating bitwise operation or;
  $i83 := $or.i24($i82, 452);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6116, 27} true;
  assume {:verifier.code 0} true;
  $M.21 := $store.i24($M.21, $p80, $i83);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6117, 20} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6117, 26} true;
  assume {:verifier.code 0} true;
  $M.22 := $store.i8($M.22, $p84, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6118, 57} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6118, 57} true;
  assume {:verifier.code 0} true;
  $i86 := $load.i8($M.22, $p85);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6118, 35} true;
  assume {:verifier.code 0} true;
  $i87 := $zext.i8.i64($i86);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6118, 63} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6118:63: warning: over-approximating bitwise operation and;
  $i88 := $and.i64($i87, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6118, 15} true;
  assume {:verifier.code 0} true;
  call $i89 := ldv__builtin_expect($i88, 0);
  call {:cexpr "tmp___1"} boogie_si_record_i64($i89);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6119, 17} true;
  assume {:verifier.code 0} true;
  $i90 := $ne.i64($i89, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6119, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i90} true;
  goto $bb25, $bb26;
$bb24:
  assume !(($i74 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6126, 20} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($add.ref($p5, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6126, 28} true;
  assume {:verifier.code 0} true;
  $M.17 := $store.ref($M.17, $p96, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6127, 20} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($add.ref($p5, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6127, 29} true;
  assume {:verifier.code 0} true;
  $M.18 := $store.ref($M.18, $p97, .str.23);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6128, 20} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($add.ref($p5, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6128, 29} true;
  assume {:verifier.code 0} true;
  $M.19 := $store.ref($M.19, $p98, .str.4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6129, 20} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($add.ref($p5, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6129, 27} true;
  assume {:verifier.code 0} true;
  $M.20 := $store.ref($M.20, $p99, .str.27);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6130, 20} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($add.ref($p5, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6130, 20} true;
  assume {:verifier.code 0} true;
  $p101 := $bitcast.ref.ref($p100);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6130, 27} true;
  assume {:verifier.code 0} true;
  $i102 := $load.i24($M.21, $p101);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6130, 27} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6130:27: warning: over-approximating bitwise operation and;
  $i103 := $and.i24($i102, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6130, 27} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6130:27: warning: over-approximating bitwise operation or;
  $i104 := $or.i24($i103, 455);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6130, 27} true;
  assume {:verifier.code 0} true;
  $M.21 := $store.i24($M.21, $p101, $i104);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6131, 20} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($add.ref($p5, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6131, 26} true;
  assume {:verifier.code 0} true;
  $M.22 := $store.i8($M.22, $p105, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6132, 57} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($add.ref($p5, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6132, 57} true;
  assume {:verifier.code 0} true;
  $i107 := $load.i8($M.22, $p106);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6132, 35} true;
  assume {:verifier.code 0} true;
  $i108 := $zext.i8.i64($i107);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6132, 63} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6132:63: warning: over-approximating bitwise operation and;
  $i109 := $and.i64($i108, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6132, 15} true;
  assume {:verifier.code 0} true;
  call $i110 := ldv__builtin_expect($i109, 0);
  call {:cexpr "tmp___2"} boogie_si_record_i64($i110);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6133, 17} true;
  assume {:verifier.code 0} true;
  $i111 := $ne.i64($i110, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6133, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i111} true;
  goto $bb29, $bb30;
$bb25:
  assume ($i90 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6120, 78} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($add.ref($p8, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6120, 78} true;
  assume {:verifier.code 0} true;
  $p92 := $load.ref($M.0, $p91);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6120, 84} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($add.ref($p92, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6120, 7} true;
  assume {:verifier.code 0} true;
  call $i94 := __dynamic_dev_dbg.ref.ref.ref($p4, $p93, .str.26);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6122, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i90 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6125, 3} true;
  assume {:verifier.code 0} true;
  $i95 := $sub.i32(0, 70);
  goto $bb28;
$bb28:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6111, 19} true;
  assume {:verifier.code 0} true;
  $i38 := $i95;
  goto $bb6;
$bb29:
  assume ($i111 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6134, 78} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($add.ref($p8, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6134, 78} true;
  assume {:verifier.code 0} true;
  $p113 := $load.ref($M.0, $p112);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6134, 84} true;
  assume {:verifier.code 0} true;
  $p114 := $add.ref($add.ref($p113, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6134, 7} true;
  assume {:verifier.code 0} true;
  call $i115 := __dynamic_dev_dbg.ref.ref.ref($p5, $p114, .str.27);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6136, 5} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume !(($i111 == 1));
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:verifier.code 0} true;
  $i95 := $i69;
  goto $bb28;
}
const mrf24j40_ed: ref;
axiom (mrf24j40_ed == $sub.ref(0, 152945));
procedure  mrf24j40_ed($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6146, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6146, 3} true;
  assume {:verifier.code 0} true;
  call $i2 := printk.ref(.str.30);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6147, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p1, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6148, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const mrf24j40_stop: ref;
axiom (mrf24j40_stop == $sub.ref(0, 153977));
procedure  mrf24j40_stop($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i24;
  var $i13: i24;
  var $i14: i24;
  var $p15: ref;
  var $p16: ref;
  var $i17: i8;
  var $i18: i64;
  var $i19: i64;
  var $i20: i64;
  var $i21: i1;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $i25: i32;
  var $i26: i32;
  var $i27: i1;
  var $i28: i8;
  var $i29: i32;
  var $i30: i32;
  var $i31: i8;
  var $i32: i8;
  var $i33: i32;
  var $i34: i8;
  var $i35: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6190, 36} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume true;
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6190, 36} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p0, $mul.ref(0, 56)), $mul.ref(40, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6190, 36} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6190, 12} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6191, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6191, 22} true;
  assume {:verifier.code 0} true;
  $M.17 := $store.ref($M.17, $p6, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6192, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6192, 23} true;
  assume {:verifier.code 0} true;
  $M.18 := $store.ref($M.18, $p7, .str.31);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6193, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6193, 23} true;
  assume {:verifier.code 0} true;
  $M.19 := $store.ref($M.19, $p8, .str.4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6194, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6194, 21} true;
  assume {:verifier.code 0} true;
  $M.20 := $store.ref($M.20, $p9, .str.32);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6195, 14} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6195, 14} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6195, 21} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i24($M.21, $p11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6195, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6195:21: warning: over-approximating bitwise operation and;
  $i13 := $and.i24($i12, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6195, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6195:21: warning: over-approximating bitwise operation or;
  $i14 := $or.i24($i13, 492);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6195, 21} true;
  assume {:verifier.code 0} true;
  $M.21 := $store.i24($M.21, $p11, $i14);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6196, 14} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6196, 20} true;
  assume {:verifier.code 0} true;
  $M.22 := $store.i8($M.22, $p15, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6197, 47} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6197, 47} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i8($M.22, $p16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6197, 29} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i8.i64($i17);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6197, 53} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6197:53: warning: over-approximating bitwise operation and;
  $i19 := $and.i64($i18, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6197, 9} true;
  assume {:verifier.code 0} true;
  call $i20 := ldv__builtin_expect($i19, 0);
  call {:cexpr "tmp"} boogie_si_record_i64($i20);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6198, 11} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i64($i20, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6198, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i21 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6199, 72} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p5, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6199, 72} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.0, $p22);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6199, 78} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p23, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6199, 5} true;
  assume {:verifier.code 0} true;
  call $i25 := __dynamic_dev_dbg.ref.ref.ref($p2, $p24, .str.32);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6201, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6203, 9} true;
  assume {:verifier.code 0} true;
  call $i26 := read_short_reg($p5, 50, $p1);
  call {:cexpr "ret"} boogie_si_record_i32($i26);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6204, 11} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i32($i26, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6204, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i27 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6205, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6212, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6208, 30} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i8($M.14, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6208, 15} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.i8.i32($i28);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6208, 34} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6208:34: warning: over-approximating bitwise operation or;
  $i30 := $or.i32($i29, 9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6208, 9} true;
  assume {:verifier.code 0} true;
  $i31 := $trunc.i32.i8($i30);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6208, 7} true;
  assume {:verifier.code 0} true;
  $M.14 := $store.i8($M.14, $p1, $i31);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6209, 37} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i8($M.14, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6209, 31} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i8.i32($i32);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6209, 31} true;
  assume {:verifier.code 0} true;
  $i34 := $trunc.i32.i8($i33);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6209, 3} true;
  assume {:verifier.code 0} true;
  call $i35 := write_short_reg($p5, 50, $i34);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6210, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
}
const mrf24j40_driver_exit: ref;
axiom (mrf24j40_driver_exit == $sub.ref(0, 155009));
procedure  mrf24j40_driver_exit()
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6636, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6636, 3} true;
  assume {:verifier.code 0} true;
  call spi_unregister_driver(mrf24j40_driver);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6637, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const mrf24j40_driver_init: ref;
axiom (mrf24j40_driver_init == $sub.ref(0, 156041));
procedure  mrf24j40_driver_init()
  returns ($r: i32)
{
  var $i0: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6629, 9} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6629, 9} true;
  assume {:verifier.code 0} true;
  call $i0 := spi_register_driver(mrf24j40_driver);
  call {:cexpr "tmp"} boogie_si_record_i32($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6630, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const mrf24j40_probe: ref;
axiom (mrf24j40_probe == $sub.ref(0, 157073));
procedure  mrf24j40_probe($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i32;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i64;
  var $i19: i1;
  var $p20: ref;
  var $p21: ref;
  var $i22: i32;
  var $i23: i1;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $i33: i64;
  var $i34: i1;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $i60: i24;
  var $i61: i24;
  var $i62: i24;
  var $p63: ref;
  var $p64: ref;
  var $i65: i8;
  var $i66: i64;
  var $i67: i64;
  var $i68: i64;
  var $i69: i1;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $i73: i32;
  var $p74: ref;
  var $p75: ref;
  var $i76: i32;
  var $i77: i1;
  var $i79: i32;
  var $i80: i32;
  var $i81: i32;
  var $i82: i32;
  var $i83: i32;
  var $i84: i32;
  var $i85: i32;
  var $i86: i32;
  var $i87: i32;
  var $i88: i32;
  var $i89: i32;
  var $i90: i32;
  var $i91: i32;
  var $i92: i32;
  var $i93: i32;
  var $i94: i32;
  var $i95: i1;
  var $i97: i8;
  var $i98: i32;
  var $i99: i32;
  var $i100: i8;
  var $i101: i8;
  var $i102: i32;
  var $i103: i8;
  var $i104: i32;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $i109: i32;
  var $p110: ref;
  var $i111: i32;
  var $i112: i1;
  var $p113: ref;
  var $p114: ref;
  var $p115: ref;
  var $i116: i32;
  var $i96: i32;
  var $p118: ref;
  var $p119: ref;
  var $i78: i32;
  var $p120: ref;
  var $p121: ref;
  var $i12: i32;
  var $i117: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6503, 51} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume true;
  assume true;
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6503, 51} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p0, $mul.ref(0, 1504)), $mul.ref(1440, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6503, 51} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6503, 3} true;
  assume {:verifier.code 0} true;
  call $i6 := printk.ref.i32(.str.34, $i5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6504, 29} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p0, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6504, 9} true;
  assume {:verifier.code 0} true;
  call $p8 := devm_kzalloc($p7, 288, 208);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6505, 12} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6506, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6506, 30} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i64($i10, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6506, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6507, 5} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i32(0, 12);
  goto $bb3;
$bb2:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6590, 3} true;
  assume {:verifier.code 0} true;
  $i117 := $i12;
  goto $bb29;
$bb4:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6510, 33} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p0, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6510, 13} true;
  assume {:verifier.code 0} true;
  call $p14 := devm_kzalloc($p13, 3, 208);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6511, 11} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p9, $mul.ref(0, 288)), $mul.ref(280, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6511, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p15, $p14);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6512, 31} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p9, $mul.ref(0, 288)), $mul.ref(280, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6512, 31} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6512, 7} true;
  assume {:verifier.code 0} true;
  $i18 := $p2i.ref.i64($p17);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6512, 35} true;
  assume {:verifier.code 0} true;
  $i19 := $eq.i64($i18, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6512, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i19 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6513, 5} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i32(0, 12);
  goto $bb3;
$bb6:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6516, 8} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p0, $mul.ref(0, 1504)), $mul.ref(1438, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6516, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p20, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6517, 12} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p0, $mul.ref(0, 1504)), $mul.ref(1432, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6517, 12} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6517, 25} true;
  assume {:verifier.code 0} true;
  $i23 := $ugt.i32($i22, 10000000);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6517, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i23 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6518, 10} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p0, $mul.ref(0, 1504)), $mul.ref(1432, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6518, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p24, 10000000);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6519, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6521, 26} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p9, $mul.ref(0, 288)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6521, 3} true;
  assume {:verifier.code 0} true;
  call __mutex_init($p25, .str.35, $p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6522, 29} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p9, $mul.ref(0, 288)), $mul.ref(184, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6522, 3} true;
  assume {:verifier.code 0} true;
  call init_completion($p26);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6523, 11} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p9, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6523, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p27, $p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6524, 24} true;
  assume {:verifier.code 0} true;
  $p28 := $bitcast.ref.ref($p9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6524, 3} true;
  assume {:verifier.code 0} true;
  call spi_set_drvdata($p0, $p28);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6525, 17} true;
  assume {:verifier.code 0} true;
  call $p29 := ieee802154_alloc_device(0, mrf24j40_ops);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6525, 11} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p9, $mul.ref(0, 288)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6525, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p30, $p29);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6526, 31} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($add.ref($p9, $mul.ref(0, 288)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6526, 31} true;
  assume {:verifier.code 0} true;
  $p32 := $load.ref($M.0, $p31);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6526, 7} true;
  assume {:verifier.code 0} true;
  $i33 := $p2i.ref.i64($p32);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6526, 35} true;
  assume {:verifier.code 0} true;
  $i34 := $eq.i64($i33, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6526, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i34 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6527, 5} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i32(0, 12);
  goto $bb3;
$bb12:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6530, 25} true;
  assume {:verifier.code 0} true;
  $p35 := $bitcast.ref.ref($p9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6530, 12} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p9, $mul.ref(0, 288)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6530, 12} true;
  assume {:verifier.code 0} true;
  $p37 := $load.ref($M.0, $p36);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6530, 18} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p37, $mul.ref(0, 56)), $mul.ref(40, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6530, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p38, $p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6531, 38} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($add.ref($p9, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6531, 38} true;
  assume {:verifier.code 0} true;
  $p40 := $load.ref($M.0, $p39);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6531, 44} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($add.ref($p40, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6531, 12} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($add.ref($p9, $mul.ref(0, 288)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6531, 12} true;
  assume {:verifier.code 0} true;
  $p43 := $load.ref($M.0, $p42);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6531, 18} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($add.ref($p43, $mul.ref(0, 56)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6531, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p44, $p40);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6532, 13} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($add.ref($p9, $mul.ref(0, 288)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6532, 13} true;
  assume {:verifier.code 0} true;
  $p46 := $load.ref($M.0, $p45);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6532, 19} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($add.ref($p46, $mul.ref(0, 56)), $mul.ref(48, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6532, 19} true;
  assume {:verifier.code 0} true;
  $p48 := $load.ref($M.0, $p47);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6532, 25} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($add.ref($p48, $mul.ref(0, 1808)), $mul.ref(172, 1));
  $p50 := $add.ref($add.ref($add.ref($p48, $mul.ref(0, 1808)), $mul.ref(172, 1)), $mul.ref(0, 4));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6532, 47} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p50, 134215680);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6533, 12} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($add.ref($p9, $mul.ref(0, 288)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6533, 12} true;
  assume {:verifier.code 0} true;
  $p52 := $load.ref($M.0, $p51);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6533, 18} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($add.ref($p52, $mul.ref(0, 56)), $mul.ref(4, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6533, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p53, 3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6534, 14} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6534, 22} true;
  assume {:verifier.code 0} true;
  $M.17 := $store.ref($M.17, $p54, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6535, 14} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6535, 23} true;
  assume {:verifier.code 0} true;
  $M.18 := $store.ref($M.18, $p55, .str.36);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6536, 14} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6536, 23} true;
  assume {:verifier.code 0} true;
  $M.19 := $store.ref($M.19, $p56, .str.4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6537, 14} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6537, 21} true;
  assume {:verifier.code 0} true;
  $M.20 := $store.ref($M.20, $p57, .str.37);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6538, 14} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6538, 14} true;
  assume {:verifier.code 0} true;
  $p59 := $bitcast.ref.ref($p58);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6538, 21} true;
  assume {:verifier.code 0} true;
  $i60 := $load.i24($M.21, $p59);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6538, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6538:21: warning: over-approximating bitwise operation and;
  $i61 := $and.i24($i60, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6538, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6538:21: warning: over-approximating bitwise operation or;
  $i62 := $or.i24($i61, 725);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6538, 21} true;
  assume {:verifier.code 0} true;
  $M.21 := $store.i24($M.21, $p59, $i62);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6539, 14} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6539, 20} true;
  assume {:verifier.code 0} true;
  $M.22 := $store.i8($M.22, $p63, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6540, 51} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6540, 51} true;
  assume {:verifier.code 0} true;
  $i65 := $load.i8($M.22, $p64);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6540, 33} true;
  assume {:verifier.code 0} true;
  $i66 := $zext.i8.i64($i65);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6540, 57} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6540:57: warning: over-approximating bitwise operation and;
  $i67 := $and.i64($i66, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6540, 13} true;
  assume {:verifier.code 0} true;
  call $i68 := ldv__builtin_expect($i67, 0);
  call {:cexpr "tmp___1"} boogie_si_record_i64($i68);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6541, 15} true;
  assume {:verifier.code 0} true;
  $i69 := $ne.i64($i68, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6541, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i69} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i69 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6542, 72} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($add.ref($p9, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6542, 72} true;
  assume {:verifier.code 0} true;
  $p71 := $load.ref($M.0, $p70);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6542, 78} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($add.ref($p71, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6542, 5} true;
  assume {:verifier.code 0} true;
  call $i73 := __dynamic_dev_dbg.ref.ref.ref($p3, $p72, .str.37);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6544, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i69 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6546, 44} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($add.ref($p9, $mul.ref(0, 288)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6546, 44} true;
  assume {:verifier.code 0} true;
  $p75 := $load.ref($M.0, $p74);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6546, 9} true;
  assume {:verifier.code 0} true;
  call $i76 := ieee802154_register_device($p75);
  call {:cexpr "ret"} boogie_si_record_i32($i76);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6547, 11} true;
  assume {:verifier.code 0} true;
  $i77 := $ne.i32($i76, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6547, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i77} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i77 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6548, 5} true;
  assume {:verifier.code 0} true;
  $i78 := $i76;
  goto $bb19;
$bb18:
  assume !(($i77 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6588, 34} true;
  assume {:verifier.code 0} true;
  $p120 := $add.ref($add.ref($p9, $mul.ref(0, 288)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6588, 34} true;
  assume {:verifier.code 0} true;
  $p121 := $load.ref($M.0, $p120);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6588, 3} true;
  assume {:verifier.code 0} true;
  call ieee802154_free_device($p121);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6588, 3} true;
  assume {:verifier.code 0} true;
  $i12 := $i78;
  goto $bb3;
$bb20:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6551, 3} true;
  assume {:verifier.code 0} true;
  call $i79 := write_short_reg($p9, 42, 7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6552, 3} true;
  assume {:verifier.code 0} true;
  call $i80 := write_short_reg($p9, 24, $sub.i8(0, 104));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6553, 3} true;
  assume {:verifier.code 0} true;
  call $i81 := write_short_reg($p9, 46, $sub.i8(0, 107));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6554, 3} true;
  assume {:verifier.code 0} true;
  call $i82 := write_long_reg($p9, 512, 3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6555, 3} true;
  assume {:verifier.code 0} true;
  call $i83 := write_long_reg($p9, 513, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6556, 3} true;
  assume {:verifier.code 0} true;
  call $i84 := write_long_reg($p9, 514, $sub.i8(0, 128));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6557, 3} true;
  assume {:verifier.code 0} true;
  call $i85 := write_long_reg($p9, 518, $sub.i8(0, 112));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6558, 3} true;
  assume {:verifier.code 0} true;
  call $i86 := write_long_reg($p9, 519, $sub.i8(0, 128));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6559, 3} true;
  assume {:verifier.code 0} true;
  call $i87 := write_long_reg($p9, 520, 16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6560, 3} true;
  assume {:verifier.code 0} true;
  call $i88 := write_long_reg($p9, 544, 33);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6561, 3} true;
  assume {:verifier.code 0} true;
  call $i89 := write_short_reg($p9, 58, $sub.i8(0, 128));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6562, 3} true;
  assume {:verifier.code 0} true;
  call $i90 := write_short_reg($p9, 63, 96);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6563, 3} true;
  assume {:verifier.code 0} true;
  call $i91 := write_short_reg($p9, 62, 64);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6564, 3} true;
  assume {:verifier.code 0} true;
  call $i92 := write_short_reg($p9, 54, 4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6565, 3} true;
  assume {:verifier.code 0} true;
  call $i93 := write_short_reg($p9, 54, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6566, 3} true;
  assume {:verifier.code 0} true;
  call __const_udelay(824640);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6567, 9} true;
  assume {:verifier.code 0} true;
  call $i94 := read_short_reg($p9, 0, $p1);
  call {:cexpr "ret"} boogie_si_record_i32($i94);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6568, 11} true;
  assume {:verifier.code 0} true;
  $i95 := $ne.i32($i94, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6568, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i95} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i95 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6569, 5} true;
  assume {:verifier.code 0} true;
  $i96 := $i94;
  goto $bb23;
$bb22:
  assume !(($i95 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6586, 40} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($add.ref($p9, $mul.ref(0, 288)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6586, 40} true;
  assume {:verifier.code 0} true;
  $p119 := $load.ref($M.0, $p118);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6586, 3} true;
  assume {:verifier.code 0} true;
  call ieee802154_unregister_device($p119);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6586, 3} true;
  assume {:verifier.code 0} true;
  $i78 := $i96;
  goto $bb19;
$bb24:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6572, 24} true;
  assume {:verifier.code 0} true;
  $i97 := $load.i8($M.14, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6572, 9} true;
  assume {:verifier.code 0} true;
  $i98 := $zext.i8.i32($i97);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6572, 28} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6572:28: warning: over-approximating bitwise operation and;
  $i99 := $and.i32($i98, 252);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6572, 9} true;
  assume {:verifier.code 0} true;
  $i100 := $trunc.i32.i8($i99);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6572, 7} true;
  assume {:verifier.code 0} true;
  $M.14 := $store.i8($M.14, $p1, $i100);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6573, 36} true;
  assume {:verifier.code 0} true;
  $i101 := $load.i8($M.14, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6573, 30} true;
  assume {:verifier.code 0} true;
  $i102 := $zext.i8.i32($i101);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6573, 30} true;
  assume {:verifier.code 0} true;
  $i103 := $trunc.i32.i8($i102);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6573, 3} true;
  assume {:verifier.code 0} true;
  call $i104 := write_short_reg($p9, 0, $i103);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6574, 53} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($add.ref($p0, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6574, 13} true;
  assume {:verifier.code 0} true;
  call $p106 := dev_name($p105);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6575, 49} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($add.ref($p0, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6575, 74} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($add.ref($p0, $mul.ref(0, 1504)), $mul.ref(1440, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6575, 74} true;
  assume {:verifier.code 0} true;
  $i109 := $load.i32($M.0, $p108);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6577, 75} true;
  assume {:verifier.code 0} true;
  $p110 := $bitcast.ref.ref($p9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6575, 9} true;
  assume {:verifier.code 0} true;
  call $i111 := ldv_devm_request_threaded_irq_15($p107, $i109, $0.ref, mrf24j40_isr, 8200, $p106, $p110);
  call {:cexpr "ret"} boogie_si_record_i32($i111);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6578, 11} true;
  assume {:verifier.code 0} true;
  $i112 := $ne.i32($i111, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6578, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i112} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i112 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6579, 48} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($add.ref($p9, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6579, 48} true;
  assume {:verifier.code 0} true;
  $p114 := $load.ref($M.0, $p113);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6579, 54} true;
  assume {:verifier.code 0} true;
  $p115 := $add.ref($add.ref($p114, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6579, 5} true;
  assume {:verifier.code 0} true;
  call $i116 := dev_err.ref.ref($p115, .str.38);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6580, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i112 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6583, 3} true;
  assume {:verifier.code 0} true;
  $i96 := $i111;
  goto $bb23;
$bb28:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6583, 3} true;
  assume {:verifier.code 0} true;
  $i117 := 0;
  goto $bb29;
$bb29:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6592, 1} true;
  assume {:verifier.code 0} true;
  $r := $i117;
  $exn := false;
  return;
}
const mrf24j40_remove: ref;
axiom (mrf24j40_remove == $sub.ref(0, 158105));
procedure  mrf24j40_remove($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i24;
  var $i11: i24;
  var $i12: i24;
  var $p13: ref;
  var $p14: ref;
  var $i15: i8;
  var $i16: i64;
  var $i17: i64;
  var $i18: i64;
  var $i19: i1;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $i23: i32;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6600, 9} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6600, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := spi_get_drvdata($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6601, 12} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6602, 14} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6602, 22} true;
  assume {:verifier.code 0} true;
  $M.17 := $store.ref($M.17, $p4, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6603, 14} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6603, 23} true;
  assume {:verifier.code 0} true;
  $M.18 := $store.ref($M.18, $p5, .str.40);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6604, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6604, 23} true;
  assume {:verifier.code 0} true;
  $M.19 := $store.ref($M.19, $p6, .str.4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6605, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6605, 21} true;
  assume {:verifier.code 0} true;
  $M.20 := $store.ref($M.20, $p7, .str.41);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6606, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6606, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6606, 21} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i24($M.21, $p9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6606, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6606:21: warning: over-approximating bitwise operation and;
  $i11 := $and.i24($i10, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6606, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6606:21: warning: over-approximating bitwise operation or;
  $i12 := $or.i24($i11, 784);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6606, 21} true;
  assume {:verifier.code 0} true;
  $M.21 := $store.i24($M.21, $p9, $i12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6607, 14} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6607, 20} true;
  assume {:verifier.code 0} true;
  $M.22 := $store.i8($M.22, $p13, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6608, 51} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6608, 51} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i8($M.22, $p14);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6608, 33} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i8.i64($i15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6608, 57} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:6608:57: warning: over-approximating bitwise operation and;
  $i17 := $and.i64($i16, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6608, 13} true;
  assume {:verifier.code 0} true;
  call $i18 := ldv__builtin_expect($i17, 0);
  call {:cexpr "tmp___0"} boogie_si_record_i64($i18);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6609, 15} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i64($i18, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6609, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i19 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6610, 72} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p3, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6610, 72} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.0, $p20);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6610, 78} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p21, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6610, 5} true;
  assume {:verifier.code 0} true;
  call $i23 := __dynamic_dev_dbg.ref.ref.ref($p1, $p22, .str.41);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6612, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6614, 40} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p3, $mul.ref(0, 288)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6614, 40} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.0, $p24);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6614, 3} true;
  assume {:verifier.code 0} true;
  call ieee802154_unregister_device($p25);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6615, 34} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p3, $mul.ref(0, 288)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6615, 34} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.0, $p26);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6615, 3} true;
  assume {:verifier.code 0} true;
  call ieee802154_free_device($p27);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 6616, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const ldv_check_final_state: ref;
axiom (ldv_check_final_state == $sub.ref(0, 159137));
procedure  ldv_check_final_state()
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i1;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7460, 30} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7460, 30} true;
  assume {:verifier.code 0} true;
  $p0 := $M.24;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7460, 13} true;
  assume {:verifier.code 0} true;
  call $i1 := ldv_set_is_empty($p0);
  call {:cexpr "tmp___7"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7461, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7461, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7462, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7463, 5} true;
  assume {:verifier.code 0} true;
  call ldv_error();
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7465, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_set_is_empty: ref;
axiom (ldv_set_is_empty == $sub.ref(0, 160169));
procedure  ldv_set_is_empty($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7349, 11} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7349, 11} true;
  assume {:verifier.code 0} true;
  $i1 := $M.25;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7349, 22} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i32($i1, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7349, 22} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7349, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const spi_get_drvdata: ref;
axiom (spi_get_drvdata == $sub.ref(0, 161201));
procedure  spi_get_drvdata($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5623, 56} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5623, 56} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5623, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := dev_get_drvdata($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5624, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const ieee802154_unregister_device: ref;
axiom (ieee802154_unregister_device == $sub.ref(0, 162233));
procedure  ieee802154_unregister_device($p0: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7518, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7518, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ieee802154_free_device: ref;
axiom (ieee802154_free_device == $sub.ref(0, 163265));
procedure  ieee802154_free_device($p0: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7508, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7508, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const dev_get_drvdata: ref;
axiom (dev_get_drvdata == $sub.ref(0, 164297));
procedure  dev_get_drvdata($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5442, 24} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5442, 24} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 1424)), $mul.ref(520, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5442, 24} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5442, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const printk: ref;
axiom (printk == $sub.ref(0, 165329));
procedure  printk.ref($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7536, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7536, 10} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7536, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
procedure  printk.ref.i32($p0: ref, p.1: i32)
  returns ($r: i32)
{
  var $i1: i32;
$bb1:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7536, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7536, 10} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7536, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const devm_kzalloc: ref;
axiom (devm_kzalloc == $sub.ref(0, 166361));
procedure  devm_kzalloc($p0: ref, $i1: i64, $i2: i32)
  returns ($r: ref)
{
  var $i3: i32;
  var $p4: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5423, 37} true;
  assume {:verifier.code 0} true;
  call {:cexpr "devm_kzalloc:arg:size"} boogie_si_record_i64($i1);
  call {:cexpr "devm_kzalloc:arg:gfp"} boogie_si_record_i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5423, 37} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5423:37: warning: over-approximating bitwise operation or;
  $i3 := $or.i32($i2, 32768);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5423, 9} true;
  assume {:verifier.code 0} true;
  call $p4 := devm_kmalloc($p0, $i1, $i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5424, 3} true;
  assume {:verifier.code 0} true;
  $r := $p4;
  $exn := false;
  return;
}
const __mutex_init: ref;
axiom (__mutex_init == $sub.ref(0, 167393));
procedure  __mutex_init($p0: ref, $p1: ref, $p2: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7479, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7479, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const init_completion: ref;
axiom (init_completion == $sub.ref(0, 168425));
procedure  init_completion($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5394, 6} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5394, 6} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 96)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5394, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p2, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5395, 30} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p0, $mul.ref(0, 96)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5395, 3} true;
  assume {:verifier.code 0} true;
  call __init_waitqueue_head($p3, .str.39, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5396, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const spi_set_drvdata: ref;
axiom (spi_set_drvdata == $sub.ref(0, 169457));
procedure  spi_set_drvdata($p0: ref, $p1: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5615, 26} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5615, 26} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5615, 3} true;
  assume {:verifier.code 0} true;
  call dev_set_drvdata($p2, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5616, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ieee802154_alloc_device: ref;
axiom (ieee802154_alloc_device == $sub.ref(0, 170489));
procedure  ieee802154_alloc_device($i0: i64, $p1: ref)
  returns ($r: ref)
{
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7505, 35} true;
  assume {:verifier.code 0} true;
  call {:cexpr "ieee802154_alloc_device:arg:arg0"} boogie_si_record_i64($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7505, 35} true;
  assume {:verifier.code 0} true;
  call $p2 := external_alloc();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7505, 10} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7505, 3} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const ieee802154_register_device: ref;
axiom (ieee802154_register_device == $sub.ref(0, 171521));
procedure  ieee802154_register_device($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7512, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7512, 10} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7512, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const write_long_reg: ref;
axiom (write_long_reg == $sub.ref(0, 172553));
procedure  write_long_reg($p0: ref, $i1: i16, $i2: i8)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i8;
  var $i28: i8;
  var $p29: ref;
  var $i30: i8;
  var $i31: i8;
  var $p32: ref;
  var $i33: i8;
  var $i34: i8;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $i42: i32;
  var $i43: i32;
  var $i44: i16;
  var $i45: i32;
  var $i46: i32;
  var $i47: i16;
  var $p48: ref;
  var $i49: i32;
  var $i50: i32;
  var $i51: i8;
  var $p52: ref;
  var $p53: ref;
  var $i54: i8;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $i63: i32;
  var $i64: i1;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $i68: i32;
  var $i69: i32;
  var $p70: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5819, 39} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(88, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(96, $zext.i32.i64(1)));
  call {:cexpr "write_long_reg:arg:reg"} boogie_si_record_i16($i1);
  call {:cexpr "write_long_reg:arg:val"} boogie_si_record_i8($i2);
  assume true;
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5819, 39} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(280, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5819, 39} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5819, 8} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5819, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p7, $p6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5820, 33} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(280, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5820, 33} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5820, 8} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5820, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p10, $p9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5821, 8} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5821, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p11, 3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5822, 8} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5822, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p12, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5823, 8} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5823, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p13, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5824, 8} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p15 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5824, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p15, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5825, 8} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p17 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5825, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p17, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5826, 8} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p19 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(12, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5826, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p19, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5827, 8} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p21 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5827, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p21, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5828, 8} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p23 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5828, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p23, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5829, 8} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p25 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(12, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5829, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p25, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5830, 8} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5830, 18} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i8($M.0, $p26);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5830, 18} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5830:18: warning: over-approximating bitwise operation and;
  $i28 := $and.i8($i27, $sub.i8(0, 2));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5830, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p26, $i28);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5831, 8} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5831, 17} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i8($M.0, $p29);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5831, 17} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5831:17: warning: over-approximating bitwise operation and;
  $i31 := $and.i8($i30, $sub.i8(0, 15));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5831, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p29, $i31);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5832, 8} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5832, 17} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i8($M.0, $p32);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5832, 17} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5832:17: warning: over-approximating bitwise operation and;
  $i34 := $and.i8($i33, $sub.i8(0, 113));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5832, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p32, $i34);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5833, 8} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(73, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5833, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p35, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5834, 8} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(74, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5834, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p36, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5835, 8} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(76, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5835, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p37, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5836, 8} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(80, 1));
  $p39 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(80, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5836, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p39, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5837, 8} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(80, 1));
  $p41 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 96)), $mul.ref(80, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5837, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p41, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5838, 3} true;
  assume {:verifier.code 0} true;
  call spi_message_init($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5839, 3} true;
  assume {:verifier.code 0} true;
  call spi_message_add_tail($p4, $p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5840, 32} true;
  assume {:verifier.code 0} true;
  $i42 := $zext.i16.i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5840, 42} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5840:42: warning: over-approximating bitwise operation shl;
  $i43 := $shl.i32($i42, 5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5840, 23} true;
  assume {:verifier.code 0} true;
  $i44 := $trunc.i32.i16($i43);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5840, 16} true;
  assume {:verifier.code 0} true;
  $i45 := $sext.i16.i32($i44);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5840, 49} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5840:49: warning: over-approximating bitwise operation or;
  $i46 := $or.i32($i45, $sub.i32(0, 32752));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5840, 9} true;
  assume {:verifier.code 0} true;
  $i47 := $trunc.i32.i16($i46);
  call {:cexpr "cmd"} boogie_si_record_i16($i47);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5841, 31} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5841, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p48, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5842, 26} true;
  assume {:verifier.code 0} true;
  $i49 := $zext.i16.i32($i47);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5842, 36} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5842:36: warning: over-approximating bitwise operation ashr;
  $i50 := $ashr.i32($i49, 8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5842, 20} true;
  assume {:verifier.code 0} true;
  $i51 := $trunc.i32.i8($i50);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5842, 13} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(280, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5842, 13} true;
  assume {:verifier.code 0} true;
  $p53 := $load.ref($M.0, $p52);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5842, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p53, $i51);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5843, 26} true;
  assume {:verifier.code 0} true;
  $i54 := $trunc.i16.i8($i47);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5843, 13} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(280, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5843, 13} true;
  assume {:verifier.code 0} true;
  $p56 := $load.ref($M.0, $p55);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5843, 17} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p56, $mul.ref(1, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5843, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p57, $i54);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5844, 13} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(280, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5844, 13} true;
  assume {:verifier.code 0} true;
  $p59 := $load.ref($M.0, $p58);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5844, 17} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p59, $mul.ref(2, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5844, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p60, $i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5845, 26} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5845, 26} true;
  assume {:verifier.code 0} true;
  $p62 := $load.ref($M.0, $p61);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5845, 9} true;
  assume {:verifier.code 0} true;
  call $i63 := spi_sync($p62, $p3);
  call {:cexpr "ret"} boogie_si_record_i32($i63);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5846, 11} true;
  assume {:verifier.code 0} true;
  $i64 := $ne.i32($i63, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5846, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i64} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i64 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5847, 48} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5847, 48} true;
  assume {:verifier.code 0} true;
  $p66 := $load.ref($M.0, $p65);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5847, 54} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($add.ref($p66, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5848, 13} true;
  assume {:verifier.code 0} true;
  $i68 := $zext.i16.i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5847, 5} true;
  assume {:verifier.code 0} true;
  call $i69 := dev_err.ref.ref.i32($p67, .str.22, $i68);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5849, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i64 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5851, 26} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5851, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p70);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5852, 3} true;
  assume {:verifier.code 0} true;
  $r := $i63;
  $exn := false;
  return;
}
const __const_udelay: ref;
axiom (__const_udelay == $sub.ref(0, 173585));
procedure  __const_udelay($i0: i64)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7469, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "__const_udelay:arg:arg0"} boogie_si_record_i64($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7469, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const dev_name: ref;
axiom (dev_name == $sub.ref(0, 174617));
procedure  dev_name($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $p8: ref;
  var $p9: ref;
  var $p7: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5431, 28} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5431, 28} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 1424)), $mul.ref(312, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5431, 28} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5431, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5431, 38} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i64($i3, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5431, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5432, 32} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p0, $mul.ref(0, 1424)), $mul.ref(312, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5432, 32} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5432, 5} true;
  assume {:verifier.code 0} true;
  $p7 := $p6;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5438, 1} true;
  assume {:verifier.code 0} true;
  $r := $p7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5435, 29} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p0, $mul.ref(0, 1424)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5435, 9} true;
  assume {:verifier.code 0} true;
  call $p9 := kobject_name($p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5436, 3} true;
  assume {:verifier.code 0} true;
  $p7 := $p9;
  goto $bb3;
}
const ldv_devm_request_threaded_irq_15: ref;
axiom (ldv_devm_request_threaded_irq_15 == $sub.ref(0, 175649));
procedure  ldv_devm_request_threaded_irq_15($p0: ref, $i1: i32, $p2: ref, $p3: ref, $i4: i64, $p5: ref, $p6: ref)
  returns ($r: i32)
{
  var $i7: i32;
  var $i8: i32;
  var $i9: i1;
  var $i10: i1;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7241, 9} true;
  assume {:verifier.code 0} true;
  call {:cexpr "ldv_devm_request_threaded_irq_15:arg:ldv_func_arg2"} boogie_si_record_i32($i1);
  call {:cexpr "ldv_devm_request_threaded_irq_15:arg:ldv_func_arg5"} boogie_si_record_i64($i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7241, 9} true;
  assume {:verifier.code 0} true;
  call $i7 := devm_request_threaded_irq($p0, $i1, $p2, $p3, $i4, $p5, $p6);
  call {:cexpr "tmp"} boogie_si_record_i32($i7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7244, 13} true;
  assume {:verifier.code 0} true;
  call $i8 := reg_check_1($p2, $p3);
  call {:cexpr "tmp___0"} boogie_si_record_i32($i8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7245, 15} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i8, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7245, 20} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7245, 36} true;
  assume {:verifier.code 0} true;
  $i10 := $sge.i32($i7, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7245, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7245, 20} true;
  assume {:verifier.code 0} true;
  assume !(($i9 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb6;
$bb4:
  assume ($i10 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7246, 5} true;
  assume {:verifier.code 0} true;
  call activate_suitable_irq_1($p0, $i1, $p6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7247, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7245, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i10 == 1));
  goto $bb3;
$bb6:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7249, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const devm_request_threaded_irq: ref;
axiom (devm_request_threaded_irq == $sub.ref(0, 176681));
procedure  devm_request_threaded_irq($p0: ref, $i1: i32, $p2: ref, $p3: ref, $i4: i64, $p5: ref, $p6: ref)
  returns ($r: i32)
{
  var $i7: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7498, 10} true;
  assume {:verifier.code 1} true;
  call {:cexpr "devm_request_threaded_irq:arg:arg1"} boogie_si_record_i32($i1);
  call {:cexpr "devm_request_threaded_irq:arg:arg4"} boogie_si_record_i64($i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7498, 10} true;
  assume {:verifier.code 1} true;
  call $i7 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7498, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const kobject_name: ref;
axiom (kobject_name == $sub.ref(0, 177713));
procedure  kobject_name($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5414, 31} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5414, 31} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 296)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5414, 31} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5414, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const dev_set_drvdata: ref;
axiom (dev_set_drvdata == $sub.ref(0, 178745));
procedure  dev_set_drvdata($p0: ref, $p1: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5448, 8} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5448, 8} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 1424)), $mul.ref(520, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5448, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p2, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5449, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __init_waitqueue_head: ref;
axiom (__init_waitqueue_head == $sub.ref(0, 179777));
procedure  __init_waitqueue_head($p0: ref, $p1: ref, $p2: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7476, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7476, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const devm_kmalloc: ref;
axiom (devm_kmalloc == $sub.ref(0, 180809));
procedure  devm_kmalloc($p0: ref, $i1: i64, $i2: i32)
  returns ($r: ref)
{
  var $p3: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7494, 18} true;
  assume {:verifier.code 0} true;
  call {:cexpr "devm_kmalloc:arg:arg1"} boogie_si_record_i64($i1);
  call {:cexpr "devm_kmalloc:arg:arg2"} boogie_si_record_i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7494, 18} true;
  assume {:verifier.code 0} true;
  call $p3 := external_alloc();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7494, 3} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const spi_register_driver: ref;
axiom (spi_register_driver == $sub.ref(0, 181841));
procedure  spi_register_driver($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7547, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7547, 10} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7547, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const spi_unregister_driver: ref;
axiom (spi_unregister_driver == $sub.ref(0, 182873));
procedure  spi_unregister_driver($p0: ref)
{
  var $i1: i64;
  var $i2: i1;
  var $p3: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5631, 7} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5631, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5631, 28} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i64($i1, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5631, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5632, 31} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p0, $mul.ref(0, 168)), $mul.ref(48, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5632, 5} true;
  assume {:verifier.code 0} true;
  call driver_unregister($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5633, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5635, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const driver_unregister: ref;
axiom (driver_unregister == $sub.ref(0, 183905));
procedure  driver_unregister($p0: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7501, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7501, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const write_tx_buf: ref;
axiom (write_tx_buf == $sub.ref(0, 184937));
procedure  write_tx_buf($p0: ref, $i1: i16, $p2: ref, $i3: i64)
  returns ($r: i32)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $i29: i8;
  var $i30: i8;
  var $p31: ref;
  var $i32: i8;
  var $i33: i8;
  var $p34: ref;
  var $i35: i8;
  var $i36: i8;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $i63: i8;
  var $i64: i8;
  var $p65: ref;
  var $i66: i8;
  var $i67: i8;
  var $p68: ref;
  var $i69: i8;
  var $i70: i8;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $i80: i32;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $p96: ref;
  var $i97: i8;
  var $i98: i8;
  var $p99: ref;
  var $i100: i8;
  var $i101: i8;
  var $p102: ref;
  var $i103: i8;
  var $i104: i8;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $p109: ref;
  var $p110: ref;
  var $p111: ref;
  var $i112: i1;
  var $p113: ref;
  var $p114: ref;
  var $p115: ref;
  var $i116: i32;
  var $i117: i64;
  var $i118: i32;
  var $i119: i32;
  var $i120: i16;
  var $i121: i32;
  var $i122: i32;
  var $i123: i16;
  var $p124: ref;
  var $i125: i32;
  var $i126: i32;
  var $i127: i8;
  var $p128: ref;
  var $p129: ref;
  var $i130: i8;
  var $p131: ref;
  var $p132: ref;
  var $p133: ref;
  var $p134: ref;
  var $i135: i8;
  var $p136: ref;
  var $p137: ref;
  var $p138: ref;
  var $i139: i32;
  var $i140: i1;
  var $p141: ref;
  var $p142: ref;
  var $p143: ref;
  var $i144: i32;
  var $p145: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5865, 44} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(2, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(88, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(96, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p7 := $alloc($mul.ref(96, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p8 := $alloc($mul.ref(96, $zext.i32.i64(1)));
  call {:cexpr "write_tx_buf:arg:reg"} boogie_si_record_i16($i1);
  call {:cexpr "write_tx_buf:arg:length"} boogie_si_record_i64($i3);
  assume true;
  assume true;
  assume true;
  assume true;
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5865, 44} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(280, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5865, 44} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5865, 13} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p6, $mul.ref(0, 96)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5865, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p11, $p10);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5866, 13} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p6, $mul.ref(0, 96)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5866, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p12, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5867, 13} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p6, $mul.ref(0, 96)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5867, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p13, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5868, 13} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p6, $mul.ref(0, 96)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5868, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p14, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5869, 13} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p6, $mul.ref(0, 96)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5869, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p15, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5870, 13} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p6, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p17 := $add.ref($add.ref($add.ref($p6, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5870, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p17, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5871, 13} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p6, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p19 := $add.ref($add.ref($add.ref($p6, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5871, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p19, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5872, 13} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p6, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p21 := $add.ref($add.ref($add.ref($p6, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(12, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5872, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p21, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5873, 13} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p6, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p23 := $add.ref($add.ref($add.ref($p6, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5873, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p23, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5874, 13} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p6, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p25 := $add.ref($add.ref($add.ref($p6, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5874, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p25, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5875, 13} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p6, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p27 := $add.ref($add.ref($add.ref($p6, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(12, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5875, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p27, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5876, 13} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($add.ref($p6, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5876, 23} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i8($M.0, $p28);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5876, 23} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5876:23: warning: over-approximating bitwise operation and;
  $i30 := $and.i8($i29, $sub.i8(0, 2));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5876, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p28, $i30);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5877, 13} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($add.ref($p6, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5877, 22} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i8($M.0, $p31);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5877, 22} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5877:22: warning: over-approximating bitwise operation and;
  $i33 := $and.i8($i32, $sub.i8(0, 15));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5877, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p31, $i33);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5878, 13} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p6, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5878, 22} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i8($M.0, $p34);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5878, 22} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5878:22: warning: over-approximating bitwise operation and;
  $i36 := $and.i8($i35, $sub.i8(0, 113));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5878, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p34, $i36);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5879, 13} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p6, $mul.ref(0, 96)), $mul.ref(73, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5879, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p37, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5880, 13} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p6, $mul.ref(0, 96)), $mul.ref(74, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5880, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p38, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5881, 13} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($add.ref($p6, $mul.ref(0, 96)), $mul.ref(76, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5881, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p39, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5882, 13} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p6, $mul.ref(0, 96)), $mul.ref(80, 1));
  $p41 := $add.ref($add.ref($add.ref($p6, $mul.ref(0, 96)), $mul.ref(80, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5882, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p41, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5883, 13} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($add.ref($p6, $mul.ref(0, 96)), $mul.ref(80, 1));
  $p43 := $add.ref($add.ref($add.ref($p6, $mul.ref(0, 96)), $mul.ref(80, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5883, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p43, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5884, 25} true;
  assume {:verifier.code 0} true;
  $p44 := $bitcast.ref.ref($p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5884, 16} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($add.ref($p7, $mul.ref(0, 96)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5884, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p45, $p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5885, 16} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p7, $mul.ref(0, 96)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5885, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p46, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5886, 16} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($add.ref($p7, $mul.ref(0, 96)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5886, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p47, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5887, 16} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($add.ref($p7, $mul.ref(0, 96)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5887, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p48, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5888, 16} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($add.ref($p7, $mul.ref(0, 96)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5888, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p49, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5889, 16} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($add.ref($p7, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p51 := $add.ref($add.ref($add.ref($p7, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5889, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p51, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5890, 16} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($add.ref($p7, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p53 := $add.ref($add.ref($add.ref($p7, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5890, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p53, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5891, 16} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($add.ref($p7, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p55 := $add.ref($add.ref($add.ref($p7, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(12, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5891, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p55, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5892, 16} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($add.ref($p7, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p57 := $add.ref($add.ref($add.ref($p7, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5892, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p57, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5893, 16} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($add.ref($p7, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p59 := $add.ref($add.ref($add.ref($p7, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5893, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p59, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5894, 16} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($add.ref($p7, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p61 := $add.ref($add.ref($add.ref($p7, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(12, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5894, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p61, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5895, 16} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($add.ref($p7, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5895, 26} true;
  assume {:verifier.code 0} true;
  $i63 := $load.i8($M.0, $p62);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5895, 26} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5895:26: warning: over-approximating bitwise operation and;
  $i64 := $and.i8($i63, $sub.i8(0, 2));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5895, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p62, $i64);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5896, 16} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($add.ref($p7, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5896, 25} true;
  assume {:verifier.code 0} true;
  $i66 := $load.i8($M.0, $p65);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5896, 25} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5896:25: warning: over-approximating bitwise operation and;
  $i67 := $and.i8($i66, $sub.i8(0, 15));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5896, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p65, $i67);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5897, 16} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($add.ref($p7, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5897, 25} true;
  assume {:verifier.code 0} true;
  $i69 := $load.i8($M.0, $p68);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5897, 25} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5897:25: warning: over-approximating bitwise operation and;
  $i70 := $and.i8($i69, $sub.i8(0, 113));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5897, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p68, $i70);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5898, 16} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($add.ref($p7, $mul.ref(0, 96)), $mul.ref(73, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5898, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p71, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5899, 16} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($add.ref($p7, $mul.ref(0, 96)), $mul.ref(74, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5899, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p72, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5900, 16} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($add.ref($p7, $mul.ref(0, 96)), $mul.ref(76, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5900, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p73, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5901, 16} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($add.ref($p7, $mul.ref(0, 96)), $mul.ref(80, 1));
  $p75 := $add.ref($add.ref($add.ref($p7, $mul.ref(0, 96)), $mul.ref(80, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5901, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p75, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5902, 16} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($add.ref($p7, $mul.ref(0, 96)), $mul.ref(80, 1));
  $p77 := $add.ref($add.ref($add.ref($p7, $mul.ref(0, 96)), $mul.ref(80, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5902, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p77, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5903, 13} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5903, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p78, $p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5904, 13} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5904, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p79, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5905, 19} true;
  assume {:verifier.code 0} true;
  $i80 := $trunc.i64.i32($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5905, 13} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5905, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p81, $i80);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5906, 13} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5906, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p82, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5907, 13} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5907, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p83, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5908, 13} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p85 := $add.ref($add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5908, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p85, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5909, 13} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p87 := $add.ref($add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5909, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p87, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5910, 13} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(40, 1));
  $p89 := $add.ref($add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(40, 1)), $mul.ref(12, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5910, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p89, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5911, 13} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p91 := $add.ref($add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5911, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p91, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5912, 13} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p93 := $add.ref($add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5912, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p93, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5913, 13} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(56, 1));
  $p95 := $add.ref($add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(56, 1)), $mul.ref(12, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5913, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p95, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5914, 13} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5914, 23} true;
  assume {:verifier.code 0} true;
  $i97 := $load.i8($M.0, $p96);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5914, 23} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5914:23: warning: over-approximating bitwise operation and;
  $i98 := $and.i8($i97, $sub.i8(0, 2));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5914, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p96, $i98);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5915, 13} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5915, 22} true;
  assume {:verifier.code 0} true;
  $i100 := $load.i8($M.0, $p99);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5915, 22} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5915:22: warning: over-approximating bitwise operation and;
  $i101 := $and.i8($i100, $sub.i8(0, 15));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5915, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p99, $i101);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5916, 13} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5916, 22} true;
  assume {:verifier.code 0} true;
  $i103 := $load.i8($M.0, $p102);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5916, 22} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5916:22: warning: over-approximating bitwise operation and;
  $i104 := $and.i8($i103, $sub.i8(0, 113));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5916, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p102, $i104);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5917, 13} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(73, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5917, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p105, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5918, 13} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(74, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5918, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p106, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5919, 13} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(76, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5919, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p107, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5920, 13} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(80, 1));
  $p109 := $add.ref($add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(80, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5920, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p109, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5921, 13} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(80, 1));
  $p111 := $add.ref($add.ref($add.ref($p8, $mul.ref(0, 96)), $mul.ref(80, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5921, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p111, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5922, 14} true;
  assume {:verifier.code 0} true;
  $i112 := $ugt.i64($i3, 126);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5922, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i112} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i112 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5923, 48} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5923, 48} true;
  assume {:verifier.code 0} true;
  $p114 := $load.ref($M.0, $p113);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5923, 54} true;
  assume {:verifier.code 0} true;
  $p115 := $add.ref($add.ref($p114, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5923, 5} true;
  assume {:verifier.code 0} true;
  call $i116 := dev_err.ref.ref($p115, .str.28);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5925, 3} true;
  assume {:verifier.code 0} true;
  $i117 := 126;
  goto $bb3;
$bb2:
  assume !(($i112 == 1));
  assume {:verifier.code 0} true;
  $i117 := $i3;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5927, 3} true;
  assume {:verifier.code 0} true;
  call spi_message_init($p5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5928, 3} true;
  assume {:verifier.code 0} true;
  call spi_message_add_tail($p6, $p5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5929, 3} true;
  assume {:verifier.code 0} true;
  call spi_message_add_tail($p7, $p5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5930, 3} true;
  assume {:verifier.code 0} true;
  call spi_message_add_tail($p8, $p5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5931, 32} true;
  assume {:verifier.code 0} true;
  $i118 := $zext.i16.i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5931, 42} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5931:42: warning: over-approximating bitwise operation shl;
  $i119 := $shl.i32($i118, 5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5931, 23} true;
  assume {:verifier.code 0} true;
  $i120 := $trunc.i32.i16($i119);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5931, 16} true;
  assume {:verifier.code 0} true;
  $i121 := $sext.i16.i32($i120);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5931, 49} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5931:49: warning: over-approximating bitwise operation or;
  $i122 := $or.i32($i121, $sub.i32(0, 32752));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5931, 9} true;
  assume {:verifier.code 0} true;
  $i123 := $trunc.i32.i16($i122);
  call {:cexpr "cmd"} boogie_si_record_i16($i123);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5932, 31} true;
  assume {:verifier.code 0} true;
  $p124 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5932, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p124, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5933, 26} true;
  assume {:verifier.code 0} true;
  $i125 := $zext.i16.i32($i123);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5933, 36} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i:5933:36: warning: over-approximating bitwise operation ashr;
  $i126 := $ashr.i32($i125, 8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5933, 20} true;
  assume {:verifier.code 0} true;
  $i127 := $trunc.i32.i8($i126);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5933, 13} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(280, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5933, 13} true;
  assume {:verifier.code 0} true;
  $p129 := $load.ref($M.0, $p128);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5933, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p129, $i127);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5934, 26} true;
  assume {:verifier.code 0} true;
  $i130 := $trunc.i16.i8($i123);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5934, 13} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(280, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5934, 13} true;
  assume {:verifier.code 0} true;
  $p132 := $load.ref($M.0, $p131);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5934, 17} true;
  assume {:verifier.code 0} true;
  $p133 := $add.ref($p132, $mul.ref(1, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5934, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p133, $i130);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5935, 3} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($add.ref($p4, $mul.ref(0, 2)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5935, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p134, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5936, 16} true;
  assume {:verifier.code 0} true;
  $i135 := $trunc.i64.i8($i117);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5936, 3} true;
  assume {:verifier.code 0} true;
  $p136 := $add.ref($add.ref($p4, $mul.ref(0, 2)), $mul.ref(1, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5936, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p136, $i135);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5937, 26} true;
  assume {:verifier.code 0} true;
  $p137 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5937, 26} true;
  assume {:verifier.code 0} true;
  $p138 := $load.ref($M.0, $p137);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5937, 9} true;
  assume {:verifier.code 0} true;
  call $i139 := spi_sync($p138, $p5);
  call {:cexpr "ret"} boogie_si_record_i32($i139);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5938, 11} true;
  assume {:verifier.code 0} true;
  $i140 := $ne.i32($i139, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5938, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i140} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i140 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5939, 48} true;
  assume {:verifier.code 0} true;
  $p141 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5939, 48} true;
  assume {:verifier.code 0} true;
  $p142 := $load.ref($M.0, $p141);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5939, 54} true;
  assume {:verifier.code 0} true;
  $p143 := $add.ref($add.ref($p142, $mul.ref(0, 1504)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5939, 5} true;
  assume {:verifier.code 0} true;
  call $i144 := dev_err.ref.ref($p143, .str.29);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5940, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i140 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5942, 26} true;
  assume {:verifier.code 0} true;
  $p145 := $add.ref($add.ref($p0, $mul.ref(0, 288)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5942, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p145);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5943, 3} true;
  assume {:verifier.code 0} true;
  $r := $i139;
  $exn := false;
  return;
}
const reinit_completion: ref;
axiom (reinit_completion == $sub.ref(0, 185969));
procedure  reinit_completion($p0: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5402, 6} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5402, 6} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 96)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5402, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p1, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 5403, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const wait_for_completion_interruptible_timeout: ref;
axiom (wait_for_completion_interruptible_timeout == $sub.ref(0, 187001));
procedure  wait_for_completion_interruptible_timeout($p0: ref, $i1: i64)
  returns ($r: i64)
{
  var $i2: i64;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7551, 10} true;
  assume {:verifier.code 1} true;
  call {:cexpr "wait_for_completion_interruptible_timeout:arg:arg1"} boogie_si_record_i64($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7551, 10} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_long();
  call {:cexpr "smack:ext:__VERIFIER_nondet_long"} boogie_si_record_i64($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7551, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const dev_warn: ref;
axiom (dev_warn == $sub.ref(0, 188033));
procedure  dev_warn.ref.ref($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7490, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7490, 10} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7490, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const warn_slowpath_null: ref;
axiom (warn_slowpath_null == $sub.ref(0, 189065));
procedure  warn_slowpath_null($p0: ref, $i1: i32)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7554, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "warn_slowpath_null:arg:arg1"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7554, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const llvm.memcpy.p0i8.p0i8.i64: ref;
axiom (llvm.memcpy.p0i8.p0i8.i64 == $sub.ref(0, 190097));
procedure  llvm.memcpy.p0i8.p0i8.i64($p0: ref, $p1: ref, $i2: i64, $i3: i1);
const ldv_set_init: ref;
axiom (ldv_set_init == $sub.ref(0, 191129));
procedure  ldv_set_init($p0: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7260, 14} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7260, 14} true;
  assume {:verifier.code 0} true;
  $M.25 := 0;
  call {:cexpr "last_index"} boogie_si_record_i32(0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ieee802154--mrf24j40.ko-entry_point.cil.out-47oz5vlw.i", 7261, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_assume: ref;
axiom (__VERIFIER_assume == $sub.ref(0, 192161));
procedure  __VERIFIER_assume($i0: i32)
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__VERIFIER_assume:arg:x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 38, 3} true;
  assume {:verifier.code 1} true;
  assume $i0 != $0;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 39, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_code: ref;
axiom (__SMACK_code == $sub.ref(0, 193193));
procedure  __SMACK_code.ref($p0: ref);
procedure  __SMACK_code.ref.i32($p0: ref, p.1: i32);
const __SMACK_dummy: ref;
axiom (__SMACK_dummy == $sub.ref(0, 194225));
procedure  __SMACK_dummy($i0: i32)
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_dummy:arg:v"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 59} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_error: ref;
axiom (__VERIFIER_error == $sub.ref(0, 195257));
procedure  __VERIFIER_error()
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 52, 3} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 52, 3} true;
  assume {:verifier.code 1} true;
  assert false;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 59, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_check_overflow: ref;
axiom (__SMACK_check_overflow == $sub.ref(0, 196289));
procedure  __SMACK_check_overflow($i0: i32)
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_check_overflow:arg:flag"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 63, 3} true;
  assume {:verifier.code 1} true;
  assert {:overflow} $i0 == $0;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 64, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_nondet_char: ref;
axiom (__SMACK_nondet_char == $sub.ref(0, 197321));
procedure  __SMACK_nondet_char()
  returns ($r: i8);
const __SMACK_nondet_signed_char: ref;
axiom (__SMACK_nondet_signed_char == $sub.ref(0, 198353));
procedure  __SMACK_nondet_signed_char()
  returns ($r: i8);
const __SMACK_nondet_unsigned_char: ref;
axiom (__SMACK_nondet_unsigned_char == $sub.ref(0, 199385));
procedure  __SMACK_nondet_unsigned_char()
  returns ($r: i8);
const __SMACK_nondet_short: ref;
axiom (__SMACK_nondet_short == $sub.ref(0, 200417));
procedure  __SMACK_nondet_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short: ref;
axiom (__SMACK_nondet_signed_short == $sub.ref(0, 201449));
procedure  __SMACK_nondet_signed_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short_int: ref;
axiom (__SMACK_nondet_signed_short_int == $sub.ref(0, 202481));
procedure  __SMACK_nondet_signed_short_int()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short: ref;
axiom (__SMACK_nondet_unsigned_short == $sub.ref(0, 203513));
procedure  __SMACK_nondet_unsigned_short()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short_int: ref;
axiom (__SMACK_nondet_unsigned_short_int == $sub.ref(0, 204545));
procedure  __SMACK_nondet_unsigned_short_int()
  returns ($r: i16);
const __VERIFIER_nondet_int: ref;
axiom (__VERIFIER_nondet_int == $sub.ref(0, 205577));
procedure  __VERIFIER_nondet_int()
  returns ($r: i32)
{
  var $i0: i32;
  var $i1: i1;
  var $i3: i1;
  var $i2: i1;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 115, 11} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 115, 11} true;
  assume {:verifier.code 1} true;
  call $i0 := __SMACK_nondet_int();
  call {:cexpr "smack:ext:__SMACK_nondet_int"} boogie_si_record_i32($i0);
  call {:cexpr "x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 23} true;
  assume {:verifier.code 0} true;
  $i1 := $sge.i32($i0, $sub.i32(0, 2147483648));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 34} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 39} true;
  assume {:verifier.code 1} true;
  $i3 := $sle.i32($i0, 2147483647);
  assume {:verifier.code 0} true;
  $i2 := $i3;
  goto $bb3;
$bb2:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 34} true;
  assume {:verifier.code 0} true;
  assume !(($i1 == 1));
  goto $bb3;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 34} true;
  assume {:verifier.code 1} true;
  $i4 := $zext.i1.i32($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __SMACK_nondet_int: ref;
axiom (__SMACK_nondet_int == $sub.ref(0, 206609));
procedure  __SMACK_nondet_int()
  returns ($r: i32);
const __SMACK_nondet_signed_int: ref;
axiom (__SMACK_nondet_signed_int == $sub.ref(0, 207641));
procedure  __SMACK_nondet_signed_int()
  returns ($r: i32);
const __SMACK_nondet_unsigned: ref;
axiom (__SMACK_nondet_unsigned == $sub.ref(0, 208673));
procedure  __SMACK_nondet_unsigned()
  returns ($r: i32);
const __SMACK_nondet_unsigned_int: ref;
axiom (__SMACK_nondet_unsigned_int == $sub.ref(0, 209705));
procedure  __SMACK_nondet_unsigned_int()
  returns ($r: i32);
const __VERIFIER_nondet_long: ref;
axiom (__VERIFIER_nondet_long == $sub.ref(0, 210737));
procedure  __VERIFIER_nondet_long()
  returns ($r: i64)
{
  var $i0: i64;
  var $i1: i1;
  var $i3: i1;
  var $i2: i1;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 145, 12} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 145, 12} true;
  assume {:verifier.code 1} true;
  call $i0 := __SMACK_nondet_long();
  call {:cexpr "smack:ext:__SMACK_nondet_long"} boogie_si_record_i64($i0);
  call {:cexpr "x"} boogie_si_record_i64($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 146, 23} true;
  assume {:verifier.code 0} true;
  $i1 := $sge.i64($i0, $sub.i64(0, 9223372036854775808));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 146, 35} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 146, 40} true;
  assume {:verifier.code 1} true;
  $i3 := $sle.i64($i0, 9223372036854775807);
  assume {:verifier.code 0} true;
  $i2 := $i3;
  goto $bb3;
$bb2:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 146, 35} true;
  assume {:verifier.code 0} true;
  assume !(($i1 == 1));
  goto $bb3;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 146, 35} true;
  assume {:verifier.code 1} true;
  $i4 := $zext.i1.i32($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 146, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 147, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __SMACK_nondet_long: ref;
axiom (__SMACK_nondet_long == $sub.ref(0, 211769));
procedure  __SMACK_nondet_long()
  returns ($r: i64);
const __SMACK_nondet_long_int: ref;
axiom (__SMACK_nondet_long_int == $sub.ref(0, 212801));
procedure  __SMACK_nondet_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long: ref;
axiom (__SMACK_nondet_signed_long == $sub.ref(0, 213833));
procedure  __SMACK_nondet_signed_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_int: ref;
axiom (__SMACK_nondet_signed_long_int == $sub.ref(0, 214865));
procedure  __SMACK_nondet_signed_long_int()
  returns ($r: i64);
const __VERIFIER_nondet_unsigned_long: ref;
axiom (__VERIFIER_nondet_unsigned_long == $sub.ref(0, 215897));
procedure  __VERIFIER_nondet_unsigned_long()
  returns ($r: i64)
{
  var $i0: i64;
  var $i1: i64;
  var $i2: i64;
  var $i3: i1;
  var $i5: i1;
  var $i6: i1;
  var $i4: i1;
  var $i7: i32;
  var $i8: i1;
  var $i10: i1;
  var $i9: i1;
  var $i11: i32;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 169, 21} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 169, 21} true;
  assume {:verifier.code 1} true;
  call $i0 := __SMACK_nondet_unsigned_long();
  call {:cexpr "smack:ext:__SMACK_nondet_unsigned_long"} boogie_si_record_i64($i0);
  call {:cexpr "x"} boogie_si_record_i64($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 170, 23} true;
  assume {:verifier.code 1} true;
  call $i1 := __SMACK_nondet_unsigned_long();
  call {:cexpr "smack:ext:__SMACK_nondet_unsigned_long"} boogie_si_record_i64($i1);
  call {:cexpr "min"} boogie_si_record_i64($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 171, 23} true;
  assume {:verifier.code 1} true;
  call $i2 := __SMACK_nondet_unsigned_long();
  call {:cexpr "smack:ext:__SMACK_nondet_unsigned_long"} boogie_si_record_i64($i2);
  call {:cexpr "max"} boogie_si_record_i64($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 25} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i64($i1, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 30} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 37} true;
  assume {:verifier.code 0} true;
  $i5 := $uge.i64($i2, 18446744073709551615);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 50} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  assume {:branchcond $i5} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 30} true;
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb3;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 50} true;
  assume {:verifier.code 1} true;
  $i7 := $zext.i1.i32($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i7);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 173, 23} true;
  assume {:verifier.code 0} true;
  $i8 := $uge.i64($i0, $i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 173, 30} true;
  assume {:verifier.code 0} true;
  $i9 := 0;
  assume {:branchcond $i8} true;
  goto $bb6, $bb7;
$bb4:
  assume ($i5 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 57} true;
  assume {:verifier.code 1} true;
  $i6 := $ule.i64($i2, 18446744073709551615);
  assume {:verifier.code 0} true;
  $i4 := $i6;
  goto $bb3;
$bb5:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 50} true;
  assume {:verifier.code 0} true;
  assume !(($i5 == 1));
  goto $bb3;
$bb6:
  assume ($i8 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 173, 35} true;
  assume {:verifier.code 1} true;
  $i10 := $ule.i64($i0, $i2);
  assume {:verifier.code 0} true;
  $i9 := $i10;
  goto $bb8;
$bb7:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 173, 30} true;
  assume {:verifier.code 0} true;
  assume !(($i8 == 1));
  goto $bb8;
$bb8:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 173, 30} true;
  assume {:verifier.code 1} true;
  $i11 := $zext.i1.i32($i9);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 173, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i11);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 174, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __SMACK_nondet_unsigned_long: ref;
axiom (__SMACK_nondet_unsigned_long == $sub.ref(0, 216929));
procedure  __SMACK_nondet_unsigned_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_int == $sub.ref(0, 217961));
procedure  __SMACK_nondet_unsigned_long_int()
  returns ($r: i64);
const __SMACK_nondet_long_long: ref;
axiom (__SMACK_nondet_long_long == $sub.ref(0, 218993));
procedure  __SMACK_nondet_long_long()
  returns ($r: i64);
const __SMACK_nondet_long_long_int: ref;
axiom (__SMACK_nondet_long_long_int == $sub.ref(0, 220025));
procedure  __SMACK_nondet_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long: ref;
axiom (__SMACK_nondet_signed_long_long == $sub.ref(0, 221057));
procedure  __SMACK_nondet_signed_long_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long_int: ref;
axiom (__SMACK_nondet_signed_long_long_int == $sub.ref(0, 222089));
procedure  __SMACK_nondet_signed_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long: ref;
axiom (__SMACK_nondet_unsigned_long_long == $sub.ref(0, 223121));
procedure  __SMACK_nondet_unsigned_long_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_long_int == $sub.ref(0, 224153));
procedure  __SMACK_nondet_unsigned_long_long_int()
  returns ($r: i64);
const __VERIFIER_nondet_ulong: ref;
axiom (__VERIFIER_nondet_ulong == $sub.ref(0, 225185));
procedure  __VERIFIER_nondet_ulong()
  returns ($r: i64)
{
  var $i0: i64;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 252, 21} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 252, 21} true;
  assume {:verifier.code 1} true;
  call $i0 := __VERIFIER_nondet_unsigned_long();
  call {:cexpr "smack:ext:__VERIFIER_nondet_unsigned_long"} boogie_si_record_i64($i0);
  call {:cexpr "x"} boogie_si_record_i64($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 253, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __VERIFIER_nondet_pointer: ref;
axiom (__VERIFIER_nondet_pointer == $sub.ref(0, 226217));
procedure  __VERIFIER_nondet_pointer()
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 256, 48} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 256, 48} true;
  assume {:verifier.code 1} true;
  call $p0 := __VERIFIER_nondet();
  call {:cexpr "smack:ext:__VERIFIER_nondet"} boogie_si_record_ref($p0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 256, 41} true;
  assume {:verifier.code 0} true;
  $r := $p0;
  $exn := false;
  return;
}
const __VERIFIER_nondet: ref;
axiom (__VERIFIER_nondet == $sub.ref(0, 227249));
procedure  __VERIFIER_nondet()
  returns ($r: ref);
const __SMACK_decls: ref;
axiom (__SMACK_decls == $sub.ref(0, 228281));
type $mop;
procedure  boogie_si_record_mop(m: $mop);
const $MOP: $mop;
var $exn: bool;
var $exnv: int;
procedure  corral_atomic_begin();
procedure  corral_atomic_end();
procedure  $alloc(n: ref) returns (p: ref)
{
  call corral_atomic_begin();
  call p := $$alloc(n);
  call corral_atomic_end();
}

procedure  $malloc(n: ref) returns (p: ref)
{
  call corral_atomic_begin();
  call p := $$alloc(n);
  call corral_atomic_end();
}

var $CurrAddr:ref;

procedure {:inline 1} $$alloc(n: ref) returns (p: ref)
modifies $CurrAddr;
{
  assume $sge.ref.bool(n, $0.ref);
  if ($sgt.ref.bool(n, $0.ref)) {
    p := $CurrAddr;
    havoc $CurrAddr;
    assume $sge.ref.bool($sub.ref($CurrAddr, n), p);
    assume $sgt.ref.bool($CurrAddr, $0.ref) && $slt.ref.bool($CurrAddr, $MALLOC_TOP);
  } else {
    p := $0.ref;
  }
}

procedure  $free(p: ref);

const __SMACK_top_decl: ref;
axiom (__SMACK_top_decl == $sub.ref(0, 229313));
procedure  __SMACK_top_decl.ref($p0: ref);
const __SMACK_init_func_memory_model: ref;
axiom (__SMACK_init_func_memory_model == $sub.ref(0, 230345));
procedure  __SMACK_init_func_memory_model()
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 539, 3} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 539, 3} true;
  assume {:verifier.code 1} true;
  $CurrAddr := $1024.ref;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 544, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_atomic_begin: ref;
axiom (__VERIFIER_atomic_begin == $sub.ref(0, 231377));
procedure  __VERIFIER_atomic_begin()
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 34} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 34} true;
  assume {:verifier.code 1} true;
  call corral_atomic_begin();
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 79} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_atomic_end: ref;
axiom (__VERIFIER_atomic_end == $sub.ref(0, 232409));
procedure  __VERIFIER_atomic_end()
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 548, 32} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 548, 32} true;
  assume {:verifier.code 1} true;
  call corral_atomic_end();
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 548, 75} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const calloc: ref;
axiom (calloc == $sub.ref(0, 233441));
procedure  calloc($i0: i64, $i1: i64)
  returns ($r: ref)
{
  var $i2: i32;
  var $i3: i1;
  var $i5: i64;
  var $p6: ref;
  var $i7: i64;
  var $p4: ref;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/stdlib.c", 19, 7} true;
  assume {:verifier.code 1} true;
  call {:cexpr "calloc:arg:num"} boogie_si_record_i64($i0);
  call {:cexpr "calloc:arg:size"} boogie_si_record_i64($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/stdlib.c", 19, 7} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/stdlib.c", 19, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/stdlib.c", 19, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/stdlib.c", 21, 3} true;
  assume {:verifier.code 0} true;
  $p4 := $0.ref;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/stdlib.c", 22, 5} true;
  assume {:verifier.code 0} true;
  call __VERIFIER_atomic_begin();
  assume {:sourceloc "/usr/local/share/smack/lib/stdlib.c", 23, 22} true;
  assume {:verifier.code 0} true;
  $i5 := $mul.i64($i0, $i1);
  assume {:sourceloc "/usr/local/share/smack/lib/stdlib.c", 23, 11} true;
  assume {:verifier.code 0} true;
  call $p6 := malloc($i5);
  assume {:sourceloc "/usr/local/share/smack/lib/stdlib.c", 24, 24} true;
  assume {:verifier.code 0} true;
  $i7 := $mul.i64($i0, $i1);
  assume {:sourceloc "/usr/local/share/smack/lib/stdlib.c", 24, 5} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p6, 0, $i7, false);
  assume {:sourceloc "/usr/local/share/smack/lib/stdlib.c", 25, 5} true;
  assume {:verifier.code 0} true;
  call __VERIFIER_atomic_end();
  assume {:verifier.code 0} true;
  $p4 := $p6;
  goto $bb3;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/stdlib.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/stdlib.c", 27, 3} true;
  assume {:verifier.code 0} true;
  $r := $p4;
  $exn := false;
  return;
}
const llvm.dbg.value: ref;
axiom (llvm.dbg.value == $sub.ref(0, 234473));
procedure  llvm.dbg.value($p0: ref, $p1: ref, $p2: ref);
const __SMACK_static_init: ref;
axiom (__SMACK_static_init == $sub.ref(0, 235505));
procedure  __SMACK_static_init()
{
$bb0:
  $M.40 := 0;
  call {:cexpr "ldv_irq_1_3"} boogie_si_record_i32(0);
  $M.28 := 0;
  call {:cexpr "ldv_irq_1_0"} boogie_si_record_i32(0);
  $M.1 := 0;
  call {:cexpr "ldv_irq_2_0"} boogie_si_record_i32(0);
  $M.36 := 0;
  call {:cexpr "ldv_irq_1_2"} boogie_si_record_i32(0);
  $M.13 := 1;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(1);
  $M.32 := 0;
  call {:cexpr "ldv_irq_1_1"} boogie_si_record_i32(0);
  $M.10 := 0;
  call {:cexpr "ldv_irq_2_3"} boogie_si_record_i32(0);
  $M.7 := 0;
  call {:cexpr "ldv_irq_2_2"} boogie_si_record_i32(0);
  $M.4 := 0;
  call {:cexpr "ldv_irq_2_1"} boogie_si_record_i32(0);
  $M.2 := 0;
  call {:cexpr "ldv_irq_line_2_0"} boogie_si_record_i32(0);
  $M.3 := $0.ref;
  $M.5 := 0;
  call {:cexpr "ldv_irq_line_2_1"} boogie_si_record_i32(0);
  $M.6 := $0.ref;
  $M.8 := 0;
  call {:cexpr "ldv_irq_line_2_2"} boogie_si_record_i32(0);
  $M.9 := $0.ref;
  $M.11 := 0;
  call {:cexpr "ldv_irq_line_2_3"} boogie_si_record_i32(0);
  $M.12 := $0.ref;
  $M.55 := $0.ref;
  $M.56 := $0.ref;
  $M.57 := $0.ref;
  $M.58 := $0.ref;
  $M.27 := $0.ref;
  $M.30 := 0;
  call {:cexpr "ldv_irq_line_1_0"} boogie_si_record_i32(0);
  $M.29 := $0.ref;
  $M.34 := 0;
  call {:cexpr "ldv_irq_line_1_1"} boogie_si_record_i32(0);
  $M.33 := $0.ref;
  $M.38 := 0;
  call {:cexpr "ldv_irq_line_1_2"} boogie_si_record_i32(0);
  $M.37 := $0.ref;
  $M.42 := 0;
  call {:cexpr "ldv_irq_line_1_3"} boogie_si_record_i32(0);
  $M.41 := $0.ref;
  $M.31 := $0.ref;
  $M.35 := $0.ref;
  $M.39 := $0.ref;
  $M.43 := $0.ref;
  $M.44 := $0.ref;
  $M.45 := 0;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(0);
  $M.46 := 0;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(0);
  $M.47 := 0;
  call {:cexpr "ref_cnt"} boogie_si_record_i32(0);
  $M.48 := 0;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(0);
  $M.49 := 0;
  call {:cexpr "ldv_state_variable_3"} boogie_si_record_i32(0);
  $M.50 := 0;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(0);
  $M.51 := 0;
  call {:cexpr "ldv_retval_0"} boogie_si_record_i32(0);
  $M.52 := 0;
  call {:cexpr "ldv_retval_1"} boogie_si_record_i32(0);
  $M.53 := 0;
  call {:cexpr "ldv_retval_2"} boogie_si_record_i32(0);
  $M.25 := 0;
  call {:cexpr "last_index"} boogie_si_record_i32(0);
  $M.24 := $0.ref;
  $M.59 := 0;
  $M.60 := 0;
  $M.61 := 0;
  $M.62 := 0;
  $M.63 := 0;
  $M.64 := 0;
  $M.65 := 0;
  $M.66 := 0;
  $M.67 := 0;
  $M.68 := 0;
  $M.69 := 0;
  $M.70 := 0;
  $M.71 := 0;
  $M.72 := 0;
  $M.73 := 0;
  $M.74 := 0;
  $M.75 := 0;
  $M.76 := 0;
  $M.77 := 0;
  $M.78 := 0;
  $M.79 := 0;
  $M.80 := 0;
  $M.81 := 0;
  $M.82 := 0;
  $M.83 := 0;
  $M.84 := 0;
  $M.85 := 0;
  $M.86 := 0;
  $M.87 := 0;
  $M.88 := 0;
  $M.89 := 0;
  $M.90 := 0;
  $M.91 := 0;
  $M.26 := $store.ref($M.26, set_impl, $0.ref);
  $M.26 := $store.ref($M.26, $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref(1, 8)), $0.ref);
  $M.26 := $store.ref($M.26, $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref(2, 8)), $0.ref);
  $M.26 := $store.ref($M.26, $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref(3, 8)), $0.ref);
  $M.26 := $store.ref($M.26, $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref(4, 8)), $0.ref);
  $M.26 := $store.ref($M.26, $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref(5, 8)), $0.ref);
  $M.26 := $store.ref($M.26, $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref(6, 8)), $0.ref);
  $M.26 := $store.ref($M.26, $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref(7, 8)), $0.ref);
  $M.26 := $store.ref($M.26, $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref(8, 8)), $0.ref);
  $M.26 := $store.ref($M.26, $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref(9, 8)), $0.ref);
  $M.26 := $store.ref($M.26, $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref(10, 8)), $0.ref);
  $M.26 := $store.ref($M.26, $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref(11, 8)), $0.ref);
  $M.26 := $store.ref($M.26, $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref(12, 8)), $0.ref);
  $M.26 := $store.ref($M.26, $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref(13, 8)), $0.ref);
  $M.26 := $store.ref($M.26, $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref(14, 8)), $0.ref);
  $M.92 := $store.ref($M.92, mrf24j40_ops, __this_module);
  $M.93 := $store.ref($M.93, $add.ref($add.ref(mrf24j40_ops, $mul.ref(0, 112)), $mul.ref(8, 1)), mrf24j40_start);
  $M.94 := $store.ref($M.94, $add.ref($add.ref(mrf24j40_ops, $mul.ref(0, 112)), $mul.ref(16, 1)), mrf24j40_stop);
  $M.95 := $store.ref($M.95, $add.ref($add.ref(mrf24j40_ops, $mul.ref(0, 112)), $mul.ref(24, 1)), mrf24j40_tx);
  $M.96 := $store.ref($M.96, $add.ref($add.ref(mrf24j40_ops, $mul.ref(0, 112)), $mul.ref(32, 1)), mrf24j40_ed);
  $M.97 := $store.ref($M.97, $add.ref($add.ref(mrf24j40_ops, $mul.ref(0, 112)), $mul.ref(40, 1)), mrf24j40_set_channel);
  $M.98 := $store.ref($M.98, $add.ref($add.ref(mrf24j40_ops, $mul.ref(0, 112)), $mul.ref(48, 1)), mrf24j40_filter);
  $M.99 := $store.ref($M.99, $add.ref($add.ref(mrf24j40_ops, $mul.ref(0, 112)), $mul.ref(56, 1)), $0.ref);
  $M.100 := $store.ref($M.100, $add.ref($add.ref(mrf24j40_ops, $mul.ref(0, 112)), $mul.ref(64, 1)), $0.ref);
  $M.101 := $store.ref($M.101, $add.ref($add.ref(mrf24j40_ops, $mul.ref(0, 112)), $mul.ref(72, 1)), $0.ref);
  $M.102 := $store.ref($M.102, $add.ref($add.ref(mrf24j40_ops, $mul.ref(0, 112)), $mul.ref(80, 1)), $0.ref);
  $M.103 := $store.ref($M.103, $add.ref($add.ref(mrf24j40_ops, $mul.ref(0, 112)), $mul.ref(88, 1)), $0.ref);
  $M.104 := $store.ref($M.104, $add.ref($add.ref(mrf24j40_ops, $mul.ref(0, 112)), $mul.ref(96, 1)), $0.ref);
  $M.105 := $store.ref($M.105, $add.ref($add.ref(mrf24j40_ops, $mul.ref(0, 112)), $mul.ref(104, 1)), $0.ref);
  $M.106 := $store.ref($M.106, mrf24j40_driver, mrf24j40_ids);
  $M.107 := $store.ref($M.107, $add.ref($add.ref(mrf24j40_driver, $mul.ref(0, 168)), $mul.ref(8, 1)), mrf24j40_probe);
  $M.108 := $store.ref($M.108, $add.ref($add.ref(mrf24j40_driver, $mul.ref(0, 168)), $mul.ref(16, 1)), mrf24j40_remove);
  $M.109 := $store.ref($M.109, $add.ref($add.ref(mrf24j40_driver, $mul.ref(0, 168)), $mul.ref(24, 1)), $0.ref);
  $M.110 := $store.ref($M.110, $add.ref($add.ref(mrf24j40_driver, $mul.ref(0, 168)), $mul.ref(32, 1)), $0.ref);
  $M.111 := $store.ref($M.111, $add.ref($add.ref(mrf24j40_driver, $mul.ref(0, 168)), $mul.ref(40, 1)), $0.ref);
  $M.112 := $store.ref($M.112, $add.ref($add.ref($add.ref(mrf24j40_driver, $mul.ref(0, 168)), $mul.ref(48, 1)), $mul.ref(0, 1)), .str.2);
  $M.113 := $store.ref($M.113, $add.ref($add.ref($add.ref(mrf24j40_driver, $mul.ref(0, 168)), $mul.ref(48, 1)), $mul.ref(8, 1)), spi_bus_type);
  $M.114 := $store.ref($M.114, $add.ref($add.ref($add.ref(mrf24j40_driver, $mul.ref(0, 168)), $mul.ref(48, 1)), $mul.ref(16, 1)), __this_module);
  $M.115 := $store.ref($M.115, $add.ref($add.ref($add.ref(mrf24j40_driver, $mul.ref(0, 168)), $mul.ref(48, 1)), $mul.ref(24, 1)), $0.ref);
  $M.116 := $store.i8($M.116, $add.ref($add.ref($add.ref(mrf24j40_driver, $mul.ref(0, 168)), $mul.ref(48, 1)), $mul.ref(32, 1)), 0);
  $M.117 := $store.ref($M.117, $add.ref($add.ref($add.ref(mrf24j40_driver, $mul.ref(0, 168)), $mul.ref(48, 1)), $mul.ref(40, 1)), $0.ref);
  $M.118 := $store.ref($M.118, $add.ref($add.ref($add.ref(mrf24j40_driver, $mul.ref(0, 168)), $mul.ref(48, 1)), $mul.ref(48, 1)), $0.ref);
  $M.119 := $store.ref($M.119, $add.ref($add.ref($add.ref(mrf24j40_driver, $mul.ref(0, 168)), $mul.ref(48, 1)), $mul.ref(56, 1)), $0.ref);
  $M.120 := $store.ref($M.120, $add.ref($add.ref($add.ref(mrf24j40_driver, $mul.ref(0, 168)), $mul.ref(48, 1)), $mul.ref(64, 1)), $0.ref);
  $M.121 := $store.ref($M.121, $add.ref($add.ref($add.ref(mrf24j40_driver, $mul.ref(0, 168)), $mul.ref(48, 1)), $mul.ref(72, 1)), $0.ref);
  $M.122 := $store.ref($M.122, $add.ref($add.ref($add.ref(mrf24j40_driver, $mul.ref(0, 168)), $mul.ref(48, 1)), $mul.ref(80, 1)), $0.ref);
  $M.123 := $store.ref($M.123, $add.ref($add.ref($add.ref(mrf24j40_driver, $mul.ref(0, 168)), $mul.ref(48, 1)), $mul.ref(88, 1)), $0.ref);
  $M.124 := $store.ref($M.124, $add.ref($add.ref($add.ref(mrf24j40_driver, $mul.ref(0, 168)), $mul.ref(48, 1)), $mul.ref(96, 1)), $0.ref);
  $M.125 := $store.ref($M.125, $add.ref($add.ref($add.ref(mrf24j40_driver, $mul.ref(0, 168)), $mul.ref(48, 1)), $mul.ref(104, 1)), $0.ref);
  $M.126 := $store.ref($M.126, $add.ref($add.ref($add.ref(mrf24j40_driver, $mul.ref(0, 168)), $mul.ref(48, 1)), $mul.ref(112, 1)), $0.ref);
  $M.127 := 109;
  $M.128 := 114;
  $M.129 := 102;
  $M.130 := 50;
  $M.131 := 52;
  $M.132 := 106;
  $M.133 := 52;
  $M.134 := 48;
  $M.135 := 0;
  $M.136 := 0;
  $M.137 := 0;
  $M.138 := 0;
  $M.139 := 0;
  $M.140 := 0;
  $M.141 := 0;
  $M.142 := 0;
  $M.143 := 0;
  $M.144 := 0;
  $M.145 := 0;
  $M.146 := 0;
  $M.147 := 0;
  $M.148 := 0;
  $M.149 := 0;
  $M.150 := 0;
  $M.151 := 0;
  $M.152 := 0;
  $M.153 := 0;
  $M.154 := 0;
  $M.155 := 0;
  $M.156 := 0;
  $M.157 := 0;
  $M.158 := 0;
  $M.159 := 0;
  $M.160 := 109;
  $M.161 := 114;
  $M.162 := 102;
  $M.163 := 50;
  $M.164 := 52;
  $M.165 := 106;
  $M.166 := 52;
  $M.167 := 48;
  $M.168 := 109;
  $M.169 := 97;
  $M.170 := 0;
  $M.171 := 0;
  $M.172 := 0;
  $M.173 := 0;
  $M.174 := 0;
  $M.175 := 0;
  $M.176 := 0;
  $M.177 := 0;
  $M.178 := 0;
  $M.179 := 0;
  $M.180 := 0;
  $M.181 := 0;
  $M.182 := 0;
  $M.183 := 0;
  $M.184 := 0;
  $M.185 := 0;
  $M.186 := 0;
  $M.187 := 0;
  $M.188 := 0;
  $M.189 := 0;
  $M.190 := 0;
  $M.191 := 0;
  $M.192 := 0;
  $M.193 := 0;
  $M.194 := 0;
  $M.195 := 0;
  $M.196 := 0;
  $M.197 := 0;
  $M.198 := 0;
  $M.199 := 0;
  $M.200 := 0;
  $M.201 := 0;
  $M.202 := 0;
  $M.203 := 0;
  $M.204 := 0;
  $M.205 := 0;
  $M.206 := 0;
  $M.207 := 0;
  $M.208 := 0;
  $M.209 := 0;
  $M.210 := 0;
  $M.211 := 0;
  $M.212 := 0;
  $M.213 := 0;
  $M.214 := 0;
  $M.215 := 0;
  $M.216 := 0;
  $M.217 := 0;
  $M.218 := 0;
  $M.219 := 0;
  $M.220 := 0;
  $M.221 := 0;
  $M.222 := 0;
  $M.223 := 0;
  $M.224 := 0;
  $M.225 := 0;
  $M.226 := .str.1.61;
  $M.227 := 0;
  call {:cexpr "errno_global"} boogie_si_record_i32(0);
  $exn := false;
  return;
}
procedure  $memcpy.i8(M.dst: [ref] i8, M.src: [ref] i8, dst: ref, src: ref, len: ref, isvolatile: bool) returns (M.ret: [ref] i8)
{
  assume (forall x: ref :: $sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len)) ==> M.ret[x] == M.src[$add.ref($sub.ref(src,dst),x)]);
  assume (forall x: ref :: $slt.ref.bool(x,dst) ==> M.ret[x] == M.dst[x]);
  assume (forall x: ref :: $sle.ref.bool($add.ref(dst,len),x) ==> M.ret[x] == M.dst[x]);
}

procedure  $memset.i8(M: [ref] i8, dst: ref, val: i8, len: ref, isvolatile: bool) returns (M.ret: [ref] i8)
{
  assume (forall x: ref :: $sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len)) ==> M.ret[x] == val);
  assume (forall x: ref :: $slt.ref.bool(x,dst) ==> M.ret[x] == M[x]);
  assume (forall x: ref :: $sle.ref.bool($add.ref(dst,len),x) ==> M.ret[x] == M[x]);
}

const $u0: i32;
procedure  boogie_si_record_i16(x: i16);
procedure  boogie_si_record_i32(x: i32);
procedure  boogie_si_record_i64(x: i64);
procedure  boogie_si_record_i8(x: i8);
procedure  boogie_si_record_ref(x: ref);
procedure  $initialize()
{
  call __SMACK_static_init();
  call __SMACK_init_func_memory_model();
  return;
}
