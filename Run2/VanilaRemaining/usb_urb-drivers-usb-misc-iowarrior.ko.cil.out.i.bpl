// generated by SMACK version 2.4.1 for svcomp
// via /usr/local/bin/smack /proj/SMACK/SMACKBenchResults/data/sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-usb-misc-iowarrior.ko.cil.out.i -x svcomp --verifier svcomp -t -q -bpl usb_urb-drivers-usb-misc-iowarrior.ko.cil.out.i.bpl

// Basic types
type i1 = int;
type i5 = int;
type i6 = int;
type i8 = int;
type i16 = int;
type i24 = int;
type i32 = int;
type i40 = int;
type i48 = int;
type i56 = int;
type i64 = int;
type i80 = int;
type i88 = int;
type i96 = int;
type i128 = int;
type i160 = int;
type i256 = int;
type ref = i64;
type float;

// Basic constants
const $0: i32;
axiom ($0 == 0);
const $1: i32;
axiom ($1 == 1);
const $0.ref: ref;
axiom ($0.ref == 0);
const $1.ref: ref;
axiom ($1.ref == 1);
const $1024.ref: ref;
axiom ($1024.ref == 1024);
// Memory model constants
const $GLOBALS_BOTTOM: ref;
const $EXTERNS_BOTTOM: ref;
const $MALLOC_TOP: ref;

// Memory maps (369 regions)
var $M.0: [ref] i8;
var $M.1: i32;
var $M.2: i32;
var $M.3: [ref] ref;
var $M.4: [ref] i32;
var $M.5: [ref] i32;
var $M.6: [ref] ref;
var $M.7: [ref] ref;
var $M.8: [ref] ref;
var $M.9: [ref] ref;
var $M.10: [ref] i32;
var $M.11: [ref] ref;
var $M.12: i32;
var $M.13: [ref] i32;
var $M.14: [ref] ref;
var $M.15: [ref] ref;
var $M.16: [ref] i32;
var $M.17: [ref] ref;
var $M.18: [ref] i64;
var $M.19: [ref] ref;
var $M.20: [ref] ref;
var $M.21: [ref] ref;
var $M.22: i32;
var $M.23: i32;
var $M.24: i64;
var $M.25: i64;
var $M.26: i32;
var $M.27: ref;
var $M.28: ref;
var $M.29: ref;
var $M.30: ref;
var $M.31: ref;
var $M.32: ref;
var $M.33: i8;
var $M.34: i8;
var $M.35: i8;
var $M.36: i8;
var $M.37: i8;
var $M.38: i8;
var $M.39: i8;
var $M.40: i8;
var $M.41: i8;
var $M.42: i8;
var $M.43: i8;
var $M.44: i8;
var $M.45: i8;
var $M.46: i8;
var $M.47: i8;
var $M.48: i8;
var $M.49: i8;
var $M.50: i8;
var $M.51: i8;
var $M.52: i8;
var $M.53: i8;
var $M.54: i8;
var $M.55: i8;
var $M.56: i8;
var $M.57: i8;
var $M.58: i8;
var $M.59: i8;
var $M.60: i8;
var $M.61: i8;
var $M.62: i8;
var $M.63: i8;
var $M.64: i8;
var $M.65: i8;
var $M.66: i8;
var $M.67: i8;
var $M.68: i8;
var $M.69: i8;
var $M.70: i8;
var $M.71: i8;
var $M.72: i8;
var $M.73: i8;
var $M.74: i8;
var $M.75: i8;
var $M.76: i8;
var $M.77: i8;
var $M.78: i8;
var $M.79: i8;
var $M.80: i8;
var $M.81: i8;
var $M.82: i8;
var $M.83: i8;
var $M.84: i8;
var $M.85: i8;
var $M.86: i8;
var $M.87: i8;
var $M.88: i8;
var $M.89: i8;
var $M.90: i8;
var $M.91: i8;
var $M.92: i8;
var $M.93: i8;
var $M.94: i8;
var $M.95: i8;
var $M.96: i8;
var $M.97: i8;
var $M.98: i8;
var $M.99: i8;
var $M.100: i8;
var $M.101: i8;
var $M.102: i8;
var $M.103: i8;
var $M.104: i8;
var $M.105: i8;
var $M.106: i8;
var $M.107: i8;
var $M.108: i8;
var $M.109: i8;
var $M.110: i8;
var $M.111: i8;
var $M.112: i8;
var $M.113: i8;
var $M.114: i8;
var $M.115: i8;
var $M.116: i8;
var $M.117: i8;
var $M.118: i8;
var $M.119: i8;
var $M.120: i8;
var $M.121: i8;
var $M.122: i8;
var $M.123: i8;
var $M.124: i8;
var $M.125: i8;
var $M.126: i8;
var $M.127: i8;
var $M.128: i8;
var $M.129: i8;
var $M.130: i8;
var $M.131: i8;
var $M.132: i8;
var $M.133: i8;
var $M.134: i8;
var $M.135: i8;
var $M.136: i8;
var $M.137: i8;
var $M.138: ref;
var $M.139: ref;
var $M.140: i16;
var $M.141: i16;
var $M.142: ref;
var $M.143: i8;
var $M.144: i8;
var $M.145: i8;
var $M.146: i8;
var $M.147: i8;
var $M.148: i8;
var $M.149: i8;
var $M.150: i8;
var $M.151: i8;
var $M.152: i8;
var $M.153: i8;
var $M.154: i8;
var $M.155: i8;
var $M.156: i8;
var $M.157: i8;
var $M.158: i8;
var $M.159: i8;
var $M.160: i8;
var $M.161: i8;
var $M.162: i8;
var $M.163: i8;
var $M.164: i8;
var $M.165: i8;
var $M.166: i8;
var $M.167: i8;
var $M.168: i8;
var $M.169: i8;
var $M.170: i8;
var $M.171: i8;
var $M.172: i8;
var $M.173: i8;
var $M.174: i8;
var $M.175: i8;
var $M.176: i8;
var $M.177: i8;
var $M.178: i8;
var $M.179: i8;
var $M.180: i8;
var $M.181: i8;
var $M.182: i8;
var $M.183: i8;
var $M.184: i8;
var $M.185: i8;
var $M.186: i8;
var $M.187: i8;
var $M.188: i8;
var $M.189: i8;
var $M.190: i8;
var $M.191: i8;
var $M.192: i8;
var $M.193: i8;
var $M.194: i8;
var $M.195: i8;
var $M.196: i8;
var $M.197: i8;
var $M.198: i8;
var $M.199: i8;
var $M.200: i8;
var $M.201: i8;
var $M.202: i8;
var $M.203: i8;
var $M.204: i8;
var $M.205: i8;
var $M.206: i8;
var $M.207: i8;
var $M.208: i8;
var $M.209: i8;
var $M.210: i8;
var $M.211: i8;
var $M.212: i8;
var $M.213: i8;
var $M.214: i8;
var $M.215: [ref] ref;
var $M.216: [ref] ref;
var $M.217: [ref] ref;
var $M.218: [ref] ref;
var $M.219: [ref] ref;
var $M.220: [ref] ref;
var $M.221: [ref] ref;
var $M.222: [ref] ref;
var $M.223: [ref] ref;
var $M.224: [ref] ref;
var $M.225: [ref] i32;
var $M.226: [ref] i32;
var $M.227: [ref] i32;
var $M.228: [ref] ref;
var $M.229: [ref] ref;
var $M.230: [ref] ref;
var $M.231: [ref] ref;
var $M.232: [ref] ref;
var $M.233: [ref] i32;
var $M.234: [ref] i64;
var $M.235: [ref] ref;
var $M.236: [ref] ref;
var $M.237: [ref] ref;
var $M.238: [ref] ref;
var $M.239: [ref] ref;
var $M.240: [ref] ref;
var $M.241: [ref] i8;
var $M.242: [ref] ref;
var $M.243: [ref] ref;
var $M.244: [ref] ref;
var $M.245: [ref] ref;
var $M.246: [ref] ref;
var $M.247: [ref] ref;
var $M.248: [ref] ref;
var $M.249: [ref] ref;
var $M.250: [ref] ref;
var $M.251: [ref] i32;
var $M.252: [ref] i8;
var $M.253: i16;
var $M.254: i16;
var $M.255: i16;
var $M.256: i16;
var $M.257: i16;
var $M.258: i8;
var $M.259: i8;
var $M.260: i8;
var $M.261: i8;
var $M.262: i8;
var $M.263: i8;
var $M.264: i64;
var $M.265: i16;
var $M.266: i16;
var $M.267: i16;
var $M.268: i16;
var $M.269: i16;
var $M.270: i8;
var $M.271: i8;
var $M.272: i8;
var $M.273: i8;
var $M.274: i8;
var $M.275: i8;
var $M.276: i64;
var $M.277: i16;
var $M.278: i16;
var $M.279: i16;
var $M.280: i16;
var $M.281: i16;
var $M.282: i8;
var $M.283: i8;
var $M.284: i8;
var $M.285: i8;
var $M.286: i8;
var $M.287: i8;
var $M.288: i64;
var $M.289: i16;
var $M.290: i16;
var $M.291: i16;
var $M.292: i16;
var $M.293: i16;
var $M.294: i8;
var $M.295: i8;
var $M.296: i8;
var $M.297: i8;
var $M.298: i8;
var $M.299: i8;
var $M.300: i64;
var $M.301: i16;
var $M.302: i16;
var $M.303: i16;
var $M.304: i16;
var $M.305: i16;
var $M.306: i8;
var $M.307: i8;
var $M.308: i8;
var $M.309: i8;
var $M.310: i8;
var $M.311: i8;
var $M.312: i64;
var $M.313: [ref] ref;
var $M.314: [ref] ref;
var $M.315: [ref] ref;
var $M.316: [ref] i32;
var $M.317: ref;
var $M.318: ref;
var $M.319: ref;
var $M.320: ref;
var $M.321: ref;
var $M.322: ref;
var $M.323: ref;
var $M.324: ref;
var $M.325: ref;
var $M.326: ref;
var $M.327: ref;
var $M.328: ref;
var $M.329: ref;
var $M.330: ref;
var $M.331: ref;
var $M.332: ref;
var $M.333: ref;
var $M.334: ref;
var $M.335: ref;
var $M.336: ref;
var $M.337: ref;
var $M.338: ref;
var $M.339: ref;
var $M.340: ref;
var $M.341: ref;
var $M.342: ref;
var $M.343: [ref] i8;
var $M.344: [ref] i8;
var $M.345: [ref] i8;
var $M.346: [ref] i8;
var $M.347: [ref] i8;
var $M.348: [ref] i8;
var $M.349: [ref] i8;
var $M.350: [ref] i8;
var $M.351: [ref] i8;
var $M.352: [ref] i8;
var $M.353: [ref] i8;
var $M.354: [ref] i8;
var $M.355: [ref] i8;
var $M.356: [ref] i8;
var $M.357: [ref] i8;
var $M.358: [ref] i8;
var $M.359: [ref] i8;
var $M.360: [ref] i8;
var $M.361: [ref] i8;
var $M.362: [ref] i8;
var $M.363: [ref] i8;
var $M.364: [ref] i8;
var $M.365: [ref] i8;
var $M.366: [ref] i8;
var $M.367: ref;
var $M.368: i32;

// Memory address bounds
axiom ($GLOBALS_BOTTOM == $sub.ref(0, 223350));
axiom ($EXTERNS_BOTTOM == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32792)));
axiom ($MALLOC_TOP == 9223372036854775807);
function {:inline} $isExternal(p: ref) returns (bool) { $slt.ref.bool(p, $EXTERNS_BOTTOM) }

// SMT bit-vector/integer conversion
function {:builtin "(_ int2bv 64)"} $int2bv.64(i: i64) returns (bv64);
function {:builtin "bv2nat"} $bv2int.64(i: bv64) returns (i64);

// Integer arithmetic operations
function {:inline} $add.i1(i1: i1, i2: i1) returns (i1) { (i1 + i2) }
function {:inline} $add.i5(i1: i5, i2: i5) returns (i5) { (i1 + i2) }
function {:inline} $add.i6(i1: i6, i2: i6) returns (i6) { (i1 + i2) }
function {:inline} $add.i8(i1: i8, i2: i8) returns (i8) { (i1 + i2) }
function {:inline} $add.i16(i1: i16, i2: i16) returns (i16) { (i1 + i2) }
function {:inline} $add.i24(i1: i24, i2: i24) returns (i24) { (i1 + i2) }
function {:inline} $add.i32(i1: i32, i2: i32) returns (i32) { (i1 + i2) }
function {:inline} $add.i40(i1: i40, i2: i40) returns (i40) { (i1 + i2) }
function {:inline} $add.i48(i1: i48, i2: i48) returns (i48) { (i1 + i2) }
function {:inline} $add.i56(i1: i56, i2: i56) returns (i56) { (i1 + i2) }
function {:inline} $add.i64(i1: i64, i2: i64) returns (i64) { (i1 + i2) }
function {:inline} $add.i80(i1: i80, i2: i80) returns (i80) { (i1 + i2) }
function {:inline} $add.i88(i1: i88, i2: i88) returns (i88) { (i1 + i2) }
function {:inline} $add.i96(i1: i96, i2: i96) returns (i96) { (i1 + i2) }
function {:inline} $add.i128(i1: i128, i2: i128) returns (i128) { (i1 + i2) }
function {:inline} $add.i160(i1: i160, i2: i160) returns (i160) { (i1 + i2) }
function {:inline} $add.i256(i1: i256, i2: i256) returns (i256) { (i1 + i2) }
function {:inline} $sub.i1(i1: i1, i2: i1) returns (i1) { (i1 - i2) }
function {:inline} $sub.i5(i1: i5, i2: i5) returns (i5) { (i1 - i2) }
function {:inline} $sub.i6(i1: i6, i2: i6) returns (i6) { (i1 - i2) }
function {:inline} $sub.i8(i1: i8, i2: i8) returns (i8) { (i1 - i2) }
function {:inline} $sub.i16(i1: i16, i2: i16) returns (i16) { (i1 - i2) }
function {:inline} $sub.i24(i1: i24, i2: i24) returns (i24) { (i1 - i2) }
function {:inline} $sub.i32(i1: i32, i2: i32) returns (i32) { (i1 - i2) }
function {:inline} $sub.i40(i1: i40, i2: i40) returns (i40) { (i1 - i2) }
function {:inline} $sub.i48(i1: i48, i2: i48) returns (i48) { (i1 - i2) }
function {:inline} $sub.i56(i1: i56, i2: i56) returns (i56) { (i1 - i2) }
function {:inline} $sub.i64(i1: i64, i2: i64) returns (i64) { (i1 - i2) }
function {:inline} $sub.i80(i1: i80, i2: i80) returns (i80) { (i1 - i2) }
function {:inline} $sub.i88(i1: i88, i2: i88) returns (i88) { (i1 - i2) }
function {:inline} $sub.i96(i1: i96, i2: i96) returns (i96) { (i1 - i2) }
function {:inline} $sub.i128(i1: i128, i2: i128) returns (i128) { (i1 - i2) }
function {:inline} $sub.i160(i1: i160, i2: i160) returns (i160) { (i1 - i2) }
function {:inline} $sub.i256(i1: i256, i2: i256) returns (i256) { (i1 - i2) }
function {:inline} $mul.i1(i1: i1, i2: i1) returns (i1) { (i1 * i2) }
function {:inline} $mul.i5(i1: i5, i2: i5) returns (i5) { (i1 * i2) }
function {:inline} $mul.i6(i1: i6, i2: i6) returns (i6) { (i1 * i2) }
function {:inline} $mul.i8(i1: i8, i2: i8) returns (i8) { (i1 * i2) }
function {:inline} $mul.i16(i1: i16, i2: i16) returns (i16) { (i1 * i2) }
function {:inline} $mul.i24(i1: i24, i2: i24) returns (i24) { (i1 * i2) }
function {:inline} $mul.i32(i1: i32, i2: i32) returns (i32) { (i1 * i2) }
function {:inline} $mul.i40(i1: i40, i2: i40) returns (i40) { (i1 * i2) }
function {:inline} $mul.i48(i1: i48, i2: i48) returns (i48) { (i1 * i2) }
function {:inline} $mul.i56(i1: i56, i2: i56) returns (i56) { (i1 * i2) }
function {:inline} $mul.i64(i1: i64, i2: i64) returns (i64) { (i1 * i2) }
function {:inline} $mul.i80(i1: i80, i2: i80) returns (i80) { (i1 * i2) }
function {:inline} $mul.i88(i1: i88, i2: i88) returns (i88) { (i1 * i2) }
function {:inline} $mul.i96(i1: i96, i2: i96) returns (i96) { (i1 * i2) }
function {:inline} $mul.i128(i1: i128, i2: i128) returns (i128) { (i1 * i2) }
function {:inline} $mul.i160(i1: i160, i2: i160) returns (i160) { (i1 * i2) }
function {:inline} $mul.i256(i1: i256, i2: i256) returns (i256) { (i1 * i2) }
function {:builtin "div"} $sdiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "div"} $sdiv.i5(i1: i5, i2: i5) returns (i5);
function {:builtin "div"} $sdiv.i6(i1: i6, i2: i6) returns (i6);
function {:builtin "div"} $sdiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $sdiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $sdiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $sdiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $sdiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $sdiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $sdiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $sdiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $sdiv.i80(i1: i80, i2: i80) returns (i80);
function {:builtin "div"} $sdiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $sdiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $sdiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $sdiv.i160(i1: i160, i2: i160) returns (i160);
function {:builtin "div"} $sdiv.i256(i1: i256, i2: i256) returns (i256);
function {:builtin "mod"} $smod.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "mod"} $smod.i5(i1: i5, i2: i5) returns (i5);
function {:builtin "mod"} $smod.i6(i1: i6, i2: i6) returns (i6);
function {:builtin "mod"} $smod.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "mod"} $smod.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "mod"} $smod.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "mod"} $smod.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "mod"} $smod.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "mod"} $smod.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "mod"} $smod.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "mod"} $smod.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "mod"} $smod.i80(i1: i80, i2: i80) returns (i80);
function {:builtin "mod"} $smod.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "mod"} $smod.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "mod"} $smod.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "mod"} $smod.i160(i1: i160, i2: i160) returns (i160);
function {:builtin "mod"} $smod.i256(i1: i256, i2: i256) returns (i256);
function {:builtin "div"} $udiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "div"} $udiv.i5(i1: i5, i2: i5) returns (i5);
function {:builtin "div"} $udiv.i6(i1: i6, i2: i6) returns (i6);
function {:builtin "div"} $udiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $udiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $udiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $udiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $udiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $udiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $udiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $udiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $udiv.i80(i1: i80, i2: i80) returns (i80);
function {:builtin "div"} $udiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $udiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $udiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $udiv.i160(i1: i160, i2: i160) returns (i160);
function {:builtin "div"} $udiv.i256(i1: i256, i2: i256) returns (i256);
function {:inline} $srem.i1(i1: i1, i2: i1) returns (i1) { (if ($ne.i1.bool($smod.i1(i1, i2), 0) && $slt.i1.bool(i1, 0)) then $sub.i1($smod.i1(i1, i2), $smax.i1(i2, $sub.i1(0, i2))) else $smod.i1(i1, i2)) }
function {:inline} $srem.i5(i1: i5, i2: i5) returns (i5) { (if ($ne.i5.bool($smod.i5(i1, i2), 0) && $slt.i5.bool(i1, 0)) then $sub.i5($smod.i5(i1, i2), $smax.i5(i2, $sub.i5(0, i2))) else $smod.i5(i1, i2)) }
function {:inline} $srem.i6(i1: i6, i2: i6) returns (i6) { (if ($ne.i6.bool($smod.i6(i1, i2), 0) && $slt.i6.bool(i1, 0)) then $sub.i6($smod.i6(i1, i2), $smax.i6(i2, $sub.i6(0, i2))) else $smod.i6(i1, i2)) }
function {:inline} $srem.i8(i1: i8, i2: i8) returns (i8) { (if ($ne.i8.bool($smod.i8(i1, i2), 0) && $slt.i8.bool(i1, 0)) then $sub.i8($smod.i8(i1, i2), $smax.i8(i2, $sub.i8(0, i2))) else $smod.i8(i1, i2)) }
function {:inline} $srem.i16(i1: i16, i2: i16) returns (i16) { (if ($ne.i16.bool($smod.i16(i1, i2), 0) && $slt.i16.bool(i1, 0)) then $sub.i16($smod.i16(i1, i2), $smax.i16(i2, $sub.i16(0, i2))) else $smod.i16(i1, i2)) }
function {:inline} $srem.i24(i1: i24, i2: i24) returns (i24) { (if ($ne.i24.bool($smod.i24(i1, i2), 0) && $slt.i24.bool(i1, 0)) then $sub.i24($smod.i24(i1, i2), $smax.i24(i2, $sub.i24(0, i2))) else $smod.i24(i1, i2)) }
function {:inline} $srem.i32(i1: i32, i2: i32) returns (i32) { (if ($ne.i32.bool($smod.i32(i1, i2), 0) && $slt.i32.bool(i1, 0)) then $sub.i32($smod.i32(i1, i2), $smax.i32(i2, $sub.i32(0, i2))) else $smod.i32(i1, i2)) }
function {:inline} $srem.i40(i1: i40, i2: i40) returns (i40) { (if ($ne.i40.bool($smod.i40(i1, i2), 0) && $slt.i40.bool(i1, 0)) then $sub.i40($smod.i40(i1, i2), $smax.i40(i2, $sub.i40(0, i2))) else $smod.i40(i1, i2)) }
function {:inline} $srem.i48(i1: i48, i2: i48) returns (i48) { (if ($ne.i48.bool($smod.i48(i1, i2), 0) && $slt.i48.bool(i1, 0)) then $sub.i48($smod.i48(i1, i2), $smax.i48(i2, $sub.i48(0, i2))) else $smod.i48(i1, i2)) }
function {:inline} $srem.i56(i1: i56, i2: i56) returns (i56) { (if ($ne.i56.bool($smod.i56(i1, i2), 0) && $slt.i56.bool(i1, 0)) then $sub.i56($smod.i56(i1, i2), $smax.i56(i2, $sub.i56(0, i2))) else $smod.i56(i1, i2)) }
function {:inline} $srem.i64(i1: i64, i2: i64) returns (i64) { (if ($ne.i64.bool($smod.i64(i1, i2), 0) && $slt.i64.bool(i1, 0)) then $sub.i64($smod.i64(i1, i2), $smax.i64(i2, $sub.i64(0, i2))) else $smod.i64(i1, i2)) }
function {:inline} $srem.i80(i1: i80, i2: i80) returns (i80) { (if ($ne.i80.bool($smod.i80(i1, i2), 0) && $slt.i80.bool(i1, 0)) then $sub.i80($smod.i80(i1, i2), $smax.i80(i2, $sub.i80(0, i2))) else $smod.i80(i1, i2)) }
function {:inline} $srem.i88(i1: i88, i2: i88) returns (i88) { (if ($ne.i88.bool($smod.i88(i1, i2), 0) && $slt.i88.bool(i1, 0)) then $sub.i88($smod.i88(i1, i2), $smax.i88(i2, $sub.i88(0, i2))) else $smod.i88(i1, i2)) }
function {:inline} $srem.i96(i1: i96, i2: i96) returns (i96) { (if ($ne.i96.bool($smod.i96(i1, i2), 0) && $slt.i96.bool(i1, 0)) then $sub.i96($smod.i96(i1, i2), $smax.i96(i2, $sub.i96(0, i2))) else $smod.i96(i1, i2)) }
function {:inline} $srem.i128(i1: i128, i2: i128) returns (i128) { (if ($ne.i128.bool($smod.i128(i1, i2), 0) && $slt.i128.bool(i1, 0)) then $sub.i128($smod.i128(i1, i2), $smax.i128(i2, $sub.i128(0, i2))) else $smod.i128(i1, i2)) }
function {:inline} $srem.i160(i1: i160, i2: i160) returns (i160) { (if ($ne.i160.bool($smod.i160(i1, i2), 0) && $slt.i160.bool(i1, 0)) then $sub.i160($smod.i160(i1, i2), $smax.i160(i2, $sub.i160(0, i2))) else $smod.i160(i1, i2)) }
function {:inline} $srem.i256(i1: i256, i2: i256) returns (i256) { (if ($ne.i256.bool($smod.i256(i1, i2), 0) && $slt.i256.bool(i1, 0)) then $sub.i256($smod.i256(i1, i2), $smax.i256(i2, $sub.i256(0, i2))) else $smod.i256(i1, i2)) }
function {:inline} $urem.i1(i1: i1, i2: i1) returns (i1) { $smod.i1(i1, i2) }
function {:inline} $urem.i5(i1: i5, i2: i5) returns (i5) { $smod.i5(i1, i2) }
function {:inline} $urem.i6(i1: i6, i2: i6) returns (i6) { $smod.i6(i1, i2) }
function {:inline} $urem.i8(i1: i8, i2: i8) returns (i8) { $smod.i8(i1, i2) }
function {:inline} $urem.i16(i1: i16, i2: i16) returns (i16) { $smod.i16(i1, i2) }
function {:inline} $urem.i24(i1: i24, i2: i24) returns (i24) { $smod.i24(i1, i2) }
function {:inline} $urem.i32(i1: i32, i2: i32) returns (i32) { $smod.i32(i1, i2) }
function {:inline} $urem.i40(i1: i40, i2: i40) returns (i40) { $smod.i40(i1, i2) }
function {:inline} $urem.i48(i1: i48, i2: i48) returns (i48) { $smod.i48(i1, i2) }
function {:inline} $urem.i56(i1: i56, i2: i56) returns (i56) { $smod.i56(i1, i2) }
function {:inline} $urem.i64(i1: i64, i2: i64) returns (i64) { $smod.i64(i1, i2) }
function {:inline} $urem.i80(i1: i80, i2: i80) returns (i80) { $smod.i80(i1, i2) }
function {:inline} $urem.i88(i1: i88, i2: i88) returns (i88) { $smod.i88(i1, i2) }
function {:inline} $urem.i96(i1: i96, i2: i96) returns (i96) { $smod.i96(i1, i2) }
function {:inline} $urem.i128(i1: i128, i2: i128) returns (i128) { $smod.i128(i1, i2) }
function {:inline} $urem.i160(i1: i160, i2: i160) returns (i160) { $smod.i160(i1, i2) }
function {:inline} $urem.i256(i1: i256, i2: i256) returns (i256) { $smod.i256(i1, i2) }
function $shl.i1(i1: i1, i2: i1) returns (i1);
function $shl.i5(i1: i5, i2: i5) returns (i5);
function $shl.i6(i1: i6, i2: i6) returns (i6);
function $shl.i8(i1: i8, i2: i8) returns (i8);
function $shl.i16(i1: i16, i2: i16) returns (i16);
function $shl.i24(i1: i24, i2: i24) returns (i24);
function $shl.i32(i1: i32, i2: i32) returns (i32);
function $shl.i40(i1: i40, i2: i40) returns (i40);
function $shl.i48(i1: i48, i2: i48) returns (i48);
function $shl.i56(i1: i56, i2: i56) returns (i56);
function $shl.i64(i1: i64, i2: i64) returns (i64);
function $shl.i80(i1: i80, i2: i80) returns (i80);
function $shl.i88(i1: i88, i2: i88) returns (i88);
function $shl.i96(i1: i96, i2: i96) returns (i96);
function $shl.i128(i1: i128, i2: i128) returns (i128);
function $shl.i160(i1: i160, i2: i160) returns (i160);
function $shl.i256(i1: i256, i2: i256) returns (i256);
function $lshr.i1(i1: i1, i2: i1) returns (i1);
function $lshr.i5(i1: i5, i2: i5) returns (i5);
function $lshr.i6(i1: i6, i2: i6) returns (i6);
function $lshr.i8(i1: i8, i2: i8) returns (i8);
function $lshr.i16(i1: i16, i2: i16) returns (i16);
function $lshr.i24(i1: i24, i2: i24) returns (i24);
function $lshr.i32(i1: i32, i2: i32) returns (i32);
function $lshr.i40(i1: i40, i2: i40) returns (i40);
function $lshr.i48(i1: i48, i2: i48) returns (i48);
function $lshr.i56(i1: i56, i2: i56) returns (i56);
function $lshr.i64(i1: i64, i2: i64) returns (i64);
function $lshr.i80(i1: i80, i2: i80) returns (i80);
function $lshr.i88(i1: i88, i2: i88) returns (i88);
function $lshr.i96(i1: i96, i2: i96) returns (i96);
function $lshr.i128(i1: i128, i2: i128) returns (i128);
function $lshr.i160(i1: i160, i2: i160) returns (i160);
function $lshr.i256(i1: i256, i2: i256) returns (i256);
function $ashr.i1(i1: i1, i2: i1) returns (i1);
function $ashr.i5(i1: i5, i2: i5) returns (i5);
function $ashr.i6(i1: i6, i2: i6) returns (i6);
function $ashr.i8(i1: i8, i2: i8) returns (i8);
function $ashr.i16(i1: i16, i2: i16) returns (i16);
function $ashr.i24(i1: i24, i2: i24) returns (i24);
function $ashr.i32(i1: i32, i2: i32) returns (i32);
function $ashr.i40(i1: i40, i2: i40) returns (i40);
function $ashr.i48(i1: i48, i2: i48) returns (i48);
function $ashr.i56(i1: i56, i2: i56) returns (i56);
function $ashr.i64(i1: i64, i2: i64) returns (i64);
function $ashr.i80(i1: i80, i2: i80) returns (i80);
function $ashr.i88(i1: i88, i2: i88) returns (i88);
function $ashr.i96(i1: i96, i2: i96) returns (i96);
function $ashr.i128(i1: i128, i2: i128) returns (i128);
function $ashr.i160(i1: i160, i2: i160) returns (i160);
function $ashr.i256(i1: i256, i2: i256) returns (i256);
function $and.i1(i1: i1, i2: i1) returns (i1);
function $and.i5(i1: i5, i2: i5) returns (i5);
function $and.i6(i1: i6, i2: i6) returns (i6);
function $and.i8(i1: i8, i2: i8) returns (i8);
function $and.i16(i1: i16, i2: i16) returns (i16);
function $and.i24(i1: i24, i2: i24) returns (i24);
function $and.i32(i1: i32, i2: i32) returns (i32);
function $and.i40(i1: i40, i2: i40) returns (i40);
function $and.i48(i1: i48, i2: i48) returns (i48);
function $and.i56(i1: i56, i2: i56) returns (i56);
function $and.i64(i1: i64, i2: i64) returns (i64);
function $and.i80(i1: i80, i2: i80) returns (i80);
function $and.i88(i1: i88, i2: i88) returns (i88);
function $and.i96(i1: i96, i2: i96) returns (i96);
function $and.i128(i1: i128, i2: i128) returns (i128);
function $and.i160(i1: i160, i2: i160) returns (i160);
function $and.i256(i1: i256, i2: i256) returns (i256);
function $or.i1(i1: i1, i2: i1) returns (i1);
function $or.i5(i1: i5, i2: i5) returns (i5);
function $or.i6(i1: i6, i2: i6) returns (i6);
function $or.i8(i1: i8, i2: i8) returns (i8);
function $or.i16(i1: i16, i2: i16) returns (i16);
function $or.i24(i1: i24, i2: i24) returns (i24);
function $or.i32(i1: i32, i2: i32) returns (i32);
function $or.i40(i1: i40, i2: i40) returns (i40);
function $or.i48(i1: i48, i2: i48) returns (i48);
function $or.i56(i1: i56, i2: i56) returns (i56);
function $or.i64(i1: i64, i2: i64) returns (i64);
function $or.i80(i1: i80, i2: i80) returns (i80);
function $or.i88(i1: i88, i2: i88) returns (i88);
function $or.i96(i1: i96, i2: i96) returns (i96);
function $or.i128(i1: i128, i2: i128) returns (i128);
function $or.i160(i1: i160, i2: i160) returns (i160);
function $or.i256(i1: i256, i2: i256) returns (i256);
function $xor.i1(i1: i1, i2: i1) returns (i1);
function $xor.i5(i1: i5, i2: i5) returns (i5);
function $xor.i6(i1: i6, i2: i6) returns (i6);
function $xor.i8(i1: i8, i2: i8) returns (i8);
function $xor.i16(i1: i16, i2: i16) returns (i16);
function $xor.i24(i1: i24, i2: i24) returns (i24);
function $xor.i32(i1: i32, i2: i32) returns (i32);
function $xor.i40(i1: i40, i2: i40) returns (i40);
function $xor.i48(i1: i48, i2: i48) returns (i48);
function $xor.i56(i1: i56, i2: i56) returns (i56);
function $xor.i64(i1: i64, i2: i64) returns (i64);
function $xor.i80(i1: i80, i2: i80) returns (i80);
function $xor.i88(i1: i88, i2: i88) returns (i88);
function $xor.i96(i1: i96, i2: i96) returns (i96);
function $xor.i128(i1: i128, i2: i128) returns (i128);
function $xor.i160(i1: i160, i2: i160) returns (i160);
function $xor.i256(i1: i256, i2: i256) returns (i256);
function $nand.i1(i1: i1, i2: i1) returns (i1);
function $nand.i5(i1: i5, i2: i5) returns (i5);
function $nand.i6(i1: i6, i2: i6) returns (i6);
function $nand.i8(i1: i8, i2: i8) returns (i8);
function $nand.i16(i1: i16, i2: i16) returns (i16);
function $nand.i24(i1: i24, i2: i24) returns (i24);
function $nand.i32(i1: i32, i2: i32) returns (i32);
function $nand.i40(i1: i40, i2: i40) returns (i40);
function $nand.i48(i1: i48, i2: i48) returns (i48);
function $nand.i56(i1: i56, i2: i56) returns (i56);
function $nand.i64(i1: i64, i2: i64) returns (i64);
function $nand.i80(i1: i80, i2: i80) returns (i80);
function $nand.i88(i1: i88, i2: i88) returns (i88);
function $nand.i96(i1: i96, i2: i96) returns (i96);
function $nand.i128(i1: i128, i2: i128) returns (i128);
function $nand.i160(i1: i160, i2: i160) returns (i160);
function $nand.i256(i1: i256, i2: i256) returns (i256);
function $not.i1(i: i1) returns (i1);
function $not.i5(i: i5) returns (i5);
function $not.i6(i: i6) returns (i6);
function $not.i8(i: i8) returns (i8);
function $not.i16(i: i16) returns (i16);
function $not.i24(i: i24) returns (i24);
function $not.i32(i: i32) returns (i32);
function $not.i40(i: i40) returns (i40);
function $not.i48(i: i48) returns (i48);
function $not.i56(i: i56) returns (i56);
function $not.i64(i: i64) returns (i64);
function $not.i80(i: i80) returns (i80);
function $not.i88(i: i88) returns (i88);
function $not.i96(i: i96) returns (i96);
function $not.i128(i: i128) returns (i128);
function $not.i160(i: i160) returns (i160);
function $not.i256(i: i256) returns (i256);
function {:inline} $smin.i1(i1: i1, i2: i1) returns (i1) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i5(i1: i5, i2: i5) returns (i5) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i6(i1: i6, i2: i6) returns (i6) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i8(i1: i8, i2: i8) returns (i8) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i16(i1: i16, i2: i16) returns (i16) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i24(i1: i24, i2: i24) returns (i24) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i32(i1: i32, i2: i32) returns (i32) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i40(i1: i40, i2: i40) returns (i40) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i48(i1: i48, i2: i48) returns (i48) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i56(i1: i56, i2: i56) returns (i56) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i64(i1: i64, i2: i64) returns (i64) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i80(i1: i80, i2: i80) returns (i80) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i88(i1: i88, i2: i88) returns (i88) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i96(i1: i96, i2: i96) returns (i96) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i128(i1: i128, i2: i128) returns (i128) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i160(i1: i160, i2: i160) returns (i160) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i256(i1: i256, i2: i256) returns (i256) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smax.i1(i1: i1, i2: i1) returns (i1) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i5(i1: i5, i2: i5) returns (i5) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i6(i1: i6, i2: i6) returns (i6) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i8(i1: i8, i2: i8) returns (i8) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i16(i1: i16, i2: i16) returns (i16) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i24(i1: i24, i2: i24) returns (i24) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i32(i1: i32, i2: i32) returns (i32) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i40(i1: i40, i2: i40) returns (i40) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i48(i1: i48, i2: i48) returns (i48) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i56(i1: i56, i2: i56) returns (i56) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i64(i1: i64, i2: i64) returns (i64) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i80(i1: i80, i2: i80) returns (i80) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i88(i1: i88, i2: i88) returns (i88) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i96(i1: i96, i2: i96) returns (i96) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i128(i1: i128, i2: i128) returns (i128) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i160(i1: i160, i2: i160) returns (i160) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i256(i1: i256, i2: i256) returns (i256) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umin.i1(i1: i1, i2: i1) returns (i1) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i5(i1: i5, i2: i5) returns (i5) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i6(i1: i6, i2: i6) returns (i6) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i8(i1: i8, i2: i8) returns (i8) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i16(i1: i16, i2: i16) returns (i16) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i24(i1: i24, i2: i24) returns (i24) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i32(i1: i32, i2: i32) returns (i32) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i40(i1: i40, i2: i40) returns (i40) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i48(i1: i48, i2: i48) returns (i48) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i56(i1: i56, i2: i56) returns (i56) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i64(i1: i64, i2: i64) returns (i64) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i80(i1: i80, i2: i80) returns (i80) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i88(i1: i88, i2: i88) returns (i88) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i96(i1: i96, i2: i96) returns (i96) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i128(i1: i128, i2: i128) returns (i128) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i160(i1: i160, i2: i160) returns (i160) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i256(i1: i256, i2: i256) returns (i256) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umax.i1(i1: i1, i2: i1) returns (i1) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i5(i1: i5, i2: i5) returns (i5) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i6(i1: i6, i2: i6) returns (i6) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i8(i1: i8, i2: i8) returns (i8) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i16(i1: i16, i2: i16) returns (i16) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i24(i1: i24, i2: i24) returns (i24) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i32(i1: i32, i2: i32) returns (i32) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i40(i1: i40, i2: i40) returns (i40) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i48(i1: i48, i2: i48) returns (i48) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i56(i1: i56, i2: i56) returns (i56) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i64(i1: i64, i2: i64) returns (i64) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i80(i1: i80, i2: i80) returns (i80) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i88(i1: i88, i2: i88) returns (i88) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i96(i1: i96, i2: i96) returns (i96) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i128(i1: i128, i2: i128) returns (i128) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i160(i1: i160, i2: i160) returns (i160) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i256(i1: i256, i2: i256) returns (i256) { (if (i2 < i1) then i1 else i2) }
axiom ($and.i1(0, 0) == 0);
axiom ($or.i1(0, 0) == 0);
axiom ($xor.i1(0, 0) == 0);
axiom ($and.i1(0, 1) == 0);
axiom ($or.i1(0, 1) == 1);
axiom ($xor.i1(0, 1) == 1);
axiom ($and.i1(1, 0) == 0);
axiom ($or.i1(1, 0) == 1);
axiom ($xor.i1(1, 0) == 1);
axiom ($and.i1(1, 1) == 1);
axiom ($or.i1(1, 1) == 1);
axiom ($xor.i1(1, 1) == 0);
axiom ($and.i32(32, 16) == 0);
// Integer predicates
function {:inline} $ule.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i1(i1: i1, i2: i1) returns (i1) { (if $ule.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i5(i1: i5, i2: i5) returns (i1) { (if $ule.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i6(i1: i6, i2: i6) returns (i1) { (if $ule.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i8(i1: i8, i2: i8) returns (i1) { (if $ule.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i16(i1: i16, i2: i16) returns (i1) { (if $ule.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i24(i1: i24, i2: i24) returns (i1) { (if $ule.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i32(i1: i32, i2: i32) returns (i1) { (if $ule.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i40(i1: i40, i2: i40) returns (i1) { (if $ule.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i48(i1: i48, i2: i48) returns (i1) { (if $ule.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i56(i1: i56, i2: i56) returns (i1) { (if $ule.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i64(i1: i64, i2: i64) returns (i1) { (if $ule.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i80(i1: i80, i2: i80) returns (i1) { (if $ule.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i88(i1: i88, i2: i88) returns (i1) { (if $ule.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i96(i1: i96, i2: i96) returns (i1) { (if $ule.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i128(i1: i128, i2: i128) returns (i1) { (if $ule.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i160(i1: i160, i2: i160) returns (i1) { (if $ule.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i256(i1: i256, i2: i256) returns (i1) { (if $ule.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 < i2) }
function {:inline} $ult.i1(i1: i1, i2: i1) returns (i1) { (if $ult.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 < i2) }
function {:inline} $ult.i5(i1: i5, i2: i5) returns (i1) { (if $ult.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 < i2) }
function {:inline} $ult.i6(i1: i6, i2: i6) returns (i1) { (if $ult.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 < i2) }
function {:inline} $ult.i8(i1: i8, i2: i8) returns (i1) { (if $ult.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 < i2) }
function {:inline} $ult.i16(i1: i16, i2: i16) returns (i1) { (if $ult.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 < i2) }
function {:inline} $ult.i24(i1: i24, i2: i24) returns (i1) { (if $ult.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 < i2) }
function {:inline} $ult.i32(i1: i32, i2: i32) returns (i1) { (if $ult.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 < i2) }
function {:inline} $ult.i40(i1: i40, i2: i40) returns (i1) { (if $ult.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 < i2) }
function {:inline} $ult.i48(i1: i48, i2: i48) returns (i1) { (if $ult.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 < i2) }
function {:inline} $ult.i56(i1: i56, i2: i56) returns (i1) { (if $ult.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 < i2) }
function {:inline} $ult.i64(i1: i64, i2: i64) returns (i1) { (if $ult.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 < i2) }
function {:inline} $ult.i80(i1: i80, i2: i80) returns (i1) { (if $ult.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 < i2) }
function {:inline} $ult.i88(i1: i88, i2: i88) returns (i1) { (if $ult.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 < i2) }
function {:inline} $ult.i96(i1: i96, i2: i96) returns (i1) { (if $ult.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 < i2) }
function {:inline} $ult.i128(i1: i128, i2: i128) returns (i1) { (if $ult.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 < i2) }
function {:inline} $ult.i160(i1: i160, i2: i160) returns (i1) { (if $ult.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 < i2) }
function {:inline} $ult.i256(i1: i256, i2: i256) returns (i1) { (if $ult.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i1(i1: i1, i2: i1) returns (i1) { (if $uge.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i5(i1: i5, i2: i5) returns (i1) { (if $uge.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i6(i1: i6, i2: i6) returns (i1) { (if $uge.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i8(i1: i8, i2: i8) returns (i1) { (if $uge.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i16(i1: i16, i2: i16) returns (i1) { (if $uge.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i24(i1: i24, i2: i24) returns (i1) { (if $uge.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i32(i1: i32, i2: i32) returns (i1) { (if $uge.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i40(i1: i40, i2: i40) returns (i1) { (if $uge.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i48(i1: i48, i2: i48) returns (i1) { (if $uge.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i56(i1: i56, i2: i56) returns (i1) { (if $uge.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i64(i1: i64, i2: i64) returns (i1) { (if $uge.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i80(i1: i80, i2: i80) returns (i1) { (if $uge.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i88(i1: i88, i2: i88) returns (i1) { (if $uge.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i96(i1: i96, i2: i96) returns (i1) { (if $uge.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i128(i1: i128, i2: i128) returns (i1) { (if $uge.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i160(i1: i160, i2: i160) returns (i1) { (if $uge.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i256(i1: i256, i2: i256) returns (i1) { (if $uge.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i1(i1: i1, i2: i1) returns (i1) { (if $ugt.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i5(i1: i5, i2: i5) returns (i1) { (if $ugt.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i6(i1: i6, i2: i6) returns (i1) { (if $ugt.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i8(i1: i8, i2: i8) returns (i1) { (if $ugt.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i16(i1: i16, i2: i16) returns (i1) { (if $ugt.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i24(i1: i24, i2: i24) returns (i1) { (if $ugt.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i32(i1: i32, i2: i32) returns (i1) { (if $ugt.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i40(i1: i40, i2: i40) returns (i1) { (if $ugt.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i48(i1: i48, i2: i48) returns (i1) { (if $ugt.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i56(i1: i56, i2: i56) returns (i1) { (if $ugt.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i64(i1: i64, i2: i64) returns (i1) { (if $ugt.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i80(i1: i80, i2: i80) returns (i1) { (if $ugt.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i88(i1: i88, i2: i88) returns (i1) { (if $ugt.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i96(i1: i96, i2: i96) returns (i1) { (if $ugt.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i128(i1: i128, i2: i128) returns (i1) { (if $ugt.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i160(i1: i160, i2: i160) returns (i1) { (if $ugt.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i256(i1: i256, i2: i256) returns (i1) { (if $ugt.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i1(i1: i1, i2: i1) returns (i1) { (if $sle.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i5(i1: i5, i2: i5) returns (i1) { (if $sle.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i6(i1: i6, i2: i6) returns (i1) { (if $sle.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i8(i1: i8, i2: i8) returns (i1) { (if $sle.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i16(i1: i16, i2: i16) returns (i1) { (if $sle.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i24(i1: i24, i2: i24) returns (i1) { (if $sle.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i32(i1: i32, i2: i32) returns (i1) { (if $sle.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i40(i1: i40, i2: i40) returns (i1) { (if $sle.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i48(i1: i48, i2: i48) returns (i1) { (if $sle.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i56(i1: i56, i2: i56) returns (i1) { (if $sle.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i64(i1: i64, i2: i64) returns (i1) { (if $sle.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i80(i1: i80, i2: i80) returns (i1) { (if $sle.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i88(i1: i88, i2: i88) returns (i1) { (if $sle.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i96(i1: i96, i2: i96) returns (i1) { (if $sle.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i128(i1: i128, i2: i128) returns (i1) { (if $sle.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i160(i1: i160, i2: i160) returns (i1) { (if $sle.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i256(i1: i256, i2: i256) returns (i1) { (if $sle.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 < i2) }
function {:inline} $slt.i1(i1: i1, i2: i1) returns (i1) { (if $slt.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 < i2) }
function {:inline} $slt.i5(i1: i5, i2: i5) returns (i1) { (if $slt.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 < i2) }
function {:inline} $slt.i6(i1: i6, i2: i6) returns (i1) { (if $slt.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 < i2) }
function {:inline} $slt.i8(i1: i8, i2: i8) returns (i1) { (if $slt.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 < i2) }
function {:inline} $slt.i16(i1: i16, i2: i16) returns (i1) { (if $slt.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 < i2) }
function {:inline} $slt.i24(i1: i24, i2: i24) returns (i1) { (if $slt.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 < i2) }
function {:inline} $slt.i32(i1: i32, i2: i32) returns (i1) { (if $slt.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 < i2) }
function {:inline} $slt.i40(i1: i40, i2: i40) returns (i1) { (if $slt.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 < i2) }
function {:inline} $slt.i48(i1: i48, i2: i48) returns (i1) { (if $slt.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 < i2) }
function {:inline} $slt.i56(i1: i56, i2: i56) returns (i1) { (if $slt.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 < i2) }
function {:inline} $slt.i64(i1: i64, i2: i64) returns (i1) { (if $slt.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 < i2) }
function {:inline} $slt.i80(i1: i80, i2: i80) returns (i1) { (if $slt.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 < i2) }
function {:inline} $slt.i88(i1: i88, i2: i88) returns (i1) { (if $slt.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 < i2) }
function {:inline} $slt.i96(i1: i96, i2: i96) returns (i1) { (if $slt.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 < i2) }
function {:inline} $slt.i128(i1: i128, i2: i128) returns (i1) { (if $slt.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 < i2) }
function {:inline} $slt.i160(i1: i160, i2: i160) returns (i1) { (if $slt.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 < i2) }
function {:inline} $slt.i256(i1: i256, i2: i256) returns (i1) { (if $slt.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i1(i1: i1, i2: i1) returns (i1) { (if $sge.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i5(i1: i5, i2: i5) returns (i1) { (if $sge.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i6(i1: i6, i2: i6) returns (i1) { (if $sge.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i8(i1: i8, i2: i8) returns (i1) { (if $sge.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i16(i1: i16, i2: i16) returns (i1) { (if $sge.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i24(i1: i24, i2: i24) returns (i1) { (if $sge.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i32(i1: i32, i2: i32) returns (i1) { (if $sge.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i40(i1: i40, i2: i40) returns (i1) { (if $sge.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i48(i1: i48, i2: i48) returns (i1) { (if $sge.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i56(i1: i56, i2: i56) returns (i1) { (if $sge.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i64(i1: i64, i2: i64) returns (i1) { (if $sge.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i80(i1: i80, i2: i80) returns (i1) { (if $sge.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i88(i1: i88, i2: i88) returns (i1) { (if $sge.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i96(i1: i96, i2: i96) returns (i1) { (if $sge.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i128(i1: i128, i2: i128) returns (i1) { (if $sge.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i160(i1: i160, i2: i160) returns (i1) { (if $sge.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i256(i1: i256, i2: i256) returns (i1) { (if $sge.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i1(i1: i1, i2: i1) returns (i1) { (if $sgt.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i5(i1: i5, i2: i5) returns (i1) { (if $sgt.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i6(i1: i6, i2: i6) returns (i1) { (if $sgt.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i8(i1: i8, i2: i8) returns (i1) { (if $sgt.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i16(i1: i16, i2: i16) returns (i1) { (if $sgt.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i24(i1: i24, i2: i24) returns (i1) { (if $sgt.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i32(i1: i32, i2: i32) returns (i1) { (if $sgt.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i40(i1: i40, i2: i40) returns (i1) { (if $sgt.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i48(i1: i48, i2: i48) returns (i1) { (if $sgt.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i56(i1: i56, i2: i56) returns (i1) { (if $sgt.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i64(i1: i64, i2: i64) returns (i1) { (if $sgt.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i80(i1: i80, i2: i80) returns (i1) { (if $sgt.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i88(i1: i88, i2: i88) returns (i1) { (if $sgt.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i96(i1: i96, i2: i96) returns (i1) { (if $sgt.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i128(i1: i128, i2: i128) returns (i1) { (if $sgt.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i160(i1: i160, i2: i160) returns (i1) { (if $sgt.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i256(i1: i256, i2: i256) returns (i1) { (if $sgt.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 == i2) }
function {:inline} $eq.i1(i1: i1, i2: i1) returns (i1) { (if $eq.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 == i2) }
function {:inline} $eq.i5(i1: i5, i2: i5) returns (i1) { (if $eq.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 == i2) }
function {:inline} $eq.i6(i1: i6, i2: i6) returns (i1) { (if $eq.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 == i2) }
function {:inline} $eq.i8(i1: i8, i2: i8) returns (i1) { (if $eq.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 == i2) }
function {:inline} $eq.i16(i1: i16, i2: i16) returns (i1) { (if $eq.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 == i2) }
function {:inline} $eq.i24(i1: i24, i2: i24) returns (i1) { (if $eq.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 == i2) }
function {:inline} $eq.i32(i1: i32, i2: i32) returns (i1) { (if $eq.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 == i2) }
function {:inline} $eq.i40(i1: i40, i2: i40) returns (i1) { (if $eq.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 == i2) }
function {:inline} $eq.i48(i1: i48, i2: i48) returns (i1) { (if $eq.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 == i2) }
function {:inline} $eq.i56(i1: i56, i2: i56) returns (i1) { (if $eq.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 == i2) }
function {:inline} $eq.i64(i1: i64, i2: i64) returns (i1) { (if $eq.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 == i2) }
function {:inline} $eq.i80(i1: i80, i2: i80) returns (i1) { (if $eq.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 == i2) }
function {:inline} $eq.i88(i1: i88, i2: i88) returns (i1) { (if $eq.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 == i2) }
function {:inline} $eq.i96(i1: i96, i2: i96) returns (i1) { (if $eq.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 == i2) }
function {:inline} $eq.i128(i1: i128, i2: i128) returns (i1) { (if $eq.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 == i2) }
function {:inline} $eq.i160(i1: i160, i2: i160) returns (i1) { (if $eq.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 == i2) }
function {:inline} $eq.i256(i1: i256, i2: i256) returns (i1) { (if $eq.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 != i2) }
function {:inline} $ne.i1(i1: i1, i2: i1) returns (i1) { (if $ne.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 != i2) }
function {:inline} $ne.i5(i1: i5, i2: i5) returns (i1) { (if $ne.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 != i2) }
function {:inline} $ne.i6(i1: i6, i2: i6) returns (i1) { (if $ne.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 != i2) }
function {:inline} $ne.i8(i1: i8, i2: i8) returns (i1) { (if $ne.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 != i2) }
function {:inline} $ne.i16(i1: i16, i2: i16) returns (i1) { (if $ne.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 != i2) }
function {:inline} $ne.i24(i1: i24, i2: i24) returns (i1) { (if $ne.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 != i2) }
function {:inline} $ne.i32(i1: i32, i2: i32) returns (i1) { (if $ne.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 != i2) }
function {:inline} $ne.i40(i1: i40, i2: i40) returns (i1) { (if $ne.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 != i2) }
function {:inline} $ne.i48(i1: i48, i2: i48) returns (i1) { (if $ne.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 != i2) }
function {:inline} $ne.i56(i1: i56, i2: i56) returns (i1) { (if $ne.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 != i2) }
function {:inline} $ne.i64(i1: i64, i2: i64) returns (i1) { (if $ne.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 != i2) }
function {:inline} $ne.i80(i1: i80, i2: i80) returns (i1) { (if $ne.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 != i2) }
function {:inline} $ne.i88(i1: i88, i2: i88) returns (i1) { (if $ne.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 != i2) }
function {:inline} $ne.i96(i1: i96, i2: i96) returns (i1) { (if $ne.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 != i2) }
function {:inline} $ne.i128(i1: i128, i2: i128) returns (i1) { (if $ne.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 != i2) }
function {:inline} $ne.i160(i1: i160, i2: i160) returns (i1) { (if $ne.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 != i2) }
function {:inline} $ne.i256(i1: i256, i2: i256) returns (i1) { (if $ne.i256.bool(i1, i2) then 1 else 0) }
// Integer load/store operations
function {:inline} $load.i1(M: [ref] i1, p: ref) returns (i1) { M[p] }
function {:inline} $store.i1(M: [ref] i1, p: ref, i: i1) returns ([ref] i1) { M[p := i] }
function {:inline} $load.i5(M: [ref] i5, p: ref) returns (i5) { M[p] }
function {:inline} $store.i5(M: [ref] i5, p: ref, i: i5) returns ([ref] i5) { M[p := i] }
function {:inline} $load.i6(M: [ref] i6, p: ref) returns (i6) { M[p] }
function {:inline} $store.i6(M: [ref] i6, p: ref, i: i6) returns ([ref] i6) { M[p := i] }
function {:inline} $load.i8(M: [ref] i8, p: ref) returns (i8) { M[p] }
function {:inline} $store.i8(M: [ref] i8, p: ref, i: i8) returns ([ref] i8) { M[p := i] }
function {:inline} $load.i16(M: [ref] i16, p: ref) returns (i16) { M[p] }
function {:inline} $store.i16(M: [ref] i16, p: ref, i: i16) returns ([ref] i16) { M[p := i] }
function {:inline} $load.i24(M: [ref] i24, p: ref) returns (i24) { M[p] }
function {:inline} $store.i24(M: [ref] i24, p: ref, i: i24) returns ([ref] i24) { M[p := i] }
function {:inline} $load.i32(M: [ref] i32, p: ref) returns (i32) { M[p] }
function {:inline} $store.i32(M: [ref] i32, p: ref, i: i32) returns ([ref] i32) { M[p := i] }
function {:inline} $load.i40(M: [ref] i40, p: ref) returns (i40) { M[p] }
function {:inline} $store.i40(M: [ref] i40, p: ref, i: i40) returns ([ref] i40) { M[p := i] }
function {:inline} $load.i48(M: [ref] i48, p: ref) returns (i48) { M[p] }
function {:inline} $store.i48(M: [ref] i48, p: ref, i: i48) returns ([ref] i48) { M[p := i] }
function {:inline} $load.i56(M: [ref] i56, p: ref) returns (i56) { M[p] }
function {:inline} $store.i56(M: [ref] i56, p: ref, i: i56) returns ([ref] i56) { M[p := i] }
function {:inline} $load.i64(M: [ref] i64, p: ref) returns (i64) { M[p] }
function {:inline} $store.i64(M: [ref] i64, p: ref, i: i64) returns ([ref] i64) { M[p := i] }
function {:inline} $load.i80(M: [ref] i80, p: ref) returns (i80) { M[p] }
function {:inline} $store.i80(M: [ref] i80, p: ref, i: i80) returns ([ref] i80) { M[p := i] }
function {:inline} $load.i88(M: [ref] i88, p: ref) returns (i88) { M[p] }
function {:inline} $store.i88(M: [ref] i88, p: ref, i: i88) returns ([ref] i88) { M[p := i] }
function {:inline} $load.i96(M: [ref] i96, p: ref) returns (i96) { M[p] }
function {:inline} $store.i96(M: [ref] i96, p: ref, i: i96) returns ([ref] i96) { M[p := i] }
function {:inline} $load.i128(M: [ref] i128, p: ref) returns (i128) { M[p] }
function {:inline} $store.i128(M: [ref] i128, p: ref, i: i128) returns ([ref] i128) { M[p := i] }
function {:inline} $load.i160(M: [ref] i160, p: ref) returns (i160) { M[p] }
function {:inline} $store.i160(M: [ref] i160, p: ref, i: i160) returns ([ref] i160) { M[p := i] }
function {:inline} $load.i256(M: [ref] i256, p: ref) returns (i256) { M[p] }
function {:inline} $store.i256(M: [ref] i256, p: ref, i: i256) returns ([ref] i256) { M[p := i] }
// Conversion between integer types
function {:inline} $trunc.i5.i1(i: i5) returns (i1) { i }
function {:inline} $trunc.i6.i1(i: i6) returns (i1) { i }
function {:inline} $trunc.i8.i1(i: i8) returns (i1) { i }
function {:inline} $trunc.i16.i1(i: i16) returns (i1) { i }
function {:inline} $trunc.i24.i1(i: i24) returns (i1) { i }
function {:inline} $trunc.i32.i1(i: i32) returns (i1) { i }
function {:inline} $trunc.i40.i1(i: i40) returns (i1) { i }
function {:inline} $trunc.i48.i1(i: i48) returns (i1) { i }
function {:inline} $trunc.i56.i1(i: i56) returns (i1) { i }
function {:inline} $trunc.i64.i1(i: i64) returns (i1) { i }
function {:inline} $trunc.i80.i1(i: i80) returns (i1) { i }
function {:inline} $trunc.i88.i1(i: i88) returns (i1) { i }
function {:inline} $trunc.i96.i1(i: i96) returns (i1) { i }
function {:inline} $trunc.i128.i1(i: i128) returns (i1) { i }
function {:inline} $trunc.i160.i1(i: i160) returns (i1) { i }
function {:inline} $trunc.i256.i1(i: i256) returns (i1) { i }
function {:inline} $trunc.i6.i5(i: i6) returns (i5) { i }
function {:inline} $trunc.i8.i5(i: i8) returns (i5) { i }
function {:inline} $trunc.i16.i5(i: i16) returns (i5) { i }
function {:inline} $trunc.i24.i5(i: i24) returns (i5) { i }
function {:inline} $trunc.i32.i5(i: i32) returns (i5) { i }
function {:inline} $trunc.i40.i5(i: i40) returns (i5) { i }
function {:inline} $trunc.i48.i5(i: i48) returns (i5) { i }
function {:inline} $trunc.i56.i5(i: i56) returns (i5) { i }
function {:inline} $trunc.i64.i5(i: i64) returns (i5) { i }
function {:inline} $trunc.i80.i5(i: i80) returns (i5) { i }
function {:inline} $trunc.i88.i5(i: i88) returns (i5) { i }
function {:inline} $trunc.i96.i5(i: i96) returns (i5) { i }
function {:inline} $trunc.i128.i5(i: i128) returns (i5) { i }
function {:inline} $trunc.i160.i5(i: i160) returns (i5) { i }
function {:inline} $trunc.i256.i5(i: i256) returns (i5) { i }
function {:inline} $trunc.i8.i6(i: i8) returns (i6) { i }
function {:inline} $trunc.i16.i6(i: i16) returns (i6) { i }
function {:inline} $trunc.i24.i6(i: i24) returns (i6) { i }
function {:inline} $trunc.i32.i6(i: i32) returns (i6) { i }
function {:inline} $trunc.i40.i6(i: i40) returns (i6) { i }
function {:inline} $trunc.i48.i6(i: i48) returns (i6) { i }
function {:inline} $trunc.i56.i6(i: i56) returns (i6) { i }
function {:inline} $trunc.i64.i6(i: i64) returns (i6) { i }
function {:inline} $trunc.i80.i6(i: i80) returns (i6) { i }
function {:inline} $trunc.i88.i6(i: i88) returns (i6) { i }
function {:inline} $trunc.i96.i6(i: i96) returns (i6) { i }
function {:inline} $trunc.i128.i6(i: i128) returns (i6) { i }
function {:inline} $trunc.i160.i6(i: i160) returns (i6) { i }
function {:inline} $trunc.i256.i6(i: i256) returns (i6) { i }
function {:inline} $trunc.i16.i8(i: i16) returns (i8) { i }
function {:inline} $trunc.i24.i8(i: i24) returns (i8) { i }
function {:inline} $trunc.i32.i8(i: i32) returns (i8) { i }
function {:inline} $trunc.i40.i8(i: i40) returns (i8) { i }
function {:inline} $trunc.i48.i8(i: i48) returns (i8) { i }
function {:inline} $trunc.i56.i8(i: i56) returns (i8) { i }
function {:inline} $trunc.i64.i8(i: i64) returns (i8) { i }
function {:inline} $trunc.i80.i8(i: i80) returns (i8) { i }
function {:inline} $trunc.i88.i8(i: i88) returns (i8) { i }
function {:inline} $trunc.i96.i8(i: i96) returns (i8) { i }
function {:inline} $trunc.i128.i8(i: i128) returns (i8) { i }
function {:inline} $trunc.i160.i8(i: i160) returns (i8) { i }
function {:inline} $trunc.i256.i8(i: i256) returns (i8) { i }
function {:inline} $trunc.i24.i16(i: i24) returns (i16) { i }
function {:inline} $trunc.i32.i16(i: i32) returns (i16) { i }
function {:inline} $trunc.i40.i16(i: i40) returns (i16) { i }
function {:inline} $trunc.i48.i16(i: i48) returns (i16) { i }
function {:inline} $trunc.i56.i16(i: i56) returns (i16) { i }
function {:inline} $trunc.i64.i16(i: i64) returns (i16) { i }
function {:inline} $trunc.i80.i16(i: i80) returns (i16) { i }
function {:inline} $trunc.i88.i16(i: i88) returns (i16) { i }
function {:inline} $trunc.i96.i16(i: i96) returns (i16) { i }
function {:inline} $trunc.i128.i16(i: i128) returns (i16) { i }
function {:inline} $trunc.i160.i16(i: i160) returns (i16) { i }
function {:inline} $trunc.i256.i16(i: i256) returns (i16) { i }
function {:inline} $trunc.i32.i24(i: i32) returns (i24) { i }
function {:inline} $trunc.i40.i24(i: i40) returns (i24) { i }
function {:inline} $trunc.i48.i24(i: i48) returns (i24) { i }
function {:inline} $trunc.i56.i24(i: i56) returns (i24) { i }
function {:inline} $trunc.i64.i24(i: i64) returns (i24) { i }
function {:inline} $trunc.i80.i24(i: i80) returns (i24) { i }
function {:inline} $trunc.i88.i24(i: i88) returns (i24) { i }
function {:inline} $trunc.i96.i24(i: i96) returns (i24) { i }
function {:inline} $trunc.i128.i24(i: i128) returns (i24) { i }
function {:inline} $trunc.i160.i24(i: i160) returns (i24) { i }
function {:inline} $trunc.i256.i24(i: i256) returns (i24) { i }
function {:inline} $trunc.i40.i32(i: i40) returns (i32) { i }
function {:inline} $trunc.i48.i32(i: i48) returns (i32) { i }
function {:inline} $trunc.i56.i32(i: i56) returns (i32) { i }
function {:inline} $trunc.i64.i32(i: i64) returns (i32) { i }
function {:inline} $trunc.i80.i32(i: i80) returns (i32) { i }
function {:inline} $trunc.i88.i32(i: i88) returns (i32) { i }
function {:inline} $trunc.i96.i32(i: i96) returns (i32) { i }
function {:inline} $trunc.i128.i32(i: i128) returns (i32) { i }
function {:inline} $trunc.i160.i32(i: i160) returns (i32) { i }
function {:inline} $trunc.i256.i32(i: i256) returns (i32) { i }
function {:inline} $trunc.i48.i40(i: i48) returns (i40) { i }
function {:inline} $trunc.i56.i40(i: i56) returns (i40) { i }
function {:inline} $trunc.i64.i40(i: i64) returns (i40) { i }
function {:inline} $trunc.i80.i40(i: i80) returns (i40) { i }
function {:inline} $trunc.i88.i40(i: i88) returns (i40) { i }
function {:inline} $trunc.i96.i40(i: i96) returns (i40) { i }
function {:inline} $trunc.i128.i40(i: i128) returns (i40) { i }
function {:inline} $trunc.i160.i40(i: i160) returns (i40) { i }
function {:inline} $trunc.i256.i40(i: i256) returns (i40) { i }
function {:inline} $trunc.i56.i48(i: i56) returns (i48) { i }
function {:inline} $trunc.i64.i48(i: i64) returns (i48) { i }
function {:inline} $trunc.i80.i48(i: i80) returns (i48) { i }
function {:inline} $trunc.i88.i48(i: i88) returns (i48) { i }
function {:inline} $trunc.i96.i48(i: i96) returns (i48) { i }
function {:inline} $trunc.i128.i48(i: i128) returns (i48) { i }
function {:inline} $trunc.i160.i48(i: i160) returns (i48) { i }
function {:inline} $trunc.i256.i48(i: i256) returns (i48) { i }
function {:inline} $trunc.i64.i56(i: i64) returns (i56) { i }
function {:inline} $trunc.i80.i56(i: i80) returns (i56) { i }
function {:inline} $trunc.i88.i56(i: i88) returns (i56) { i }
function {:inline} $trunc.i96.i56(i: i96) returns (i56) { i }
function {:inline} $trunc.i128.i56(i: i128) returns (i56) { i }
function {:inline} $trunc.i160.i56(i: i160) returns (i56) { i }
function {:inline} $trunc.i256.i56(i: i256) returns (i56) { i }
function {:inline} $trunc.i80.i64(i: i80) returns (i64) { i }
function {:inline} $trunc.i88.i64(i: i88) returns (i64) { i }
function {:inline} $trunc.i96.i64(i: i96) returns (i64) { i }
function {:inline} $trunc.i128.i64(i: i128) returns (i64) { i }
function {:inline} $trunc.i160.i64(i: i160) returns (i64) { i }
function {:inline} $trunc.i256.i64(i: i256) returns (i64) { i }
function {:inline} $trunc.i88.i80(i: i88) returns (i80) { i }
function {:inline} $trunc.i96.i80(i: i96) returns (i80) { i }
function {:inline} $trunc.i128.i80(i: i128) returns (i80) { i }
function {:inline} $trunc.i160.i80(i: i160) returns (i80) { i }
function {:inline} $trunc.i256.i80(i: i256) returns (i80) { i }
function {:inline} $trunc.i96.i88(i: i96) returns (i88) { i }
function {:inline} $trunc.i128.i88(i: i128) returns (i88) { i }
function {:inline} $trunc.i160.i88(i: i160) returns (i88) { i }
function {:inline} $trunc.i256.i88(i: i256) returns (i88) { i }
function {:inline} $trunc.i128.i96(i: i128) returns (i96) { i }
function {:inline} $trunc.i160.i96(i: i160) returns (i96) { i }
function {:inline} $trunc.i256.i96(i: i256) returns (i96) { i }
function {:inline} $trunc.i160.i128(i: i160) returns (i128) { i }
function {:inline} $trunc.i256.i128(i: i256) returns (i128) { i }
function {:inline} $trunc.i256.i160(i: i256) returns (i160) { i }
function {:inline} $sext.i1.i5(i: i1) returns (i5) { i }
function {:inline} $sext.i1.i6(i: i1) returns (i6) { i }
function {:inline} $sext.i1.i8(i: i1) returns (i8) { i }
function {:inline} $sext.i1.i16(i: i1) returns (i16) { i }
function {:inline} $sext.i1.i24(i: i1) returns (i24) { i }
function {:inline} $sext.i1.i32(i: i1) returns (i32) { i }
function {:inline} $sext.i1.i40(i: i1) returns (i40) { i }
function {:inline} $sext.i1.i48(i: i1) returns (i48) { i }
function {:inline} $sext.i1.i56(i: i1) returns (i56) { i }
function {:inline} $sext.i1.i64(i: i1) returns (i64) { i }
function {:inline} $sext.i1.i80(i: i1) returns (i80) { i }
function {:inline} $sext.i1.i88(i: i1) returns (i88) { i }
function {:inline} $sext.i1.i96(i: i1) returns (i96) { i }
function {:inline} $sext.i1.i128(i: i1) returns (i128) { i }
function {:inline} $sext.i1.i160(i: i1) returns (i160) { i }
function {:inline} $sext.i1.i256(i: i1) returns (i256) { i }
function {:inline} $sext.i5.i6(i: i5) returns (i6) { i }
function {:inline} $sext.i5.i8(i: i5) returns (i8) { i }
function {:inline} $sext.i5.i16(i: i5) returns (i16) { i }
function {:inline} $sext.i5.i24(i: i5) returns (i24) { i }
function {:inline} $sext.i5.i32(i: i5) returns (i32) { i }
function {:inline} $sext.i5.i40(i: i5) returns (i40) { i }
function {:inline} $sext.i5.i48(i: i5) returns (i48) { i }
function {:inline} $sext.i5.i56(i: i5) returns (i56) { i }
function {:inline} $sext.i5.i64(i: i5) returns (i64) { i }
function {:inline} $sext.i5.i80(i: i5) returns (i80) { i }
function {:inline} $sext.i5.i88(i: i5) returns (i88) { i }
function {:inline} $sext.i5.i96(i: i5) returns (i96) { i }
function {:inline} $sext.i5.i128(i: i5) returns (i128) { i }
function {:inline} $sext.i5.i160(i: i5) returns (i160) { i }
function {:inline} $sext.i5.i256(i: i5) returns (i256) { i }
function {:inline} $sext.i6.i8(i: i6) returns (i8) { i }
function {:inline} $sext.i6.i16(i: i6) returns (i16) { i }
function {:inline} $sext.i6.i24(i: i6) returns (i24) { i }
function {:inline} $sext.i6.i32(i: i6) returns (i32) { i }
function {:inline} $sext.i6.i40(i: i6) returns (i40) { i }
function {:inline} $sext.i6.i48(i: i6) returns (i48) { i }
function {:inline} $sext.i6.i56(i: i6) returns (i56) { i }
function {:inline} $sext.i6.i64(i: i6) returns (i64) { i }
function {:inline} $sext.i6.i80(i: i6) returns (i80) { i }
function {:inline} $sext.i6.i88(i: i6) returns (i88) { i }
function {:inline} $sext.i6.i96(i: i6) returns (i96) { i }
function {:inline} $sext.i6.i128(i: i6) returns (i128) { i }
function {:inline} $sext.i6.i160(i: i6) returns (i160) { i }
function {:inline} $sext.i6.i256(i: i6) returns (i256) { i }
function {:inline} $sext.i8.i16(i: i8) returns (i16) { i }
function {:inline} $sext.i8.i24(i: i8) returns (i24) { i }
function {:inline} $sext.i8.i32(i: i8) returns (i32) { i }
function {:inline} $sext.i8.i40(i: i8) returns (i40) { i }
function {:inline} $sext.i8.i48(i: i8) returns (i48) { i }
function {:inline} $sext.i8.i56(i: i8) returns (i56) { i }
function {:inline} $sext.i8.i64(i: i8) returns (i64) { i }
function {:inline} $sext.i8.i80(i: i8) returns (i80) { i }
function {:inline} $sext.i8.i88(i: i8) returns (i88) { i }
function {:inline} $sext.i8.i96(i: i8) returns (i96) { i }
function {:inline} $sext.i8.i128(i: i8) returns (i128) { i }
function {:inline} $sext.i8.i160(i: i8) returns (i160) { i }
function {:inline} $sext.i8.i256(i: i8) returns (i256) { i }
function {:inline} $sext.i16.i24(i: i16) returns (i24) { i }
function {:inline} $sext.i16.i32(i: i16) returns (i32) { i }
function {:inline} $sext.i16.i40(i: i16) returns (i40) { i }
function {:inline} $sext.i16.i48(i: i16) returns (i48) { i }
function {:inline} $sext.i16.i56(i: i16) returns (i56) { i }
function {:inline} $sext.i16.i64(i: i16) returns (i64) { i }
function {:inline} $sext.i16.i80(i: i16) returns (i80) { i }
function {:inline} $sext.i16.i88(i: i16) returns (i88) { i }
function {:inline} $sext.i16.i96(i: i16) returns (i96) { i }
function {:inline} $sext.i16.i128(i: i16) returns (i128) { i }
function {:inline} $sext.i16.i160(i: i16) returns (i160) { i }
function {:inline} $sext.i16.i256(i: i16) returns (i256) { i }
function {:inline} $sext.i24.i32(i: i24) returns (i32) { i }
function {:inline} $sext.i24.i40(i: i24) returns (i40) { i }
function {:inline} $sext.i24.i48(i: i24) returns (i48) { i }
function {:inline} $sext.i24.i56(i: i24) returns (i56) { i }
function {:inline} $sext.i24.i64(i: i24) returns (i64) { i }
function {:inline} $sext.i24.i80(i: i24) returns (i80) { i }
function {:inline} $sext.i24.i88(i: i24) returns (i88) { i }
function {:inline} $sext.i24.i96(i: i24) returns (i96) { i }
function {:inline} $sext.i24.i128(i: i24) returns (i128) { i }
function {:inline} $sext.i24.i160(i: i24) returns (i160) { i }
function {:inline} $sext.i24.i256(i: i24) returns (i256) { i }
function {:inline} $sext.i32.i40(i: i32) returns (i40) { i }
function {:inline} $sext.i32.i48(i: i32) returns (i48) { i }
function {:inline} $sext.i32.i56(i: i32) returns (i56) { i }
function {:inline} $sext.i32.i64(i: i32) returns (i64) { i }
function {:inline} $sext.i32.i80(i: i32) returns (i80) { i }
function {:inline} $sext.i32.i88(i: i32) returns (i88) { i }
function {:inline} $sext.i32.i96(i: i32) returns (i96) { i }
function {:inline} $sext.i32.i128(i: i32) returns (i128) { i }
function {:inline} $sext.i32.i160(i: i32) returns (i160) { i }
function {:inline} $sext.i32.i256(i: i32) returns (i256) { i }
function {:inline} $sext.i40.i48(i: i40) returns (i48) { i }
function {:inline} $sext.i40.i56(i: i40) returns (i56) { i }
function {:inline} $sext.i40.i64(i: i40) returns (i64) { i }
function {:inline} $sext.i40.i80(i: i40) returns (i80) { i }
function {:inline} $sext.i40.i88(i: i40) returns (i88) { i }
function {:inline} $sext.i40.i96(i: i40) returns (i96) { i }
function {:inline} $sext.i40.i128(i: i40) returns (i128) { i }
function {:inline} $sext.i40.i160(i: i40) returns (i160) { i }
function {:inline} $sext.i40.i256(i: i40) returns (i256) { i }
function {:inline} $sext.i48.i56(i: i48) returns (i56) { i }
function {:inline} $sext.i48.i64(i: i48) returns (i64) { i }
function {:inline} $sext.i48.i80(i: i48) returns (i80) { i }
function {:inline} $sext.i48.i88(i: i48) returns (i88) { i }
function {:inline} $sext.i48.i96(i: i48) returns (i96) { i }
function {:inline} $sext.i48.i128(i: i48) returns (i128) { i }
function {:inline} $sext.i48.i160(i: i48) returns (i160) { i }
function {:inline} $sext.i48.i256(i: i48) returns (i256) { i }
function {:inline} $sext.i56.i64(i: i56) returns (i64) { i }
function {:inline} $sext.i56.i80(i: i56) returns (i80) { i }
function {:inline} $sext.i56.i88(i: i56) returns (i88) { i }
function {:inline} $sext.i56.i96(i: i56) returns (i96) { i }
function {:inline} $sext.i56.i128(i: i56) returns (i128) { i }
function {:inline} $sext.i56.i160(i: i56) returns (i160) { i }
function {:inline} $sext.i56.i256(i: i56) returns (i256) { i }
function {:inline} $sext.i64.i80(i: i64) returns (i80) { i }
function {:inline} $sext.i64.i88(i: i64) returns (i88) { i }
function {:inline} $sext.i64.i96(i: i64) returns (i96) { i }
function {:inline} $sext.i64.i128(i: i64) returns (i128) { i }
function {:inline} $sext.i64.i160(i: i64) returns (i160) { i }
function {:inline} $sext.i64.i256(i: i64) returns (i256) { i }
function {:inline} $sext.i80.i88(i: i80) returns (i88) { i }
function {:inline} $sext.i80.i96(i: i80) returns (i96) { i }
function {:inline} $sext.i80.i128(i: i80) returns (i128) { i }
function {:inline} $sext.i80.i160(i: i80) returns (i160) { i }
function {:inline} $sext.i80.i256(i: i80) returns (i256) { i }
function {:inline} $sext.i88.i96(i: i88) returns (i96) { i }
function {:inline} $sext.i88.i128(i: i88) returns (i128) { i }
function {:inline} $sext.i88.i160(i: i88) returns (i160) { i }
function {:inline} $sext.i88.i256(i: i88) returns (i256) { i }
function {:inline} $sext.i96.i128(i: i96) returns (i128) { i }
function {:inline} $sext.i96.i160(i: i96) returns (i160) { i }
function {:inline} $sext.i96.i256(i: i96) returns (i256) { i }
function {:inline} $sext.i128.i160(i: i128) returns (i160) { i }
function {:inline} $sext.i128.i256(i: i128) returns (i256) { i }
function {:inline} $sext.i160.i256(i: i160) returns (i256) { i }
function {:inline} $zext.i1.i5(i: i1) returns (i5) { i }
function {:inline} $zext.i1.i6(i: i1) returns (i6) { i }
function {:inline} $zext.i1.i8(i: i1) returns (i8) { i }
function {:inline} $zext.i1.i16(i: i1) returns (i16) { i }
function {:inline} $zext.i1.i24(i: i1) returns (i24) { i }
function {:inline} $zext.i1.i32(i: i1) returns (i32) { i }
function {:inline} $zext.i1.i40(i: i1) returns (i40) { i }
function {:inline} $zext.i1.i48(i: i1) returns (i48) { i }
function {:inline} $zext.i1.i56(i: i1) returns (i56) { i }
function {:inline} $zext.i1.i64(i: i1) returns (i64) { i }
function {:inline} $zext.i1.i80(i: i1) returns (i80) { i }
function {:inline} $zext.i1.i88(i: i1) returns (i88) { i }
function {:inline} $zext.i1.i96(i: i1) returns (i96) { i }
function {:inline} $zext.i1.i128(i: i1) returns (i128) { i }
function {:inline} $zext.i1.i160(i: i1) returns (i160) { i }
function {:inline} $zext.i1.i256(i: i1) returns (i256) { i }
function {:inline} $zext.i5.i6(i: i5) returns (i6) { i }
function {:inline} $zext.i5.i8(i: i5) returns (i8) { i }
function {:inline} $zext.i5.i16(i: i5) returns (i16) { i }
function {:inline} $zext.i5.i24(i: i5) returns (i24) { i }
function {:inline} $zext.i5.i32(i: i5) returns (i32) { i }
function {:inline} $zext.i5.i40(i: i5) returns (i40) { i }
function {:inline} $zext.i5.i48(i: i5) returns (i48) { i }
function {:inline} $zext.i5.i56(i: i5) returns (i56) { i }
function {:inline} $zext.i5.i64(i: i5) returns (i64) { i }
function {:inline} $zext.i5.i80(i: i5) returns (i80) { i }
function {:inline} $zext.i5.i88(i: i5) returns (i88) { i }
function {:inline} $zext.i5.i96(i: i5) returns (i96) { i }
function {:inline} $zext.i5.i128(i: i5) returns (i128) { i }
function {:inline} $zext.i5.i160(i: i5) returns (i160) { i }
function {:inline} $zext.i5.i256(i: i5) returns (i256) { i }
function {:inline} $zext.i6.i8(i: i6) returns (i8) { i }
function {:inline} $zext.i6.i16(i: i6) returns (i16) { i }
function {:inline} $zext.i6.i24(i: i6) returns (i24) { i }
function {:inline} $zext.i6.i32(i: i6) returns (i32) { i }
function {:inline} $zext.i6.i40(i: i6) returns (i40) { i }
function {:inline} $zext.i6.i48(i: i6) returns (i48) { i }
function {:inline} $zext.i6.i56(i: i6) returns (i56) { i }
function {:inline} $zext.i6.i64(i: i6) returns (i64) { i }
function {:inline} $zext.i6.i80(i: i6) returns (i80) { i }
function {:inline} $zext.i6.i88(i: i6) returns (i88) { i }
function {:inline} $zext.i6.i96(i: i6) returns (i96) { i }
function {:inline} $zext.i6.i128(i: i6) returns (i128) { i }
function {:inline} $zext.i6.i160(i: i6) returns (i160) { i }
function {:inline} $zext.i6.i256(i: i6) returns (i256) { i }
function {:inline} $zext.i8.i16(i: i8) returns (i16) { i }
function {:inline} $zext.i8.i24(i: i8) returns (i24) { i }
function {:inline} $zext.i8.i32(i: i8) returns (i32) { i }
function {:inline} $zext.i8.i40(i: i8) returns (i40) { i }
function {:inline} $zext.i8.i48(i: i8) returns (i48) { i }
function {:inline} $zext.i8.i56(i: i8) returns (i56) { i }
function {:inline} $zext.i8.i64(i: i8) returns (i64) { i }
function {:inline} $zext.i8.i80(i: i8) returns (i80) { i }
function {:inline} $zext.i8.i88(i: i8) returns (i88) { i }
function {:inline} $zext.i8.i96(i: i8) returns (i96) { i }
function {:inline} $zext.i8.i128(i: i8) returns (i128) { i }
function {:inline} $zext.i8.i160(i: i8) returns (i160) { i }
function {:inline} $zext.i8.i256(i: i8) returns (i256) { i }
function {:inline} $zext.i16.i24(i: i16) returns (i24) { i }
function {:inline} $zext.i16.i32(i: i16) returns (i32) { i }
function {:inline} $zext.i16.i40(i: i16) returns (i40) { i }
function {:inline} $zext.i16.i48(i: i16) returns (i48) { i }
function {:inline} $zext.i16.i56(i: i16) returns (i56) { i }
function {:inline} $zext.i16.i64(i: i16) returns (i64) { i }
function {:inline} $zext.i16.i80(i: i16) returns (i80) { i }
function {:inline} $zext.i16.i88(i: i16) returns (i88) { i }
function {:inline} $zext.i16.i96(i: i16) returns (i96) { i }
function {:inline} $zext.i16.i128(i: i16) returns (i128) { i }
function {:inline} $zext.i16.i160(i: i16) returns (i160) { i }
function {:inline} $zext.i16.i256(i: i16) returns (i256) { i }
function {:inline} $zext.i24.i32(i: i24) returns (i32) { i }
function {:inline} $zext.i24.i40(i: i24) returns (i40) { i }
function {:inline} $zext.i24.i48(i: i24) returns (i48) { i }
function {:inline} $zext.i24.i56(i: i24) returns (i56) { i }
function {:inline} $zext.i24.i64(i: i24) returns (i64) { i }
function {:inline} $zext.i24.i80(i: i24) returns (i80) { i }
function {:inline} $zext.i24.i88(i: i24) returns (i88) { i }
function {:inline} $zext.i24.i96(i: i24) returns (i96) { i }
function {:inline} $zext.i24.i128(i: i24) returns (i128) { i }
function {:inline} $zext.i24.i160(i: i24) returns (i160) { i }
function {:inline} $zext.i24.i256(i: i24) returns (i256) { i }
function {:inline} $zext.i32.i40(i: i32) returns (i40) { i }
function {:inline} $zext.i32.i48(i: i32) returns (i48) { i }
function {:inline} $zext.i32.i56(i: i32) returns (i56) { i }
function {:inline} $zext.i32.i64(i: i32) returns (i64) { i }
function {:inline} $zext.i32.i80(i: i32) returns (i80) { i }
function {:inline} $zext.i32.i88(i: i32) returns (i88) { i }
function {:inline} $zext.i32.i96(i: i32) returns (i96) { i }
function {:inline} $zext.i32.i128(i: i32) returns (i128) { i }
function {:inline} $zext.i32.i160(i: i32) returns (i160) { i }
function {:inline} $zext.i32.i256(i: i32) returns (i256) { i }
function {:inline} $zext.i40.i48(i: i40) returns (i48) { i }
function {:inline} $zext.i40.i56(i: i40) returns (i56) { i }
function {:inline} $zext.i40.i64(i: i40) returns (i64) { i }
function {:inline} $zext.i40.i80(i: i40) returns (i80) { i }
function {:inline} $zext.i40.i88(i: i40) returns (i88) { i }
function {:inline} $zext.i40.i96(i: i40) returns (i96) { i }
function {:inline} $zext.i40.i128(i: i40) returns (i128) { i }
function {:inline} $zext.i40.i160(i: i40) returns (i160) { i }
function {:inline} $zext.i40.i256(i: i40) returns (i256) { i }
function {:inline} $zext.i48.i56(i: i48) returns (i56) { i }
function {:inline} $zext.i48.i64(i: i48) returns (i64) { i }
function {:inline} $zext.i48.i80(i: i48) returns (i80) { i }
function {:inline} $zext.i48.i88(i: i48) returns (i88) { i }
function {:inline} $zext.i48.i96(i: i48) returns (i96) { i }
function {:inline} $zext.i48.i128(i: i48) returns (i128) { i }
function {:inline} $zext.i48.i160(i: i48) returns (i160) { i }
function {:inline} $zext.i48.i256(i: i48) returns (i256) { i }
function {:inline} $zext.i56.i64(i: i56) returns (i64) { i }
function {:inline} $zext.i56.i80(i: i56) returns (i80) { i }
function {:inline} $zext.i56.i88(i: i56) returns (i88) { i }
function {:inline} $zext.i56.i96(i: i56) returns (i96) { i }
function {:inline} $zext.i56.i128(i: i56) returns (i128) { i }
function {:inline} $zext.i56.i160(i: i56) returns (i160) { i }
function {:inline} $zext.i56.i256(i: i56) returns (i256) { i }
function {:inline} $zext.i64.i80(i: i64) returns (i80) { i }
function {:inline} $zext.i64.i88(i: i64) returns (i88) { i }
function {:inline} $zext.i64.i96(i: i64) returns (i96) { i }
function {:inline} $zext.i64.i128(i: i64) returns (i128) { i }
function {:inline} $zext.i64.i160(i: i64) returns (i160) { i }
function {:inline} $zext.i64.i256(i: i64) returns (i256) { i }
function {:inline} $zext.i80.i88(i: i80) returns (i88) { i }
function {:inline} $zext.i80.i96(i: i80) returns (i96) { i }
function {:inline} $zext.i80.i128(i: i80) returns (i128) { i }
function {:inline} $zext.i80.i160(i: i80) returns (i160) { i }
function {:inline} $zext.i80.i256(i: i80) returns (i256) { i }
function {:inline} $zext.i88.i96(i: i88) returns (i96) { i }
function {:inline} $zext.i88.i128(i: i88) returns (i128) { i }
function {:inline} $zext.i88.i160(i: i88) returns (i160) { i }
function {:inline} $zext.i88.i256(i: i88) returns (i256) { i }
function {:inline} $zext.i96.i128(i: i96) returns (i128) { i }
function {:inline} $zext.i96.i160(i: i96) returns (i160) { i }
function {:inline} $zext.i96.i256(i: i96) returns (i256) { i }
function {:inline} $zext.i128.i160(i: i128) returns (i160) { i }
function {:inline} $zext.i128.i256(i: i128) returns (i256) { i }
function {:inline} $zext.i160.i256(i: i160) returns (i256) { i }
function $extractvalue.i1(p: ref, i: int) returns (i1);
function $extractvalue.i5(p: ref, i: int) returns (i5);
function $extractvalue.i6(p: ref, i: int) returns (i6);
function $extractvalue.i8(p: ref, i: int) returns (i8);
function $extractvalue.i16(p: ref, i: int) returns (i16);
function $extractvalue.i24(p: ref, i: int) returns (i24);
function $extractvalue.i32(p: ref, i: int) returns (i32);
function $extractvalue.i40(p: ref, i: int) returns (i40);
function $extractvalue.i48(p: ref, i: int) returns (i48);
function $extractvalue.i56(p: ref, i: int) returns (i56);
function $extractvalue.i64(p: ref, i: int) returns (i64);
function $extractvalue.i80(p: ref, i: int) returns (i80);
function $extractvalue.i88(p: ref, i: int) returns (i88);
function $extractvalue.i96(p: ref, i: int) returns (i96);
function $extractvalue.i128(p: ref, i: int) returns (i128);
function $extractvalue.i160(p: ref, i: int) returns (i160);
function $extractvalue.i256(p: ref, i: int) returns (i256);
// Pointer arithmetic operations
function {:inline} $add.ref(p1: ref, p2: ref) returns (ref) { $add.i64(p1, p2) }
function {:inline} $sub.ref(p1: ref, p2: ref) returns (ref) { $sub.i64(p1, p2) }
function {:inline} $mul.ref(p1: ref, p2: ref) returns (ref) { $mul.i64(p1, p2) }

// Pointer predicates
function {:inline} $eq.ref(p1: ref, p2: ref) returns (i1) { (if $eq.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $eq.ref.bool(p1: ref, p2: ref) returns (bool) { $eq.i64.bool(p1, p2) }
function {:inline} $ne.ref(p1: ref, p2: ref) returns (i1) { (if $ne.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $ne.ref.bool(p1: ref, p2: ref) returns (bool) { $ne.i64.bool(p1, p2) }
function {:inline} $ugt.ref(p1: ref, p2: ref) returns (i1) { (if $ugt.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $ugt.ref.bool(p1: ref, p2: ref) returns (bool) { $ugt.i64.bool(p1, p2) }
function {:inline} $uge.ref(p1: ref, p2: ref) returns (i1) { (if $uge.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $uge.ref.bool(p1: ref, p2: ref) returns (bool) { $uge.i64.bool(p1, p2) }
function {:inline} $ult.ref(p1: ref, p2: ref) returns (i1) { (if $ult.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $ult.ref.bool(p1: ref, p2: ref) returns (bool) { $ult.i64.bool(p1, p2) }
function {:inline} $ule.ref(p1: ref, p2: ref) returns (i1) { (if $ule.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $ule.ref.bool(p1: ref, p2: ref) returns (bool) { $ule.i64.bool(p1, p2) }
function {:inline} $sgt.ref(p1: ref, p2: ref) returns (i1) { (if $sgt.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $sgt.ref.bool(p1: ref, p2: ref) returns (bool) { $sgt.i64.bool(p1, p2) }
function {:inline} $sge.ref(p1: ref, p2: ref) returns (i1) { (if $sge.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $sge.ref.bool(p1: ref, p2: ref) returns (bool) { $sge.i64.bool(p1, p2) }
function {:inline} $slt.ref(p1: ref, p2: ref) returns (i1) { (if $slt.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $slt.ref.bool(p1: ref, p2: ref) returns (bool) { $slt.i64.bool(p1, p2) }
function {:inline} $sle.ref(p1: ref, p2: ref) returns (i1) { (if $sle.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $sle.ref.bool(p1: ref, p2: ref) returns (bool) { $sle.i64.bool(p1, p2) }

// Pointer load/store operations
function {:inline} $load.ref(M: [ref] ref, p: ref) returns (ref) { M[p] }
function {:inline} $store.ref(M: [ref] ref, p: ref, i: ref) returns ([ref] ref) { M[p := i] }

// Pointer conversion
function {:inline} $bitcast.ref.ref(p: ref) returns (ref) { p }
function $extractvalue.ref(p: ref, i: int) returns (ref);
// Pointer-number conversion
function {:inline} $p2i.ref.i8(p: ref) returns (i8) { $trunc.i64.i8(p) }
function {:inline} $i2p.i8.ref(i: i8) returns (ref) { $zext.i8.i64(i) }
function {:inline} $p2i.ref.i16(p: ref) returns (i16) { $trunc.i64.i16(p) }
function {:inline} $i2p.i16.ref(i: i16) returns (ref) { $zext.i16.i64(i) }
function {:inline} $p2i.ref.i32(p: ref) returns (i32) { $trunc.i64.i32(p) }
function {:inline} $i2p.i32.ref(i: i32) returns (ref) { $zext.i32.i64(i) }
function {:inline} $p2i.ref.i64(p: ref) returns (i64) { p }
function {:inline} $i2p.i64.ref(i: i64) returns (ref) { i }

function $fp(ipart: int, fpart: int, epart: int) returns (float);
// Floating-point arithmetic operations
function $abs.float(f: float) returns (float);
function $round.float(f: float) returns (float);
function $sqrt.float(f: float) returns (float);
function $fadd.float(f1: float, f2: float) returns (float);
function $fsub.float(f1: float, f2: float) returns (float);
function $fmul.float(f1: float, f2: float) returns (float);
function $fdiv.float(f1: float, f2: float) returns (float);
function $frem.float(f1: float, f2: float) returns (float);
function $min.float(f1: float, f2: float) returns (float);
function $max.float(f1: float, f2: float) returns (float);
function $fma.float(f1: float, f2: float, f3: float) returns (float);
// Floating-point predicates
function $foeq.float.bool(f1: float, f2: float) returns (bool);
function $fole.float.bool(f1: float, f2: float) returns (bool);
function $folt.float.bool(f1: float, f2: float) returns (bool);
function $foge.float.bool(f1: float, f2: float) returns (bool);
function $fogt.float.bool(f1: float, f2: float) returns (bool);
function $fone.float.bool(f1: float, f2: float) returns (bool);
function $ford.float.bool(f1: float, f2: float) returns (bool);
function $fueq.float.bool(f1: float, f2: float) returns (bool);
function $fugt.float.bool(f1: float, f2: float) returns (bool);
function $fuge.float.bool(f1: float, f2: float) returns (bool);
function $fult.float.bool(f1: float, f2: float) returns (bool);
function $fule.float.bool(f1: float, f2: float) returns (bool);
function $fune.float.bool(f1: float, f2: float) returns (bool);
function $funo.float.bool(f1: float, f2: float) returns (bool);
function $ffalse.float.bool(f1: float, f2: float) returns (bool);
function $ftrue.float.bool(f1: float, f2: float) returns (bool);
// Floating-point/integer conversion
function $bitcast.float.i8(f: float) returns (i8);
function $bitcast.float.i16(f: float) returns (i16);
function $bitcast.float.i32(f: float) returns (i32);
function $bitcast.float.i64(f: float) returns (i64);
function $bitcast.float.i80(f: float) returns (i80);
function $bitcast.i8.float(i: i8) returns (float);
function $bitcast.i16.float(i: i16) returns (float);
function $bitcast.i32.float(i: i32) returns (float);
function $bitcast.i64.float(i: i64) returns (float);
function $bitcast.i80.float(i: i80) returns (float);
function $fp2si.float.i1(f: float) returns (i1);
function $fp2si.float.i5(f: float) returns (i5);
function $fp2si.float.i6(f: float) returns (i6);
function $fp2si.float.i8(f: float) returns (i8);
function $fp2si.float.i16(f: float) returns (i16);
function $fp2si.float.i24(f: float) returns (i24);
function $fp2si.float.i32(f: float) returns (i32);
function $fp2si.float.i40(f: float) returns (i40);
function $fp2si.float.i48(f: float) returns (i48);
function $fp2si.float.i56(f: float) returns (i56);
function $fp2si.float.i64(f: float) returns (i64);
function $fp2si.float.i80(f: float) returns (i80);
function $fp2si.float.i88(f: float) returns (i88);
function $fp2si.float.i96(f: float) returns (i96);
function $fp2si.float.i128(f: float) returns (i128);
function $fp2si.float.i160(f: float) returns (i160);
function $fp2si.float.i256(f: float) returns (i256);
function $fp2ui.float.i1(f: float) returns (i1);
function $fp2ui.float.i5(f: float) returns (i5);
function $fp2ui.float.i6(f: float) returns (i6);
function $fp2ui.float.i8(f: float) returns (i8);
function $fp2ui.float.i16(f: float) returns (i16);
function $fp2ui.float.i24(f: float) returns (i24);
function $fp2ui.float.i32(f: float) returns (i32);
function $fp2ui.float.i40(f: float) returns (i40);
function $fp2ui.float.i48(f: float) returns (i48);
function $fp2ui.float.i56(f: float) returns (i56);
function $fp2ui.float.i64(f: float) returns (i64);
function $fp2ui.float.i80(f: float) returns (i80);
function $fp2ui.float.i88(f: float) returns (i88);
function $fp2ui.float.i96(f: float) returns (i96);
function $fp2ui.float.i128(f: float) returns (i128);
function $fp2ui.float.i160(f: float) returns (i160);
function $fp2ui.float.i256(f: float) returns (i256);
function $si2fp.i1.float(i: i1) returns (float);
function $si2fp.i5.float(i: i5) returns (float);
function $si2fp.i6.float(i: i6) returns (float);
function $si2fp.i8.float(i: i8) returns (float);
function $si2fp.i16.float(i: i16) returns (float);
function $si2fp.i24.float(i: i24) returns (float);
function $si2fp.i32.float(i: i32) returns (float);
function $si2fp.i40.float(i: i40) returns (float);
function $si2fp.i48.float(i: i48) returns (float);
function $si2fp.i56.float(i: i56) returns (float);
function $si2fp.i64.float(i: i64) returns (float);
function $si2fp.i80.float(i: i80) returns (float);
function $si2fp.i88.float(i: i88) returns (float);
function $si2fp.i96.float(i: i96) returns (float);
function $si2fp.i128.float(i: i128) returns (float);
function $si2fp.i160.float(i: i160) returns (float);
function $si2fp.i256.float(i: i256) returns (float);
function $ui2fp.i1.float(i: i1) returns (float);
function $ui2fp.i5.float(i: i5) returns (float);
function $ui2fp.i6.float(i: i6) returns (float);
function $ui2fp.i8.float(i: i8) returns (float);
function $ui2fp.i16.float(i: i16) returns (float);
function $ui2fp.i24.float(i: i24) returns (float);
function $ui2fp.i32.float(i: i32) returns (float);
function $ui2fp.i40.float(i: i40) returns (float);
function $ui2fp.i48.float(i: i48) returns (float);
function $ui2fp.i56.float(i: i56) returns (float);
function $ui2fp.i64.float(i: i64) returns (float);
function $ui2fp.i80.float(i: i80) returns (float);
function $ui2fp.i88.float(i: i88) returns (float);
function $ui2fp.i96.float(i: i96) returns (float);
function $ui2fp.i128.float(i: i128) returns (float);
function $ui2fp.i160.float(i: i160) returns (float);
function $ui2fp.i256.float(i: i256) returns (float);
// Floating-point conversion
function $fpext.float.float(f: float) returns (float);
function $fptrunc.float.float(f: float) returns (float);
// Floating-point load/store operations
function {:inline} $load.float(M: [ref] float, p: ref) returns (float) { M[p] }
function {:inline} $store.float(M: [ref] float, p: ref, f: float) returns ([ref] float) { M[p := f] }
function {:inline} $load.unsafe.float(M: [ref] i8, p: ref) returns (float) { $bitcast.i8.float(M[p]) }
function {:inline} $store.unsafe.float(M: [ref] i8, p: ref, f: float) returns ([ref] i8) { M[p := $bitcast.float.i8(f)] }
function $extractvalue.float(p: ref, i: int) returns (float);
const LDV_IN_INTERRUPT: ref;
axiom (LDV_IN_INTERRUPT == $sub.ref(0, 1028));
const ldv_urb_state: ref;
axiom (ldv_urb_state == $sub.ref(0, 2056));
const ldv_coherent_state: ref;
axiom (ldv_coherent_state == $sub.ref(0, 3084));
const {:count 6} llvm.used: ref;
axiom (llvm.used == $sub.ref(0, 4156));
const {:count 45} __mod_author60: ref;
axiom (__mod_author60 == $sub.ref(0, 5225));
const {:count 48} __mod_description61: ref;
axiom (__mod_description61 == $sub.ref(0, 6297));
const {:count 12} __mod_license62: ref;
axiom (__mod_license62 == $sub.ref(0, 7333));
const __param_debug: ref;
axiom (__param_debug == $sub.ref(0, 8389));
const {:count 20} __mod_debugtype67: ref;
axiom (__mod_debugtype67 == $sub.ref(0, 9433));
const {:count 46} __mod_debug68: ref;
axiom (__mod_debug68 == $sub.ref(0, 10503));
const {:count 6} __param_str_debug: ref;
axiom (__param_str_debug == $sub.ref(0, 11533));
const param_ops_bool: ref;
axiom (param_ops_bool == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32776)));
const debug: ref;
axiom (debug == $sub.ref(0, 12561));
const iowarrior_driver: ref;
axiom (iowarrior_driver == $sub.ref(0, 13881));
const __this_module: ref;
axiom (__this_module == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32784)));
const .str: ref;
axiom (.str == $sub.ref(0, 14915));
const {:count 5} iowarrior_ids: ref;
axiom (iowarrior_ids == $sub.ref(0, 16059));
const iowarrior_open_disc_lock: ref;
axiom (iowarrior_open_disc_lock == $sub.ref(0, 17251));
const iowarrior_class: ref;
axiom (iowarrior_class == $sub.ref(0, 18307));
const {:count 33} .str.39: ref;
axiom (.str.39 == $sub.ref(0, 19364));
const {:count 213} .str.21: ref;
axiom (.str.21 == $sub.ref(0, 20601));
const {:count 17} .str.23: ref;
axiom (.str.23 == $sub.ref(0, 21642));
const {:count 12} .str.38: ref;
axiom (.str.38 == $sub.ref(0, 22678));
const iowarrior_fops: ref;
axiom (iowarrior_fops == $sub.ref(0, 23910));
const {:count 18} .str.22: ref;
axiom (.str.22 == $sub.ref(0, 24952));
const {:count 202} .str.2: ref;
axiom (.str.2 == $sub.ref(0, 26178));
const {:count 15} .str.3: ref;
axiom (.str.3 == $sub.ref(0, 27217));
const iowarrior_mutex: ref;
axiom (iowarrior_mutex == $sub.ref(0, 28409));
const {:count 58} .str.4: ref;
axiom (.str.4 == $sub.ref(0, 29491));
const {:count 31} .str.5: ref;
axiom (.str.5 == $sub.ref(0, 30546));
const {:count 26} .str.6: ref;
axiom (.str.6 == $sub.ref(0, 31596));
const {:count 16} .str.7: ref;
axiom (.str.7 == $sub.ref(0, 32636));
const {:count 234} .str.24: ref;
axiom (.str.24 == $sub.ref(0, 33894));
const {:count 16} .str.25: ref;
axiom (.str.25 == $sub.ref(0, 34934));
const {:count 54} .str.26: ref;
axiom (.str.26 == $sub.ref(0, 36012));
const {:count 102} .str.17: ref;
axiom (.str.17 == $sub.ref(0, 37138));
const {:count 27} .str.18: ref;
axiom (.str.18 == $sub.ref(0, 38189));
const {:count 226} .str.10: ref;
axiom (.str.10 == $sub.ref(0, 39439));
const {:count 16} .str.12: ref;
axiom (.str.12 == $sub.ref(0, 40479));
const current_task: ref;
axiom (current_task == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32792)));
const {:count 226} .str.13: ref;
axiom (.str.13 == $sub.ref(0, 41729));
const {:count 229} .str.14: ref;
axiom (.str.14 == $sub.ref(0, 42982));
const {:count 232} .str.15: ref;
axiom (.str.15 == $sub.ref(0, 44238));
const {:count 37} .str.16: ref;
axiom (.str.16 == $sub.ref(0, 45299));
const {:count 243} .str.19: ref;
axiom (.str.19 == $sub.ref(0, 46566));
const {:count 25} .str.20: ref;
axiom (.str.20 == $sub.ref(0, 47615));
const {:count 15} .str.11: ref;
axiom (.str.11 == $sub.ref(0, 48654));
const {:count 7} .str.27: ref;
axiom (.str.27 == $sub.ref(0, 49685));
const {:count 35} .str.8: ref;
axiom (.str.8 == $sub.ref(0, 50744));
const {:count 25} .str.9: ref;
axiom (.str.9 == $sub.ref(0, 51793));
const {:count 15} .str.28: ref;
axiom (.str.28 == $sub.ref(0, 52832));
const {:count 12} .str.29: ref;
axiom (.str.29 == $sub.ref(0, 53868));
const __key___7: ref;
axiom (__key___7 == $sub.ref(0, 54900));
const {:count 30} .str.30: ref;
axiom (.str.30 == $sub.ref(0, 55954));
const __key___8: ref;
axiom (__key___8 == $sub.ref(0, 56986));
const __key___9: ref;
axiom (__key___9 == $sub.ref(0, 58018));
const __key___10: ref;
axiom (__key___10 == $sub.ref(0, 59050));
const {:count 36} .str.31: ref;
axiom (.str.31 == $sub.ref(0, 60110));
const {:count 33} .str.32: ref;
axiom (.str.32 == $sub.ref(0, 61167));
const {:count 30} .str.33: ref;
axiom (.str.33 == $sub.ref(0, 62221));
const {:count 42} .str.34: ref;
axiom (.str.34 == $sub.ref(0, 63287));
const {:count 76} .str.35: ref;
axiom (.str.35 == $sub.ref(0, 64387));
const {:count 43} .str.36: ref;
axiom (.str.36 == $sub.ref(0, 65454));
const {:count 19} .str.37: ref;
axiom (.str.37 == $sub.ref(0, 66497));
const res_iowarrior_open_9: ref;
axiom (res_iowarrior_open_9 == $sub.ref(0, 67525));
const res_iowarrior_read_6: ref;
axiom (res_iowarrior_read_6 == $sub.ref(0, 68557));
const res_iowarrior_write_7: ref;
axiom (res_iowarrior_write_7 == $sub.ref(0, 69589));
const res_iowarrior_probe_13: ref;
axiom (res_iowarrior_probe_13 == $sub.ref(0, 70617));
const env_value_str: ref;
axiom (env_value_str == $sub.ref(0, 71649));
const {:count 3} .str.1.65: ref;
axiom (.str.1.65 == $sub.ref(0, 72676));
const {:count 14} .str.66: ref;
axiom (.str.66 == $sub.ref(0, 73714));
const errno_global: ref;
axiom (errno_global == $sub.ref(0, 74742));
const llvm.dbg.declare: ref;
axiom (llvm.dbg.declare == $sub.ref(0, 75774));
procedure  llvm.dbg.declare($p0: ref, $p1: ref, $p2: ref);
const iowarrior_init: ref;
axiom (iowarrior_init == $sub.ref(0, 76806));
procedure  iowarrior_init()
  returns ($r: i32)
{
  var $i0: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5288, 13} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5288, 13} true;
  assume {:verifier.code 0} true;
  call $i0 := usb_register(iowarrior_driver);
  call {:cexpr "tmp___7"} boogie_si_record_i32($i0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5290, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const usb_register: ref;
axiom (usb_register == $sub.ref(0, 77838));
procedure  usb_register($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3708, 13} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3708, 13} true;
  assume {:verifier.code 0} true;
  call $i1 := usb_register_driver($p0, __this_module, .str);
  call {:cexpr "tmp___7"} boogie_si_record_i32($i1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3710, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const usb_register_driver: ref;
axiom (usb_register_driver == $sub.ref(0, 78870));
procedure  usb_register_driver($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32)
{
  var $i3: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5780, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5780, 10} true;
  assume {:verifier.code 1} true;
  call $i3 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i3);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5780, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const iowarrior_probe: ref;
axiom (iowarrior_probe == $sub.ref(0, 79902));
procedure  iowarrior_probe($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $p7: ref;
  var $i8: i32;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i16;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $i32: i32;
  var $i33: i8;
  var $i34: i32;
  var $i35: i1;
  var $p36: ref;
  var $p37: ref;
  var $i38: i64;
  var $p39: ref;
  var $p40: ref;
  var $i41: i32;
  var $i42: i1;
  var $p43: ref;
  var $i44: i32;
  var $i45: i1;
  var $p46: ref;
  var $i47: i32;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $i51: i16;
  var $i52: i32;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $i60: i8;
  var $i61: i32;
  var $i62: i1;
  var $p63: ref;
  var $i64: i16;
  var $i65: i32;
  var $i66: i1;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $i72: i1;
  var $p73: ref;
  var $i74: i32;
  var $p76: ref;
  var $i77: i32;
  var $i78: i64;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $i83: i1;
  var $p84: ref;
  var $i85: i32;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $i91: i8;
  var $i92: i32;
  var $i93: i32;
  var $p94: ref;
  var $p95: ref;
  var $p96: ref;
  var $p97: ref;
  var $i98: i32;
  var $i99: i32;
  var $p100: ref;
  var $p101: ref;
  var $p102: ref;
  var $i103: i32;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $i108: i8;
  var $i109: i32;
  var $p110: ref;
  var $i111: i32;
  var $i112: i32;
  var $i113: i32;
  var $i114: i64;
  var $p115: ref;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $i119: i1;
  var $p120: ref;
  var $i121: i32;
  var $p122: ref;
  var $p123: ref;
  var $p124: ref;
  var $p125: ref;
  var $i126: i8;
  var $i127: i32;
  var $p128: ref;
  var $p129: ref;
  var $i130: i32;
  var $p131: ref;
  var $p132: ref;
  var $i133: i64;
  var $i134: i1;
  var $p135: ref;
  var $p136: ref;
  var $p137: ref;
  var $p138: ref;
  var $p139: ref;
  var $p140: ref;
  var $p141: ref;
  var $p142: ref;
  var $i143: i8;
  var $i144: i32;
  var $i145: i1;
  var $i146: i32;
  var $i147: i32;
  var $i148: i32;
  var $p149: ref;
  var $p150: ref;
  var $i151: i32;
  var $i152: i1;
  var $p153: ref;
  var $i154: i32;
  var $p155: ref;
  var $i156: i32;
  var $i157: i8;
  var $p158: ref;
  var $p159: ref;
  var $p160: ref;
  var $i161: i16;
  var $i162: i32;
  var $p163: ref;
  var $p164: ref;
  var $p165: ref;
  var $p166: ref;
  var $i167: i8;
  var $i168: i32;
  var $p169: ref;
  var $i170: i8;
  var $i171: i32;
  var $i172: i32;
  var $i75: i32;
  var $i9: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5026, 13} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5026, 13} true;
  assume {:verifier.code 0} true;
  call $p2 := interface_to_usbdev($p0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5030, 13} true;
  assume {:verifier.code 0} true;
  call $p3 := kzalloc(536, 208);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5031, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5033, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5033, 27} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i64($i5, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5033, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5035, 50} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p0, $mul.ref(0, 1256)), $mul.ref(48, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5035, 5} true;
  assume {:verifier.code 0} true;
  call $i8 := dev_err.ref.ref($p7, .str.28);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5037, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i32(0, 12);
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5227, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5041, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5041, 13} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5044, 25} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5044, 5} true;
  assume {:verifier.code 0} true;
  call __mutex_init($p10, .str.29, __key___7);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5046, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5052, 21} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(424, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5052, 3} true;
  assume {:verifier.code 0} true;
  call atomic_set($p11, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5053, 21} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(420, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5053, 3} true;
  assume {:verifier.code 0} true;
  call atomic_set($p12, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5056, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5049, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb9:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5056, 13} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5059, 27} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(432, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5059, 5} true;
  assume {:verifier.code 0} true;
  call $p14 := spinlock_check($p13);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5062, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5062, 15} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5065, 35} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(432, 1));
  $p16 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(432, 1)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5065, 68} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p16);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5065, 7} true;
  assume {:verifier.code 0} true;
  call __raw_spin_lock_init($p17, .str.30, __key___8);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5068, 7} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5073, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5071, 5} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb15:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5079, 21} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(504, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5079, 3} true;
  assume {:verifier.code 0} true;
  call atomic_set($p18, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5082, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5076, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb17:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5082, 13} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5085, 34} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(240, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5085, 5} true;
  assume {:verifier.code 0} true;
  call __init_waitqueue_head($p19, __key___9);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5087, 5} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5093, 21} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(416, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5093, 3} true;
  assume {:verifier.code 0} true;
  call atomic_set($p20, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5096, 3} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5090, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb21:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5096, 13} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5099, 34} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(328, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5099, 5} true;
  assume {:verifier.code 0} true;
  call __init_waitqueue_head($p21, __key___10);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5101, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5106, 8} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(168, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5106, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p22, $p2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5107, 8} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(176, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5107, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p23, $p0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5108, 27} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p0, $mul.ref(0, 1256)), $mul.ref(8, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5108, 27} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.0, $p24);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5109, 27} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p2, $mul.ref(0, 1928)), $mul.ref(1248, 1));
  $p27 := $add.ref($add.ref($add.ref($p2, $mul.ref(0, 1928)), $mul.ref(1248, 1)), $mul.ref(10, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5109, 38} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i16($M.0, $p27);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5109, 8} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(532, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5109, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p29, $i28);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5114, 31} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p25, $mul.ref(0, 48)), $mul.ref(0, 1));
  $p31 := $add.ref($add.ref($add.ref($p25, $mul.ref(0, 48)), $mul.ref(0, 1)), $mul.ref(4, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5112, 3} true;
  assume {:verifier.code 0} true;
  $i32 := 0;
  goto $bb25;
$bb24:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5104, 3} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb25:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5112, 13} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5114, 36} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i8($M.0, $p31);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5114, 13} true;
  assume {:verifier.code 0} true;
  $i34 := $zext.i8.i32($i33);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5114, 11} true;
  assume {:verifier.code 0} true;
  $i35 := $slt.i32($i32, $i34);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5114, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb27, $bb28;
$bb27:
  assume ($i35 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5115, 5} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  assume !(($i35 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5116, 7} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb29:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5119, 31} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p25, $mul.ref(0, 48)), $mul.ref(16, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5119, 31} true;
  assume {:verifier.code 0} true;
  $p37 := $load.ref($M.0, $p36);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5119, 40} true;
  assume {:verifier.code 0} true;
  $i38 := $sext.i32.i64($i32);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5119, 40} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p37, $mul.ref($i38, 64));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5119, 46} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p37, $mul.ref($i38, 64)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5120, 15} true;
  assume {:verifier.code 0} true;
  call $i41 := usb_endpoint_is_int_in($p40);
  call {:cexpr "tmp___9"} boogie_si_record_i32($i41);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5122, 9} true;
  assume {:verifier.code 0} true;
  $i42 := $ne.i32($i41, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5122, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb31, $bb32;
$bb30:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5138, 34} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(200, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5138, 34} true;
  assume {:verifier.code 0} true;
  $p49 := $load.ref($M.0, $p48);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5138, 52} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($add.ref($p49, $mul.ref(0, 9)), $mul.ref(4, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5138, 52} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i16($M.0, $p50);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5138, 22} true;
  assume {:verifier.code 0} true;
  $i52 := $zext.i16.i32($i51);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5138, 8} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(528, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5138, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p53, $i52);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5139, 20} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(176, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5139, 20} true;
  assume {:verifier.code 0} true;
  $p55 := $load.ref($M.0, $p54);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5139, 32} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($add.ref($p55, $mul.ref(0, 1256)), $mul.ref(8, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5139, 32} true;
  assume {:verifier.code 0} true;
  $p57 := $load.ref($M.0, $p56);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5139, 49} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($add.ref($p57, $mul.ref(0, 48)), $mul.ref(0, 1));
  $p59 := $add.ref($add.ref($add.ref($p57, $mul.ref(0, 48)), $mul.ref(0, 1)), $mul.ref(2, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5139, 54} true;
  assume {:verifier.code 0} true;
  $i60 := $load.i8($M.0, $p59);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5139, 7} true;
  assume {:verifier.code 0} true;
  $i61 := $zext.i8.i32($i60);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5139, 71} true;
  assume {:verifier.code 0} true;
  $i62 := $eq.i32($i61, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5139, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i62} true;
  goto $bb38, $bb39;
$bb31:
  assume ($i42 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5123, 12} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(200, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5123, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p43, $p40);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5124, 5} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb32:
  assume !(($i42 == 1));
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5127, 16} true;
  assume {:verifier.code 0} true;
  call $i44 := usb_endpoint_is_int_out($p40);
  call {:cexpr "tmp___10"} boogie_si_record_i32($i44);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5129, 9} true;
  assume {:verifier.code 0} true;
  $i45 := $ne.i32($i44, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5129, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb34, $bb35;
$bb34:
  assume ($i45 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5130, 12} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(192, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5130, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p46, $p40);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5131, 5} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb35:
  assume !(($i45 == 1));
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5133, 11} true;
  assume {:verifier.code 0} true;
  $i47 := $add.i32($i32, 1);
  call {:cexpr "i"} boogie_si_record_i32($i47);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5112, 3} true;
  assume {:verifier.code 0} true;
  $i32 := $i47;
  goto $bb25;
$bb37:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5136, 3} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb38:
  assume ($i62 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5140, 20} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(532, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5140, 20} true;
  assume {:verifier.code 0} true;
  $i64 := $load.i16($M.0, $p63);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5140, 9} true;
  assume {:verifier.code 0} true;
  $i65 := $zext.i16.i32($i64);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5140, 31} true;
  assume {:verifier.code 0} true;
  $i66 := $eq.i32($i65, 5379);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5140, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i66} true;
  goto $bb40, $bb41;
$bb39:
  assume !(($i62 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb40:
  assume ($i66 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5141, 12} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(528, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5141, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p67, 7);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5142, 5} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb41:
  assume !(($i66 == 1));
  assume {:verifier.code 0} true;
  goto $bb42;
$bb42:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5144, 3} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5147, 21} true;
  assume {:verifier.code 0} true;
  call $p68 := usb_alloc_urb(0, 208);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5147, 8} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(208, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5147, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p69, $p68);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5149, 14} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(208, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5149, 14} true;
  assume {:verifier.code 0} true;
  $p71 := $load.ref($M.0, $p70);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5149, 9} true;
  assume {:verifier.code 0} true;
  $i72 := $ne.ref($p71, $0.ref);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5149, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i72} true;
  goto $bb44, $bb45;
$bb44:
  assume ($i72 == 1);
  assume {:verifier.code 0} true;
  goto $bb47;
$bb45:
  assume !(($i72 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5151, 50} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($add.ref($p0, $mul.ref(0, 1256)), $mul.ref(48, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5151, 5} true;
  assume {:verifier.code 0} true;
  call $i74 := dev_err.ref.ref($p73, .str.31);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5153, 5} true;
  assume {:verifier.code 0} true;
  $i75 := $sub.i32(0, 12);
  goto $bb46;
$bb46:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5223, 3} true;
  assume {:verifier.code 0} true;
  call iowarrior_delete($p4);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5225, 3} true;
  assume {:verifier.code 0} true;
  $i9 := $i75;
  goto $bb3;
$bb47:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5157, 36} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(528, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5157, 36} true;
  assume {:verifier.code 0} true;
  $i77 := $load.i32($M.0, $p76);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5157, 22} true;
  assume {:verifier.code 0} true;
  $i78 := $sext.i32.i64($i77);
  call {:cexpr "size"} boogie_si_record_i64($i78);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3763, 14} true;
  assume {:verifier.code 0} true;
  call $p79 := __kmalloc($i78, 208);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5158, 8} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(216, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5158, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p80, $p79);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5160, 14} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(216, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5160, 14} true;
  assume {:verifier.code 0} true;
  $p82 := $load.ref($M.0, $p81);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5160, 9} true;
  assume {:verifier.code 0} true;
  $i83 := $ne.ref($p82, $0.ref);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5160, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i83} true;
  goto $bb48, $bb49;
$bb48:
  assume ($i83 == 1);
  assume {:verifier.code 0} true;
  goto $bb50;
$bb49:
  assume !(($i83 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5162, 50} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($add.ref($p0, $mul.ref(0, 1256)), $mul.ref(48, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5162, 5} true;
  assume {:verifier.code 0} true;
  call $i85 := dev_err.ref.ref($p84, .str.32);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5164, 5} true;
  assume {:verifier.code 0} true;
  $i75 := $sub.i32(0, 12);
  goto $bb46;
$bb50:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5168, 33} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(168, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5168, 33} true;
  assume {:verifier.code 0} true;
  $p87 := $load.ref($M.0, $p86);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5168, 60} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(200, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5168, 60} true;
  assume {:verifier.code 0} true;
  $p89 := $load.ref($M.0, $p88);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5168, 78} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($add.ref($p89, $mul.ref(0, 9)), $mul.ref(2, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5168, 78} true;
  assume {:verifier.code 0} true;
  $i91 := $load.i8($M.0, $p90);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5168, 39} true;
  assume {:verifier.code 0} true;
  $i92 := $zext.i8.i32($i91);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5168, 14} true;
  assume {:verifier.code 0} true;
  call $i93 := __create_pipe($p87, $i92);
  call {:cexpr "tmp___12"} boogie_si_record_i32($i93);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5169, 25} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(208, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5169, 25} true;
  assume {:verifier.code 0} true;
  $p95 := $load.ref($M.0, $p94);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5169, 42} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(168, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5169, 42} true;
  assume {:verifier.code 0} true;
  $p97 := $load.ref($M.0, $p96);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5169, 74} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i:5169:74: warning: over-approximating bitwise operation or;
  $i98 := $or.i32(1073741824, $i93);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5169, 86} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i:5169:86: warning: over-approximating bitwise operation or;
  $i99 := $or.i32($i98, 128);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5170, 33} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(216, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5170, 33} true;
  assume {:verifier.code 0} true;
  $p101 := $load.ref($M.0, $p100);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5170, 53} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(528, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5170, 53} true;
  assume {:verifier.code 0} true;
  $i103 := $load.i32($M.0, $p102);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5171, 20} true;
  assume {:verifier.code 0} true;
  $p104 := $bitcast.ref.ref($p4);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5171, 45} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(200, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5171, 45} true;
  assume {:verifier.code 0} true;
  $p106 := $load.ref($M.0, $p105);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5171, 63} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($add.ref($p106, $mul.ref(0, 9)), $mul.ref(6, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5171, 63} true;
  assume {:verifier.code 0} true;
  $i108 := $load.i8($M.0, $p107);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5171, 33} true;
  assume {:verifier.code 0} true;
  $i109 := $zext.i8.i32($i108);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5169, 3} true;
  assume {:verifier.code 0} true;
  call usb_fill_int_urb($p95, $p97, $i99, $p101, $i103, iowarrior_callback, $p104, $i109);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5172, 38} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(528, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5172, 38} true;
  assume {:verifier.code 0} true;
  $i111 := $load.i32($M.0, $p110);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5172, 50} true;
  assume {:verifier.code 0} true;
  $i112 := $add.i32($i111, 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5172, 55} true;
  assume {:verifier.code 0} true;
  $i113 := $mul.i32($i112, 16);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5172, 22} true;
  assume {:verifier.code 0} true;
  $i114 := $sext.i32.i64($i113);
  call {:cexpr "size"} boogie_si_record_i64($i114);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3763, 14} true;
  assume {:verifier.code 0} true;
  call $p115 := __kmalloc($i114, 208);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5173, 8} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(232, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5173, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p116, $p115);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5175, 14} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(232, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5175, 14} true;
  assume {:verifier.code 0} true;
  $p118 := $load.ref($M.0, $p117);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5175, 9} true;
  assume {:verifier.code 0} true;
  $i119 := $ne.ref($p118, $0.ref);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5175, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i119} true;
  goto $bb51, $bb52;
$bb51:
  assume ($i119 == 1);
  assume {:verifier.code 0} true;
  goto $bb53;
$bb52:
  assume !(($i119 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5177, 50} true;
  assume {:verifier.code 0} true;
  $p120 := $add.ref($add.ref($p0, $mul.ref(0, 1256)), $mul.ref(48, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5177, 5} true;
  assume {:verifier.code 0} true;
  call $i121 := dev_err.ref.ref($p120, .str.33);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5179, 5} true;
  assume {:verifier.code 0} true;
  $i75 := $sub.i32(0, 12);
  goto $bb46;
$bb53:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5183, 24} true;
  assume {:verifier.code 0} true;
  $p122 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(516, 1));
  $p123 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(516, 1)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5183, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p123, 0, 9, false);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5184, 32} true;
  assume {:verifier.code 0} true;
  $p124 := $add.ref($add.ref($p2, $mul.ref(0, 1928)), $mul.ref(1248, 1));
  $p125 := $add.ref($add.ref($add.ref($p2, $mul.ref(0, 1928)), $mul.ref(1248, 1)), $mul.ref(16, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5184, 43} true;
  assume {:verifier.code 0} true;
  $i126 := $load.i8($M.0, $p125);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5184, 20} true;
  assume {:verifier.code 0} true;
  $i127 := $zext.i8.i32($i126);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5184, 63} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(516, 1));
  $p129 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(516, 1)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5184, 3} true;
  assume {:verifier.code 0} true;
  call $i130 := usb_string($p2, $i127, $p129, 9);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5185, 41} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(516, 1));
  $p132 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(516, 1)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5185, 14} true;
  assume {:verifier.code 0} true;
  call $i133 := strlen($p132);
  call {:cexpr "tmp___14"} boogie_si_record_i64($i133);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5187, 16} true;
  assume {:verifier.code 0} true;
  $i134 := $ne.i64($i133, 8);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5187, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i134} true;
  goto $bb54, $bb55;
$bb54:
  assume ($i134 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5189, 26} true;
  assume {:verifier.code 0} true;
  $p135 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(516, 1));
  $p136 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(516, 1)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5189, 5} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p136, 0, 9, false);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5191, 3} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb55:
  assume !(($i134 == 1));
  assume {:verifier.code 0} true;
  goto $bb56;
$bb56:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5193, 20} true;
  assume {:verifier.code 0} true;
  $p137 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(176, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5193, 20} true;
  assume {:verifier.code 0} true;
  $p138 := $load.ref($M.0, $p137);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5193, 32} true;
  assume {:verifier.code 0} true;
  $p139 := $add.ref($add.ref($p138, $mul.ref(0, 1256)), $mul.ref(8, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5193, 32} true;
  assume {:verifier.code 0} true;
  $p140 := $load.ref($M.0, $p139);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5193, 49} true;
  assume {:verifier.code 0} true;
  $p141 := $add.ref($add.ref($p140, $mul.ref(0, 48)), $mul.ref(0, 1));
  $p142 := $add.ref($add.ref($add.ref($p140, $mul.ref(0, 48)), $mul.ref(0, 1)), $mul.ref(2, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5193, 54} true;
  assume {:verifier.code 0} true;
  $i143 := $load.i8($M.0, $p142);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5193, 7} true;
  assume {:verifier.code 0} true;
  $i144 := $zext.i8.i32($i143);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5193, 71} true;
  assume {:verifier.code 0} true;
  $i145 := $eq.i32($i144, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5193, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i145} true;
  goto $bb57, $bb58;
$bb57:
  assume ($i145 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5195, 16} true;
  assume {:verifier.code 0} true;
  call $i146 := __create_pipe($p2, 0);
  call {:cexpr "tmp___15"} boogie_si_record_i32($i146);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5196, 52} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i:5196:52: warning: over-approximating bitwise operation or;
  $i147 := $or.i32($sub.i32(0, 2147483648), $i146);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5196, 5} true;
  assume {:verifier.code 0} true;
  call $i148 := usb_control_msg($p2, $i147, 10, 33, 0, 0, $0.ref, 0, 5000);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5199, 3} true;
  assume {:verifier.code 0} true;
  goto $bb59;
$bb58:
  assume !(($i145 == 1));
  assume {:verifier.code 0} true;
  goto $bb59;
$bb59:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5202, 8} true;
  assume {:verifier.code 0} true;
  $p149 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(508, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5202, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p149, 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5203, 31} true;
  assume {:verifier.code 0} true;
  $p150 := $bitcast.ref.ref($p4);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5203, 3} true;
  assume {:verifier.code 0} true;
  call usb_set_intfdata($p0, $p150);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5204, 12} true;
  assume {:verifier.code 0} true;
  call $i151 := usb_register_dev($p0, iowarrior_class);
  call {:cexpr "retval"} boogie_si_record_i32($i151);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5206, 7} true;
  assume {:verifier.code 0} true;
  $i152 := $ne.i32($i151, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5206, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i152} true;
  goto $bb60, $bb61;
$bb60:
  assume ($i152 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5208, 50} true;
  assume {:verifier.code 0} true;
  $p153 := $add.ref($add.ref($p0, $mul.ref(0, 1256)), $mul.ref(48, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5208, 5} true;
  assume {:verifier.code 0} true;
  call $i154 := dev_err.ref.ref($p153, .str.34);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5209, 5} true;
  assume {:verifier.code 0} true;
  call usb_set_intfdata($p0, $0.ref);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5211, 5} true;
  assume {:verifier.code 0} true;
  $i75 := $i151;
  goto $bb46;
$bb61:
  assume !(($i152 == 1));
  assume {:verifier.code 0} true;
  goto $bb62;
$bb62:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5215, 43} true;
  assume {:verifier.code 0} true;
  $p155 := $add.ref($add.ref($p0, $mul.ref(0, 1256)), $mul.ref(32, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5215, 43} true;
  assume {:verifier.code 0} true;
  $i156 := $load.i32($M.0, $p155);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5215, 16} true;
  assume {:verifier.code 0} true;
  $i157 := $trunc.i32.i8($i156);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5215, 8} true;
  assume {:verifier.code 0} true;
  $p158 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(184, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5215, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p158, $i157);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5216, 50} true;
  assume {:verifier.code 0} true;
  $p159 := $add.ref($add.ref($p0, $mul.ref(0, 1256)), $mul.ref(48, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5217, 24} true;
  assume {:verifier.code 0} true;
  $p160 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(532, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5217, 24} true;
  assume {:verifier.code 0} true;
  $i161 := $load.i16($M.0, $p160);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5217, 13} true;
  assume {:verifier.code 0} true;
  $i162 := $zext.i16.i32($i161);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5217, 41} true;
  assume {:verifier.code 0} true;
  $p163 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(516, 1));
  $p164 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(516, 1)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5217, 72} true;
  assume {:verifier.code 0} true;
  $p165 := $add.ref($add.ref($p25, $mul.ref(0, 48)), $mul.ref(0, 1));
  $p166 := $add.ref($add.ref($add.ref($p25, $mul.ref(0, 48)), $mul.ref(0, 1)), $mul.ref(2, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5217, 77} true;
  assume {:verifier.code 0} true;
  $i167 := $load.i8($M.0, $p166);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5217, 54} true;
  assume {:verifier.code 0} true;
  $i168 := $zext.i8.i32($i167);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5218, 24} true;
  assume {:verifier.code 0} true;
  $p169 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(184, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5218, 24} true;
  assume {:verifier.code 0} true;
  $i170 := $load.i8($M.0, $p169);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5218, 13} true;
  assume {:verifier.code 0} true;
  $i171 := $zext.i8.i32($i170);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5216, 3} true;
  assume {:verifier.code 0} true;
  call $i172 := _dev_info.ref.ref.i32.ref.i32.i32($p159, .str.35, $i162, $p164, $i168, $i171);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5220, 3} true;
  assume {:verifier.code 0} true;
  $i9 := $i151;
  goto $bb3;
}
const iowarrior_disconnect: ref;
axiom (iowarrior_disconnect == $sub.ref(0, 80934));
procedure  iowarrior_disconnect($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i8;
  var $i5: i32;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5234, 13} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5234, 13} true;
  assume {:verifier.code 0} true;
  call $p1 := usb_get_intfdata($p0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5235, 9} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5236, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested(iowarrior_open_disc_lock, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5237, 3} true;
  assume {:verifier.code 0} true;
  call usb_set_intfdata($p0, $0.ref);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5238, 22} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p2, $mul.ref(0, 536)), $mul.ref(184, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5238, 22} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i8($M.0, $p3);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5238, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i8.i32($i4);
  call {:cexpr "minor"} boogie_si_record_i32($i5);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5239, 3} true;
  assume {:verifier.code 0} true;
  call usb_deregister_dev($p0, iowarrior_class);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5240, 28} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p2, $mul.ref(0, 536)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5240, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p6, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5241, 8} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p2, $mul.ref(0, 536)), $mul.ref(508, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5241, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p7, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5242, 23} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p2, $mul.ref(0, 536)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5242, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p8);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5243, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock(iowarrior_open_disc_lock);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5245, 12} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p2, $mul.ref(0, 536)), $mul.ref(512, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5245, 12} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5245, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i10, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5245, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5247, 23} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p2, $mul.ref(0, 536)), $mul.ref(208, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5247, 23} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5247, 5} true;
  assume {:verifier.code 0} true;
  call usb_kill_urb($p13);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5248, 22} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p2, $mul.ref(0, 536)), $mul.ref(240, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5248, 5} true;
  assume {:verifier.code 0} true;
  call __wake_up($p14, 1, 1, $0.ref);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5249, 22} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p2, $mul.ref(0, 536)), $mul.ref(328, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5249, 5} true;
  assume {:verifier.code 0} true;
  call __wake_up($p15, 1, 1, $0.ref);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5251, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i11 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5253, 5} true;
  assume {:verifier.code 0} true;
  call iowarrior_delete($p2);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5257, 50} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p0, $mul.ref(0, 1256)), $mul.ref(48, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5257, 3} true;
  assume {:verifier.code 0} true;
  call $i17 := _dev_info.ref.ref.i32($p16, .str.39, $i5);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5260, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const usb_get_intfdata: ref;
axiom (usb_get_intfdata == $sub.ref(0, 81966));
procedure  usb_get_intfdata($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3679, 61} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3679, 61} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 1256)), $mul.ref(48, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3679, 13} true;
  assume {:verifier.code 0} true;
  call $p2 := dev_get_drvdata($p1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3681, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const mutex_lock_nested: ref;
axiom (mutex_lock_nested == $sub.ref(0, 82998));
procedure  mutex_lock_nested($p0: ref, $i1: i32)
{
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5742, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "mutex_lock_nested:arg:arg1"} boogie_si_record_i32($i1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5742, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const usb_set_intfdata: ref;
axiom (usb_set_intfdata == $sub.ref(0, 84030));
procedure  usb_set_intfdata($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $i3: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3690, 27} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3690, 27} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 1256)), $mul.ref(48, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3690, 3} true;
  assume {:verifier.code 0} true;
  call $i3 := dev_set_drvdata($p2, $p1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3692, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const usb_deregister_dev: ref;
axiom (usb_deregister_dev == $sub.ref(0, 85062));
procedure  usb_deregister_dev($p0: ref, $p1: ref)
{
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5765, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5765, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const mutex_unlock: ref;
axiom (mutex_unlock == $sub.ref(0, 86094));
procedure  mutex_unlock($p0: ref)
{
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5745, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5745, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const usb_kill_urb: ref;
axiom (usb_kill_urb == $sub.ref(0, 87126));
procedure  usb_kill_urb($p0: ref)
{
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5772, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5772, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __wake_up: ref;
axiom (__wake_up == $sub.ref(0, 88158));
procedure  __wake_up($p0: ref, $i1: i32, $i2: i32, $p3: ref)
{
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5689, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "__wake_up:arg:arg1"} boogie_si_record_i32($i1);
  call {:cexpr "__wake_up:arg:arg2"} boogie_si_record_i32($i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5689, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const iowarrior_delete: ref;
axiom (iowarrior_delete == $sub.ref(0, 89190));
procedure  iowarrior_delete($p0: ref)
{
  var $i1: i32;
  var $i2: i1;
  var $p3: ref;
  var $i4: i8;
  var $i5: i32;
  var $i6: i32;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4082, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4082, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4082, 13} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4084, 9} true;
  assume {:verifier.code 0} true;
  $i1 := $M.1;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4084, 9} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4084, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i2 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4087, 45} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p0, $mul.ref(0, 536)), $mul.ref(184, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4087, 45} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i8($M.0, $p3);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4087, 34} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i8.i32($i4);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4086, 7} true;
  assume {:verifier.code 0} true;
  call $i6 := printk.ref.ref.i32(.str.21, .str.23, $i5);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4089, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4091, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4097, 28} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p0, $mul.ref(0, 536)), $mul.ref(216, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4097, 28} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4097, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p8);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4098, 21} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p0, $mul.ref(0, 536)), $mul.ref(208, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4098, 21} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4098, 3} true;
  assume {:verifier.code 0} true;
  call usb_free_urb($p10);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4099, 28} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p0, $mul.ref(0, 536)), $mul.ref(232, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4099, 28} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4099, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p12);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4100, 9} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4100, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p13);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4102, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4094, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
}
const _dev_info: ref;
axiom (_dev_info == $sub.ref(0, 90222));
procedure  _dev_info.ref.ref.i32.ref.i32.i32($p0: ref, $p1: ref, p.2: i32, p.3: ref, p.4: i32, p.5: i32)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5701, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5701, 10} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5701, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
procedure  _dev_info.ref.ref.i32($p0: ref, $p1: ref, p.2: i32)
  returns ($r: i32)
{
  var $i2: i32;
$bb1:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5701, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5701, 10} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5701, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const printk: ref;
axiom (printk == $sub.ref(0, 91254));
procedure  printk.ref.ref.i32.i64($p0: ref, p.1: ref, p.2: i32, p.3: i64)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5752, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5752, 10} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5752, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
procedure  printk.ref.ref.i32($p0: ref, p.1: ref, p.2: i32)
  returns ($r: i32)
{
  var $i1: i32;
$bb1:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5752, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5752, 10} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5752, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
procedure  printk.ref.ref.i32.i32($p0: ref, p.1: ref, p.2: i32, p.3: i32)
  returns ($r: i32)
{
  var $i1: i32;
$bb2:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5752, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5752, 10} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5752, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
procedure  printk.ref.ref($p0: ref, p.1: ref)
  returns ($r: i32)
{
  var $i1: i32;
$bb3:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5752, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5752, 10} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5752, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
procedure  printk.ref.ref.i32.i32.i64($p0: ref, p.1: ref, p.2: i32, p.3: i32, p.4: i64)
  returns ($r: i32)
{
  var $i1: i32;
$bb4:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5752, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5752, 10} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5752, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const kfree: ref;
axiom (kfree == $sub.ref(0, 92286));
procedure  kfree($p0: ref)
{
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5803, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5803, 3} true;
  assume {:verifier.code 0} true;
  call free_($p0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5804, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const usb_free_urb: ref;
axiom (usb_free_urb == $sub.ref(0, 93318));
procedure  usb_free_urb($p0: ref)
{
  var $i1: i64;
  var $i2: i1;
  var $i3: i1;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
  var $i7: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5630, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5630, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5630, 13} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5632, 12} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5632, 32} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i64($i1, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5632, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i2 == 1);
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i2 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5634, 7} true;
  assume {:verifier.code 0} true;
  call ldv_assume_stop();
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5636, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5638, 9} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.ref($p0, $0.ref);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5638, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i3 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5639, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $M.2;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5639, 25} true;
  assume {:verifier.code 0} true;
  $i5 := $sge.i32($i4, 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5639, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb8, $bb9;
$bb7:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb8:
  assume ($i5 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5640, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i5 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5642, 9} true;
  assume {:verifier.code 0} true;
  call ldv_blast_assert();
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5645, 23} true;
  assume {:verifier.code 0} true;
  $i6 := $M.2;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5645, 37} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i32($i6, 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5645, 21} true;
  assume {:verifier.code 0} true;
  $M.2 := $i7;
  call {:cexpr "ldv_urb_state"} boogie_si_record_i32($i7);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5646, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5648, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5653, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb13:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5651, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
}
const ldv_assume_stop: ref;
axiom (ldv_assume_stop == $sub.ref(0, 94350));
procedure  ldv_assume_stop()
{
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5533, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5533, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5535, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb2:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5537, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_blast_assert: ref;
axiom (ldv_blast_assert == $sub.ref(0, 95382));
procedure  ldv_blast_assert()
{
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5524, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5524, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5525, 10} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_error();
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5527, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const free_: ref;
axiom (free_ == $sub.ref(0, 96414));
procedure  free_($p0: ref)
{
  call $free($p0);
}
const iowarrior_devnode: ref;
axiom (iowarrior_devnode == $sub.ref(0, 97446));
procedure  iowarrior_devnode($p0: ref, $p1: ref)
  returns ($r: ref)
{
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4997, 13} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4997, 13} true;
  assume {:verifier.code 0} true;
  call $p2 := dev_name($p0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4998, 13} true;
  assume {:verifier.code 0} true;
  call $p3 := kasprintf.i32.ref.ref(208, .str.27, $p2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5000, 3} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const noop_llseek: ref;
axiom (noop_llseek == $sub.ref(0, 98478));
procedure  noop_llseek($p0: ref, $i1: i64, $i2: i32)
  returns ($r: i64);
const iowarrior_read: ref;
axiom (iowarrior_read == $sub.ref(0, 99510));
procedure  iowarrior_read($p0: ref, $p1: ref, $i2: i64, $p3: ref)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i1;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $i14: i32;
  var $i15: i1;
  var $p16: ref;
  var $i17: i8;
  var $i18: i32;
  var $i19: i32;
  var $p20: ref;
  var $i21: i32;
  var $i22: i64;
  var $i23: i1;
  var $p24: ref;
  var $i25: i32;
  var $i26: i32;
  var $i27: i64;
  var $i28: i1;
  var $p29: ref;
  var $i30: i32;
  var $i31: i1;
  var $p32: ref;
  var $i33: i32;
  var $i34: i32;
  var $i35: i1;
  var $p36: ref;
  var $i37: i32;
  var $i38: i1;
  var $i41: i32;
  var $i42: i1;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $i56: i32;
  var $p57: ref;
  var $p58: ref;
  var $i59: i32;
  var $i60: i1;
  var $i61: i32;
  var $i64: i32;
  var $i65: i1;
  var $i66: i32;
  var $p67: ref;
  var $i68: i32;
  var $i69: i1;
  var $i70: i32;
  var $i62: i32;
  var $i63: i32;
  var $p71: ref;
  var $i43: i32;
  var $i44: i32;
  var $i39: i32;
  var $i40: i32;
  var $i72: i1;
  var $p73: ref;
  var $i74: i32;
  var $i75: i1;
  var $i76: i1;
  var $i77: i32;
  var $p78: ref;
  var $i79: i32;
  var $i80: i32;
  var $i81: i32;
  var $p82: ref;
  var $p83: ref;
  var $i84: i64;
  var $p85: ref;
  var $i86: i32;
  var $i87: i64;
  var $i88: i32;
  var $i89: i1;
  var $p90: ref;
  var $i91: i32;
  var $i92: i1;
  var $i93: i32;
  var $i94: i32;
  var $i95: i32;
  var $i96: i1;
  var $i97: i32;
  var $p98: ref;
  var $i10: i64;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4136, 35} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  call {:cexpr "iowarrior_read:arg:count"} boogie_si_record_i64($i2);
  assume true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4136, 35} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p0, $mul.ref(0, 336)), $mul.ref(296, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4136, 35} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.3, $p5);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4136, 9} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4137, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p7);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4137, 27} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i64($i8, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4137, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4138, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i64(0, 19);
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4140, 14} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(508, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4140, 14} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i32($M.0, $p11);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4140, 9} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4140, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb4, $bb5;
$bb3:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4289, 1} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
$bb4:
  assume ($i13 == 1);
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i13 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4141, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i64(0, 19);
  goto $bb3;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4145, 3} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4145, 13} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4147, 9} true;
  assume {:verifier.code 0} true;
  $i14 := $M.1;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4147, 9} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i32($i14, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4147, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i15 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4150, 43} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(184, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4150, 43} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i8($M.0, $p16);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4150, 32} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i8.i32($i17);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4149, 7} true;
  assume {:verifier.code 0} true;
  call $i19 := printk.ref.ref.i32.i64(.str.10, .str.11, $i18, $i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4152, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4154, 5} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4159, 30} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(528, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4159, 30} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i32($M.0, $p20);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4159, 16} true;
  assume {:verifier.code 0} true;
  $i22 := $sext.i32.i64($i21);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4159, 13} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i64($i2, $i22);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4159, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb15, $bb16;
$bb14:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4157, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb15:
  assume ($i23 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4160, 33} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(528, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4160, 33} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i32($M.0, $p24);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4160, 45} true;
  assume {:verifier.code 0} true;
  $i26 := $add.i32($i25, 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4160, 18} true;
  assume {:verifier.code 0} true;
  $i27 := $sext.i32.i64($i26);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4160, 15} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.i64($i2, $i27);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4160, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb17, $bb18;
$bb16:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb17:
  assume ($i28 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4161, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i64(0, 22);
  goto $bb3;
$bb18:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4164, 3} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4167, 3} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4167, 13} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4170, 23} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(504, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4170, 5} true;
  assume {:verifier.code 0} true;
  call atomic_set($p29, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4171, 16} true;
  assume {:verifier.code 0} true;
  call $i30 := read_index($p7);
  call {:cexpr "read_idx"} boogie_si_record_i32($i30);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4173, 18} true;
  assume {:verifier.code 0} true;
  $i31 := $eq.i32($i30, $sub.i32(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4173, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i31 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4174, 17} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p0, $mul.ref(0, 336)), $mul.ref(128, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4174, 17} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i32($M.4, $p32);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4174, 25} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i:4174:25: warning: over-approximating bitwise operation and;
  $i34 := $and.i32($i33, 2048);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4174, 25} true;
  assume {:verifier.code 0} true;
  $i35 := $ne.i32($i34, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4174, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb25, $bb26;
$bb24:
  assume !(($i31 == 1));
  assume {:verifier.code 0} true;
  $i77 := $i30;
  goto $bb61;
$bb25:
  assume ($i35 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4175, 9} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i64(0, 11);
  goto $bb3;
$bb26:
  assume !(($i35 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4178, 20} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(508, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4178, 20} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i32($M.0, $p36);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4178, 15} true;
  assume {:verifier.code 0} true;
  $i38 := $ne.i32($i37, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4178, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb27, $bb28;
$bb27:
  assume ($i38 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4181, 22} true;
  assume {:verifier.code 0} true;
  call $i41 := read_index($p7);
  call {:cexpr "read_idx"} boogie_si_record_i32($i41);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4183, 24} true;
  assume {:verifier.code 0} true;
  $i42 := $ne.i32($i41, $sub.i32(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4183, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb30, $bb31;
$bb28:
  assume !(($i38 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4179, 9} true;
  assume {:verifier.code 0} true;
  $i39, $i40 := $i30, 0;
  goto $bb29;
$bb29:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4177, 15} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4242, 13} true;
  assume {:verifier.code 0} true;
  $i72 := $ne.i32($i40, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4242, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i72} true;
  goto $bb51, $bb52;
$bb30:
  assume ($i42 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4184, 11} true;
  assume {:verifier.code 0} true;
  $i43, $i44 := $i41, 0;
  goto $bb32;
$bb31:
  assume !(($i42 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4186, 13} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb32:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4177, 15} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i39, $i40 := $i43, $i44;
  goto $bb29;
$bb33:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4186, 23} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  call $p45 := devirtbounce(0, current_task);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4190, 22} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4190, 28} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.i32($M.5, $p46, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4191, 32} true;
  assume {:verifier.code 0} true;
  $p47 := $bitcast.ref.ref($p45);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4191, 22} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4191, 30} true;
  assume {:verifier.code 0} true;
  $M.6 := $store.ref($M.6, $p48, $p45);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4192, 22} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4192, 27} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.ref($M.7, $p49, autoremove_wake_function);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4193, 48} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4193, 22} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(24, 1));
  $p52 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(24, 1)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4193, 37} true;
  assume {:verifier.code 0} true;
  $M.8 := $store.ref($M.8, $p52, $p50);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4194, 48} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4194, 22} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(24, 1));
  $p55 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(24, 1)), $mul.ref(8, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4194, 37} true;
  assume {:verifier.code 0} true;
  $M.9 := $store.ref($M.9, $p55, $p53);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4197, 15} true;
  assume {:verifier.code 0} true;
  $i56 := $i41;
  goto $bb35;
$bb35:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4197, 25} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4200, 40} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(240, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4200, 17} true;
  assume {:verifier.code 0} true;
  call prepare_to_wait($p57, $p4, 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4202, 28} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(508, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4202, 28} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i32($M.0, $p58);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4202, 23} true;
  assume {:verifier.code 0} true;
  $i60 := $ne.i32($i59, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4202, 21} true;
  assume {:verifier.code 0} true;
  $i61 := $i56;
  assume {:branchcond $i60} true;
  goto $bb37, $bb38;
$bb37:
  assume ($i60 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4206, 30} true;
  assume {:verifier.code 0} true;
  call $i64 := read_index($p7);
  call {:cexpr "read_idx"} boogie_si_record_i32($i64);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4208, 32} true;
  assume {:verifier.code 0} true;
  $i65 := $ne.i32($i64, $sub.i32(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4208, 23} true;
  assume {:verifier.code 0} true;
  $i66 := $i64;
  assume {:branchcond $i65} true;
  goto $bb40, $bb41;
$bb38:
  assume !(($i60 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4203, 19} true;
  assume {:verifier.code 0} true;
  $i62, $i63 := $i61, 0;
  goto $bb39;
$bb39:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4232, 34} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(240, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4232, 15} true;
  assume {:verifier.code 0} true;
  call finish_wait($p71, $p4);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4234, 15} true;
  assume {:verifier.code 0} true;
  goto $bb49;
$bb40:
  assume ($i65 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4206, 30} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4209, 21} true;
  assume {:verifier.code 0} true;
  $i62, $i63 := $i66, 0;
  goto $bb39;
$bb41:
  assume !(($i65 == 1));
  assume {:verifier.code 0} true;
  goto $bb42;
$bb42:
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  call $p67 := devirtbounce(0, current_task);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4215, 27} true;
  assume {:verifier.code 0} true;
  call $i68 := signal_pending($p67);
  call {:cexpr "tmp___9"} boogie_si_record_i32($i68);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4217, 21} true;
  assume {:verifier.code 0} true;
  $i69 := $ne.i32($i68, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4217, 21} true;
  assume {:verifier.code 0} true;
  $i70 := $i64;
  assume {:branchcond $i69} true;
  goto $bb44, $bb45;
$bb44:
  assume ($i69 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4206, 30} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4218, 17} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb45:
  assume !(($i69 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4220, 19} true;
  assume {:verifier.code 0} true;
  call schedule();
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4222, 19} true;
  assume {:verifier.code 0} true;
  goto $bb47;
$bb46:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4225, 17} true;
  assume {:verifier.code 0} true;
  $i62, $i63 := $i70, $sub.i32(0, 512);
  goto $bb39;
$bb47:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4197, 15} true;
  assume {:verifier.code 0} true;
  $i56 := $i64;
  goto $bb35;
$bb48:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4229, 15} true;
  assume {:verifier.code 0} true;
  assume false;
$bb49:
  assume {:verifier.code 0} true;
  $i43, $i44 := $i62, $i63;
  goto $bb32;
$bb50:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4237, 13} true;
  assume {:verifier.code 0} true;
  assume false;
$bb51:
  assume ($i72 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4243, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i64(0, 85);
  goto $bb3;
$bb52:
  assume !(($i72 == 1));
  assume {:verifier.code 0} true;
  goto $bb53;
$bb53:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4246, 20} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(508, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4246, 20} true;
  assume {:verifier.code 0} true;
  $i74 := $load.i32($M.0, $p73);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4246, 15} true;
  assume {:verifier.code 0} true;
  $i75 := $ne.i32($i74, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4246, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i75} true;
  goto $bb54, $bb55;
$bb54:
  assume ($i75 == 1);
  assume {:verifier.code 0} true;
  goto $bb56;
$bb55:
  assume !(($i75 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4247, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i64(0, 19);
  goto $bb3;
$bb56:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4250, 22} true;
  assume {:verifier.code 0} true;
  $i76 := $eq.i32($i39, $sub.i32(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4250, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i76} true;
  goto $bb57, $bb58;
$bb57:
  assume ($i76 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4251, 11} true;
  assume {:verifier.code 0} true;
  $i10 := 0;
  goto $bb3;
$bb58:
  assume !(($i76 == 1));
  assume {:verifier.code 0} true;
  goto $bb59;
$bb59:
  assume {:verifier.code 0} true;
  goto $bb60;
$bb60:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4255, 5} true;
  assume {:verifier.code 0} true;
  $i77 := $i39;
  goto $bb61;
$bb61:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4258, 31} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(528, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4258, 31} true;
  assume {:verifier.code 0} true;
  $i79 := $load.i32($M.0, $p78);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4258, 43} true;
  assume {:verifier.code 0} true;
  $i80 := $add.i32($i79, 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4258, 23} true;
  assume {:verifier.code 0} true;
  $i81 := $mul.i32($i77, $i80);
  call {:cexpr "offset"} boogie_si_record_i32($i81);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4259, 66} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(232, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4259, 66} true;
  assume {:verifier.code 0} true;
  $p83 := $load.ref($M.0, $p82);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4259, 77} true;
  assume {:verifier.code 0} true;
  $i84 := $sext.i32.i64($i81);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4259, 77} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p83, $mul.ref($i84, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4260, 30} true;
  assume {:verifier.code 0} true;
  $i86 := $trunc.i64.i32($i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3613, 3} true;
  assume {:verifier.code 0} true;
  call might_fault();
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3614, 29} true;
  assume {:verifier.code 0} true;
  call $i87 := _copy_to_user($p1, $p85, $i86);
  call {:cexpr "tmp___0"} boogie_si_record_i64($i87);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3617, 11} true;
  assume {:verifier.code 0} true;
  $i88 := $trunc.i64.i32($i87);
  call {:cexpr "tmp"} boogie_si_record_i32($i88);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4263, 9} true;
  assume {:verifier.code 0} true;
  $i89 := $ne.i32($i88, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4263, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i89} true;
  goto $bb62, $bb63;
$bb62:
  assume ($i89 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4264, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i64(0, 14);
  goto $bb3;
$bb63:
  assume !(($i89 == 1));
  assume {:verifier.code 0} true;
  goto $bb64;
$bb64:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4268, 54} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(504, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4268, 16} true;
  assume {:verifier.code 0} true;
  call $i91 := atomic_read($p90);
  call {:cexpr "tmp___11"} boogie_si_record_i32($i91);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4270, 9} true;
  assume {:verifier.code 0} true;
  $i92 := $ne.i32($i91, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4270, 9} true;
  assume {:verifier.code 0} true;
  $i93 := $i77;
  assume {:branchcond $i92} true;
  goto $bb65, $bb66;
$bb65:
  assume ($i92 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4271, 5} true;
  assume {:verifier.code 0} true;
  goto $bb67;
$bb66:
  assume !(($i92 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4272, 7} true;
  assume {:verifier.code 0} true;
  $i94 := $i93;
  goto $bb68;
$bb67:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4167, 3} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb68:
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4278, 23} true;
  assume {:verifier.code 0} true;
  $i95 := $add.i32($i94, 1);
  call {:cexpr "read_idx"} boogie_si_record_i32($i95);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4279, 16} true;
  assume {:verifier.code 0} true;
  $i96 := $eq.i32($i95, 16);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4279, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i96} true;
  goto $bb70, $bb71;
$bb69:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4276, 3} true;
  assume {:verifier.code 0} true;
  $i94 := $u0;
  goto $bb68;
$bb70:
  assume ($i96 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4281, 3} true;
  assume {:verifier.code 0} true;
  $i97 := 0;
  goto $bb72;
$bb71:
  assume !(($i96 == 1));
  assume {:verifier.code 0} true;
  $i97 := $i95;
  goto $bb72;
$bb72:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4285, 21} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(420, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4285, 3} true;
  assume {:verifier.code 0} true;
  call atomic_set($p98, $i97);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4287, 3} true;
  assume {:verifier.code 0} true;
  $i10 := $i2;
  goto $bb3;
}
const iowarrior_write: ref;
axiom (iowarrior_write == $sub.ref(0, 100542));
procedure  iowarrior_write($p0: ref, $p1: ref, $i2: i64, $p3: ref)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $i11: i1;
  var $i13: i32;
  var $i14: i1;
  var $p15: ref;
  var $i16: i8;
  var $i17: i32;
  var $i18: i32;
  var $i19: i1;
  var $p20: ref;
  var $i21: i32;
  var $i22: i64;
  var $i23: i1;
  var $p24: ref;
  var $i25: i16;
  var $i26: i32;
  var $i27: i1;
  var $p28: ref;
  var $i29: i16;
  var $i30: i32;
  var $i31: i1;
  var $p32: ref;
  var $i33: i16;
  var $i34: i32;
  var $i35: i1;
  var $p36: ref;
  var $i37: i16;
  var $i38: i32;
  var $i39: i1;
  var $p40: ref;
  var $i41: i16;
  var $i42: i32;
  var $i43: i1;
  var $p44: ref;
  var $i45: i1;
  var $i46: i64;
  var $i47: i1;
  var $p48: ref;
  var $p49: ref;
  var $i50: i32;
  var $i51: i32;
  var $p52: ref;
  var $i53: i32;
  var $i54: i1;
  var $p55: ref;
  var $i56: i32;
  var $i57: i32;
  var $i58: i1;
  var $p59: ref;
  var $i60: i32;
  var $i61: i1;
  var $p63: ref;
  var $i64: i32;
  var $i65: i1;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $i80: i32;
  var $i81: i1;
  var $p83: ref;
  var $i84: i32;
  var $i85: i1;
  var $p86: ref;
  var $i87: i32;
  var $i88: i1;
  var $i82: i32;
  var $p89: ref;
  var $i66: i32;
  var $i62: i32;
  var $i90: i1;
  var $p91: ref;
  var $i92: i32;
  var $i93: i1;
  var $p94: ref;
  var $i95: i32;
  var $i96: i1;
  var $p97: ref;
  var $p98: ref;
  var $i99: i1;
  var $i100: i32;
  var $i101: i1;
  var $i102: i32;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $i107: i32;
  var $i108: i64;
  var $p109: ref;
  var $p110: ref;
  var $i111: i1;
  var $i112: i32;
  var $i113: i1;
  var $i114: i32;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $p119: ref;
  var $p120: ref;
  var $i121: i8;
  var $i122: i32;
  var $i123: i32;
  var $p124: ref;
  var $p125: ref;
  var $i126: i32;
  var $p127: ref;
  var $i128: i32;
  var $p129: ref;
  var $p130: ref;
  var $p131: ref;
  var $p132: ref;
  var $i133: i8;
  var $i134: i32;
  var $p135: ref;
  var $i136: i32;
  var $i137: i32;
  var $p138: ref;
  var $i139: i64;
  var $i140: i1;
  var $i142: i32;
  var $i143: i1;
  var $i144: i32;
  var $i145: i1;
  var $p146: ref;
  var $i147: i32;
  var $i148: i32;
  var $i149: i32;
  var $p150: ref;
  var $p151: ref;
  var $p152: ref;
  var $p153: ref;
  var $i154: i16;
  var $i155: i32;
  var $i156: i32;
  var $i141: i32;
  var $p157: ref;
  var $p158: ref;
  var $p159: ref;
  var $i160: i32;
  var $i161: i64;
  var $p162: ref;
  var $i163: i64;
  var $i115: i32;
  var $i103: i32;
  var $p164: ref;
  var $p165: ref;
  var $i12: i32;
  var $p166: ref;
  var $i167: i64;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4317, 35} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  call {:cexpr "iowarrior_write:arg:count"} boogie_si_record_i64($i2);
  assume true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4317, 35} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p0, $mul.ref(0, 336)), $mul.ref(296, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4317, 35} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.3, $p5);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4317, 9} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4318, 28} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4318, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p8, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4320, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(508, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4320, 14} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4320, 9} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i10, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4320, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  assume {:verifier.code 0} true;
  goto $bb4;
$bb2:
  assume !(($i11 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4322, 5} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i32(0, 19);
  goto $bb3;
$bb3:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4608, 23} true;
  assume {:verifier.code 0} true;
  $p166 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4608, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p166);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4610, 11} true;
  assume {:verifier.code 0} true;
  $i167 := $sext.i32.i64($i12);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4610, 3} true;
  assume {:verifier.code 0} true;
  $r := $i167;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4326, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4326, 13} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4328, 9} true;
  assume {:verifier.code 0} true;
  $i13 := $M.1;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4328, 9} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i32($i13, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4328, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i14 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4331, 44} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(184, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4331, 44} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i8($M.0, $p15);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4331, 33} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i32($i16);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4330, 7} true;
  assume {:verifier.code 0} true;
  call $i18 := printk.ref.ref.i32.i64(.str.10, .str.12, $i17, $i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4333, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4335, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4340, 13} true;
  assume {:verifier.code 0} true;
  $i19 := $eq.i64($i2, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4340, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb12, $bb13;
$bb11:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4338, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb12:
  assume ($i19 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4342, 5} true;
  assume {:verifier.code 0} true;
  $i12 := 0;
  goto $bb3;
$bb13:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4345, 30} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(528, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4345, 30} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i32($M.0, $p20);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4345, 16} true;
  assume {:verifier.code 0} true;
  $i22 := $sext.i32.i64($i21);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4345, 13} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i64($i2, $i22);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4345, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i23 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4347, 5} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i32(0, 22);
  goto $bb3;
$bb16:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4350, 18} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(532, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4350, 18} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i16($M.0, $p24);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4350, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $zext.i16.i32($i25);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4350, 29} true;
  assume {:verifier.code 0} true;
  $i27 := $eq.i32($i26, 5377);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4350, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i27 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4351, 5} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume !(($i27 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4353, 18} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(532, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4353, 18} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i16($M.0, $p28);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4353, 7} true;
  assume {:verifier.code 0} true;
  $i30 := $zext.i16.i32($i29);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4353, 29} true;
  assume {:verifier.code 0} true;
  $i31 := $eq.i32($i30, 5393);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4353, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb21, $bb22;
$bb20:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3763, 14} true;
  assume {:verifier.code 0} true;
  call $p44 := __kmalloc($i2, 208);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4372, 13} true;
  assume {:verifier.code 0} true;
  $i45 := $ne.ref($p44, $0.ref);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4372, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb34, $bb35;
$bb21:
  assume ($i31 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4354, 5} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb22:
  assume !(($i31 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4356, 18} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(532, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4356, 18} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i16($M.0, $p32);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4356, 7} true;
  assume {:verifier.code 0} true;
  $i34 := $zext.i16.i32($i33);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4356, 29} true;
  assume {:verifier.code 0} true;
  $i35 := $eq.i32($i34, 5394);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4356, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i35 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4357, 5} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb24:
  assume !(($i35 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4359, 18} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(532, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4359, 18} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i16($M.0, $p36);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4359, 7} true;
  assume {:verifier.code 0} true;
  $i38 := $zext.i16.i32($i37);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4359, 29} true;
  assume {:verifier.code 0} true;
  $i39 := $eq.i32($i38, 5376);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4359, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i39 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4360, 5} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb26:
  assume !(($i39 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4362, 18} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(532, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4362, 18} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i16($M.0, $p40);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4362, 7} true;
  assume {:verifier.code 0} true;
  $i42 := $zext.i16.i32($i41);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4362, 29} true;
  assume {:verifier.code 0} true;
  $i43 := $eq.i32($i42, 5379);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4362, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb27, $bb28;
$bb27:
  assume ($i43 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4363, 5} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  assume !(($i43 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4365, 5} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb29:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4399, 56} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(416, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4399, 18} true;
  assume {:verifier.code 0} true;
  call $i53 := atomic_read($p52);
  call {:cexpr "tmp___14"} boogie_si_record_i32($i53);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4401, 20} true;
  assume {:verifier.code 0} true;
  $i54 := $eq.i32($i53, 4);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4401, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb40, $bb41;
$bb30:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4583, 47} true;
  assume {:verifier.code 0} true;
  $p150 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(176, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4583, 47} true;
  assume {:verifier.code 0} true;
  $p151 := $load.ref($M.0, $p150);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4583, 59} true;
  assume {:verifier.code 0} true;
  $p152 := $add.ref($add.ref($p151, $mul.ref(0, 1256)), $mul.ref(48, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4584, 45} true;
  assume {:verifier.code 0} true;
  $p153 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(532, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4584, 45} true;
  assume {:verifier.code 0} true;
  $i154 := $load.i16($M.0, $p153);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4584, 34} true;
  assume {:verifier.code 0} true;
  $i155 := $zext.i16.i32($i154);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4583, 7} true;
  assume {:verifier.code 0} true;
  call $i156 := dev_err.ref.ref.ref.i32($p152, .str.16, .str.12, $i155);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4587, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i32(0, 14);
  goto $bb3;
$bb31:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4366, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb32, $bb33;
$bb32:
  assume (0 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4366, 12} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb33:
  assume !((0 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4589, 12} true;
  assume {:verifier.code 0} true;
  goto $bb115;
$bb34:
  assume ($i45 == 1);
  assume {:verifier.code 0} true;
  goto $bb36;
$bb35:
  assume !(($i45 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4374, 9} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i32(0, 12);
  goto $bb3;
$bb36:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4378, 29} true;
  assume {:verifier.code 0} true;
  call $i46 := copy_from_user($p44, $p1, $i2);
  call {:cexpr "tmp"} boogie_si_record_i64($i46);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4382, 11} true;
  assume {:verifier.code 0} true;
  $i47 := $ne.i64($i46, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4382, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb37, $bb38;
$bb37:
  assume ($i47 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4385, 9} true;
  assume {:verifier.code 0} true;
  call kfree($p44);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4387, 9} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i32(0, 14);
  goto $bb3;
$bb38:
  assume !(($i47 == 1));
  assume {:verifier.code 0} true;
  goto $bb39;
$bb39:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4391, 36} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(176, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4391, 36} true;
  assume {:verifier.code 0} true;
  $p49 := $load.ref($M.0, $p48);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4392, 44} true;
  assume {:verifier.code 0} true;
  $i50 := $trunc.i64.i32($i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4391, 16} true;
  assume {:verifier.code 0} true;
  call $i51 := usb_set_report($p49, 2, 0, $p44, $i50);
  call {:cexpr "retval"} boogie_si_record_i32($i51);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4393, 7} true;
  assume {:verifier.code 0} true;
  call kfree($p44);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4395, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $i51;
  goto $bb3;
$bb40:
  assume ($i54 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4402, 19} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($add.ref($p0, $mul.ref(0, 336)), $mul.ref(128, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4402, 19} true;
  assume {:verifier.code 0} true;
  $i56 := $load.i32($M.4, $p55);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4402, 27} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i:4402:27: warning: over-approximating bitwise operation and;
  $i57 := $and.i32($i56, 2048);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4402, 27} true;
  assume {:verifier.code 0} true;
  $i58 := $ne.i32($i57, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4402, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb42, $bb43;
$bb41:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  goto $bb78;
$bb42:
  assume ($i58 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4404, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i32(0, 11);
  goto $bb3;
$bb43:
  assume !(($i58 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4407, 22} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(508, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4407, 22} true;
  assume {:verifier.code 0} true;
  $i60 := $load.i32($M.0, $p59);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4407, 17} true;
  assume {:verifier.code 0} true;
  $i61 := $ne.i32($i60, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4407, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i61} true;
  goto $bb44, $bb45;
$bb44:
  assume ($i61 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4410, 62} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(416, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4410, 24} true;
  assume {:verifier.code 0} true;
  call $i64 := atomic_read($p63);
  call {:cexpr "tmp___13"} boogie_si_record_i32($i64);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4412, 26} true;
  assume {:verifier.code 0} true;
  $i65 := $slt.i32($i64, 4);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4412, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb47, $bb48;
$bb45:
  assume !(($i61 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4408, 11} true;
  assume {:verifier.code 0} true;
  $i62 := 0;
  goto $bb46;
$bb46:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4406, 17} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4471, 15} true;
  assume {:verifier.code 0} true;
  $i90 := $ne.i32($i62, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4471, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i90} true;
  goto $bb68, $bb69;
$bb47:
  assume ($i65 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4413, 13} true;
  assume {:verifier.code 0} true;
  $i66 := 0;
  goto $bb49;
$bb48:
  assume !(($i65 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4415, 15} true;
  assume {:verifier.code 0} true;
  goto $bb50;
$bb49:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4406, 17} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i62 := $i66;
  goto $bb46;
$bb50:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4415, 25} true;
  assume {:verifier.code 0} true;
  goto $bb51;
$bb51:
  call $p67 := devirtbounce(0, current_task);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4419, 24} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4419, 30} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.i32($M.5, $p68, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4420, 34} true;
  assume {:verifier.code 0} true;
  $p69 := $bitcast.ref.ref($p67);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4420, 24} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4420, 32} true;
  assume {:verifier.code 0} true;
  $M.6 := $store.ref($M.6, $p70, $p67);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4421, 24} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4421, 29} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.ref($M.7, $p71, autoremove_wake_function);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4422, 50} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4422, 24} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(24, 1));
  $p74 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(24, 1)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4422, 39} true;
  assume {:verifier.code 0} true;
  $M.8 := $store.ref($M.8, $p74, $p72);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4423, 50} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4423, 24} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(24, 1));
  $p77 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(24, 1)), $mul.ref(8, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4423, 39} true;
  assume {:verifier.code 0} true;
  $M.9 := $store.ref($M.9, $p77, $p75);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4426, 17} true;
  assume {:verifier.code 0} true;
  goto $bb52;
$bb52:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4426, 27} true;
  assume {:verifier.code 0} true;
  goto $bb53;
$bb53:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4429, 42} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(328, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4429, 19} true;
  assume {:verifier.code 0} true;
  call prepare_to_wait($p78, $p4, 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4431, 30} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(508, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4431, 30} true;
  assume {:verifier.code 0} true;
  $i80 := $load.i32($M.0, $p79);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4431, 25} true;
  assume {:verifier.code 0} true;
  $i81 := $ne.i32($i80, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4431, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i81} true;
  goto $bb54, $bb55;
$bb54:
  assume ($i81 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4435, 70} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(416, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4435, 32} true;
  assume {:verifier.code 0} true;
  call $i84 := atomic_read($p83);
  call {:cexpr "tmp___10"} boogie_si_record_i32($i84);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4437, 34} true;
  assume {:verifier.code 0} true;
  $i85 := $slt.i32($i84, 4);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4437, 25} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i85} true;
  goto $bb57, $bb58;
$bb55:
  assume !(($i81 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4432, 21} true;
  assume {:verifier.code 0} true;
  $i82 := 0;
  goto $bb56;
$bb56:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4461, 36} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(328, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4461, 17} true;
  assume {:verifier.code 0} true;
  call finish_wait($p89, $p4);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4463, 17} true;
  assume {:verifier.code 0} true;
  goto $bb66;
$bb57:
  assume ($i85 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4438, 23} true;
  assume {:verifier.code 0} true;
  $i82 := 0;
  goto $bb56;
$bb58:
  assume !(($i85 == 1));
  assume {:verifier.code 0} true;
  goto $bb59;
$bb59:
  assume {:verifier.code 0} true;
  goto $bb60;
$bb60:
  call $p86 := devirtbounce(0, current_task);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4444, 30} true;
  assume {:verifier.code 0} true;
  call $i87 := signal_pending($p86);
  call {:cexpr "tmp___12"} boogie_si_record_i32($i87);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4446, 23} true;
  assume {:verifier.code 0} true;
  $i88 := $ne.i32($i87, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4446, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i88} true;
  goto $bb61, $bb62;
$bb61:
  assume ($i88 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4447, 19} true;
  assume {:verifier.code 0} true;
  goto $bb63;
$bb62:
  assume !(($i88 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4449, 21} true;
  assume {:verifier.code 0} true;
  call schedule();
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4451, 21} true;
  assume {:verifier.code 0} true;
  goto $bb64;
$bb63:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4454, 19} true;
  assume {:verifier.code 0} true;
  $i82 := $sub.i32(0, 512);
  goto $bb56;
$bb64:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4426, 17} true;
  assume {:verifier.code 0} true;
  goto $bb52;
$bb65:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4458, 17} true;
  assume {:verifier.code 0} true;
  $i82 := $u0;
  goto $bb56;
$bb66:
  assume {:verifier.code 0} true;
  $i66 := $i82;
  goto $bb49;
$bb67:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4466, 15} true;
  assume {:verifier.code 0} true;
  goto $bb66;
$bb68:
  assume ($i90 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4473, 13} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i32(0, 85);
  goto $bb3;
$bb69:
  assume !(($i90 == 1));
  assume {:verifier.code 0} true;
  goto $bb70;
$bb70:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4476, 22} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(508, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4476, 22} true;
  assume {:verifier.code 0} true;
  $i92 := $load.i32($M.0, $p91);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4476, 17} true;
  assume {:verifier.code 0} true;
  $i93 := $ne.i32($i92, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4476, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i93} true;
  goto $bb71, $bb72;
$bb71:
  assume ($i93 == 1);
  assume {:verifier.code 0} true;
  goto $bb73;
$bb72:
  assume !(($i93 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4478, 13} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i32(0, 19);
  goto $bb3;
$bb73:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4481, 22} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(512, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4481, 22} true;
  assume {:verifier.code 0} true;
  $i95 := $load.i32($M.0, $p94);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4481, 17} true;
  assume {:verifier.code 0} true;
  $i96 := $ne.i32($i95, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4481, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i96} true;
  goto $bb74, $bb75;
$bb74:
  assume ($i96 == 1);
  assume {:verifier.code 0} true;
  goto $bb76;
$bb75:
  assume !(($i96 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4483, 13} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i32(0, 19);
  goto $bb3;
$bb76:
  assume {:verifier.code 0} true;
  goto $bb77;
$bb77:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4487, 7} true;
  assume {:verifier.code 0} true;
  goto $bb78;
$bb78:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4490, 25} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(416, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4490, 7} true;
  assume {:verifier.code 0} true;
  call atomic_inc($p97);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4491, 21} true;
  assume {:verifier.code 0} true;
  call $p98 := usb_alloc_urb(0, 208);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4493, 13} true;
  assume {:verifier.code 0} true;
  $i99 := $ne.ref($p98, $0.ref);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4493, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i99} true;
  goto $bb79, $bb80;
$bb79:
  assume ($i99 == 1);
  assume {:verifier.code 0} true;
  goto $bb89;
$bb80:
  assume !(($i99 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4496, 9} true;
  assume {:verifier.code 0} true;
  goto $bb81;
$bb81:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4496, 19} true;
  assume {:verifier.code 0} true;
  goto $bb82;
$bb82:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4498, 15} true;
  assume {:verifier.code 0} true;
  $i100 := $M.1;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4498, 15} true;
  assume {:verifier.code 0} true;
  $i101 := $ne.i32($i100, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4498, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i101} true;
  goto $bb83, $bb84;
$bb83:
  assume ($i101 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4500, 13} true;
  assume {:verifier.code 0} true;
  call $i102 := printk.ref.ref(.str.13, .str.12);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4503, 11} true;
  assume {:verifier.code 0} true;
  goto $bb85;
$bb84:
  assume !(($i101 == 1));
  assume {:verifier.code 0} true;
  goto $bb85;
$bb85:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4505, 11} true;
  assume {:verifier.code 0} true;
  goto $bb86;
$bb86:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4510, 9} true;
  assume {:verifier.code 0} true;
  $i103 := $sub.i32(0, 12);
  goto $bb88;
$bb87:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4508, 9} true;
  assume {:verifier.code 0} true;
  goto $bb86;
$bb88:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4603, 21} true;
  assume {:verifier.code 0} true;
  $p164 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(416, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4603, 3} true;
  assume {:verifier.code 0} true;
  call atomic_dec($p164);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4604, 20} true;
  assume {:verifier.code 0} true;
  $p165 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(328, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4604, 3} true;
  assume {:verifier.code 0} true;
  call __wake_up($p165, 1, 1, $0.ref);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4605, 3} true;
  assume {:verifier.code 0} true;
  $i12 := $i103;
  goto $bb3;
$bb89:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4514, 42} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(168, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4514, 42} true;
  assume {:verifier.code 0} true;
  $p105 := $load.ref($M.0, $p104);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4514, 62} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(528, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4514, 62} true;
  assume {:verifier.code 0} true;
  $i107 := $load.i32($M.0, $p106);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4514, 48} true;
  assume {:verifier.code 0} true;
  $i108 := $sext.i32.i64($i107);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4514, 96} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($add.ref($p98, $mul.ref(0, 192)), $mul.ref(112, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4514, 18} true;
  assume {:verifier.code 0} true;
  call $p110 := usb_alloc_coherent($p105, $i108, 208, $p109);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4517, 13} true;
  assume {:verifier.code 0} true;
  $i111 := $ne.ref($p110, $0.ref);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4517, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i111} true;
  goto $bb90, $bb91;
$bb90:
  assume ($i111 == 1);
  assume {:verifier.code 0} true;
  goto $bb100;
$bb91:
  assume !(($i111 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4520, 9} true;
  assume {:verifier.code 0} true;
  goto $bb92;
$bb92:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4520, 19} true;
  assume {:verifier.code 0} true;
  goto $bb93;
$bb93:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4522, 15} true;
  assume {:verifier.code 0} true;
  $i112 := $M.1;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4522, 15} true;
  assume {:verifier.code 0} true;
  $i113 := $ne.i32($i112, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4522, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i113} true;
  goto $bb94, $bb95;
$bb94:
  assume ($i113 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4524, 13} true;
  assume {:verifier.code 0} true;
  call $i114 := printk.ref.ref(.str.14, .str.12);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4527, 11} true;
  assume {:verifier.code 0} true;
  goto $bb96;
$bb95:
  assume !(($i113 == 1));
  assume {:verifier.code 0} true;
  goto $bb96;
$bb96:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4529, 11} true;
  assume {:verifier.code 0} true;
  goto $bb97;
$bb97:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4534, 9} true;
  assume {:verifier.code 0} true;
  $i115 := $sub.i32(0, 12);
  goto $bb99;
$bb98:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4532, 9} true;
  assume {:verifier.code 0} true;
  goto $bb97;
$bb99:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4599, 3} true;
  assume {:verifier.code 0} true;
  call usb_free_urb($p98);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4600, 3} true;
  assume {:verifier.code 0} true;
  $i103 := $i115;
  goto $bb88;
$bb100:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4538, 37} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(168, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4538, 37} true;
  assume {:verifier.code 0} true;
  $p117 := $load.ref($M.0, $p116);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4538, 64} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(192, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4538, 64} true;
  assume {:verifier.code 0} true;
  $p119 := $load.ref($M.0, $p118);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4538, 83} true;
  assume {:verifier.code 0} true;
  $p120 := $add.ref($add.ref($p119, $mul.ref(0, 9)), $mul.ref(2, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4538, 83} true;
  assume {:verifier.code 0} true;
  $i121 := $load.i8($M.0, $p120);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4538, 43} true;
  assume {:verifier.code 0} true;
  $i122 := $zext.i8.i32($i121);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4538, 18} true;
  assume {:verifier.code 0} true;
  call $i123 := __create_pipe($p117, $i122);
  call {:cexpr "tmp___16"} boogie_si_record_i32($i123);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4539, 42} true;
  assume {:verifier.code 0} true;
  $p124 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(168, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4539, 42} true;
  assume {:verifier.code 0} true;
  $p125 := $load.ref($M.0, $p124);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4539, 73} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i:4539:73: warning: over-approximating bitwise operation or;
  $i126 := $or.i32(1073741824, $i123);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4540, 42} true;
  assume {:verifier.code 0} true;
  $p127 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(528, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4540, 42} true;
  assume {:verifier.code 0} true;
  $i128 := $load.i32($M.0, $p127);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4541, 24} true;
  assume {:verifier.code 0} true;
  $p129 := $bitcast.ref.ref($p7);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4541, 49} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(192, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4541, 49} true;
  assume {:verifier.code 0} true;
  $p131 := $load.ref($M.0, $p130);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4541, 68} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($add.ref($p131, $mul.ref(0, 9)), $mul.ref(6, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4541, 68} true;
  assume {:verifier.code 0} true;
  $i133 := $load.i8($M.0, $p132);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4541, 37} true;
  assume {:verifier.code 0} true;
  $i134 := $zext.i8.i32($i133);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4539, 7} true;
  assume {:verifier.code 0} true;
  call usb_fill_int_urb($p98, $p125, $i126, $p110, $i128, iowarrior_write_callback, $p129, $i134);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4542, 50} true;
  assume {:verifier.code 0} true;
  $p135 := $add.ref($add.ref($p98, $mul.ref(0, 192)), $mul.ref(100, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4542, 50} true;
  assume {:verifier.code 0} true;
  $i136 := $load.i32($M.0, $p135);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4542, 65} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i:4542:65: warning: over-approximating bitwise operation or;
  $i137 := $or.i32($i136, 4);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4542, 20} true;
  assume {:verifier.code 0} true;
  $p138 := $add.ref($add.ref($p98, $mul.ref(0, 192)), $mul.ref(100, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4542, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p138, $i137);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4543, 34} true;
  assume {:verifier.code 0} true;
  call $i139 := copy_from_user($p110, $p1, $i2);
  call {:cexpr "tmp___19"} boogie_si_record_i64($i139);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4547, 11} true;
  assume {:verifier.code 0} true;
  $i140 := $ne.i64($i139, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4547, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i140} true;
  goto $bb101, $bb102;
$bb101:
  assume ($i140 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4549, 9} true;
  assume {:verifier.code 0} true;
  $i141 := $sub.i32(0, 14);
  goto $bb103;
$bb102:
  assume !(($i140 == 1));
  assume {:verifier.code 0} true;
  goto $bb104;
$bb103:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4595, 26} true;
  assume {:verifier.code 0} true;
  $p157 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(168, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4595, 26} true;
  assume {:verifier.code 0} true;
  $p158 := $load.ref($M.0, $p157);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4595, 46} true;
  assume {:verifier.code 0} true;
  $p159 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(528, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4595, 46} true;
  assume {:verifier.code 0} true;
  $i160 := $load.i32($M.0, $p159);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4595, 32} true;
  assume {:verifier.code 0} true;
  $i161 := $sext.i32.i64($i160);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4595, 85} true;
  assume {:verifier.code 0} true;
  $p162 := $add.ref($add.ref($p98, $mul.ref(0, 192)), $mul.ref(112, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4595, 85} true;
  assume {:verifier.code 0} true;
  $i163 := $load.i64($M.0, $p162);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4595, 3} true;
  assume {:verifier.code 0} true;
  call usb_free_coherent($p158, $i161, $p110, $i163);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4596, 3} true;
  assume {:verifier.code 0} true;
  $i115 := $i141;
  goto $bb99;
$bb104:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4553, 16} true;
  assume {:verifier.code 0} true;
  call $i142 := usb_submit_urb($p98, 208);
  call {:cexpr "retval"} boogie_si_record_i32($i142);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4555, 11} true;
  assume {:verifier.code 0} true;
  $i143 := $ne.i32($i142, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4555, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i143} true;
  goto $bb105, $bb106;
$bb105:
  assume ($i143 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4557, 9} true;
  assume {:verifier.code 0} true;
  goto $bb107;
$bb106:
  assume !(($i143 == 1));
  assume {:verifier.code 0} true;
  goto $bb114;
$bb107:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4557, 19} true;
  assume {:verifier.code 0} true;
  goto $bb108;
$bb108:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4559, 15} true;
  assume {:verifier.code 0} true;
  $i144 := $M.1;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4559, 15} true;
  assume {:verifier.code 0} true;
  $i145 := $ne.i32($i144, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4559, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i145} true;
  goto $bb109, $bb110;
$bb109:
  assume ($i145 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4561, 62} true;
  assume {:verifier.code 0} true;
  $p146 := $add.ref($add.ref($p7, $mul.ref(0, 536)), $mul.ref(416, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4561, 24} true;
  assume {:verifier.code 0} true;
  call $i147 := atomic_read($p146);
  call {:cexpr "tmp___18"} boogie_si_record_i32($i147);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4562, 13} true;
  assume {:verifier.code 0} true;
  call $i148 := printk.ref.ref.i32.i32(.str.15, .str.12, $i142, $i147);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4565, 11} true;
  assume {:verifier.code 0} true;
  goto $bb111;
$bb110:
  assume !(($i145 == 1));
  assume {:verifier.code 0} true;
  goto $bb111;
$bb111:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4567, 11} true;
  assume {:verifier.code 0} true;
  goto $bb112;
$bb112:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4572, 9} true;
  assume {:verifier.code 0} true;
  $i141 := $i142;
  goto $bb103;
$bb113:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4570, 9} true;
  assume {:verifier.code 0} true;
  goto $bb112;
$bb114:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4576, 16} true;
  assume {:verifier.code 0} true;
  $i149 := $trunc.i64.i32($i2);
  call {:cexpr "retval"} boogie_si_record_i32($i149);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4577, 7} true;
  assume {:verifier.code 0} true;
  call usb_free_urb($p98);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4579, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $i149;
  goto $bb3;
$bb115:
  assume {:verifier.code 0} true;
  goto $bb116;
$bb116:
  assume {:verifier.code 0} true;
  goto $bb117;
$bb117:
  assume {:verifier.code 0} true;
  goto $bb118;
$bb118:
  assume {:verifier.code 0} true;
  goto $bb119;
$bb119:
  assume {:verifier.code 0} true;
  goto $bb120;
$bb120:
  assume {:verifier.code 0} true;
  goto $bb121;
$bb121:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4350, 32} true;
  assume {:verifier.code 0} true;
  $i141 := $u0;
  goto $bb103;
}
const iowarrior_poll: ref;
axiom (iowarrior_poll == $sub.ref(0, 101574));
procedure  iowarrior_poll($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i1;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $i14: i32;
  var $i15: i1;
  var $i16: i32;
  var $i17: i32;
  var $p18: ref;
  var $i19: i32;
  var $i20: i1;
  var $i21: i32;
  var $i22: i32;
  var $i8: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4937, 35} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4937, 35} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 336)), $mul.ref(296, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4937, 35} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.3, $p2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4937, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4939, 14} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(508, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4939, 14} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.0, $p5);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4939, 9} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4939, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:verifier.code 0} true;
  goto $bb4;
$bb2:
  assume !(($i7 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4940, 5} true;
  assume {:verifier.code 0} true;
  $i8 := 24;
  goto $bb3;
$bb3:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4967, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4944, 26} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(240, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4944, 3} true;
  assume {:verifier.code 0} true;
  call poll_wait($p0, $p9, $p1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4945, 26} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(328, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4945, 3} true;
  assume {:verifier.code 0} true;
  call poll_wait($p0, $p10, $p1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4947, 14} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(508, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4947, 14} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i32($M.0, $p11);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4947, 9} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4947, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i13 == 1);
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i13 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4948, 5} true;
  assume {:verifier.code 0} true;
  $i8 := 24;
  goto $bb3;
$bb7:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4952, 13} true;
  assume {:verifier.code 0} true;
  call $i14 := read_index($p4);
  call {:cexpr "tmp___7"} boogie_si_record_i32($i14);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4954, 15} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i32($i14, $sub.i32(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4954, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i15 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4955, 17} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i:4955:17: warning: over-approximating bitwise operation or;
  $i16 := $or.i32(0, 65);
  call {:cexpr "mask"} boogie_si_record_i32($i16);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4956, 3} true;
  assume {:verifier.code 0} true;
  $i17 := $i16;
  goto $bb10;
$bb9:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  $i17 := 0;
  goto $bb10;
$bb10:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4959, 51} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(416, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4959, 13} true;
  assume {:verifier.code 0} true;
  call $i19 := atomic_read($p18);
  call {:cexpr "tmp___8"} boogie_si_record_i32($i19);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4961, 15} true;
  assume {:verifier.code 0} true;
  $i20 := $slt.i32($i19, 4);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4961, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i20 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4962, 17} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i:4962:17: warning: over-approximating bitwise operation or;
  $i21 := $or.i32($i17, 260);
  call {:cexpr "mask"} boogie_si_record_i32($i21);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4963, 3} true;
  assume {:verifier.code 0} true;
  $i22 := $i21;
  goto $bb13;
$bb12:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  $i22 := $i17;
  goto $bb13;
$bb13:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4965, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i22;
  goto $bb3;
}
const iowarrior_ioctl: ref;
axiom (iowarrior_ioctl == $sub.ref(0, 102606));
procedure  iowarrior_ioctl($p0: ref, $i1: i32, $i2: i64)
  returns ($r: i64)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i1;
  var $p10: ref;
  var $i11: i32;
  var $i12: i64;
  var $p13: ref;
  var $i14: i1;
  var $p15: ref;
  var $p16: ref;
  var $i17: i32;
  var $i18: i1;
  var $i20: i32;
  var $i21: i1;
  var $p22: ref;
  var $i23: i8;
  var $i24: i32;
  var $i25: i32;
  var $i26: i64;
  var $i27: i1;
  var $i28: i64;
  var $i29: i1;
  var $i30: i64;
  var $i31: i1;
  var $p32: ref;
  var $i33: i16;
  var $i34: i32;
  var $i35: i1;
  var $p36: ref;
  var $i37: i16;
  var $i38: i32;
  var $i39: i1;
  var $p40: ref;
  var $i41: i16;
  var $i42: i32;
  var $i43: i1;
  var $p44: ref;
  var $i45: i16;
  var $i46: i32;
  var $i47: i1;
  var $p48: ref;
  var $p49: ref;
  var $i50: i32;
  var $i51: i64;
  var $i52: i64;
  var $i53: i32;
  var $i54: i1;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $i59: i32;
  var $i60: i32;
  var $i61: i1;
  var $i62: i32;
  var $i55: i32;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $i68: i16;
  var $i69: i32;
  var $i70: i32;
  var $i63: i32;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $i80: i32;
  var $i81: i32;
  var $i82: i1;
  var $p84: ref;
  var $i85: i32;
  var $i86: i64;
  var $i87: i32;
  var $i88: i1;
  var $i89: i32;
  var $i83: i32;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $p96: ref;
  var $p97: ref;
  var $p98: ref;
  var $p99: ref;
  var $i100: i16;
  var $i101: i32;
  var $p102: ref;
  var $p103: ref;
  var $i104: i16;
  var $i105: i32;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $p109: ref;
  var $p110: ref;
  var $i111: i16;
  var $i112: i32;
  var $p113: ref;
  var $p114: ref;
  var $p115: ref;
  var $p116: ref;
  var $i117: i32;
  var $i118: i16;
  var $i119: i32;
  var $p120: ref;
  var $p121: ref;
  var $p122: ref;
  var $p123: ref;
  var $p124: ref;
  var $p125: ref;
  var $p126: ref;
  var $i127: i8;
  var $i128: i32;
  var $p129: ref;
  var $p130: ref;
  var $i131: i32;
  var $p132: ref;
  var $i133: i1;
  var $p134: ref;
  var $p135: ref;
  var $p136: ref;
  var $p137: ref;
  var $p138: ref;
  var $p139: ref;
  var $p140: ref;
  var $p141: ref;
  var $i142: i64;
  var $i143: i1;
  var $p144: ref;
  var $p145: ref;
  var $i146: i8;
  var $i147: i32;
  var $i148: i32;
  var $p149: ref;
  var $p150: ref;
  var $p151: ref;
  var $p152: ref;
  var $i153: i64;
  var $i154: i32;
  var $i155: i1;
  var $i156: i32;
  var $i71: i32;
  var $i19: i32;
  var $p157: ref;
  var $i158: i64;
  var $i9: i64;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4630, 35} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  call {:cexpr "iowarrior_ioctl:arg:cmd"} boogie_si_record_i32($i1);
  call {:cexpr "iowarrior_ioctl:arg:arg"} boogie_si_record_i64($i2);
  assume true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4630, 35} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p0, $mul.ref(0, 336)), $mul.ref(296, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4630, 35} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.3, $p4);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4630, 9} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4631, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p6);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4631, 27} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i64($i7, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4631, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4632, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i64(0, 19);
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4792, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4636, 35} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p6, $mul.ref(0, 536)), $mul.ref(528, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4636, 35} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i32($M.0, $p10);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4636, 21} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i32.i64($i11);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4636, 13} true;
  assume {:verifier.code 0} true;
  call $p13 := kzalloc($i12, 208);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4639, 9} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.ref($p13, $0.ref);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4639, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i14 == 1);
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i14 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4640, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i64(0, 12);
  goto $bb3;
$bb7:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4644, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested(iowarrior_mutex, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4645, 28} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p6, $mul.ref(0, 536)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4645, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p15, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4647, 14} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p6, $mul.ref(0, 536)), $mul.ref(508, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4647, 14} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i32($M.0, $p16);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4647, 9} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i32($i17, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4647, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i18 == 1);
  assume {:verifier.code 0} true;
  goto $bb11;
$bb9:
  assume !(($i18 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4649, 5} true;
  assume {:verifier.code 0} true;
  $i19 := $sub.i32(0, 19);
  goto $bb10;
$bb10:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4786, 23} true;
  assume {:verifier.code 0} true;
  $p157 := $add.ref($add.ref($p6, $mul.ref(0, 536)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4786, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p157);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4787, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock(iowarrior_mutex);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4788, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p13);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4790, 11} true;
  assume {:verifier.code 0} true;
  $i158 := $sext.i32.i64($i19);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4790, 3} true;
  assume {:verifier.code 0} true;
  $i9 := $i158;
  goto $bb3;
$bb11:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4653, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4653, 13} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4655, 9} true;
  assume {:verifier.code 0} true;
  $i20 := $M.1;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4655, 9} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i32($i20, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4655, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i21 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4658, 44} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p6, $mul.ref(0, 536)), $mul.ref(184, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4658, 44} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i8($M.0, $p22);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4658, 33} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i8.i32($i23);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4657, 7} true;
  assume {:verifier.code 0} true;
  call $i25 := printk.ref.ref.i32.i32.i64(.str.24, .str.25, $i24, $i1, $i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4660, 5} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4662, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4669, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $sext.i32.i64($i1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4669, 35} true;
  assume {:verifier.code 0} true;
  $i27 := $eq.i64($i26, 1074315265);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4669, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb19, $bb20;
$bb18:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4665, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb19:
  assume ($i27 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4670, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume !(($i27 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4672, 7} true;
  assume {:verifier.code 0} true;
  $i28 := $sext.i32.i64($i1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4672, 35} true;
  assume {:verifier.code 0} true;
  $i29 := $eq.i64($i28, 1074315266);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4672, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb22, $bb23;
$bb21:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4681, 22} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p6, $mul.ref(0, 536)), $mul.ref(532, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4681, 22} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i16($M.0, $p32);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4681, 11} true;
  assume {:verifier.code 0} true;
  $i34 := $zext.i16.i32($i33);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4681, 33} true;
  assume {:verifier.code 0} true;
  $i35 := $eq.i32($i34, 5377);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4681, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb32, $bb33;
$bb22:
  assume ($i29 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4673, 5} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume !(($i29 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4675, 7} true;
  assume {:verifier.code 0} true;
  $i30 := $sext.i32.i64($i1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4675, 35} true;
  assume {:verifier.code 0} true;
  $i31 := $eq.i64($i30, 2150154243);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4675, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb25, $bb26;
$bb24:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4721, 21} true;
  assume {:verifier.code 0} true;
  $p72 := $i2p.i64.ref($i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4722, 36} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($add.ref($p6, $mul.ref(0, 536)), $mul.ref(168, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4722, 36} true;
  assume {:verifier.code 0} true;
  $p74 := $load.ref($M.0, $p73);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4722, 48} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($add.ref($p6, $mul.ref(0, 536)), $mul.ref(176, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4722, 48} true;
  assume {:verifier.code 0} true;
  $p76 := $load.ref($M.0, $p75);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4722, 60} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($add.ref($p76, $mul.ref(0, 1256)), $mul.ref(8, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4722, 60} true;
  assume {:verifier.code 0} true;
  $p78 := $load.ref($M.0, $p77);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4723, 70} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($add.ref($p6, $mul.ref(0, 536)), $mul.ref(528, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4723, 70} true;
  assume {:verifier.code 0} true;
  $i80 := $load.i32($M.0, $p79);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4722, 16} true;
  assume {:verifier.code 0} true;
  call $i81 := usb_get_report($p74, $p78, 1, 0, $p13, $i80);
  call {:cexpr "io_res"} boogie_si_record_i32($i81);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4725, 18} true;
  assume {:verifier.code 0} true;
  $i82 := $slt.i32($i81, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4725, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i82} true;
  goto $bb52, $bb53;
$bb25:
  assume ($i31 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4676, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i31 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4678, 5} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4741, 33} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($add.ref($p6, $mul.ref(0, 536)), $mul.ref(168, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4741, 33} true;
  assume {:verifier.code 0} true;
  $p91 := $load.ref($M.0, $p90);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4741, 40} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($add.ref($p91, $mul.ref(0, 1928)), $mul.ref(1280, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4741, 40} true;
  assume {:verifier.code 0} true;
  $p93 := $load.ref($M.0, $p92);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4741, 52} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($add.ref($p93, $mul.ref(0, 680)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4742, 7} true;
  assume {:verifier.code 0} true;
  $p95 := $bitcast.ref.ref($p3);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4742, 7} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p95, 0, 40, false);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4743, 35} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($add.ref($p6, $mul.ref(0, 536)), $mul.ref(168, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4743, 35} true;
  assume {:verifier.code 0} true;
  $p97 := $load.ref($M.0, $p96);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4743, 42} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($add.ref($p97, $mul.ref(0, 1928)), $mul.ref(1248, 1));
  $p99 := $add.ref($add.ref($add.ref($p97, $mul.ref(0, 1928)), $mul.ref(1248, 1)), $mul.ref(8, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4743, 53} true;
  assume {:verifier.code 0} true;
  $i100 := $load.i16($M.0, $p99);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4743, 21} true;
  assume {:verifier.code 0} true;
  $i101 := $zext.i16.i32($i100);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4743, 12} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4743, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p102, $i101);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4744, 35} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($add.ref($p6, $mul.ref(0, 536)), $mul.ref(532, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4744, 35} true;
  assume {:verifier.code 0} true;
  $i104 := $load.i16($M.0, $p103);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4744, 22} true;
  assume {:verifier.code 0} true;
  $i105 := $zext.i16.i32($i104);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4744, 12} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(4, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4744, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p106, $i105);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4745, 37} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($add.ref($p6, $mul.ref(0, 536)), $mul.ref(168, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4745, 37} true;
  assume {:verifier.code 0} true;
  $p108 := $load.ref($M.0, $p107);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4745, 44} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($add.ref($p108, $mul.ref(0, 1928)), $mul.ref(1248, 1));
  $p110 := $add.ref($add.ref($add.ref($p108, $mul.ref(0, 1928)), $mul.ref(1248, 1)), $mul.ref(12, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4745, 55} true;
  assume {:verifier.code 0} true;
  $i111 := $load.i16($M.0, $p110);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4745, 23} true;
  assume {:verifier.code 0} true;
  $i112 := $zext.i16.i32($i111);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4745, 12} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(20, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4745, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p113, $i112);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4746, 44} true;
  assume {:verifier.code 0} true;
  $p114 := $add.ref($add.ref($p6, $mul.ref(0, 536)), $mul.ref(168, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4746, 44} true;
  assume {:verifier.code 0} true;
  $p115 := $load.ref($M.0, $p114);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4746, 51} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($add.ref($p115, $mul.ref(0, 1928)), $mul.ref(28, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4746, 51} true;
  assume {:verifier.code 0} true;
  $i117 := $load.i32($M.0, $p116);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4746, 29} true;
  assume {:verifier.code 0} true;
  $i118 := $trunc.i32.i16($i117);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4746, 20} true;
  assume {:verifier.code 0} true;
  $i119 := $zext.i16.i32($i118);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4746, 12} true;
  assume {:verifier.code 0} true;
  $p120 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4746, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p120, $i119);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4747, 36} true;
  assume {:verifier.code 0} true;
  $p121 := $add.ref($add.ref($p6, $mul.ref(0, 536)), $mul.ref(176, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4747, 36} true;
  assume {:verifier.code 0} true;
  $p122 := $load.ref($M.0, $p121);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4747, 48} true;
  assume {:verifier.code 0} true;
  $p123 := $add.ref($add.ref($p122, $mul.ref(0, 1256)), $mul.ref(8, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4747, 48} true;
  assume {:verifier.code 0} true;
  $p124 := $load.ref($M.0, $p123);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4747, 65} true;
  assume {:verifier.code 0} true;
  $p125 := $add.ref($add.ref($p124, $mul.ref(0, 48)), $mul.ref(0, 1));
  $p126 := $add.ref($add.ref($add.ref($p124, $mul.ref(0, 48)), $mul.ref(0, 1)), $mul.ref(2, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4747, 70} true;
  assume {:verifier.code 0} true;
  $i127 := $load.i8($M.0, $p126);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4747, 21} true;
  assume {:verifier.code 0} true;
  $i128 := $zext.i8.i32($i127);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4747, 12} true;
  assume {:verifier.code 0} true;
  $p129 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4747, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p129, $i128);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4748, 39} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($add.ref($p6, $mul.ref(0, 536)), $mul.ref(528, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4748, 39} true;
  assume {:verifier.code 0} true;
  $i131 := $load.i32($M.0, $p130);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4748, 12} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(36, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4748, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p132, $i131);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4751, 17} true;
  assume {:verifier.code 0} true;
  $i133 := $uge.i64(9, 64);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4751, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i133} true;
  goto $bb58, $bb59;
$bb28:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4779, 7} true;
  assume {:verifier.code 0} true;
  $i71 := $sub.i32(0, 25);
  goto $bb51;
$bb29:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4679, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb30, $bb31;
$bb30:
  assume (0 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4679, 12} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb31:
  assume !((0 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4780, 12} true;
  assume {:verifier.code 0} true;
  $i71 := $u0;
  goto $bb51;
$bb32:
  assume ($i35 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4682, 9} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume !(($i35 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4684, 22} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p6, $mul.ref(0, 536)), $mul.ref(532, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4684, 22} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i16($M.0, $p36);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4684, 11} true;
  assume {:verifier.code 0} true;
  $i38 := $zext.i16.i32($i37);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4684, 33} true;
  assume {:verifier.code 0} true;
  $i39 := $eq.i32($i38, 5393);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4684, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb35, $bb36;
$bb34:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4693, 23} true;
  assume {:verifier.code 0} true;
  $p48 := $i2p.i64.ref($i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4695, 67} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($add.ref($p6, $mul.ref(0, 536)), $mul.ref(528, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4695, 67} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i32($M.0, $p49);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4695, 46} true;
  assume {:verifier.code 0} true;
  $i51 := $sext.i32.i64($i50);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4694, 31} true;
  assume {:verifier.code 0} true;
  call $i52 := copy_from_user($p13, $p48, $i51);
  call {:cexpr "tmp"} boogie_si_record_i64($i52);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4697, 18} true;
  assume {:verifier.code 0} true;
  $i53 := $trunc.i64.i32($i52);
  call {:cexpr "io_res"} boogie_si_record_i32($i53);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4699, 13} true;
  assume {:verifier.code 0} true;
  $i54 := $ne.i32($i53, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4699, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb41, $bb42;
$bb35:
  assume ($i39 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4685, 9} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb36:
  assume !(($i39 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4687, 22} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p6, $mul.ref(0, 536)), $mul.ref(532, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4687, 22} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i16($M.0, $p40);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4687, 11} true;
  assume {:verifier.code 0} true;
  $i42 := $zext.i16.i32($i41);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4687, 33} true;
  assume {:verifier.code 0} true;
  $i43 := $eq.i32($i42, 5394);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4687, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb37, $bb38;
$bb37:
  assume ($i43 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4688, 9} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb38:
  assume !(($i43 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4690, 22} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($add.ref($p6, $mul.ref(0, 536)), $mul.ref(532, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4690, 22} true;
  assume {:verifier.code 0} true;
  $i45 := $load.i16($M.0, $p44);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4690, 11} true;
  assume {:verifier.code 0} true;
  $i46 := $zext.i16.i32($i45);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4690, 33} true;
  assume {:verifier.code 0} true;
  $i47 := $eq.i32($i46, 5376);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4690, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb39, $bb40;
$bb39:
  assume ($i47 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4690, 42} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb40:
  assume !(($i47 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4714, 49} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($add.ref($p6, $mul.ref(0, 536)), $mul.ref(176, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4714, 49} true;
  assume {:verifier.code 0} true;
  $p65 := $load.ref($M.0, $p64);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4714, 61} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($add.ref($p65, $mul.ref(0, 1256)), $mul.ref(48, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4715, 28} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($add.ref($p6, $mul.ref(0, 536)), $mul.ref(532, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4715, 28} true;
  assume {:verifier.code 0} true;
  $i68 := $load.i16($M.0, $p67);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4715, 17} true;
  assume {:verifier.code 0} true;
  $i69 := $zext.i16.i32($i68);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4714, 9} true;
  assume {:verifier.code 0} true;
  call $i70 := dev_err.ref.ref.i32($p66, .str.26, $i69);
  assume {:verifier.code 0} true;
  $i63 := $sub.i32(0, 22);
  goto $bb47;
$bb41:
  assume ($i54 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4701, 9} true;
  assume {:verifier.code 0} true;
  $i55 := $sub.i32(0, 14);
  goto $bb43;
$bb42:
  assume !(($i54 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4703, 40} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($add.ref($p6, $mul.ref(0, 536)), $mul.ref(176, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4703, 40} true;
  assume {:verifier.code 0} true;
  $p57 := $load.ref($M.0, $p56);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4704, 56} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($add.ref($p6, $mul.ref(0, 536)), $mul.ref(528, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4704, 56} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i32($M.0, $p58);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4703, 20} true;
  assume {:verifier.code 0} true;
  call $i60 := usb_set_report($p57, 2, 0, $p13, $i59);
  call {:cexpr "io_res"} boogie_si_record_i32($i60);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4706, 22} true;
  assume {:verifier.code 0} true;
  $i61 := $slt.i32($i60, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4706, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i61} true;
  goto $bb44, $bb45;
$bb43:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4711, 7} true;
  assume {:verifier.code 0} true;
  $i63 := $i55;
  goto $bb47;
$bb44:
  assume ($i61 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4708, 11} true;
  assume {:verifier.code 0} true;
  $i62 := $i60;
  goto $bb46;
$bb45:
  assume !(($i61 == 1));
  assume {:verifier.code 0} true;
  $i62 := 0;
  goto $bb46;
$bb46:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i55 := $i62;
  goto $bb43;
$bb47:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb48;
$bb48:
  assume {:verifier.code 0} true;
  goto $bb49;
$bb49:
  assume {:verifier.code 0} true;
  goto $bb50;
$bb50:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4718, 7} true;
  assume {:verifier.code 0} true;
  $i71 := $i63;
  goto $bb51;
$bb51:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb67;
$bb52:
  assume ($i82 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4727, 7} true;
  assume {:verifier.code 0} true;
  $i83 := $i81;
  goto $bb54;
$bb53:
  assume !(($i82 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4730, 58} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($add.ref($p6, $mul.ref(0, 536)), $mul.ref(528, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4730, 58} true;
  assume {:verifier.code 0} true;
  $i85 := $load.i32($M.0, $p84);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3613, 3} true;
  assume {:verifier.code 0} true;
  call might_fault();
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3614, 29} true;
  assume {:verifier.code 0} true;
  call $i86 := _copy_to_user($p72, $p13, $i85);
  call {:cexpr "tmp___0"} boogie_si_record_i64($i86);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3617, 11} true;
  assume {:verifier.code 0} true;
  $i87 := $trunc.i64.i32($i86);
  call {:cexpr "tmp___9"} boogie_si_record_i32($i87);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4733, 13} true;
  assume {:verifier.code 0} true;
  $i88 := $ne.i32($i87, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4733, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i88} true;
  goto $bb55, $bb56;
$bb54:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4738, 7} true;
  assume {:verifier.code 0} true;
  $i71 := $i83;
  goto $bb51;
$bb55:
  assume ($i88 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4735, 9} true;
  assume {:verifier.code 0} true;
  $i89 := $sub.i32(0, 14);
  goto $bb57;
$bb56:
  assume !(($i88 == 1));
  assume {:verifier.code 0} true;
  $i89 := 0;
  goto $bb57;
$bb57:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i83 := $i89;
  goto $bb54;
$bb58:
  assume ($i133 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4753, 38} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(8, 1));
  $p135 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4753, 67} true;
  assume {:verifier.code 0} true;
  $p136 := $add.ref($add.ref($p6, $mul.ref(0, 536)), $mul.ref(516, 1));
  $p137 := $add.ref($add.ref($add.ref($p6, $mul.ref(0, 536)), $mul.ref(516, 1)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4753, 17} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p135, $p137, 9, false);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4756, 7} true;
  assume {:verifier.code 0} true;
  goto $bb60;
$bb59:
  assume !(($i133 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4758, 38} true;
  assume {:verifier.code 0} true;
  $p138 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(8, 1));
  $p139 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4758, 67} true;
  assume {:verifier.code 0} true;
  $p140 := $add.ref($add.ref($p6, $mul.ref(0, 536)), $mul.ref(516, 1));
  $p141 := $add.ref($add.ref($add.ref($p6, $mul.ref(0, 536)), $mul.ref(516, 1)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4758, 17} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p139, $p141, 9, false);
  assume {:verifier.code 0} true;
  goto $bb60;
$bb60:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4762, 11} true;
  assume {:verifier.code 0} true;
  $i142 := $p2i.ref.i64($p94);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4762, 42} true;
  assume {:verifier.code 0} true;
  $i143 := $eq.i64($i142, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4762, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i143} true;
  goto $bb61, $bb62;
$bb61:
  assume ($i143 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4763, 14} true;
  assume {:verifier.code 0} true;
  $p144 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(28, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4763, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p144, $sub.i32(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4764, 7} true;
  assume {:verifier.code 0} true;
  goto $bb63;
$bb62:
  assume !(($i143 == 1));
  $p145 := $add.ref($add.ref($add.ref($p93, $mul.ref(0, 680)), $mul.ref(0, 1)), $mul.ref(8, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4765, 53} true;
  assume {:verifier.code 0} true;
  $i146 := $load.i8($M.0, $p145);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4765, 31} true;
  assume {:verifier.code 0} true;
  $i147 := $zext.i8.i32($i146);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4765, 63} true;
  assume {:verifier.code 0} true;
  $i148 := $mul.i32($i147, 2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4765, 14} true;
  assume {:verifier.code 0} true;
  $p149 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(28, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4765, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p149, $i148);
  assume {:verifier.code 0} true;
  goto $bb63;
$bb63:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4768, 46} true;
  assume {:verifier.code 0} true;
  $p150 := $i2p.i64.ref($i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4768, 37} true;
  assume {:verifier.code 0} true;
  $p151 := $bitcast.ref.ref($p150);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4768, 77} true;
  assume {:verifier.code 0} true;
  $p152 := $bitcast.ref.ref($p3);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3613, 3} true;
  assume {:verifier.code 0} true;
  call might_fault();
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3614, 29} true;
  assume {:verifier.code 0} true;
  call $i153 := _copy_to_user($p151, $p152, 40);
  call {:cexpr "tmp___0"} boogie_si_record_i64($i153);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3617, 11} true;
  assume {:verifier.code 0} true;
  $i154 := $trunc.i64.i32($i153);
  call {:cexpr "tmp___10"} boogie_si_record_i32($i154);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4772, 11} true;
  assume {:verifier.code 0} true;
  $i155 := $ne.i32($i154, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4772, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i155} true;
  goto $bb64, $bb65;
$bb64:
  assume ($i155 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4774, 7} true;
  assume {:verifier.code 0} true;
  $i156 := $sub.i32(0, 14);
  goto $bb66;
$bb65:
  assume !(($i155 == 1));
  assume {:verifier.code 0} true;
  $i156 := 0;
  goto $bb66;
$bb66:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4776, 7} true;
  assume {:verifier.code 0} true;
  $i71 := $i156;
  goto $bb51;
$bb67:
  assume {:verifier.code 0} true;
  goto $bb68;
$bb68:
  assume {:verifier.code 0} true;
  goto $bb69;
$bb69:
  assume {:verifier.code 0} true;
  goto $bb70;
$bb70:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4669, 127} true;
  assume {:verifier.code 0} true;
  $i19 := $i71;
  goto $bb10;
}
const iowarrior_open: ref;
axiom (iowarrior_open == $sub.ref(0, 103638));
procedure  iowarrior_open($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
  var $i5: i32;
  var $p6: ref;
  var $i7: i1;
  var $i8: i32;
  var $p10: ref;
  var $p11: ref;
  var $i12: i1;
  var $p13: ref;
  var $p14: ref;
  var $i15: i32;
  var $i16: i1;
  var $p18: ref;
  var $p19: ref;
  var $i20: i32;
  var $i21: i1;
  var $p22: ref;
  var $i23: i32;
  var $p24: ref;
  var $i25: i32;
  var $i26: i32;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $i17: i32;
  var $p30: ref;
  var $i9: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4804, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4804, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4804, 13} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4806, 9} true;
  assume {:verifier.code 0} true;
  $i2 := $M.1;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4806, 9} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4806, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i3 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4808, 7} true;
  assume {:verifier.code 0} true;
  call $i4 := printk.ref.ref(.str.2, .str.3);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4811, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4813, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4819, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested(iowarrior_mutex, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4820, 13} true;
  assume {:verifier.code 0} true;
  call $i5 := iminor($p0);
  call {:cexpr "tmp___7"} boogie_si_record_i32($i5);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4822, 15} true;
  assume {:verifier.code 0} true;
  call $p6 := usb_find_interface(iowarrior_driver, $i5);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4824, 9} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.ref($p6, $0.ref);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4824, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb8, $bb9;
$bb7:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4816, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb8:
  assume ($i7 == 1);
  assume {:verifier.code 0} true;
  goto $bb11;
$bb9:
  assume !(($i7 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4826, 5} true;
  assume {:verifier.code 0} true;
  call mutex_unlock(iowarrior_mutex);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4827, 5} true;
  assume {:verifier.code 0} true;
  call $i8 := printk.ref.ref.i32(.str.4, .str.3, $i5);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4830, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i32(0, 19);
  goto $bb10;
$bb10:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4877, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb11:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4834, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested(iowarrior_open_disc_lock, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4835, 13} true;
  assume {:verifier.code 0} true;
  call $p10 := usb_get_intfdata($p6);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4836, 9} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4838, 9} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.ref($p11, $0.ref);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4838, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i12 == 1);
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !(($i12 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4840, 5} true;
  assume {:verifier.code 0} true;
  call mutex_unlock(iowarrior_open_disc_lock);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4841, 5} true;
  assume {:verifier.code 0} true;
  call mutex_unlock(iowarrior_mutex);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4843, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i32(0, 19);
  goto $bb10;
$bb14:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4847, 28} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p11, $mul.ref(0, 536)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4847, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p13, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4848, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock(iowarrior_open_disc_lock);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4850, 12} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p11, $mul.ref(0, 536)), $mul.ref(512, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4850, 12} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4850, 7} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i32($i15, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4850, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i16 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4852, 5} true;
  assume {:verifier.code 0} true;
  $i17 := $sub.i32(0, 16);
  goto $bb17;
$bb16:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4872, 23} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p11, $mul.ref(0, 536)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4872, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p30);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4873, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock(iowarrior_mutex);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4875, 3} true;
  assume {:verifier.code 0} true;
  $i9 := $i17;
  goto $bb10;
$bb18:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4856, 32} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p11, $mul.ref(0, 536)), $mul.ref(208, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4856, 32} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.0, $p18);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4856, 12} true;
  assume {:verifier.code 0} true;
  call $i20 := usb_submit_urb($p19, 208);
  call {:cexpr "retval"} boogie_si_record_i32($i20);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4858, 14} true;
  assume {:verifier.code 0} true;
  $i21 := $slt.i32($i20, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4858, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i21 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4860, 50} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p6, $mul.ref(0, 1256)), $mul.ref(48, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4860, 5} true;
  assume {:verifier.code 0} true;
  call $i23 := dev_err.ref.ref.i32($p22, .str.5, $i20);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4864, 5} true;
  assume {:verifier.code 0} true;
  $i17 := $sub.i32(0, 14);
  goto $bb17;
$bb20:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4867, 22} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p11, $mul.ref(0, 536)), $mul.ref(512, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4867, 22} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i32($M.0, $p24);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4867, 29} true;
  assume {:verifier.code 0} true;
  $i26 := $add.i32($i25, 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4867, 8} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p11, $mul.ref(0, 536)), $mul.ref(512, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4867, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p27, $i26);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4868, 24} true;
  assume {:verifier.code 0} true;
  $p28 := $bitcast.ref.ref($p11);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4868, 9} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p1, $mul.ref(0, 336)), $mul.ref(296, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4868, 22} true;
  assume {:verifier.code 0} true;
  $M.3 := $store.ref($M.3, $p29, $p10);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4869, 3} true;
  assume {:verifier.code 0} true;
  $i17 := 0;
  goto $bb17;
}
const iowarrior_release: ref;
axiom (iowarrior_release == $sub.ref(0, 104670));
procedure  iowarrior_release($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $i8: i32;
  var $i9: i1;
  var $p10: ref;
  var $i11: i8;
  var $i12: i32;
  var $i13: i32;
  var $p14: ref;
  var $p15: ref;
  var $i16: i32;
  var $i17: i1;
  var $p18: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i32;
  var $i23: i1;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $i19: i32;
  var $i7: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4883, 35} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4883, 35} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p1, $mul.ref(0, 336)), $mul.ref(296, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4883, 35} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.3, $p2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4883, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4884, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4884, 27} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i64($i5, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4884, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4885, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i32(0, 19);
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4930, 1} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4889, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4889, 13} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4891, 9} true;
  assume {:verifier.code 0} true;
  $i8 := $M.1;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4891, 9} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i8, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4891, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i9 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4894, 46} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(184, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4894, 46} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i8($M.0, $p10);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4894, 35} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i8.i32($i11);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4893, 7} true;
  assume {:verifier.code 0} true;
  call $i13 := printk.ref.ref.i32(.str.21, .str.22, $i12);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4896, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4898, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4904, 28} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4904, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested($p14, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4906, 12} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(512, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4906, 12} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4906, 19} true;
  assume {:verifier.code 0} true;
  $i17 := $sle.i32($i16, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4906, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb12, $bb13;
$bb11:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4901, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb12:
  assume ($i17 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4909, 25} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4909, 5} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p18);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4911, 3} true;
  assume {:verifier.code 0} true;
  $i19 := $sub.i32(0, 19);
  goto $bb14;
$bb13:
  assume !(($i17 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4912, 10} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(512, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4912, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p20, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4914, 14} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(508, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4914, 14} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4914, 9} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i32($i22, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4914, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb15, $bb16;
$bb14:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4928, 3} true;
  assume {:verifier.code 0} true;
  $i7 := $i19;
  goto $bb3;
$bb15:
  assume ($i23 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4916, 25} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(208, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4916, 25} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.0, $p24);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4916, 7} true;
  assume {:verifier.code 0} true;
  call usb_kill_urb($p25);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4917, 24} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(240, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4917, 7} true;
  assume {:verifier.code 0} true;
  call __wake_up($p26, 1, 1, $0.ref);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4918, 24} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(328, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4918, 7} true;
  assume {:verifier.code 0} true;
  call __wake_up($p27, 1, 1, $0.ref);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4919, 27} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4919, 7} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p28);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4921, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i23 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4923, 27} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p4, $mul.ref(0, 536)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4923, 7} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p29);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4924, 7} true;
  assume {:verifier.code 0} true;
  call iowarrior_delete($p4);
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:verifier.code 0} true;
  $i19 := 0;
  goto $bb14;
}
const iminor: ref;
axiom (iminor == $sub.ref(0, 105702));
procedure  iminor($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3640, 34} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3640, 34} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 1184)), $mul.ref(400, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3640, 34} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i32($M.10, $p1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3640, 41} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i:3640:41: warning: over-approximating bitwise operation and;
  $i3 := $and.i32($i2, 1048575);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3640, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const usb_find_interface: ref;
axiom (usb_find_interface == $sub.ref(0, 106734));
procedure  usb_find_interface($p0: ref, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5769, 34} true;
  assume {:verifier.code 0} true;
  call {:cexpr "usb_find_interface:arg:arg1"} boogie_si_record_i32($i1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5769, 34} true;
  assume {:verifier.code 0} true;
  call $p2 := external_alloc();
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5769, 10} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5769, 3} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const usb_submit_urb: ref;
axiom (usb_submit_urb == $sub.ref(0, 107766));
procedure  usb_submit_urb($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5788, 10} true;
  assume {:verifier.code 1} true;
  call {:cexpr "usb_submit_urb:arg:arg1"} boogie_si_record_i32($i1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5788, 10} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5788, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const dev_err: ref;
axiom (dev_err == $sub.ref(0, 108798));
procedure  dev_err.ref.ref.ref.i32($p0: ref, $p1: ref, p.2: ref, p.3: i32)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5711, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5711, 10} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5711, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
procedure  dev_err.ref.ref($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
$bb1:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5711, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5711, 10} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5711, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
procedure  dev_err.ref.ref.i32($p0: ref, $p1: ref, p.2: i32)
  returns ($r: i32)
{
  var $i2: i32;
$bb2:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5711, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5711, 10} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5711, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const external_alloc: ref;
axiom (external_alloc == $sub.ref(0, 109830));
procedure  external_alloc()
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5799, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5799, 10} true;
  assume {:verifier.code 1} true;
  call $p0 := __VERIFIER_nondet_pointer();
  call {:cexpr "smack:ext:__VERIFIER_nondet_pointer"} boogie_si_record_ref($p0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5799, 3} true;
  assume {:verifier.code 0} true;
  $r := $p0;
  $exn := false;
  return;
}
const kzalloc: ref;
axiom (kzalloc == $sub.ref(0, 110862));
procedure  kzalloc($i0: i64, $i1: i32)
  returns ($r: ref)
{
  var $i2: i32;
  var $p3: ref;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3772, 33} true;
  assume {:verifier.code 0} true;
  call {:cexpr "kzalloc:arg:size"} boogie_si_record_i64($i0);
  call {:cexpr "kzalloc:arg:flags"} boogie_si_record_i32($i1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3772, 33} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i:3772:33: warning: over-approximating bitwise operation or;
  $i2 := $or.i32($i1, 32768);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3763, 14} true;
  assume {:verifier.code 0} true;
  call $p3 := __kmalloc($i0, $i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3774, 3} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const copy_from_user: ref;
axiom (copy_from_user == $sub.ref(0, 111894));
procedure  copy_from_user($p0: ref, $p1: ref, $i2: i64)
  returns ($r: i64)
{
  var $i3: i32;
  var $i4: i64;
  var $i5: i32;
  var $i6: i1;
  var $i8: i64;
  var $i9: i1;
  var $i10: i32;
  var $i7: i32;
  var $i11: i64;
  var $i12: i32;
  var $i13: i64;
  var $i14: i1;
  var $i15: i32;
  var $i16: i64;
  var $i18: i1;
  var $i19: i1;
  var $i20: i1;
  var $i21: i32;
  var $i22: i64;
  var $i23: i32;
  var $i24: i64;
  var $i25: i1;
  var $i26: i1;
  var $i27: i1;
  var $i28: i1;
  var $i29: i32;
  var $i30: i64;
  var $i31: i32;
  var $i17: i64;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3567, 9} true;
  assume {:verifier.code 0} true;
  call {:cexpr "copy_from_user:arg:n"} boogie_si_record_i64($i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3567, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := __builtinx_object_size.ref.i32($p0, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3567, 9} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  call {:cexpr "tmp"} boogie_si_record_i64($i4);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3568, 8} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i64.i32($i4);
  call {:cexpr "sz"} boogie_si_record_i32($i5);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3569, 3} true;
  assume {:verifier.code 0} true;
  call might_fault();
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3571, 10} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i5, $sub.i32(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3571, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3573, 3} true;
  assume {:verifier.code 0} true;
  $i7 := 1;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3574, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i5);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3574, 26} true;
  assume {:verifier.code 0} true;
  $i9 := $uge.i64($i8, $i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3574, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb4, $bb5;
$bb3:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3580, 30} true;
  assume {:verifier.code 0} true;
  $i11 := $sext.i32.i64($i7);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3580, 13} true;
  assume {:verifier.code 0} true;
  call $i12 := __builtinx_expect.i64.i64($i11, 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3580, 13} true;
  assume {:verifier.code 0} true;
  $i13 := $sext.i32.i64($i12);
  call {:cexpr "tmp___2"} boogie_si_record_i64($i13);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3582, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i64($i13, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3582, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb7, $bb8;
$bb4:
  assume ($i9 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3576, 3} true;
  assume {:verifier.code 0} true;
  $i10 := 1;
  goto $bb6;
$bb5:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  $i10 := 0;
  goto $bb6;
$bb6:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i7 := $i10;
  goto $bb3;
$bb7:
  assume ($i14 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3584, 57} true;
  assume {:verifier.code 0} true;
  $i15 := $trunc.i64.i32($i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3584, 31} true;
  assume {:verifier.code 0} true;
  call $i16 := _copy_from_user($p0, $p1, $i15);
  call {:cexpr "tmp___3"} boogie_si_record_i64($i16);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3587, 3} true;
  assume {:verifier.code 0} true;
  $i17 := $i16;
  goto $bb9;
$bb8:
  assume !(($i14 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3590, 43} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i32(1, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3590, 43} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i:3590:43: warning: over-approximating bitwise operation xor;
  $i19 := $xor.i1($i18, 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3590, 40} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i:3590:40: warning: over-approximating bitwise operation xor;
  $i20 := $xor.i1($i19, 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3590, 40} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i1.i32($i20);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3590, 32} true;
  assume {:verifier.code 0} true;
  $i22 := $sext.i32.i64($i21);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3590, 15} true;
  assume {:verifier.code 0} true;
  call $i23 := __builtinx_expect.i64.i64($i22, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3590, 15} true;
  assume {:verifier.code 0} true;
  $i24 := $sext.i32.i64($i23);
  call {:cexpr "tmp___0"} boogie_si_record_i64($i24);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3592, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $ne.i64($i24, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3592, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb10, $bb11;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3603, 3} true;
  assume {:verifier.code 0} true;
  $r := $i17;
  $exn := false;
  return;
$bb10:
  assume ($i25 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3594, 7} true;
  assume {:verifier.code 0} true;
  call warn_slowpath_fmt.ref.i32.ref(.str.17, 57, .str.18);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3597, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3600, 33} true;
  assume {:verifier.code 0} true;
  $i26 := $ne.i32(1, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3600, 33} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i:3600:33: warning: over-approximating bitwise operation xor;
  $i27 := $xor.i1($i26, 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3600, 30} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i:3600:30: warning: over-approximating bitwise operation xor;
  $i28 := $xor.i1($i27, 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3600, 30} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.i1.i32($i28);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3600, 22} true;
  assume {:verifier.code 0} true;
  $i30 := $sext.i32.i64($i29);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3600, 5} true;
  assume {:verifier.code 0} true;
  call $i31 := __builtinx_expect.i64.i64($i30, 0);
  assume {:verifier.code 0} true;
  $i17 := $i2;
  goto $bb9;
}
const usb_set_report: ref;
axiom (usb_set_report == $sub.ref(0, 112926));
procedure  usb_set_report($p0: ref, $i1: i8, $i2: i8, $p3: ref, $i4: i32)
  returns ($r: i32)
{
  var $p5: ref;
  var $i6: i32;
  var $p7: ref;
  var $i8: i32;
  var $i9: i32;
  var $i10: i32;
  var $i11: i32;
  var $i12: i32;
  var $i13: i16;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i8;
  var $i19: i16;
  var $i20: i16;
  var $i21: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3897, 13} true;
  assume {:verifier.code 0} true;
  call {:cexpr "usb_set_report:arg:type"} boogie_si_record_i8($i1);
  call {:cexpr "usb_set_report:arg:id"} boogie_si_record_i8($i2);
  call {:cexpr "usb_set_report:arg:size"} boogie_si_record_i32($i4);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3897, 13} true;
  assume {:verifier.code 0} true;
  call $p5 := interface_to_usbdev($p0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3898, 13} true;
  assume {:verifier.code 0} true;
  call $i6 := __create_pipe($p5, 0);
  call {:cexpr "tmp___8"} boogie_si_record_i32($i6);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3899, 13} true;
  assume {:verifier.code 0} true;
  call $p7 := interface_to_usbdev($p0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3900, 64} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i:3900:64: warning: over-approximating bitwise operation or;
  $i8 := $or.i32($sub.i32(0, 2147483648), $i6);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3901, 63} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i8.i32($i1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3901, 74} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i:3901:74: warning: over-approximating bitwise operation shl;
  $i10 := $shl.i32($i9, 8);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3901, 82} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i8.i32($i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3901, 80} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i32($i10, $i11);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3901, 53} true;
  assume {:verifier.code 0} true;
  $i13 := $trunc.i32.i16($i12);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3902, 45} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p0, $mul.ref(0, 1256)), $mul.ref(8, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3902, 45} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3902, 62} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p15, $mul.ref(0, 48)), $mul.ref(0, 1));
  $p17 := $add.ref($add.ref($add.ref($p15, $mul.ref(0, 48)), $mul.ref(0, 1)), $mul.ref(2, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3902, 67} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i8($M.0, $p17);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3902, 30} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i8.i16($i18);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3903, 35} true;
  assume {:verifier.code 0} true;
  $i20 := $trunc.i32.i16($i4);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3900, 14} true;
  assume {:verifier.code 0} true;
  call $i21 := usb_control_msg($p7, $i8, 9, 33, $i13, $i19, $p3, $i20, 250);
  call {:cexpr "tmp___10"} boogie_si_record_i32($i21);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3905, 3} true;
  assume {:verifier.code 0} true;
  $r := $i21;
  $exn := false;
  return;
}
const usb_get_report: ref;
axiom (usb_get_report == $sub.ref(0, 113958));
procedure  usb_get_report($p0: ref, $p1: ref, $i2: i8, $i3: i8, $p4: ref, $i5: i32)
  returns ($r: i32)
{
  var $i6: i32;
  var $i7: i32;
  var $i8: i32;
  var $i9: i32;
  var $i10: i32;
  var $i11: i32;
  var $i12: i32;
  var $i13: i16;
  var $p14: ref;
  var $p15: ref;
  var $i16: i8;
  var $i17: i16;
  var $i18: i16;
  var $i19: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3880, 13} true;
  assume {:verifier.code 0} true;
  call {:cexpr "usb_get_report:arg:type"} boogie_si_record_i8($i2);
  call {:cexpr "usb_get_report:arg:id"} boogie_si_record_i8($i3);
  call {:cexpr "usb_get_report:arg:size"} boogie_si_record_i32($i5);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3880, 13} true;
  assume {:verifier.code 0} true;
  call $i6 := __create_pipe($p0, 0);
  call {:cexpr "tmp___7"} boogie_si_record_i32($i6);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3881, 60} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i:3881:60: warning: over-approximating bitwise operation or;
  $i7 := $or.i32($sub.i32(0, 2147483648), $i6);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3881, 71} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i:3881:71: warning: over-approximating bitwise operation or;
  $i8 := $or.i32($i7, 128);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3882, 70} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i8.i32($i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3882, 81} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i:3882:81: warning: over-approximating bitwise operation shl;
  $i10 := $shl.i32($i9, 8);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3882, 89} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i8.i32($i3);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3882, 87} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i32($i10, $i11);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3882, 60} true;
  assume {:verifier.code 0} true;
  $i13 := $trunc.i32.i16($i12);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3883, 44} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p1, $mul.ref(0, 48)), $mul.ref(0, 1));
  $p15 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 48)), $mul.ref(0, 1)), $mul.ref(2, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3883, 49} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i8($M.0, $p15);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3883, 29} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i16($i16);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3883, 72} true;
  assume {:verifier.code 0} true;
  $i18 := $trunc.i32.i16($i5);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3881, 13} true;
  assume {:verifier.code 0} true;
  call $i19 := usb_control_msg($p0, $i8, 1, $sub.i8(0, 95), $i13, $i17, $p4, $i18, 1250);
  call {:cexpr "tmp___8"} boogie_si_record_i32($i19);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3886, 3} true;
  assume {:verifier.code 0} true;
  $r := $i19;
  $exn := false;
  return;
}
const might_fault: ref;
axiom (might_fault == $sub.ref(0, 114990));
procedure  might_fault()
{
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5739, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5739, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const _copy_to_user: ref;
axiom (_copy_to_user == $sub.ref(0, 116022));
procedure  _copy_to_user($p0: ref, $p1: ref, $i2: i32)
  returns ($r: i64)
{
  var $i3: i64;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5697, 10} true;
  assume {:verifier.code 1} true;
  call {:cexpr "_copy_to_user:arg:arg2"} boogie_si_record_i32($i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5697, 10} true;
  assume {:verifier.code 1} true;
  call $i3 := __VERIFIER_nondet_ulong();
  call {:cexpr "smack:ext:__VERIFIER_nondet_ulong"} boogie_si_record_i64($i3);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5697, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const llvm.memset.p0i8.i64: ref;
axiom (llvm.memset.p0i8.i64 == $sub.ref(0, 117054));
procedure  llvm.memset.p0i8.i64($p0: ref, $i1: i8, $i2: i64, $i3: i1);
const llvm.memcpy.p0i8.p0i8.i64: ref;
axiom (llvm.memcpy.p0i8.p0i8.i64 == $sub.ref(0, 118086));
procedure  llvm.memcpy.p0i8.p0i8.i64($p0: ref, $p1: ref, $i2: i64, $i3: i1);
const __create_pipe: ref;
axiom (__create_pipe == $sub.ref(0, 119118));
procedure  __create_pipe($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i32;
  var $i4: i32;
  var $i5: i32;
  var $i6: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3754, 32} true;
  assume {:verifier.code 0} true;
  call {:cexpr "__create_pipe:arg:endpoint"} boogie_si_record_i32($i1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3754, 32} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 1928)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3754, 32} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3754, 39} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i:3754:39: warning: over-approximating bitwise operation shl;
  $i4 := $shl.i32($i3, 8);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3754, 57} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i:3754:57: warning: over-approximating bitwise operation shl;
  $i5 := $shl.i32($i1, 15);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3754, 45} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i:3754:45: warning: over-approximating bitwise operation or;
  $i6 := $or.i32($i4, $i5);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3754, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const usb_control_msg: ref;
axiom (usb_control_msg == $sub.ref(0, 120150));
procedure  usb_control_msg($p0: ref, $i1: i32, $i2: i8, $i3: i8, $i4: i16, $i5: i16, $p6: ref, $i7: i16, $i8: i32)
  returns ($r: i32)
{
  var $i9: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5759, 10} true;
  assume {:verifier.code 1} true;
  call {:cexpr "usb_control_msg:arg:arg1"} boogie_si_record_i32($i1);
  call {:cexpr "usb_control_msg:arg:arg2"} boogie_si_record_i8($i2);
  call {:cexpr "usb_control_msg:arg:arg3"} boogie_si_record_i8($i3);
  call {:cexpr "usb_control_msg:arg:arg4"} boogie_si_record_i16($i4);
  call {:cexpr "usb_control_msg:arg:arg5"} boogie_si_record_i16($i5);
  call {:cexpr "usb_control_msg:arg:arg7"} boogie_si_record_i16($i7);
  call {:cexpr "usb_control_msg:arg:arg8"} boogie_si_record_i32($i8);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5759, 10} true;
  assume {:verifier.code 1} true;
  call $i9 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i9);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5759, 3} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
}
const interface_to_usbdev: ref;
axiom (interface_to_usbdev == $sub.ref(0, 121182));
procedure  interface_to_usbdev($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3698, 41} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3698, 41} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 1256)), $mul.ref(48, 1));
  $p2 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 1256)), $mul.ref(48, 1)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3698, 45} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3699, 33} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3699, 48} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, $mul.ref($sub.i64(0, $zext.i32.i64($p2i.ref.i32($add.ref($add.ref($0.ref, $mul.ref(0, 1928)), $mul.ref(136, 1))))), 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3699, 11} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3699, 3} true;
  assume {:verifier.code 0} true;
  $r := $p6;
  $exn := false;
  return;
}
const __builtinx_object_size: ref;
axiom (__builtinx_object_size == $sub.ref(0, 122214));
procedure  __builtinx_object_size()
  returns ($r: i32);
procedure  __builtinx_object_size.ref.i32(p.0: ref, p.1: i32)
  returns ($r: i32);
const __builtinx_expect: ref;
axiom (__builtinx_expect == $sub.ref(0, 123246));
procedure  __builtinx_expect()
  returns ($r: i32);
procedure  __builtinx_expect.i64.i64(p.0: i64, p.1: i64)
  returns ($r: i32);
const _copy_from_user: ref;
axiom (_copy_from_user == $sub.ref(0, 124278));
procedure  _copy_from_user($p0: ref, $p1: ref, $i2: i32)
  returns ($r: i64)
{
  var $i3: i64;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5693, 10} true;
  assume {:verifier.code 1} true;
  call {:cexpr "_copy_from_user:arg:arg2"} boogie_si_record_i32($i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5693, 10} true;
  assume {:verifier.code 1} true;
  call $i3 := __VERIFIER_nondet_ulong();
  call {:cexpr "smack:ext:__VERIFIER_nondet_ulong"} boogie_si_record_i64($i3);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5693, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const warn_slowpath_fmt: ref;
axiom (warn_slowpath_fmt == $sub.ref(0, 125310));
procedure  warn_slowpath_fmt.ref.i32.ref($p0: ref, $i1: i32, $p2: ref)
{
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5791, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "warn_slowpath_fmt:arg:arg1"} boogie_si_record_i32($i1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5791, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __kmalloc: ref;
axiom (__kmalloc == $sub.ref(0, 126342));
procedure  __kmalloc($i0: i64, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5680, 18} true;
  assume {:verifier.code 0} true;
  call {:cexpr "__kmalloc:arg:arg0"} boogie_si_record_i64($i0);
  call {:cexpr "__kmalloc:arg:arg1"} boogie_si_record_i32($i1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5680, 18} true;
  assume {:verifier.code 0} true;
  call $p2 := external_alloc();
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5680, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const poll_wait: ref;
axiom (poll_wait == $sub.ref(0, 127374));
procedure  poll_wait($p0: ref, $p1: ref, $p2: ref)
{
  var $i3: i1;
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3781, 7} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3781, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.ref($p2, $0.ref);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3781, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3782, 9} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.ref($p1, $0.ref);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3782, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb3:
  assume ($i4 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3784, 13} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p2, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3784, 13} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.11, $p5);
  call devirtbounce.1($p6, $p0, $p1, $p2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3786, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3788, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3790, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const read_index: ref;
axiom (read_index == $sub.ref(0, 128406));
procedure  read_index($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4111, 52} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4111, 52} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 536)), $mul.ref(420, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4111, 14} true;
  assume {:verifier.code 0} true;
  call $i2 := atomic_read($p1);
  call {:cexpr "read_idx"} boogie_si_record_i32($i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4112, 52} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p0, $mul.ref(0, 536)), $mul.ref(424, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4112, 14} true;
  assume {:verifier.code 0} true;
  call $i4 := atomic_read($p3);
  call {:cexpr "intr_idx"} boogie_si_record_i32($i4);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4114, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i2, $i4);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4114, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4116, 3} true;
  assume {:verifier.code 0} true;
  $i6 := $sub.i32(0, 1);
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  $i6 := $i2;
  goto $bb3;
$bb3:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4119, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const atomic_read: ref;
axiom (atomic_read == $sub.ref(0, 129438));
procedure  atomic_read($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3393, 41} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3393, 41} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 4)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3393, 17} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i32($M.0, $p1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3393, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const autoremove_wake_function: ref;
axiom (autoremove_wake_function == $sub.ref(0, 130470));
procedure  autoremove_wake_function($p0: ref, $i1: i32, $i2: i32, $p3: ref)
  returns ($r: i32)
{
  var $i4: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5795, 10} true;
  assume {:verifier.code 1} true;
  call {:cexpr "autoremove_wake_function:arg:arg1"} boogie_si_record_i32($i1);
  call {:cexpr "autoremove_wake_function:arg:arg2"} boogie_si_record_i32($i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5795, 10} true;
  assume {:verifier.code 1} true;
  call $i4 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i4);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5795, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const prepare_to_wait: ref;
axiom (prepare_to_wait == $sub.ref(0, 131502));
procedure  prepare_to_wait($p0: ref, $p1: ref, $i2: i32)
{
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5748, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "prepare_to_wait:arg:arg2"} boogie_si_record_i32($i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5748, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const signal_pending: ref;
axiom (signal_pending == $sub.ref(0, 132534));
procedure  signal_pending($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $i4: i64;
  var $i5: i32;
  var $i6: i64;
  var $i7: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3660, 13} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3660, 13} true;
  assume {:verifier.code 0} true;
  call $i1 := test_tsk_thread_flag($p0, 2);
  call {:cexpr "tmp___7"} boogie_si_record_i32($i1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3662, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3662, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3664, 3} true;
  assume {:verifier.code 0} true;
  $i3 := 1;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  $i3 := 0;
  goto $bb3;
$bb3:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3668, 30} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3668, 13} true;
  assume {:verifier.code 0} true;
  call $i5 := __builtinx_expect.i64.i64($i4, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3668, 13} true;
  assume {:verifier.code 0} true;
  $i6 := $sext.i32.i64($i5);
  call {:cexpr "tmp___9"} boogie_si_record_i64($i6);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3670, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $trunc.i64.i32($i6);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3670, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const schedule: ref;
axiom (schedule == $sub.ref(0, 133566));
procedure  schedule()
{
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5755, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5755, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const finish_wait: ref;
axiom (finish_wait == $sub.ref(0, 134598));
procedure  finish_wait($p0: ref, $p1: ref)
{
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5722, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5722, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const atomic_inc: ref;
axiom (atomic_inc == $sub.ref(0, 135630));
procedure  atomic_inc($p0: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3412, 44} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3412, 44} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 4)), $mul.ref(0, 1));
  call devirtbounce.2(0, $p1, $p1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3413, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const usb_alloc_urb: ref;
axiom (usb_alloc_urb == $sub.ref(0, 136662));
procedure  usb_alloc_urb($i0: i32, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
  var $i3: i1;
  var $i5: i32;
  var $i6: i32;
  var $p7: ref;
  var $p4: ref;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5605, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "usb_alloc_urb:arg:iso_packets"} boogie_si_record_i32($i0);
  call {:cexpr "usb_alloc_urb:arg:mem_flags"} boogie_si_record_i32($i1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5605, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5605, 13} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5608, 15} true;
  assume {:verifier.code 0} true;
  call $p2 := ldv_undefined_pointer();
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5611, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.ref($p2, $0.ref);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5611, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i3 == 1);
  assume {:verifier.code 0} true;
  goto $bb6;
$bb4:
  assume !(($i3 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5612, 7} true;
  assume {:verifier.code 0} true;
  $p4 := $0.ref;
  goto $bb5;
$bb5:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5624, 1} true;
  assume {:verifier.code 0} true;
  $r := $p4;
  $exn := false;
  return;
$bb6:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5615, 21} true;
  assume {:verifier.code 0} true;
  $i5 := $M.2;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5615, 35} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i32($i5, 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5615, 19} true;
  assume {:verifier.code 0} true;
  $M.2 := $i6;
  call {:cexpr "ldv_urb_state"} boogie_si_record_i32($i6);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5616, 13} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5616, 5} true;
  assume {:verifier.code 0} true;
  $p4 := $p2;
  goto $bb5;
$bb7:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5620, 3} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5622, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $u1, $0.ref);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5622, 3} true;
  assume {:verifier.code 0} true;
  $p4 := $u2;
  goto $bb5;
}
const usb_alloc_coherent: ref;
axiom (usb_alloc_coherent == $sub.ref(0, 137694));
procedure  usb_alloc_coherent($p0: ref, $i1: i64, $i2: i32, $p3: ref)
  returns ($r: ref)
{
  var $p4: ref;
  var $i5: i1;
  var $i7: i32;
  var $i8: i32;
  var $p6: ref;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5548, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "usb_alloc_coherent:arg:size"} boogie_si_record_i64($i1);
  call {:cexpr "usb_alloc_coherent:arg:mem_flags"} boogie_si_record_i32($i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5548, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5548, 13} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5551, 15} true;
  assume {:verifier.code 0} true;
  call $p4 := ldv_undefined_pointer();
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5554, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.ref($p4, $0.ref);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5554, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i5 == 1);
  assume {:verifier.code 0} true;
  goto $bb6;
$bb4:
  assume !(($i5 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5555, 7} true;
  assume {:verifier.code 0} true;
  $p6 := $0.ref;
  goto $bb5;
$bb5:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5567, 1} true;
  assume {:verifier.code 0} true;
  $r := $p6;
  $exn := false;
  return;
$bb6:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5558, 26} true;
  assume {:verifier.code 0} true;
  $i7 := $M.12;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5558, 45} true;
  assume {:verifier.code 0} true;
  $i8 := $add.i32($i7, 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5558, 24} true;
  assume {:verifier.code 0} true;
  $M.12 := $i8;
  call {:cexpr "ldv_coherent_state"} boogie_si_record_i32($i8);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5559, 5} true;
  assume {:verifier.code 0} true;
  $p6 := $p4;
  goto $bb5;
$bb7:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5563, 3} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5565, 3} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $u3, $0.ref);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5565, 3} true;
  assume {:verifier.code 0} true;
  $p6 := $u4;
  goto $bb5;
}
const iowarrior_write_callback: ref;
axiom (iowarrior_write_callback == $sub.ref(0, 138726));
procedure  iowarrior_write_callback($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i1;
  var $i7: i1;
  var $i8: i1;
  var $i9: i1;
  var $i10: i32;
  var $i11: i1;
  var $i12: i32;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i32;
  var $i17: i64;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $i21: i64;
  var $p22: ref;
  var $p23: ref;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4042, 17} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4042, 17} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 192)), $mul.ref(96, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4042, 17} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i32($M.13, $p1);
  call {:cexpr "status"} boogie_si_record_i32($i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4043, 34} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p0, $mul.ref(0, 192)), $mul.ref(176, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4043, 34} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.14, $p3);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4043, 9} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4044, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i2, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4044, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4045, 16} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i2, $sub.i32(0, 2));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4045, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb3:
  assume ($i7 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4046, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i7 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4047, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i2, $sub.i32(0, 104));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4047, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb6, $bb7;
$bb5:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4067, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb6:
  assume ($i8 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4048, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i8 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4049, 16} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i2, $sub.i32(0, 108));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4049, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb9, $bb10;
$bb8:
  assume {:verifier.code 0} true;
  goto $bb5;
$bb9:
  assume ($i9 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4050, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i9 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4052, 7} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume {:verifier.code 0} true;
  goto $bb8;
$bb12:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4052, 17} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4054, 13} true;
  assume {:verifier.code 0} true;
  $i10 := $M.1;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4054, 13} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i10, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4054, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i11 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4056, 11} true;
  assume {:verifier.code 0} true;
  call $i12 := printk.ref.ref.i32(.str.19, .str.20, $i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4059, 9} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4061, 9} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:verifier.code 0} true;
  goto $bb11;
$bb18:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4064, 7} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb19:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4070, 26} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p0, $mul.ref(0, 192)), $mul.ref(72, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4070, 26} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.15, $p13);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4070, 45} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p0, $mul.ref(0, 192)), $mul.ref(132, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4070, 45} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.16, $p15);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4070, 31} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i32.i64($i16);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4070, 74} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p0, $mul.ref(0, 192)), $mul.ref(104, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4070, 74} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.17, $p18);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4071, 26} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p0, $mul.ref(0, 192)), $mul.ref(112, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4071, 26} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i64($M.18, $p20);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4070, 3} true;
  assume {:verifier.code 0} true;
  call usb_free_coherent($p14, $i17, $p19, $i21);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4072, 21} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p5, $mul.ref(0, 536)), $mul.ref(416, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4072, 3} true;
  assume {:verifier.code 0} true;
  call atomic_dec($p22);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4073, 20} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($add.ref($p5, $mul.ref(0, 536)), $mul.ref(328, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4073, 3} true;
  assume {:verifier.code 0} true;
  call __wake_up($p23, 1, 1, $0.ref);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4075, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const usb_fill_int_urb: ref;
axiom (usb_fill_int_urb == $sub.ref(0, 139758));
procedure  usb_fill_int_urb($p0: ref, $p1: ref, $i2: i32, $p3: ref, $i4: i32, $p5: ref, $p6: ref, $i7: i32)
{
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i32;
  var $i16: i1;
  var $i17: i32;
  var $i18: i32;
  var $p19: ref;
  var $p20: ref;
  var $i21: i32;
  var $i22: i1;
  var $i23: i32;
  var $i24: i32;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3722, 8} true;
  assume {:verifier.code 0} true;
  call {:cexpr "usb_fill_int_urb:arg:pipe"} boogie_si_record_i32($i2);
  call {:cexpr "usb_fill_int_urb:arg:buffer_length"} boogie_si_record_i32($i4);
  call {:cexpr "usb_fill_int_urb:arg:interval"} boogie_si_record_i32($i7);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3722, 8} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p0, $mul.ref(0, 192)), $mul.ref(72, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3722, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p8, $p1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3723, 8} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p0, $mul.ref(0, 192)), $mul.ref(88, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3723, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p9, $i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3724, 8} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p0, $mul.ref(0, 192)), $mul.ref(104, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3724, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p10, $p3);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3725, 8} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p0, $mul.ref(0, 192)), $mul.ref(132, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3725, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p11, $i4);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3726, 8} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p0, $mul.ref(0, 192)), $mul.ref(184, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3726, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p12, $p5);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3727, 8} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p0, $mul.ref(0, 192)), $mul.ref(176, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3727, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p13, $p6);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3728, 27} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p1, $mul.ref(0, 1928)), $mul.ref(28, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3728, 27} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3728, 33} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.i32($i15, 3);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3728, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i16 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3729, 36} true;
  assume {:verifier.code 0} true;
  $i17 := $sub.i32($i7, 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3729, 23} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i:3729:23: warning: over-approximating bitwise operation shl;
  $i18 := $shl.i32(1, $i17);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3729, 10} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($add.ref($p0, $mul.ref(0, 192)), $mul.ref(168, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3729, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p19, $i18);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3730, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i16 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3731, 27} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p1, $mul.ref(0, 1928)), $mul.ref(28, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3731, 27} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i32($M.0, $p20);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3731, 33} true;
  assume {:verifier.code 0} true;
  $i22 := $eq.i32($i21, 5);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3731, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb4, $bb5;
$bb3:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3736, 8} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p0, $mul.ref(0, 192)), $mul.ref(160, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3736, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p27, $sub.i32(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3737, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume ($i22 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3732, 36} true;
  assume {:verifier.code 0} true;
  $i23 := $sub.i32($i7, 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3732, 23} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i:3732:23: warning: over-approximating bitwise operation shl;
  $i24 := $shl.i32(1, $i23);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3732, 10} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p0, $mul.ref(0, 192)), $mul.ref(168, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3732, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p25, $i24);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3733, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i22 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3734, 10} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p0, $mul.ref(0, 192)), $mul.ref(168, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3734, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p26, $i7);
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb3;
}
const usb_free_coherent: ref;
axiom (usb_free_coherent == $sub.ref(0, 140790));
procedure  usb_free_coherent($p0: ref, $i1: i64, $p2: ref, $i3: i64)
{
  var $i4: i64;
  var $i5: i1;
  var $i6: i1;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5573, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "usb_free_coherent:arg:size"} boogie_si_record_i64($i1);
  call {:cexpr "usb_free_coherent:arg:dma"} boogie_si_record_i64($i3);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5573, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5573, 13} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5575, 12} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5575, 33} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i64($i4, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5575, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i5 == 1);
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i5 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5577, 7} true;
  assume {:verifier.code 0} true;
  call ldv_assume_stop();
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5579, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5581, 9} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.ref($p2, $0.ref);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5581, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i6 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5582, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $M.12;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5582, 30} true;
  assume {:verifier.code 0} true;
  $i8 := $sge.i32($i7, 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5582, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb8, $bb9;
$bb7:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb8:
  assume ($i8 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5583, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i8 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5585, 9} true;
  assume {:verifier.code 0} true;
  call ldv_blast_assert();
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5588, 28} true;
  assume {:verifier.code 0} true;
  $i9 := $M.12;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5588, 47} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i32($i9, 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5588, 26} true;
  assume {:verifier.code 0} true;
  $M.12 := $i10;
  call {:cexpr "ldv_coherent_state"} boogie_si_record_i32($i10);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5589, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5591, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5596, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb13:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5594, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
}
const atomic_dec: ref;
axiom (atomic_dec == $sub.ref(0, 141822));
procedure  atomic_dec($p0: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3425, 44} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3425, 44} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 4)), $mul.ref(0, 1));
  call devirtbounce.2(0, $p1, $p1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3426, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_undefined_pointer: ref;
axiom (ldv_undefined_pointer == $sub.ref(0, 142854));
procedure  ldv_undefined_pointer()
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5736, 18} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5736, 18} true;
  assume {:verifier.code 0} true;
  call $p0 := external_alloc();
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5736, 3} true;
  assume {:verifier.code 0} true;
  $r := $p0;
  $exn := false;
  return;
}
const test_tsk_thread_flag: ref;
axiom (test_tsk_thread_flag == $sub.ref(0, 143886));
procedure  test_tsk_thread_flag($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3649, 60} true;
  assume {:verifier.code 0} true;
  call {:cexpr "test_tsk_thread_flag:arg:flag"} boogie_si_record_i32($i1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3649, 60} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 9608)), $mul.ref(8, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3649, 60} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.19, $p2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3649, 33} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3649, 13} true;
  assume {:verifier.code 0} true;
  call $i5 := test_ti_thread_flag($p4, $i1);
  call {:cexpr "tmp___7"} boogie_si_record_i32($i5);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3651, 3} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const test_ti_thread_flag: ref;
axiom (test_ti_thread_flag == $sub.ref(0, 144918));
procedure  test_ti_thread_flag($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3433, 94} true;
  assume {:verifier.code 0} true;
  call {:cexpr "test_ti_thread_flag:arg:flag"} boogie_si_record_i32($i1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3433, 94} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 104)), $mul.ref(16, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3433, 70} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3433, 13} true;
  assume {:verifier.code 0} true;
  call $i4 := variable_test_bit($i1, $p3);
  call {:cexpr "tmp___0"} boogie_si_record_i32($i4);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3435, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const variable_test_bit: ref;
axiom (variable_test_bit == $sub.ref(0, 145950));
procedure  variable_test_bit($i0: i32, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3308, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "variable_test_bit:arg:nr"} boogie_si_record_i32($i0);
  call $i2 := devirtbounce.3(0, $p1, $i0);
  call {:cexpr "oldbit"} boogie_si_record_i32($i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3308, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const atomic_set: ref;
axiom (atomic_set == $sub.ref(0, 146982));
procedure  atomic_set($p0: ref, $i1: i32)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3399, 6} true;
  assume {:verifier.code 0} true;
  call {:cexpr "atomic_set:arg:i"} boogie_si_record_i32($i1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3399, 6} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 4)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3399, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p2, $i1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3400, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const dev_name: ref;
axiom (dev_name == $sub.ref(0, 148014));
procedure  dev_name($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i1;
  var $p4: ref;
  var $p5: ref;
  var $p7: ref;
  var $p8: ref;
  var $p6: ref;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3623, 12} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3623, 12} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 1112)), $mul.ref(80, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3623, 12} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.20, $p1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3623, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.ref($p2, $0.ref);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3623, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3624, 32} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p0, $mul.ref(0, 1112)), $mul.ref(80, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3624, 32} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.20, $p4);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3624, 5} true;
  assume {:verifier.code 0} true;
  $p6 := $p5;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3632, 1} true;
  assume {:verifier.code 0} true;
  $r := $p6;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3628, 29} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p0, $mul.ref(0, 1112)), $mul.ref(16, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3628, 9} true;
  assume {:verifier.code 0} true;
  call $p8 := kobject_name($p7);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3630, 3} true;
  assume {:verifier.code 0} true;
  $p6 := $p8;
  goto $bb3;
}
const kasprintf: ref;
axiom (kasprintf == $sub.ref(0, 149046));
procedure  kasprintf.i32.ref.ref($i0: i32, $p1: ref, p.2: ref)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5726, 18} true;
  assume {:verifier.code 0} true;
  call {:cexpr "kasprintf:arg:arg0"} boogie_si_record_i32($i0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5726, 18} true;
  assume {:verifier.code 0} true;
  call $p2 := external_alloc();
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5726, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const kobject_name: ref;
axiom (kobject_name == $sub.ref(0, 150078));
procedure  kobject_name($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3478, 31} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3478, 31} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 64)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3478, 31} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.21, $p1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3478, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const dev_set_drvdata: ref;
axiom (dev_set_drvdata == $sub.ref(0, 151110));
procedure  dev_set_drvdata($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5719, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5719, 10} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5719, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const dev_get_drvdata: ref;
axiom (dev_get_drvdata == $sub.ref(0, 152142));
procedure  dev_get_drvdata($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5715, 18} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5715, 18} true;
  assume {:verifier.code 0} true;
  call $p1 := external_alloc();
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5715, 3} true;
  assume {:verifier.code 0} true;
  $r := $p1;
  $exn := false;
  return;
}
const __mutex_init: ref;
axiom (__mutex_init == $sub.ref(0, 153174));
procedure  __mutex_init($p0: ref, $p1: ref, $p2: ref)
{
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5683, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5683, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const spinlock_check: ref;
axiom (spinlock_check == $sub.ref(0, 154206));
procedure  spinlock_check($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3444, 19} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3444, 19} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3444, 38} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3444, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const __raw_spin_lock_init: ref;
axiom (__raw_spin_lock_init == $sub.ref(0, 155238));
procedure  __raw_spin_lock_init($p0: ref, $p1: ref, $p2: ref)
{
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5686, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5686, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __init_waitqueue_head: ref;
axiom (__init_waitqueue_head == $sub.ref(0, 156270));
procedure  __init_waitqueue_head($p0: ref, $p1: ref)
{
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5676, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5676, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const usb_endpoint_is_int_in: ref;
axiom (usb_endpoint_is_int_in == $sub.ref(0, 157302));
procedure  usb_endpoint_is_int_in($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
  var $i6: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3509, 9} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3509, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := usb_endpoint_xfer_int($p0);
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3511, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3511, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3513, 15} true;
  assume {:verifier.code 0} true;
  call $i3 := usb_endpoint_dir_in($p0);
  call {:cexpr "tmp___0"} boogie_si_record_i32($i3);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3515, 9} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3515, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb6;
$bb3:
  assume ($i4 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3517, 5} true;
  assume {:verifier.code 0} true;
  $i5 := 1;
  goto $bb5;
$bb4:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  $i5 := 0;
  goto $bb5;
$bb5:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3520, 3} true;
  assume {:verifier.code 0} true;
  $i6 := $i5;
  goto $bb6;
$bb6:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3523, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const usb_endpoint_is_int_out: ref;
axiom (usb_endpoint_is_int_out == $sub.ref(0, 158334));
procedure  usb_endpoint_is_int_out($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
  var $i6: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3532, 9} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3532, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := usb_endpoint_xfer_int($p0);
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3534, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3534, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3536, 15} true;
  assume {:verifier.code 0} true;
  call $i3 := usb_endpoint_dir_out($p0);
  call {:cexpr "tmp___0"} boogie_si_record_i32($i3);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3538, 9} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3538, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb6;
$bb3:
  assume ($i4 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3540, 5} true;
  assume {:verifier.code 0} true;
  $i5 := 1;
  goto $bb5;
$bb4:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  $i5 := 0;
  goto $bb5;
$bb5:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3543, 3} true;
  assume {:verifier.code 0} true;
  $i6 := $i5;
  goto $bb6;
$bb6:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3546, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const iowarrior_callback: ref;
axiom (iowarrior_callback == $sub.ref(0, 159366));
procedure  iowarrior_callback($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $i7: i1;
  var $i8: i1;
  var $i9: i1;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $i15: i32;
  var $i14: i32;
  var $p16: ref;
  var $i17: i32;
  var $i18: i1;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $i25: i8;
  var $i26: i32;
  var $i27: i1;
  var $p28: ref;
  var $i29: i32;
  var $i30: i32;
  var $i31: i32;
  var $p32: ref;
  var $p33: ref;
  var $i34: i64;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i32;
  var $i40: i64;
  var $i41: i32;
  var $i42: i1;
  var $p43: ref;
  var $i44: i1;
  var $i46: i32;
  var $i45: i32;
  var $i47: i1;
  var $i48: i32;
  var $i49: i1;
  var $i50: i32;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $i54: i32;
  var $i55: i32;
  var $i56: i32;
  var $p57: ref;
  var $i58: i32;
  var $i59: i64;
  var $p60: ref;
  var $p61: ref;
  var $i62: i64;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $i67: i8;
  var $p68: ref;
  var $i69: i8;
  var $i70: i32;
  var $i71: i32;
  var $i72: i8;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $i76: i64;
  var $p77: ref;
  var $p78: ref;
  var $i79: i32;
  var $i80: i64;
  var $i81: i64;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $i86: i32;
  var $i87: i1;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $i91: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3938, 34} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3938, 34} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 192)), $mul.ref(176, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3938, 34} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3938, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3939, 17} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p0, $mul.ref(0, 192)), $mul.ref(96, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3939, 17} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $p4);
  call {:cexpr "status"} boogie_si_record_i32($i5);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3940, 14} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i5, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3940, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3941, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3943, 14} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i5, $sub.i32(0, 104));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3943, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb4, $bb5;
$bb3:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3955, 7} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb4:
  assume ($i7 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3944, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i7 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3946, 14} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i5, $sub.i32(0, 2));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3946, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb7, $bb8;
$bb6:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3957, 7} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb7:
  assume ($i8 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3947, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb8:
  assume !(($i8 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3949, 14} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i5, $sub.i32(0, 108));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3949, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i9 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3950, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb10:
  assume !(($i9 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3952, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3959, 7} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb12:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3953, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb13, $bb14;
$bb13:
  assume (0 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3953, 12} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb14:
  assume !((0 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3960, 12} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  goto $bb18;
$bb16:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4037, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb17:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4026, 12} true;
  assume {:verifier.code 0} true;
  call $i86 := usb_submit_urb($p0, 32);
  call {:cexpr "retval"} boogie_si_record_i32($i86);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4028, 7} true;
  assume {:verifier.code 0} true;
  $i87 := $ne.i32($i86, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4028, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i87} true;
  goto $bb44, $bb45;
$bb18:
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3965, 20} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p3, $mul.ref(0, 536)), $mul.ref(432, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3965, 3} true;
  assume {:verifier.code 0} true;
  call spin_lock($p10);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3966, 52} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p3, $mul.ref(0, 536)), $mul.ref(424, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3966, 14} true;
  assume {:verifier.code 0} true;
  call $i12 := atomic_read($p11);
  call {:cexpr "intr_idx"} boogie_si_record_i32($i12);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3968, 16} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i12, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3968, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i13 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3970, 3} true;
  assume {:verifier.code 0} true;
  $i14 := 15;
  goto $bb25;
$bb24:
  assume !(($i13 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3971, 24} true;
  assume {:verifier.code 0} true;
  $i15 := $sub.i32($i12, 1);
  call {:cexpr "aux_idx"} boogie_si_record_i32($i15);
  assume {:verifier.code 0} true;
  $i14 := $i15;
  goto $bb25;
$bb25:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3974, 52} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p3, $mul.ref(0, 536)), $mul.ref(420, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3974, 14} true;
  assume {:verifier.code 0} true;
  call $i17 := atomic_read($p16);
  call {:cexpr "read_idx"} boogie_si_record_i32($i17);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3976, 16} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i32($i12, $i17);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3976, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb26, $bb27;
$bb26:
  assume ($i18 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3977, 22} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($add.ref($p3, $mul.ref(0, 536)), $mul.ref(176, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3977, 22} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3977, 34} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p20, $mul.ref(0, 1256)), $mul.ref(8, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3977, 34} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3977, 51} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($add.ref($p22, $mul.ref(0, 48)), $mul.ref(0, 1));
  $p24 := $add.ref($add.ref($add.ref($p22, $mul.ref(0, 48)), $mul.ref(0, 1)), $mul.ref(2, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3977, 56} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i8($M.0, $p24);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3977, 9} true;
  assume {:verifier.code 0} true;
  $i26 := $zext.i8.i32($i25);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3977, 73} true;
  assume {:verifier.code 0} true;
  $i27 := $eq.i32($i26, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3977, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb28, $bb29;
$bb27:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb34;
$bb28:
  assume ($i27 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3979, 32} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($add.ref($p3, $mul.ref(0, 536)), $mul.ref(528, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3979, 32} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i32($M.0, $p28);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3979, 44} true;
  assume {:verifier.code 0} true;
  $i30 := $add.i32($i29, 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3979, 24} true;
  assume {:verifier.code 0} true;
  $i31 := $mul.i32($i14, $i30);
  call {:cexpr "offset"} boogie_si_record_i32($i31);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3980, 44} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p3, $mul.ref(0, 536)), $mul.ref(232, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3980, 44} true;
  assume {:verifier.code 0} true;
  $p33 := $load.ref($M.0, $p32);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3980, 55} true;
  assume {:verifier.code 0} true;
  $i34 := $sext.i32.i64($i31);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3980, 55} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p33, $mul.ref($i34, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3980, 85} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p0, $mul.ref(0, 192)), $mul.ref(104, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3980, 85} true;
  assume {:verifier.code 0} true;
  $p37 := $load.ref($M.0, $p36);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3981, 45} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p3, $mul.ref(0, 536)), $mul.ref(528, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3981, 45} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i32($M.0, $p38);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3981, 24} true;
  assume {:verifier.code 0} true;
  $i40 := $sext.i32.i64($i39);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3980, 17} true;
  assume {:verifier.code 0} true;
  call $i41 := memcmp($p35, $p37, $i40);
  call {:cexpr "tmp___7"} boogie_si_record_i32($i41);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3983, 11} true;
  assume {:verifier.code 0} true;
  $i42 := $ne.i32($i41, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3983, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb30, $bb31;
$bb29:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb33;
$bb30:
  assume ($i42 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3984, 7} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb31:
  assume !(($i42 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3986, 28} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($add.ref($p3, $mul.ref(0, 536)), $mul.ref(432, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3986, 9} true;
  assume {:verifier.code 0} true;
  call spin_unlock($p43);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3988, 9} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb32:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3990, 5} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3992, 3} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3994, 16} true;
  assume {:verifier.code 0} true;
  $i44 := $eq.i32($i12, 15);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3994, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb35, $bb36;
$bb35:
  assume ($i44 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3996, 3} true;
  assume {:verifier.code 0} true;
  $i45 := 0;
  goto $bb37;
$bb36:
  assume !(($i44 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3997, 24} true;
  assume {:verifier.code 0} true;
  $i46 := $add.i32($i12, 1);
  call {:cexpr "aux_idx"} boogie_si_record_i32($i46);
  assume {:verifier.code 0} true;
  $i45 := $i46;
  goto $bb37;
$bb37:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3999, 16} true;
  assume {:verifier.code 0} true;
  $i47 := $eq.i32($i17, $i45);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3999, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb38, $bb39;
$bb38:
  assume ($i47 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4000, 25} true;
  assume {:verifier.code 0} true;
  $i48 := $add.i32($i17, 1);
  call {:cexpr "read_idx"} boogie_si_record_i32($i48);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4001, 18} true;
  assume {:verifier.code 0} true;
  $i49 := $eq.i32($i48, 16);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4001, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i49} true;
  goto $bb40, $bb41;
$bb39:
  assume !(($i47 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb40:
  assume ($i49 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4003, 5} true;
  assume {:verifier.code 0} true;
  $i50 := 0;
  goto $bb42;
$bb41:
  assume !(($i49 == 1));
  assume {:verifier.code 0} true;
  $i50 := $i48;
  goto $bb42;
$bb42:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4007, 23} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($add.ref($p3, $mul.ref(0, 536)), $mul.ref(420, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4007, 5} true;
  assume {:verifier.code 0} true;
  call atomic_set($p51, $i50);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4008, 23} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($add.ref($p3, $mul.ref(0, 536)), $mul.ref(504, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4008, 5} true;
  assume {:verifier.code 0} true;
  call atomic_set($p52, 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4010, 3} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4013, 29} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($add.ref($p3, $mul.ref(0, 536)), $mul.ref(528, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4013, 29} true;
  assume {:verifier.code 0} true;
  $i54 := $load.i32($M.0, $p53);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4013, 41} true;
  assume {:verifier.code 0} true;
  $i55 := $add.i32($i54, 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4013, 21} true;
  assume {:verifier.code 0} true;
  $i56 := $mul.i32($i12, $i55);
  call {:cexpr "offset"} boogie_si_record_i32($i56);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4014, 25} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($add.ref($p3, $mul.ref(0, 536)), $mul.ref(528, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4014, 25} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i32($M.0, $p57);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4014, 11} true;
  assume {:verifier.code 0} true;
  $i59 := $sext.i32.i64($i58);
  call {:cexpr "__len"} boogie_si_record_i64($i59);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4015, 32} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($add.ref($p3, $mul.ref(0, 536)), $mul.ref(232, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4015, 32} true;
  assume {:verifier.code 0} true;
  $p61 := $load.ref($M.0, $p60);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4015, 43} true;
  assume {:verifier.code 0} true;
  $i62 := $sext.i32.i64($i56);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4015, 43} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p61, $mul.ref($i62, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4015, 73} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($add.ref($p0, $mul.ref(0, 192)), $mul.ref(104, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4015, 73} true;
  assume {:verifier.code 0} true;
  $p65 := $load.ref($M.0, $p64);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4015, 11} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p63, $p65, $i59, false);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4017, 18} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($add.ref($p3, $mul.ref(0, 536)), $mul.ref(224, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4017, 18} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i8($M.0, $p66);
  call {:cexpr "tmp___8"} boogie_si_record_i8($i67);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4018, 52} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($add.ref($p3, $mul.ref(0, 536)), $mul.ref(224, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4018, 52} true;
  assume {:verifier.code 0} true;
  $i69 := $load.i8($M.0, $p68);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4018, 41} true;
  assume {:verifier.code 0} true;
  $i70 := $zext.i8.i32($i69);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4018, 66} true;
  assume {:verifier.code 0} true;
  $i71 := $add.i32($i70, 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4018, 24} true;
  assume {:verifier.code 0} true;
  $i72 := $trunc.i32.i8($i71);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4018, 8} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($add.ref($p3, $mul.ref(0, 536)), $mul.ref(224, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4018, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p73, $i72);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4019, 11} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($add.ref($p3, $mul.ref(0, 536)), $mul.ref(232, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4019, 11} true;
  assume {:verifier.code 0} true;
  $p75 := $load.ref($M.0, $p74);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4019, 22} true;
  assume {:verifier.code 0} true;
  $i76 := $sext.i32.i64($i56);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4019, 22} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p75, $mul.ref($i76, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4019, 39} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($add.ref($p3, $mul.ref(0, 536)), $mul.ref(528, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4019, 39} true;
  assume {:verifier.code 0} true;
  $i79 := $load.i32($M.0, $p78);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4019, 32} true;
  assume {:verifier.code 0} true;
  $i80 := $sext.i32.i64($i79);
  $i81 := $add.i64($i76, $i80);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4019, 32} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p75, $mul.ref($i81, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4019, 52} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p82, $i67);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4020, 21} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($add.ref($p3, $mul.ref(0, 536)), $mul.ref(424, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4020, 3} true;
  assume {:verifier.code 0} true;
  call atomic_set($p83, $i45);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4021, 22} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($add.ref($p3, $mul.ref(0, 536)), $mul.ref(432, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4021, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock($p84);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4022, 20} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($add.ref($p3, $mul.ref(0, 536)), $mul.ref(240, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4022, 3} true;
  assume {:verifier.code 0} true;
  call __wake_up($p85, 1, 1, $0.ref);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4023, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb44:
  assume ($i87 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4030, 45} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($add.ref($p3, $mul.ref(0, 536)), $mul.ref(176, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4030, 45} true;
  assume {:verifier.code 0} true;
  $p89 := $load.ref($M.0, $p88);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4030, 57} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($add.ref($p89, $mul.ref(0, 1256)), $mul.ref(48, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4030, 5} true;
  assume {:verifier.code 0} true;
  call $i91 := dev_err.ref.ref.ref.i32($p90, .str.36, .str.37, $i86);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4033, 3} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb45:
  assume !(($i87 == 1));
  assume {:verifier.code 0} true;
  goto $bb46;
$bb46:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 4035, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
}
const usb_string: ref;
axiom (usb_string == $sub.ref(0, 160398));
procedure  usb_string($p0: ref, $i1: i32, $p2: ref, $i3: i64)
  returns ($r: i32)
{
  var $i4: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5784, 10} true;
  assume {:verifier.code 1} true;
  call {:cexpr "usb_string:arg:arg1"} boogie_si_record_i32($i1);
  call {:cexpr "usb_string:arg:arg3"} boogie_si_record_i64($i3);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5784, 10} true;
  assume {:verifier.code 1} true;
  call $i4 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i4);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5784, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const strlen: ref;
axiom (strlen == $sub.ref(0, 161430));
procedure  strlen($p0: ref)
  returns ($r: i64);
const usb_register_dev: ref;
axiom (usb_register_dev == $sub.ref(0, 162462));
procedure  usb_register_dev($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5776, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5776, 10} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5776, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const spin_lock: ref;
axiom (spin_lock == $sub.ref(0, 163494));
procedure  spin_lock($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3451, 26} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3451, 26} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3451, 45} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3451, 3} true;
  assume {:verifier.code 0} true;
  call _raw_spin_lock($p2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3453, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const memcmp: ref;
axiom (memcmp == $sub.ref(0, 164526));
procedure  memcmp($p0: ref, $p1: ref, $i2: i64)
  returns ($r: i32);
const spin_unlock: ref;
axiom (spin_unlock == $sub.ref(0, 165558));
procedure  spin_unlock($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3460, 28} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3460, 28} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(0, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3460, 47} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3460, 3} true;
  assume {:verifier.code 0} true;
  call _raw_spin_unlock($p2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3462, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const _raw_spin_unlock: ref;
axiom (_raw_spin_unlock == $sub.ref(0, 166590));
procedure  _raw_spin_unlock($p0: ref)
{
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5707, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5707, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const _raw_spin_lock: ref;
axiom (_raw_spin_lock == $sub.ref(0, 167622));
procedure  _raw_spin_lock($p0: ref)
{
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5704, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5704, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const usb_endpoint_xfer_int: ref;
axiom (usb_endpoint_xfer_int == $sub.ref(0, 168654));
procedure  usb_endpoint_xfer_int($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i8;
  var $i3: i32;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3500, 29} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3500, 29} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 9)), $mul.ref(3, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3500, 29} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i8($M.0, $p1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3500, 12} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i8.i32($i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3500, 42} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i:3500:42: warning: over-approximating bitwise operation and;
  $i4 := $and.i32($i3, 3);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3500, 47} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i4, 3);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3500, 47} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i32($i5);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3500, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const usb_endpoint_dir_out: ref;
axiom (usb_endpoint_dir_out == $sub.ref(0, 169686));
procedure  usb_endpoint_dir_out($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i8;
  var $i3: i32;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3494, 29} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3494, 29} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 9)), $mul.ref(2, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3494, 29} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i8($M.0, $p1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3494, 12} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i8.i32($i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3494, 46} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i:3494:46: warning: over-approximating bitwise operation and;
  $i4 := $and.i32($i3, 128);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3494, 53} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i4, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3494, 53} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i32($i5);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3494, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const usb_endpoint_dir_in: ref;
axiom (usb_endpoint_dir_in == $sub.ref(0, 170718));
procedure  usb_endpoint_dir_in($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i8;
  var $i3: i32;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3488, 29} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3488, 29} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 9)), $mul.ref(2, 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3488, 29} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i8($M.0, $p1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3488, 12} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i8.i32($i2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3488, 46} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i:3488:46: warning: over-approximating bitwise operation and;
  $i4 := $and.i32($i3, 128);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3488, 53} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i4, 128);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3488, 53} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i32($i5);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 3488, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const iowarrior_exit: ref;
axiom (iowarrior_exit == $sub.ref(0, 171750));
procedure  iowarrior_exit()
{
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5299, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5299, 3} true;
  assume {:verifier.code 0} true;
  call usb_deregister(iowarrior_driver);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5301, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const usb_deregister: ref;
axiom (usb_deregister == $sub.ref(0, 172782));
procedure  usb_deregister($p0: ref)
{
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5762, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5762, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const main: ref;
axiom (main == $sub.ref(0, 173814));
procedure {:entrypoint} main()
  returns ($r: i32)
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i1;
  var $i6: i1;
  var $i7: i1;
  var $i8: i32;
  var $i9: i1;
  var $i10: i1;
  var $i11: i1;
  var $i12: i1;
  var $i13: i1;
  var $i14: i1;
  var $i15: i1;
  var $i16: i1;
  var $i17: i1;
  var $i18: i1;
  var $i19: i32;
  var $i20: i32;
  var $i21: i32;
  var $i22: i1;
  var $i23: i32;
  var $i24: i32;
  var $i27: i1;
  var $i28: i64;
  var $i29: i64;
  var $i30: i32;
  var $i31: i64;
  var $i32: i1;
  var $i33: i32;
  var $i34: i32;
  var $i35: i1;
  var $i36: i64;
  var $i37: i64;
  var $i38: i32;
  var $i39: i64;
  var $i40: i1;
  var $i41: i32;
  var $i42: i32;
  var $i43: i1;
  var $i44: i32;
  var $i45: i32;
  var $i46: i64;
  var $i47: i32;
  var $p48: ref;
  var $i49: i1;
  var $i50: i32;
  var $i51: i32;
  var $i52: i32;
  var $i53: i1;
  var $i54: i32;
  var $i55: i32;
  var $i56: i1;
  var $i57: i32;
  var $i25: i32;
  var $i26: i32;
$bb0:
  call $initialize();
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5354, 20} true;
  assume {:verifier.code 0} true;
  call {:cexpr "smack:entry:main"} boogie_si_record_ref(main);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5354, 20} true;
  assume {:verifier.code 0} true;
  $M.22 := 1;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5355, 3} true;
  assume {:verifier.code 0} true;
  call ldv_initialize();
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5356, 13} true;
  assume {:verifier.code 0} true;
  call $i0 := iowarrior_init();
  call {:cexpr "tmp___7"} boogie_si_record_i32($i0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5358, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $ne.i32($i0, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5358, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5359, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5517, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_final_state();
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5519, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5365, 3} true;
  assume {:verifier.code 0} true;
  $i2, $i3 := 0, 0;
  goto $bb5;
$bb5:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5363, 37} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5365, 13} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5368, 15} true;
  assume {:verifier.code 1} true;
  call $i4 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i4);
  call {:cexpr "tmp___9"} boogie_si_record_i32($i4);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5370, 9} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5370, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i5 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5371, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i5 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5372, 49} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i2, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5372, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb10, $bb11;
$bb9:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5379, 15} true;
  assume {:verifier.code 1} true;
  call $i8 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i8);
  call {:cexpr "tmp___8"} boogie_si_record_i32($i8);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5381, 17} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i8, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5381, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb17, $bb18;
$bb10:
  assume ($i6 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5374, 46} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i3, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5374, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb13, $bb14;
$bb11:
  assume !(($i6 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5373, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:verifier.code 0} true;
  goto $bb9;
$bb13:
  assume ($i7 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5376, 7} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb14:
  assume !(($i7 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5375, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  goto $bb12;
$bb16:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5509, 3} true;
  assume {:verifier.code 0} true;
  goto $bb52;
$bb17:
  assume ($i9 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5382, 7} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i9 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5384, 17} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i32($i8, 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5384, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb20, $bb21;
$bb19:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5411, 50} true;
  assume {:verifier.code 0} true;
  $i18 := $eq.i32($i2, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5411, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb48, $bb49;
$bb20:
  assume ($i10 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5385, 7} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i10 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5387, 17} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i32($i8, 2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5387, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb23, $bb24;
$bb22:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5425, 50} true;
  assume {:verifier.code 0} true;
  $i27 := $eq.i32($i2, 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5425, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb56, $bb57;
$bb23:
  assume ($i11 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5388, 7} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i11 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5390, 17} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i8, 3);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5390, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb26, $bb27;
$bb25:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5440, 50} true;
  assume {:verifier.code 0} true;
  $i35 := $eq.i32($i2, 2);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5440, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb62, $bb63;
$bb26:
  assume ($i12 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5391, 7} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume !(($i12 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5393, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i8, 4);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5393, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb29, $bb30;
$bb28:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5455, 50} true;
  assume {:verifier.code 0} true;
  $i43 := $eq.i32($i2, 3);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5455, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb68, $bb69;
$bb29:
  assume ($i13 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5394, 7} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume !(($i13 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5396, 17} true;
  assume {:verifier.code 0} true;
  $i14 := $eq.i32($i8, 5);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5396, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb32, $bb33;
$bb31:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5465, 9} true;
  assume {:verifier.code 0} true;
  call $i46 := iowarrior_ioctl($u6, $u0, $u7);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5467, 9} true;
  assume {:verifier.code 0} true;
  $i25, $i26 := $i2, $i3;
  goto $bb55;
$bb32:
  assume ($i14 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5397, 7} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume !(($i14 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5399, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i8, 6);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5399, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb35, $bb36;
$bb34:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5470, 9} true;
  assume {:verifier.code 0} true;
  call $i47 := iowarrior_poll($u6, $u9);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5472, 9} true;
  assume {:verifier.code 0} true;
  $i25, $i26 := $i2, $i3;
  goto $bb55;
$bb35:
  assume ($i15 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5400, 7} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb36:
  assume !(($i15 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5402, 17} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.i32($i8, 7);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5402, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb38, $bb39;
$bb37:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5475, 9} true;
  assume {:verifier.code 0} true;
  call $p48 := iowarrior_devnode($u10, $u11);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5477, 9} true;
  assume {:verifier.code 0} true;
  $i25, $i26 := $i2, $i3;
  goto $bb55;
$bb38:
  assume ($i16 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5403, 7} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb39:
  assume !(($i16 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5405, 17} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i32($i8, 8);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5405, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb41, $bb42;
$bb40:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5479, 47} true;
  assume {:verifier.code 0} true;
  $i49 := $eq.i32($i3, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5479, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i49} true;
  goto $bb71, $bb72;
$bb41:
  assume ($i17 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5406, 7} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume !(($i17 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5408, 7} true;
  assume {:verifier.code 0} true;
  goto $bb44;
$bb43:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5493, 47} true;
  assume {:verifier.code 0} true;
  $i56 := $eq.i32($i3, 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5493, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i56} true;
  goto $bb77, $bb78;
$bb44:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5502, 9} true;
  assume {:verifier.code 0} true;
  $i25, $i26 := $i2, $i3;
  goto $bb55;
$bb45:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5409, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb46, $bb47;
$bb46:
  assume (0 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5409, 14} true;
  assume {:verifier.code 0} true;
  assume false;
$bb47:
  assume !((0 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5503, 14} true;
  assume {:verifier.code 0} true;
  assume false;
$bb48:
  assume ($i18 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5413, 34} true;
  assume {:verifier.code 0} true;
  call $i19 := iowarrior_open($u5, $u6);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5413, 32} true;
  assume {:verifier.code 0} true;
  $M.23 := $i19;
  call {:cexpr "res_iowarrior_open_9"} boogie_si_record_i32($i19);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5414, 34} true;
  assume {:verifier.code 0} true;
  $i20 := $M.23;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5414, 11} true;
  assume {:verifier.code 0} true;
  call ldv_check_return_value($i20);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5416, 15} true;
  assume {:verifier.code 0} true;
  $i21 := $M.23;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5416, 15} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i32($i21, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5416, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb50, $bb51;
$bb49:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  $i24 := $i2;
  goto $bb54;
$bb50:
  assume ($i22 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5417, 13} true;
  assume {:verifier.code 0} true;
  goto $bb52;
$bb51:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb53;
$bb52:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5513, 3} true;
  assume {:verifier.code 0} true;
  call iowarrior_exit();
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5514, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb53:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5420, 87} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i32($i2, 1);
  call {:cexpr "ldv_s_iowarrior_fops_file_operations"} boogie_si_record_i32($i23);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5421, 9} true;
  assume {:verifier.code 0} true;
  $i24 := $i23;
  goto $bb54;
$bb54:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5423, 9} true;
  assume {:verifier.code 0} true;
  $i25, $i26 := $i24, $i3;
  goto $bb55;
$bb55:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb80;
$bb56:
  assume ($i27 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5427, 34} true;
  assume {:verifier.code 0} true;
  call $i28 := iowarrior_read($u6, $u4, $u7, $u8);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5427, 32} true;
  assume {:verifier.code 0} true;
  $M.24 := $i28;
  call {:cexpr "res_iowarrior_read_6"} boogie_si_record_i64($i28);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5429, 40} true;
  assume {:verifier.code 0} true;
  $i29 := $M.24;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5429, 34} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i64.i32($i29);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5429, 11} true;
  assume {:verifier.code 0} true;
  call ldv_check_return_value($i30);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5431, 15} true;
  assume {:verifier.code 0} true;
  $i31 := $M.24;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5431, 36} true;
  assume {:verifier.code 0} true;
  $i32 := $slt.i64($i31, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5431, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb58, $bb59;
$bb57:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  $i34 := $i2;
  goto $bb61;
$bb58:
  assume ($i32 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5432, 13} true;
  assume {:verifier.code 0} true;
  goto $bb52;
$bb59:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  goto $bb60;
$bb60:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5435, 87} true;
  assume {:verifier.code 0} true;
  $i33 := $add.i32($i2, 1);
  call {:cexpr "ldv_s_iowarrior_fops_file_operations"} boogie_si_record_i32($i33);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5436, 9} true;
  assume {:verifier.code 0} true;
  $i34 := $i33;
  goto $bb61;
$bb61:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5438, 9} true;
  assume {:verifier.code 0} true;
  $i25, $i26 := $i34, $i3;
  goto $bb55;
$bb62:
  assume ($i35 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5442, 35} true;
  assume {:verifier.code 0} true;
  call $i36 := iowarrior_write($u6, $u4, $u7, $u8);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5442, 33} true;
  assume {:verifier.code 0} true;
  $M.25 := $i36;
  call {:cexpr "res_iowarrior_write_7"} boogie_si_record_i64($i36);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5444, 40} true;
  assume {:verifier.code 0} true;
  $i37 := $M.25;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5444, 34} true;
  assume {:verifier.code 0} true;
  $i38 := $trunc.i64.i32($i37);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5444, 11} true;
  assume {:verifier.code 0} true;
  call ldv_check_return_value($i38);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5446, 15} true;
  assume {:verifier.code 0} true;
  $i39 := $M.25;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5446, 37} true;
  assume {:verifier.code 0} true;
  $i40 := $slt.i64($i39, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5446, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb64, $bb65;
$bb63:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  $i42 := $i2;
  goto $bb67;
$bb64:
  assume ($i40 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5447, 13} true;
  assume {:verifier.code 0} true;
  goto $bb52;
$bb65:
  assume !(($i40 == 1));
  assume {:verifier.code 0} true;
  goto $bb66;
$bb66:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5450, 87} true;
  assume {:verifier.code 0} true;
  $i41 := $add.i32($i2, 1);
  call {:cexpr "ldv_s_iowarrior_fops_file_operations"} boogie_si_record_i32($i41);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5451, 9} true;
  assume {:verifier.code 0} true;
  $i42 := $i41;
  goto $bb67;
$bb67:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5453, 9} true;
  assume {:verifier.code 0} true;
  $i25, $i26 := $i42, $i3;
  goto $bb55;
$bb68:
  assume ($i43 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5457, 11} true;
  assume {:verifier.code 0} true;
  call $i44 := iowarrior_release($u5, $u6);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5460, 9} true;
  assume {:verifier.code 0} true;
  $i45 := 0;
  goto $bb70;
$bb69:
  assume !(($i43 == 1));
  assume {:verifier.code 0} true;
  $i45 := $i2;
  goto $bb70;
$bb70:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5462, 9} true;
  assume {:verifier.code 0} true;
  $i25, $i26 := $i45, $i3;
  goto $bb55;
$bb71:
  assume ($i49 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5481, 36} true;
  assume {:verifier.code 0} true;
  call $i50 := iowarrior_probe($u12, $u13);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5481, 34} true;
  assume {:verifier.code 0} true;
  $M.26 := $i50;
  call {:cexpr "res_iowarrior_probe_13"} boogie_si_record_i32($i50);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5482, 34} true;
  assume {:verifier.code 0} true;
  $i51 := $M.26;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5482, 11} true;
  assume {:verifier.code 0} true;
  call ldv_check_return_value($i51);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5484, 15} true;
  assume {:verifier.code 0} true;
  $i52 := $M.26;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5484, 15} true;
  assume {:verifier.code 0} true;
  $i53 := $ne.i32($i52, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5484, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i53} true;
  goto $bb73, $bb74;
$bb72:
  assume !(($i49 == 1));
  assume {:verifier.code 0} true;
  $i55 := $i3;
  goto $bb76;
$bb73:
  assume ($i53 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5485, 13} true;
  assume {:verifier.code 0} true;
  goto $bb52;
$bb74:
  assume !(($i53 == 1));
  assume {:verifier.code 0} true;
  goto $bb75;
$bb75:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5488, 81} true;
  assume {:verifier.code 0} true;
  $i54 := $add.i32($i3, 1);
  call {:cexpr "ldv_s_iowarrior_driver_usb_driver"} boogie_si_record_i32($i54);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5489, 9} true;
  assume {:verifier.code 0} true;
  $i55 := $i54;
  goto $bb76;
$bb76:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5491, 9} true;
  assume {:verifier.code 0} true;
  $i25, $i26 := $i2, $i55;
  goto $bb55;
$bb77:
  assume ($i56 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5495, 11} true;
  assume {:verifier.code 0} true;
  call iowarrior_disconnect($u12);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5498, 9} true;
  assume {:verifier.code 0} true;
  $i57 := 0;
  goto $bb79;
$bb78:
  assume !(($i56 == 1));
  assume {:verifier.code 0} true;
  $i57 := $i3;
  goto $bb79;
$bb79:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5500, 9} true;
  assume {:verifier.code 0} true;
  $i25, $i26 := $i2, $i57;
  goto $bb55;
$bb80:
  assume {:verifier.code 0} true;
  goto $bb81;
$bb81:
  assume {:verifier.code 0} true;
  goto $bb82;
$bb82:
  assume {:verifier.code 0} true;
  goto $bb83;
$bb83:
  assume {:verifier.code 0} true;
  goto $bb84;
$bb84:
  assume {:verifier.code 0} true;
  goto $bb85;
$bb85:
  assume {:verifier.code 0} true;
  goto $bb86;
$bb86:
  assume {:verifier.code 0} true;
  goto $bb87;
$bb87:
  assume {:verifier.code 0} true;
  goto $bb88;
$bb88:
  assume {:verifier.code 0} true;
  goto $bb89;
$bb89:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5365, 3} true;
  assume {:verifier.code 0} true;
  $i2, $i3 := $i25, $i26;
  goto $bb5;
$bb90:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5509, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
}
const ldv_initialize: ref;
axiom (ldv_initialize == $sub.ref(0, 174846));
procedure  ldv_initialize()
{
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5732, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5732, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_check_return_value: ref;
axiom (ldv_check_return_value == $sub.ref(0, 175878));
procedure  ldv_check_return_value($i0: i32)
{
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5729, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "ldv_check_return_value:arg:arg0"} boogie_si_record_i32($i0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5729, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_check_final_state: ref;
axiom (ldv_check_final_state == $sub.ref(0, 176910));
procedure  ldv_check_final_state()
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i32;
  var $i3: i1;
$bb0:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5660, 7} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5660, 7} true;
  assume {:verifier.code 0} true;
  $i0 := $M.2;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5660, 21} true;
  assume {:verifier.code 0} true;
  $i1 := $eq.i32($i0, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5660, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5661, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5663, 5} true;
  assume {:verifier.code 0} true;
  call ldv_blast_assert();
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5666, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $M.12;
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5666, 26} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i32($i2, 0);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5666, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i3 == 1);
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5667, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i3 == 1));
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5669, 5} true;
  assume {:verifier.code 0} true;
  call ldv_blast_assert();
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "usb_urb-drivers-usb-misc-iowarrior.ko.cil.out-g94wz8ye.i", 5672, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_assume: ref;
axiom (__VERIFIER_assume == $sub.ref(0, 177942));
procedure  __VERIFIER_assume($i0: i32)
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__VERIFIER_assume:arg:x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 38, 3} true;
  assume {:verifier.code 1} true;
  assume $i0 != $0;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 39, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_code: ref;
axiom (__SMACK_code == $sub.ref(0, 178974));
procedure  __SMACK_code.ref($p0: ref);
procedure  __SMACK_code.ref.i32($p0: ref, p.1: i32);
const __SMACK_dummy: ref;
axiom (__SMACK_dummy == $sub.ref(0, 180006));
procedure  __SMACK_dummy($i0: i32)
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_dummy:arg:v"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 59} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_error: ref;
axiom (__VERIFIER_error == $sub.ref(0, 181038));
procedure  __VERIFIER_error()
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 52, 3} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 52, 3} true;
  assume {:verifier.code 1} true;
  assert false;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 59, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_check_overflow: ref;
axiom (__SMACK_check_overflow == $sub.ref(0, 182070));
procedure  __SMACK_check_overflow($i0: i32)
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_check_overflow:arg:flag"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 63, 3} true;
  assume {:verifier.code 1} true;
  assert {:overflow} $i0 == $0;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 64, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_nondet_char: ref;
axiom (__SMACK_nondet_char == $sub.ref(0, 183102));
procedure  __SMACK_nondet_char()
  returns ($r: i8);
const __SMACK_nondet_signed_char: ref;
axiom (__SMACK_nondet_signed_char == $sub.ref(0, 184134));
procedure  __SMACK_nondet_signed_char()
  returns ($r: i8);
const __SMACK_nondet_unsigned_char: ref;
axiom (__SMACK_nondet_unsigned_char == $sub.ref(0, 185166));
procedure  __SMACK_nondet_unsigned_char()
  returns ($r: i8);
const __SMACK_nondet_short: ref;
axiom (__SMACK_nondet_short == $sub.ref(0, 186198));
procedure  __SMACK_nondet_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short: ref;
axiom (__SMACK_nondet_signed_short == $sub.ref(0, 187230));
procedure  __SMACK_nondet_signed_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short_int: ref;
axiom (__SMACK_nondet_signed_short_int == $sub.ref(0, 188262));
procedure  __SMACK_nondet_signed_short_int()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short: ref;
axiom (__SMACK_nondet_unsigned_short == $sub.ref(0, 189294));
procedure  __SMACK_nondet_unsigned_short()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short_int: ref;
axiom (__SMACK_nondet_unsigned_short_int == $sub.ref(0, 190326));
procedure  __SMACK_nondet_unsigned_short_int()
  returns ($r: i16);
const __VERIFIER_nondet_int: ref;
axiom (__VERIFIER_nondet_int == $sub.ref(0, 191358));
procedure  __VERIFIER_nondet_int()
  returns ($r: i32)
{
  var $i0: i32;
  var $i1: i1;
  var $i3: i1;
  var $i2: i1;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 115, 11} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 115, 11} true;
  assume {:verifier.code 1} true;
  call $i0 := __SMACK_nondet_int();
  call {:cexpr "smack:ext:__SMACK_nondet_int"} boogie_si_record_i32($i0);
  call {:cexpr "x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 23} true;
  assume {:verifier.code 0} true;
  $i1 := $sge.i32($i0, $sub.i32(0, 2147483648));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 34} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 39} true;
  assume {:verifier.code 1} true;
  $i3 := $sle.i32($i0, 2147483647);
  assume {:verifier.code 0} true;
  $i2 := $i3;
  goto $bb3;
$bb2:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 34} true;
  assume {:verifier.code 0} true;
  assume !(($i1 == 1));
  goto $bb3;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 34} true;
  assume {:verifier.code 1} true;
  $i4 := $zext.i1.i32($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __SMACK_nondet_int: ref;
axiom (__SMACK_nondet_int == $sub.ref(0, 192390));
procedure  __SMACK_nondet_int()
  returns ($r: i32);
const __SMACK_nondet_signed_int: ref;
axiom (__SMACK_nondet_signed_int == $sub.ref(0, 193422));
procedure  __SMACK_nondet_signed_int()
  returns ($r: i32);
const __SMACK_nondet_unsigned: ref;
axiom (__SMACK_nondet_unsigned == $sub.ref(0, 194454));
procedure  __SMACK_nondet_unsigned()
  returns ($r: i32);
const __SMACK_nondet_unsigned_int: ref;
axiom (__SMACK_nondet_unsigned_int == $sub.ref(0, 195486));
procedure  __SMACK_nondet_unsigned_int()
  returns ($r: i32);
const __SMACK_nondet_long: ref;
axiom (__SMACK_nondet_long == $sub.ref(0, 196518));
procedure  __SMACK_nondet_long()
  returns ($r: i64);
const __SMACK_nondet_long_int: ref;
axiom (__SMACK_nondet_long_int == $sub.ref(0, 197550));
procedure  __SMACK_nondet_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long: ref;
axiom (__SMACK_nondet_signed_long == $sub.ref(0, 198582));
procedure  __SMACK_nondet_signed_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_int: ref;
axiom (__SMACK_nondet_signed_long_int == $sub.ref(0, 199614));
procedure  __SMACK_nondet_signed_long_int()
  returns ($r: i64);
const __VERIFIER_nondet_unsigned_long: ref;
axiom (__VERIFIER_nondet_unsigned_long == $sub.ref(0, 200646));
procedure  __VERIFIER_nondet_unsigned_long()
  returns ($r: i64)
{
  var $i0: i64;
  var $i1: i64;
  var $i2: i64;
  var $i3: i1;
  var $i5: i1;
  var $i6: i1;
  var $i4: i1;
  var $i7: i32;
  var $i8: i1;
  var $i10: i1;
  var $i9: i1;
  var $i11: i32;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 169, 21} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 169, 21} true;
  assume {:verifier.code 1} true;
  call $i0 := __SMACK_nondet_unsigned_long();
  call {:cexpr "smack:ext:__SMACK_nondet_unsigned_long"} boogie_si_record_i64($i0);
  call {:cexpr "x"} boogie_si_record_i64($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 170, 23} true;
  assume {:verifier.code 1} true;
  call $i1 := __SMACK_nondet_unsigned_long();
  call {:cexpr "smack:ext:__SMACK_nondet_unsigned_long"} boogie_si_record_i64($i1);
  call {:cexpr "min"} boogie_si_record_i64($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 171, 23} true;
  assume {:verifier.code 1} true;
  call $i2 := __SMACK_nondet_unsigned_long();
  call {:cexpr "smack:ext:__SMACK_nondet_unsigned_long"} boogie_si_record_i64($i2);
  call {:cexpr "max"} boogie_si_record_i64($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 25} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i64($i1, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 30} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 37} true;
  assume {:verifier.code 0} true;
  $i5 := $uge.i64($i2, 18446744073709551615);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 50} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  assume {:branchcond $i5} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 30} true;
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb3;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 50} true;
  assume {:verifier.code 1} true;
  $i7 := $zext.i1.i32($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i7);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 173, 23} true;
  assume {:verifier.code 0} true;
  $i8 := $uge.i64($i0, $i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 173, 30} true;
  assume {:verifier.code 0} true;
  $i9 := 0;
  assume {:branchcond $i8} true;
  goto $bb6, $bb7;
$bb4:
  assume ($i5 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 57} true;
  assume {:verifier.code 1} true;
  $i6 := $ule.i64($i2, 18446744073709551615);
  assume {:verifier.code 0} true;
  $i4 := $i6;
  goto $bb3;
$bb5:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 50} true;
  assume {:verifier.code 0} true;
  assume !(($i5 == 1));
  goto $bb3;
$bb6:
  assume ($i8 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 173, 35} true;
  assume {:verifier.code 1} true;
  $i10 := $ule.i64($i0, $i2);
  assume {:verifier.code 0} true;
  $i9 := $i10;
  goto $bb8;
$bb7:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 173, 30} true;
  assume {:verifier.code 0} true;
  assume !(($i8 == 1));
  goto $bb8;
$bb8:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 173, 30} true;
  assume {:verifier.code 1} true;
  $i11 := $zext.i1.i32($i9);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 173, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i11);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 174, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __SMACK_nondet_unsigned_long: ref;
axiom (__SMACK_nondet_unsigned_long == $sub.ref(0, 201678));
procedure  __SMACK_nondet_unsigned_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_int == $sub.ref(0, 202710));
procedure  __SMACK_nondet_unsigned_long_int()
  returns ($r: i64);
const __SMACK_nondet_long_long: ref;
axiom (__SMACK_nondet_long_long == $sub.ref(0, 203742));
procedure  __SMACK_nondet_long_long()
  returns ($r: i64);
const __SMACK_nondet_long_long_int: ref;
axiom (__SMACK_nondet_long_long_int == $sub.ref(0, 204774));
procedure  __SMACK_nondet_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long: ref;
axiom (__SMACK_nondet_signed_long_long == $sub.ref(0, 205806));
procedure  __SMACK_nondet_signed_long_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long_int: ref;
axiom (__SMACK_nondet_signed_long_long_int == $sub.ref(0, 206838));
procedure  __SMACK_nondet_signed_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long: ref;
axiom (__SMACK_nondet_unsigned_long_long == $sub.ref(0, 207870));
procedure  __SMACK_nondet_unsigned_long_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_long_int == $sub.ref(0, 208902));
procedure  __SMACK_nondet_unsigned_long_long_int()
  returns ($r: i64);
const __VERIFIER_nondet_ulong: ref;
axiom (__VERIFIER_nondet_ulong == $sub.ref(0, 209934));
procedure  __VERIFIER_nondet_ulong()
  returns ($r: i64)
{
  var $i0: i64;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 252, 21} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 252, 21} true;
  assume {:verifier.code 1} true;
  call $i0 := __VERIFIER_nondet_unsigned_long();
  call {:cexpr "smack:ext:__VERIFIER_nondet_unsigned_long"} boogie_si_record_i64($i0);
  call {:cexpr "x"} boogie_si_record_i64($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 253, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __VERIFIER_nondet_pointer: ref;
axiom (__VERIFIER_nondet_pointer == $sub.ref(0, 210966));
procedure  __VERIFIER_nondet_pointer()
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 256, 48} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 256, 48} true;
  assume {:verifier.code 1} true;
  call $p0 := __VERIFIER_nondet();
  call {:cexpr "smack:ext:__VERIFIER_nondet"} boogie_si_record_ref($p0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 256, 41} true;
  assume {:verifier.code 0} true;
  $r := $p0;
  $exn := false;
  return;
}
const __VERIFIER_nondet: ref;
axiom (__VERIFIER_nondet == $sub.ref(0, 211998));
procedure  __VERIFIER_nondet()
  returns ($r: ref);
const __SMACK_decls: ref;
axiom (__SMACK_decls == $sub.ref(0, 213030));
type $mop;
procedure  boogie_si_record_mop(m: $mop);
const $MOP: $mop;
var $exn: bool;
var $exnv: int;
procedure  corral_atomic_begin();
procedure  corral_atomic_end();
procedure  $alloc(n: ref) returns (p: ref)
{
  call corral_atomic_begin();
  call p := $$alloc(n);
  call corral_atomic_end();
}

procedure  $malloc(n: ref) returns (p: ref)
{
  call corral_atomic_begin();
  call p := $$alloc(n);
  call corral_atomic_end();
}

var $CurrAddr:ref;

procedure {:inline 1} $$alloc(n: ref) returns (p: ref)
modifies $CurrAddr;
{
  assume $sge.ref.bool(n, $0.ref);
  if ($sgt.ref.bool(n, $0.ref)) {
    p := $CurrAddr;
    havoc $CurrAddr;
    assume $sge.ref.bool($sub.ref($CurrAddr, n), p);
    assume $sgt.ref.bool($CurrAddr, $0.ref) && $slt.ref.bool($CurrAddr, $MALLOC_TOP);
  } else {
    p := $0.ref;
  }
}

procedure  $free(p: ref);

const __SMACK_top_decl: ref;
axiom (__SMACK_top_decl == $sub.ref(0, 214062));
procedure  __SMACK_top_decl.ref($p0: ref);
const __SMACK_init_func_memory_model: ref;
axiom (__SMACK_init_func_memory_model == $sub.ref(0, 215094));
procedure  __SMACK_init_func_memory_model()
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 539, 3} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 539, 3} true;
  assume {:verifier.code 1} true;
  $CurrAddr := $1024.ref;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 544, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_atomic_begin: ref;
axiom (__VERIFIER_atomic_begin == $sub.ref(0, 216126));
procedure  __VERIFIER_atomic_begin()
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 34} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 34} true;
  assume {:verifier.code 1} true;
  call corral_atomic_begin();
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 79} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_atomic_end: ref;
axiom (__VERIFIER_atomic_end == $sub.ref(0, 217158));
procedure  __VERIFIER_atomic_end()
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 548, 32} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 548, 32} true;
  assume {:verifier.code 1} true;
  call corral_atomic_end();
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 548, 75} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const llvm.dbg.value: ref;
axiom (llvm.dbg.value == $sub.ref(0, 218190));
procedure  llvm.dbg.value($p0: ref, $p1: ref, $p2: ref);
const __SMACK_static_init: ref;
axiom (__SMACK_static_init == $sub.ref(0, 219222));
procedure  __SMACK_static_init()
{
$bb0:
  $M.22 := 0;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(0);
  $M.2 := 0;
  call {:cexpr "ldv_urb_state"} boogie_si_record_i32(0);
  $M.12 := 0;
  call {:cexpr "ldv_coherent_state"} boogie_si_record_i32(0);
  $M.27 := __mod_author60;
  $M.28 := __mod_description61;
  $M.29 := __mod_license62;
  $M.30 := __param_debug;
  $M.31 := __mod_debugtype67;
  $M.32 := __mod_debug68;
  $M.33 := 97;
  $M.34 := 117;
  $M.35 := 116;
  $M.36 := 104;
  $M.37 := 111;
  $M.38 := 114;
  $M.39 := 61;
  $M.40 := 67;
  $M.41 := 104;
  $M.42 := 114;
  $M.43 := 105;
  $M.44 := 115;
  $M.45 := 116;
  $M.46 := 105;
  $M.47 := 97;
  $M.48 := 110;
  $M.49 := 32;
  $M.50 := 76;
  $M.51 := 117;
  $M.52 := 99;
  $M.53 := 104;
  $M.54 := 116;
  $M.55 := 32;
  $M.56 := 60;
  $M.57 := 108;
  $M.58 := 117;
  $M.59 := 99;
  $M.60 := 104;
  $M.61 := 116;
  $M.62 := 64;
  $M.63 := 99;
  $M.64 := 111;
  $M.65 := 100;
  $M.66 := 101;
  $M.67 := 109;
  $M.68 := 101;
  $M.69 := 114;
  $M.70 := 99;
  $M.71 := 115;
  $M.72 := 46;
  $M.73 := 99;
  $M.74 := 111;
  $M.75 := 109;
  $M.76 := 62;
  $M.77 := 0;
  $M.78 := 100;
  $M.79 := 101;
  $M.80 := 115;
  $M.81 := 99;
  $M.82 := 114;
  $M.83 := 105;
  $M.84 := 112;
  $M.85 := 116;
  $M.86 := 105;
  $M.87 := 111;
  $M.88 := 110;
  $M.89 := 61;
  $M.90 := 85;
  $M.91 := 83;
  $M.92 := 66;
  $M.93 := 32;
  $M.94 := 73;
  $M.95 := 79;
  $M.96 := 45;
  $M.97 := 87;
  $M.98 := 97;
  $M.99 := 114;
  $M.100 := 114;
  $M.101 := 105;
  $M.102 := 111;
  $M.103 := 114;
  $M.104 := 32;
  $M.105 := 100;
  $M.106 := 114;
  $M.107 := 105;
  $M.108 := 118;
  $M.109 := 101;
  $M.110 := 114;
  $M.111 := 32;
  $M.112 := 40;
  $M.113 := 76;
  $M.114 := 105;
  $M.115 := 110;
  $M.116 := 117;
  $M.117 := 120;
  $M.118 := 32;
  $M.119 := 50;
  $M.120 := 46;
  $M.121 := 54;
  $M.122 := 46;
  $M.123 := 120;
  $M.124 := 41;
  $M.125 := 0;
  $M.126 := 108;
  $M.127 := 105;
  $M.128 := 99;
  $M.129 := 101;
  $M.130 := 110;
  $M.131 := 115;
  $M.132 := 101;
  $M.133 := 61;
  $M.134 := 71;
  $M.135 := 80;
  $M.136 := 76;
  $M.137 := 0;
  $M.138 := __param_str_debug;
  $M.139 := param_ops_bool;
  $M.140 := 420;
  $M.141 := 0;
  $M.142 := debug;
  $M.143 := 112;
  $M.144 := 97;
  $M.145 := 114;
  $M.146 := 109;
  $M.147 := 116;
  $M.148 := 121;
  $M.149 := 112;
  $M.150 := 101;
  $M.151 := 61;
  $M.152 := 100;
  $M.153 := 101;
  $M.154 := 98;
  $M.155 := 117;
  $M.156 := 103;
  $M.157 := 58;
  $M.158 := 98;
  $M.159 := 111;
  $M.160 := 111;
  $M.161 := 108;
  $M.162 := 0;
  $M.163 := 112;
  $M.164 := 97;
  $M.165 := 114;
  $M.166 := 109;
  $M.167 := 61;
  $M.168 := 100;
  $M.169 := 101;
  $M.170 := 98;
  $M.171 := 117;
  $M.172 := 103;
  $M.173 := 58;
  $M.174 := 100;
  $M.175 := 101;
  $M.176 := 98;
  $M.177 := 117;
  $M.178 := 103;
  $M.179 := 61;
  $M.180 := 49;
  $M.181 := 32;
  $M.182 := 101;
  $M.183 := 110;
  $M.184 := 97;
  $M.185 := 98;
  $M.186 := 108;
  $M.187 := 101;
  $M.188 := 115;
  $M.189 := 32;
  $M.190 := 100;
  $M.191 := 101;
  $M.192 := 98;
  $M.193 := 117;
  $M.194 := 103;
  $M.195 := 103;
  $M.196 := 105;
  $M.197 := 110;
  $M.198 := 103;
  $M.199 := 32;
  $M.200 := 109;
  $M.201 := 101;
  $M.202 := 115;
  $M.203 := 115;
  $M.204 := 97;
  $M.205 := 103;
  $M.206 := 101;
  $M.207 := 115;
  $M.208 := 0;
  $M.209 := 100;
  $M.210 := 101;
  $M.211 := 98;
  $M.212 := 117;
  $M.213 := 103;
  $M.214 := 0;
  $M.1 := 0;
  call {:cexpr "debug"} boogie_si_record_i32(0);
  $M.215 := $store.ref($M.215, iowarrior_driver, .str);
  $M.216 := $store.ref($M.216, $add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(8, 1)), iowarrior_probe);
  $M.217 := $store.ref($M.217, $add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(16, 1)), iowarrior_disconnect);
  $M.218 := $store.ref($M.218, $add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(24, 1)), $0.ref);
  $M.219 := $store.ref($M.219, $add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(32, 1)), $0.ref);
  $M.220 := $store.ref($M.220, $add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(40, 1)), $0.ref);
  $M.221 := $store.ref($M.221, $add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(48, 1)), $0.ref);
  $M.222 := $store.ref($M.222, $add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(56, 1)), $0.ref);
  $M.223 := $store.ref($M.223, $add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(64, 1)), $0.ref);
  $M.224 := $store.ref($M.224, $add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(72, 1)), iowarrior_ids);
  $M.225 := $store.i32($M.225, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(80, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
  $M.226 := $store.i32($M.226, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(80, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), 0);
  $M.227 := $store.i32($M.227, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(80, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 0);
  $M.228 := $store.ref($M.228, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(80, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
  $M.229 := $store.ref($M.229, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(80, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $0.ref);
  $M.230 := $store.ref($M.230, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(80, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(8, 1)), $mul.ref(0, 8)), $0.ref);
  $M.231 := $store.ref($M.231, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(80, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(8, 1)), $mul.ref(1, 8)), $0.ref);
  $M.232 := $store.ref($M.232, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(80, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(24, 1)), $0.ref);
  $M.233 := $store.i32($M.233, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(80, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(32, 1)), 0);
  $M.234 := $store.i64($M.234, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(80, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(40, 1)), 0);
  $M.235 := $store.ref($M.235, $add.ref($add.ref($add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(80, 1)), $mul.ref(72, 1)), $mul.ref(0, 1)), $0.ref);
  $M.236 := $store.ref($M.236, $add.ref($add.ref($add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(80, 1)), $mul.ref(72, 1)), $mul.ref(8, 1)), $0.ref);
  $M.237 := $store.ref($M.237, $add.ref($add.ref($add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(168, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $0.ref);
  $M.238 := $store.ref($M.238, $add.ref($add.ref($add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(168, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), $0.ref);
  $M.239 := $store.ref($M.239, $add.ref($add.ref($add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(168, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
  $M.240 := $store.ref($M.240, $add.ref($add.ref($add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(168, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $0.ref);
  $M.241 := $store.i8($M.241, $add.ref($add.ref($add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(168, 1)), $mul.ref(0, 1)), $mul.ref(32, 1)), 0);
  $M.242 := $store.ref($M.242, $add.ref($add.ref($add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(168, 1)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
  $M.243 := $store.ref($M.243, $add.ref($add.ref($add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(168, 1)), $mul.ref(0, 1)), $mul.ref(48, 1)), $0.ref);
  $M.244 := $store.ref($M.244, $add.ref($add.ref($add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(168, 1)), $mul.ref(0, 1)), $mul.ref(56, 1)), $0.ref);
  $M.245 := $store.ref($M.245, $add.ref($add.ref($add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(168, 1)), $mul.ref(0, 1)), $mul.ref(64, 1)), $0.ref);
  $M.246 := $store.ref($M.246, $add.ref($add.ref($add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(168, 1)), $mul.ref(0, 1)), $mul.ref(72, 1)), $0.ref);
  $M.247 := $store.ref($M.247, $add.ref($add.ref($add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(168, 1)), $mul.ref(0, 1)), $mul.ref(80, 1)), $0.ref);
  $M.248 := $store.ref($M.248, $add.ref($add.ref($add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(168, 1)), $mul.ref(0, 1)), $mul.ref(88, 1)), $0.ref);
  $M.249 := $store.ref($M.249, $add.ref($add.ref($add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(168, 1)), $mul.ref(0, 1)), $mul.ref(96, 1)), $0.ref);
  $M.250 := $store.ref($M.250, $add.ref($add.ref($add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(168, 1)), $mul.ref(0, 1)), $mul.ref(104, 1)), $0.ref);
  $M.251 := $store.i32($M.251, $add.ref($add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(168, 1)), $mul.ref(112, 1)), 0);
  $M.252 := $store.i8($M.252, $add.ref($add.ref(iowarrior_driver, $mul.ref(0, 296)), $mul.ref(288, 1)), 0);
  $M.253 := 3;
  $M.254 := 1984;
  $M.255 := 5376;
  $M.256 := 0;
  $M.257 := 0;
  $M.258 := 0;
  $M.259 := 0;
  $M.260 := 0;
  $M.261 := 0;
  $M.262 := 0;
  $M.263 := 0;
  $M.264 := 0;
  $M.265 := 3;
  $M.266 := 1984;
  $M.267 := 5377;
  $M.268 := 0;
  $M.269 := 0;
  $M.270 := 0;
  $M.271 := 0;
  $M.272 := 0;
  $M.273 := 0;
  $M.274 := 0;
  $M.275 := 0;
  $M.276 := 0;
  $M.277 := 3;
  $M.278 := 1984;
  $M.279 := 5393;
  $M.280 := 0;
  $M.281 := 0;
  $M.282 := 0;
  $M.283 := 0;
  $M.284 := 0;
  $M.285 := 0;
  $M.286 := 0;
  $M.287 := 0;
  $M.288 := 0;
  $M.289 := 3;
  $M.290 := 1984;
  $M.291 := 5394;
  $M.292 := 0;
  $M.293 := 0;
  $M.294 := 0;
  $M.295 := 0;
  $M.296 := 0;
  $M.297 := 0;
  $M.298 := 0;
  $M.299 := 0;
  $M.300 := 0;
  $M.301 := 3;
  $M.302 := 1984;
  $M.303 := 5379;
  $M.304 := 0;
  $M.305 := 0;
  $M.306 := 0;
  $M.307 := 0;
  $M.308 := 0;
  $M.309 := 0;
  $M.310 := 0;
  $M.311 := 0;
  $M.312 := 0;
  $M.0 := $store.i32($M.0, iowarrior_open_disc_lock, 1);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_open_disc_lock, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_open_disc_lock, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $sub.i32(0, 559067475));
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_open_disc_lock, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), $sub.i32(0, 1));
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_open_disc_lock, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $i2p.i64.ref($sub.i64(0, 1)));
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_open_disc_lock, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_open_disc_lock, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(8, 1)), $mul.ref(0, 8)), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_open_disc_lock, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(8, 1)), $mul.ref(1, 8)), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_open_disc_lock, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(24, 1)), .str.8);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_open_disc_lock, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(32, 1)), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_open_disc_lock, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(40, 1)), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(iowarrior_open_disc_lock, $mul.ref(0, 168)), $mul.ref(80, 1)), $mul.ref(0, 1)), $add.ref(iowarrior_open_disc_lock, $mul.ref(80, 1)));
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(iowarrior_open_disc_lock, $mul.ref(0, 168)), $mul.ref(80, 1)), $mul.ref(8, 1)), $add.ref(iowarrior_open_disc_lock, $mul.ref(80, 1)));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(iowarrior_open_disc_lock, $mul.ref(0, 168)), $mul.ref(96, 1)), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(iowarrior_open_disc_lock, $mul.ref(0, 168)), $mul.ref(104, 1)), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(iowarrior_open_disc_lock, $mul.ref(0, 168)), $mul.ref(112, 1)), iowarrior_open_disc_lock);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(iowarrior_open_disc_lock, $mul.ref(0, 168)), $mul.ref(120, 1)), $mul.ref(0, 1)), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(iowarrior_open_disc_lock, $mul.ref(0, 168)), $mul.ref(120, 1)), $mul.ref(8, 1)), $mul.ref(0, 8)), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(iowarrior_open_disc_lock, $mul.ref(0, 168)), $mul.ref(120, 1)), $mul.ref(8, 1)), $mul.ref(1, 8)), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(iowarrior_open_disc_lock, $mul.ref(0, 168)), $mul.ref(120, 1)), $mul.ref(24, 1)), .str.9);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(iowarrior_open_disc_lock, $mul.ref(0, 168)), $mul.ref(120, 1)), $mul.ref(32, 1)), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(iowarrior_open_disc_lock, $mul.ref(0, 168)), $mul.ref(120, 1)), $mul.ref(40, 1)), 0);
  $M.313 := $store.ref($M.313, iowarrior_class, .str.38);
  $M.314 := $store.ref($M.314, $add.ref($add.ref(iowarrior_class, $mul.ref(0, 32)), $mul.ref(8, 1)), iowarrior_devnode);
  $M.315 := $store.ref($M.315, $add.ref($add.ref(iowarrior_class, $mul.ref(0, 32)), $mul.ref(16, 1)), iowarrior_fops);
  $M.316 := $store.i32($M.316, $add.ref($add.ref(iowarrior_class, $mul.ref(0, 32)), $mul.ref(24, 1)), 0);
  $M.317 := __this_module;
  $M.318 := noop_llseek;
  $M.319 := iowarrior_read;
  $M.320 := iowarrior_write;
  $M.321 := $0.ref;
  $M.322 := $0.ref;
  $M.323 := $0.ref;
  $M.324 := iowarrior_poll;
  $M.325 := iowarrior_ioctl;
  $M.326 := $0.ref;
  $M.327 := $0.ref;
  $M.328 := iowarrior_open;
  $M.329 := $0.ref;
  $M.330 := iowarrior_release;
  $M.331 := $0.ref;
  $M.332 := $0.ref;
  $M.333 := $0.ref;
  $M.334 := $0.ref;
  $M.335 := $0.ref;
  $M.336 := $0.ref;
  $M.337 := $0.ref;
  $M.338 := $0.ref;
  $M.339 := $0.ref;
  $M.340 := $0.ref;
  $M.341 := $0.ref;
  $M.342 := $0.ref;
  $M.0 := $store.i32($M.0, iowarrior_mutex, 1);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_mutex, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_mutex, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $sub.i32(0, 559067475));
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_mutex, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), $sub.i32(0, 1));
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_mutex, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $i2p.i64.ref($sub.i64(0, 1)));
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_mutex, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_mutex, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(8, 1)), $mul.ref(0, 8)), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_mutex, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(8, 1)), $mul.ref(1, 8)), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_mutex, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(24, 1)), .str.6);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_mutex, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(32, 1)), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(iowarrior_mutex, $mul.ref(0, 168)), $mul.ref(8, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(40, 1)), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(iowarrior_mutex, $mul.ref(0, 168)), $mul.ref(80, 1)), $mul.ref(0, 1)), $add.ref(iowarrior_mutex, $mul.ref(80, 1)));
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(iowarrior_mutex, $mul.ref(0, 168)), $mul.ref(80, 1)), $mul.ref(8, 1)), $add.ref(iowarrior_mutex, $mul.ref(80, 1)));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(iowarrior_mutex, $mul.ref(0, 168)), $mul.ref(96, 1)), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(iowarrior_mutex, $mul.ref(0, 168)), $mul.ref(104, 1)), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(iowarrior_mutex, $mul.ref(0, 168)), $mul.ref(112, 1)), iowarrior_mutex);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(iowarrior_mutex, $mul.ref(0, 168)), $mul.ref(120, 1)), $mul.ref(0, 1)), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(iowarrior_mutex, $mul.ref(0, 168)), $mul.ref(120, 1)), $mul.ref(8, 1)), $mul.ref(0, 8)), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(iowarrior_mutex, $mul.ref(0, 168)), $mul.ref(120, 1)), $mul.ref(8, 1)), $mul.ref(1, 8)), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(iowarrior_mutex, $mul.ref(0, 168)), $mul.ref(120, 1)), $mul.ref(24, 1)), .str.7);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(iowarrior_mutex, $mul.ref(0, 168)), $mul.ref(120, 1)), $mul.ref(32, 1)), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(iowarrior_mutex, $mul.ref(0, 168)), $mul.ref(120, 1)), $mul.ref(40, 1)), 0);
  $M.0 := $store.i8($M.0, .str.6, 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.6, $mul.ref(0, 26)), $mul.ref(1, 1)), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.6, $mul.ref(0, 26)), $mul.ref(2, 1)), 119);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.6, $mul.ref(0, 26)), $mul.ref(3, 1)), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.6, $mul.ref(0, 26)), $mul.ref(4, 1)), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.6, $mul.ref(0, 26)), $mul.ref(5, 1)), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.6, $mul.ref(0, 26)), $mul.ref(6, 1)), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.6, $mul.ref(0, 26)), $mul.ref(7, 1)), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.6, $mul.ref(0, 26)), $mul.ref(8, 1)), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.6, $mul.ref(0, 26)), $mul.ref(9, 1)), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.6, $mul.ref(0, 26)), $mul.ref(10, 1)), 109);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.6, $mul.ref(0, 26)), $mul.ref(11, 1)), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.6, $mul.ref(0, 26)), $mul.ref(12, 1)), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.6, $mul.ref(0, 26)), $mul.ref(13, 1)), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.6, $mul.ref(0, 26)), $mul.ref(14, 1)), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.6, $mul.ref(0, 26)), $mul.ref(15, 1)), 46);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.6, $mul.ref(0, 26)), $mul.ref(16, 1)), 119);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.6, $mul.ref(0, 26)), $mul.ref(17, 1)), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.6, $mul.ref(0, 26)), $mul.ref(18, 1)), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.6, $mul.ref(0, 26)), $mul.ref(19, 1)), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.6, $mul.ref(0, 26)), $mul.ref(20, 1)), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.6, $mul.ref(0, 26)), $mul.ref(21, 1)), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.6, $mul.ref(0, 26)), $mul.ref(22, 1)), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.6, $mul.ref(0, 26)), $mul.ref(23, 1)), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.6, $mul.ref(0, 26)), $mul.ref(24, 1)), 107);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.6, $mul.ref(0, 26)), $mul.ref(25, 1)), 0);
  $M.0 := $store.i8($M.0, .str.7, 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.7, $mul.ref(0, 16)), $mul.ref(1, 1)), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.7, $mul.ref(0, 16)), $mul.ref(2, 1)), 119);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.7, $mul.ref(0, 16)), $mul.ref(3, 1)), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.7, $mul.ref(0, 16)), $mul.ref(4, 1)), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.7, $mul.ref(0, 16)), $mul.ref(5, 1)), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.7, $mul.ref(0, 16)), $mul.ref(6, 1)), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.7, $mul.ref(0, 16)), $mul.ref(7, 1)), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.7, $mul.ref(0, 16)), $mul.ref(8, 1)), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.7, $mul.ref(0, 16)), $mul.ref(9, 1)), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.7, $mul.ref(0, 16)), $mul.ref(10, 1)), 109);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.7, $mul.ref(0, 16)), $mul.ref(11, 1)), 117);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.7, $mul.ref(0, 16)), $mul.ref(12, 1)), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.7, $mul.ref(0, 16)), $mul.ref(13, 1)), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.7, $mul.ref(0, 16)), $mul.ref(14, 1)), 120);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.7, $mul.ref(0, 16)), $mul.ref(15, 1)), 0);
  $M.0 := $store.i8($M.0, .str.8, 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(1, 1)), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(2, 1)), 119);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(3, 1)), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(4, 1)), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(5, 1)), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(6, 1)), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(7, 1)), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(8, 1)), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(9, 1)), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(10, 1)), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(11, 1)), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(12, 1)), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(13, 1)), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(14, 1)), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(15, 1)), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(16, 1)), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(17, 1)), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(18, 1)), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(19, 1)), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(20, 1)), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(21, 1)), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(22, 1)), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(23, 1)), 107);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(24, 1)), 46);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(25, 1)), 119);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(26, 1)), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(27, 1)), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(28, 1)), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(29, 1)), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(30, 1)), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(31, 1)), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(32, 1)), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(33, 1)), 107);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.8, $mul.ref(0, 35)), $mul.ref(34, 1)), 0);
  $M.0 := $store.i8($M.0, .str.9, 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.9, $mul.ref(0, 25)), $mul.ref(1, 1)), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.9, $mul.ref(0, 25)), $mul.ref(2, 1)), 119);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.9, $mul.ref(0, 25)), $mul.ref(3, 1)), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.9, $mul.ref(0, 25)), $mul.ref(4, 1)), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.9, $mul.ref(0, 25)), $mul.ref(5, 1)), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.9, $mul.ref(0, 25)), $mul.ref(6, 1)), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.9, $mul.ref(0, 25)), $mul.ref(7, 1)), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.9, $mul.ref(0, 25)), $mul.ref(8, 1)), 114);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.9, $mul.ref(0, 25)), $mul.ref(9, 1)), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.9, $mul.ref(0, 25)), $mul.ref(10, 1)), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.9, $mul.ref(0, 25)), $mul.ref(11, 1)), 112);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.9, $mul.ref(0, 25)), $mul.ref(12, 1)), 101);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.9, $mul.ref(0, 25)), $mul.ref(13, 1)), 110);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.9, $mul.ref(0, 25)), $mul.ref(14, 1)), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.9, $mul.ref(0, 25)), $mul.ref(15, 1)), 100);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.9, $mul.ref(0, 25)), $mul.ref(16, 1)), 105);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.9, $mul.ref(0, 25)), $mul.ref(17, 1)), 115);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.9, $mul.ref(0, 25)), $mul.ref(18, 1)), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.9, $mul.ref(0, 25)), $mul.ref(19, 1)), 95);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.9, $mul.ref(0, 25)), $mul.ref(20, 1)), 108);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.9, $mul.ref(0, 25)), $mul.ref(21, 1)), 111);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.9, $mul.ref(0, 25)), $mul.ref(22, 1)), 99);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.9, $mul.ref(0, 25)), $mul.ref(23, 1)), 107);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.9, $mul.ref(0, 25)), $mul.ref(24, 1)), 0);
  $M.343 := $store.i8($M.343, __key___7, 0);
  $M.344 := $store.i8($M.344, $add.ref($add.ref($add.ref($add.ref(__key___7, $mul.ref(0, 8)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
  $M.345 := $store.i8($M.345, $add.ref($add.ref($add.ref($add.ref(__key___7, $mul.ref(0, 8)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
  $M.346 := $store.i8($M.346, $add.ref($add.ref($add.ref($add.ref(__key___7, $mul.ref(0, 8)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
  $M.347 := $store.i8($M.347, $add.ref($add.ref($add.ref($add.ref(__key___7, $mul.ref(0, 8)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
  $M.348 := $store.i8($M.348, $add.ref($add.ref($add.ref($add.ref(__key___7, $mul.ref(0, 8)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
  $M.349 := $store.i8($M.349, $add.ref($add.ref($add.ref($add.ref(__key___7, $mul.ref(0, 8)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
  $M.350 := $store.i8($M.350, $add.ref($add.ref($add.ref($add.ref(__key___7, $mul.ref(0, 8)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
  $M.351 := $store.i8($M.351, __key___8, 0);
  $M.352 := $store.i8($M.352, $add.ref($add.ref($add.ref($add.ref(__key___8, $mul.ref(0, 8)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
  $M.353 := $store.i8($M.353, $add.ref($add.ref($add.ref($add.ref(__key___8, $mul.ref(0, 8)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
  $M.354 := $store.i8($M.354, $add.ref($add.ref($add.ref($add.ref(__key___8, $mul.ref(0, 8)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
  $M.355 := $store.i8($M.355, $add.ref($add.ref($add.ref($add.ref(__key___8, $mul.ref(0, 8)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
  $M.356 := $store.i8($M.356, $add.ref($add.ref($add.ref($add.ref(__key___8, $mul.ref(0, 8)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
  $M.357 := $store.i8($M.357, $add.ref($add.ref($add.ref($add.ref(__key___8, $mul.ref(0, 8)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
  $M.358 := $store.i8($M.358, $add.ref($add.ref($add.ref($add.ref(__key___8, $mul.ref(0, 8)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
  $M.359 := $store.i8($M.359, __key___9, 0);
  $M.360 := $store.i8($M.360, $add.ref($add.ref($add.ref($add.ref(__key___9, $mul.ref(0, 8)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
  $M.361 := $store.i8($M.361, $add.ref($add.ref($add.ref($add.ref(__key___9, $mul.ref(0, 8)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
  $M.362 := $store.i8($M.362, $add.ref($add.ref($add.ref($add.ref(__key___9, $mul.ref(0, 8)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
  $M.363 := $store.i8($M.363, $add.ref($add.ref($add.ref($add.ref(__key___9, $mul.ref(0, 8)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
  $M.364 := $store.i8($M.364, $add.ref($add.ref($add.ref($add.ref(__key___9, $mul.ref(0, 8)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
  $M.365 := $store.i8($M.365, $add.ref($add.ref($add.ref($add.ref(__key___9, $mul.ref(0, 8)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
  $M.366 := $store.i8($M.366, $add.ref($add.ref($add.ref($add.ref(__key___9, $mul.ref(0, 8)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
  $M.359 := $store.i8($M.359, __key___10, 0);
  $M.360 := $store.i8($M.360, $add.ref($add.ref($add.ref($add.ref(__key___10, $mul.ref(0, 8)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
  $M.361 := $store.i8($M.361, $add.ref($add.ref($add.ref($add.ref(__key___10, $mul.ref(0, 8)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
  $M.362 := $store.i8($M.362, $add.ref($add.ref($add.ref($add.ref(__key___10, $mul.ref(0, 8)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
  $M.363 := $store.i8($M.363, $add.ref($add.ref($add.ref($add.ref(__key___10, $mul.ref(0, 8)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
  $M.364 := $store.i8($M.364, $add.ref($add.ref($add.ref($add.ref(__key___10, $mul.ref(0, 8)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
  $M.365 := $store.i8($M.365, $add.ref($add.ref($add.ref($add.ref(__key___10, $mul.ref(0, 8)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
  $M.366 := $store.i8($M.366, $add.ref($add.ref($add.ref($add.ref(__key___10, $mul.ref(0, 8)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
  $M.23 := 0;
  call {:cexpr "res_iowarrior_open_9"} boogie_si_record_i32(0);
  $M.24 := 0;
  call {:cexpr "res_iowarrior_read_6"} boogie_si_record_i64(0);
  $M.25 := 0;
  call {:cexpr "res_iowarrior_write_7"} boogie_si_record_i64(0);
  $M.26 := 0;
  call {:cexpr "res_iowarrior_probe_13"} boogie_si_record_i32(0);
  $M.367 := .str.1.65;
  $M.368 := 0;
  call {:cexpr "errno_global"} boogie_si_record_i32(0);
  $exn := false;
  return;
}
const devirtbounce: ref;
axiom (devirtbounce == $sub.ref(0, 220254));
procedure  devirtbounce(funcPtr: ref, arg: ref)
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.1: ref;
axiom (devirtbounce.1 == $sub.ref(0, 221286));
procedure  devirtbounce.1(funcPtr: ref, arg: ref, arg1: ref, arg2: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.2: ref;
axiom (devirtbounce.2 == $sub.ref(0, 222318));
procedure  devirtbounce.2(funcPtr: ref, arg: ref, arg1: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.3: ref;
axiom (devirtbounce.3 == $sub.ref(0, 223350));
procedure  devirtbounce.3(funcPtr: ref, arg: ref, arg1: i32)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i32;
  var $i3: i1;
  var $i4: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i4 := $eq.ref(__builtinx_expect, $p0);
  assume {:branchcond $i4} true;
  goto $bb3, $bb5;
$bb2:
  assume ($i3 == 1);
  call $i1 := __builtinx_object_size();
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume ($i4 == 1);
  call $i2 := __builtinx_expect();
  $r := $i2;
  $exn := false;
  return;
$bb4:
  assume !(($i3 == 1));
  assume false;
$bb5:
  assume !(($i4 == 1));
  $i3 := $eq.ref(__builtinx_object_size, $p0);
  assume {:branchcond $i3} true;
  goto $bb2, $bb4;
}
procedure  $memcpy.i8(M.dst: [ref] i8, M.src: [ref] i8, dst: ref, src: ref, len: ref, isvolatile: bool) returns (M.ret: [ref] i8)
{
  assume (forall x: ref :: $sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len)) ==> M.ret[x] == M.src[$add.ref($sub.ref(src,dst),x)]);
  assume (forall x: ref :: $slt.ref.bool(x,dst) ==> M.ret[x] == M.dst[x]);
  assume (forall x: ref :: $sle.ref.bool($add.ref(dst,len),x) ==> M.ret[x] == M.dst[x]);
}

procedure  $memset.i8(M: [ref] i8, dst: ref, val: i8, len: ref, isvolatile: bool) returns (M.ret: [ref] i8)
{
  assume (forall x: ref :: $sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len)) ==> M.ret[x] == val);
  assume (forall x: ref :: $slt.ref.bool(x,dst) ==> M.ret[x] == M[x]);
  assume (forall x: ref :: $sle.ref.bool($add.ref(dst,len),x) ==> M.ret[x] == M[x]);
}

const $u0: i32;
const $u1: ref;
const $u10: ref;
const $u11: ref;
const $u12: ref;
const $u13: ref;
const $u2: ref;
const $u3: ref;
const $u4: ref;
const $u5: ref;
const $u6: ref;
const $u7: i64;
const $u8: ref;
const $u9: ref;
procedure  boogie_si_record_i16(x: i16);
procedure  boogie_si_record_i32(x: i32);
procedure  boogie_si_record_i64(x: i64);
procedure  boogie_si_record_i8(x: i8);
procedure  boogie_si_record_ref(x: ref);
procedure  $initialize()
{
  call __SMACK_static_init();
  call __SMACK_init_func_memory_model();
  return;
}
