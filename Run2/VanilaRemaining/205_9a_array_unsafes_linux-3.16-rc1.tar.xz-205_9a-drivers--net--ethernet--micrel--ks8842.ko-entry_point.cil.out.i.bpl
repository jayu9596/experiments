// generated by SMACK version 2.4.1 for svcomp
// via /usr/local/bin/smack /proj/SMACK/SMACKBenchResults/data/sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out.i -x svcomp --verifier svcomp -t -q -bpl 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out.i.bpl

// Basic types
type i1 = int;
type i5 = int;
type i6 = int;
type i8 = int;
type i16 = int;
type i24 = int;
type i32 = int;
type i40 = int;
type i48 = int;
type i56 = int;
type i64 = int;
type i80 = int;
type i88 = int;
type i96 = int;
type i128 = int;
type i160 = int;
type i256 = int;
type ref = i64;
type float;

// Basic constants
const $0: i32;
axiom ($0 == 0);
const $1: i32;
axiom ($1 == 1);
const $0.ref: ref;
axiom ($0.ref == 0);
const $1.ref: ref;
axiom ($1.ref == 1);
const $1024.ref: ref;
axiom ($1024.ref == 1024);
// Memory model constants
const $GLOBALS_BOTTOM: ref;
const $EXTERNS_BOTTOM: ref;
const $MALLOC_TOP: ref;

// Memory maps (64 regions)
var $M.0: i32;
var $M.1: [ref] i8;
var $M.2: [ref] ref;
var $M.3: [ref] ref;
var $M.4: [ref] ref;
var $M.5: [ref] ref;
var $M.6: [ref] i24;
var $M.7: [ref] i8;
var $M.8: [ref] i8;
var $M.9: i32;
var $M.10: i32;
var $M.11: ref;
var $M.12: i32;
var $M.13: i32;
var $M.14: ref;
var $M.15: i32;
var $M.16: i32;
var $M.17: ref;
var $M.18: i32;
var $M.19: i32;
var $M.20: ref;
var $M.21: ref;
var $M.22: ref;
var $M.23: i32;
var $M.24: i32;
var $M.25: i32;
var $M.26: i32;
var $M.27: i32;
var $M.28: i32;
var $M.29: i32;
var $M.30: i32;
var $M.31: i32;
var $M.32: i32;
var $M.33: ref;
var $M.34: [ref] i8;
var $M.35: i32;
var $M.36: [ref] ref;
var $M.37: ref;
var $M.38: ref;
var $M.39: [ref] i32;
var $M.40: [ref] ref;
var $M.41: [ref] ref;
var $M.42: [ref] ref;
var $M.43: [ref] ref;
var $M.44: [ref] ref;
var $M.45: [ref] ref;
var $M.46: [ref] ref;
var $M.47: [ref] ref;
var $M.48: [ref] ref;
var $M.49: [ref] i8;
var $M.50: [ref] ref;
var $M.51: [ref] ref;
var $M.52: [ref] ref;
var $M.53: [ref] ref;
var $M.54: [ref] ref;
var $M.55: [ref] ref;
var $M.56: [ref] ref;
var $M.57: [ref] ref;
var $M.58: [ref] ref;
var $M.59: [ref] ref;
var $M.60: [ref] ref;
var $M.61: [ref] i8;
var $M.62: ref;
var $M.63: i32;

// Memory address bounds
axiom ($GLOBALS_BOTTOM == $sub.ref(0, 340401));
axiom ($EXTERNS_BOTTOM == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32800)));
axiom ($MALLOC_TOP == 9223372036854775807);
function {:inline} $isExternal(p: ref) returns (bool) { $slt.ref.bool(p, $EXTERNS_BOTTOM) }

// SMT bit-vector/integer conversion
function {:builtin "(_ int2bv 64)"} $int2bv.64(i: i64) returns (bv64);
function {:builtin "bv2nat"} $bv2int.64(i: bv64) returns (i64);

// Integer arithmetic operations
function {:inline} $add.i1(i1: i1, i2: i1) returns (i1) { (i1 + i2) }
function {:inline} $add.i5(i1: i5, i2: i5) returns (i5) { (i1 + i2) }
function {:inline} $add.i6(i1: i6, i2: i6) returns (i6) { (i1 + i2) }
function {:inline} $add.i8(i1: i8, i2: i8) returns (i8) { (i1 + i2) }
function {:inline} $add.i16(i1: i16, i2: i16) returns (i16) { (i1 + i2) }
function {:inline} $add.i24(i1: i24, i2: i24) returns (i24) { (i1 + i2) }
function {:inline} $add.i32(i1: i32, i2: i32) returns (i32) { (i1 + i2) }
function {:inline} $add.i40(i1: i40, i2: i40) returns (i40) { (i1 + i2) }
function {:inline} $add.i48(i1: i48, i2: i48) returns (i48) { (i1 + i2) }
function {:inline} $add.i56(i1: i56, i2: i56) returns (i56) { (i1 + i2) }
function {:inline} $add.i64(i1: i64, i2: i64) returns (i64) { (i1 + i2) }
function {:inline} $add.i80(i1: i80, i2: i80) returns (i80) { (i1 + i2) }
function {:inline} $add.i88(i1: i88, i2: i88) returns (i88) { (i1 + i2) }
function {:inline} $add.i96(i1: i96, i2: i96) returns (i96) { (i1 + i2) }
function {:inline} $add.i128(i1: i128, i2: i128) returns (i128) { (i1 + i2) }
function {:inline} $add.i160(i1: i160, i2: i160) returns (i160) { (i1 + i2) }
function {:inline} $add.i256(i1: i256, i2: i256) returns (i256) { (i1 + i2) }
function {:inline} $sub.i1(i1: i1, i2: i1) returns (i1) { (i1 - i2) }
function {:inline} $sub.i5(i1: i5, i2: i5) returns (i5) { (i1 - i2) }
function {:inline} $sub.i6(i1: i6, i2: i6) returns (i6) { (i1 - i2) }
function {:inline} $sub.i8(i1: i8, i2: i8) returns (i8) { (i1 - i2) }
function {:inline} $sub.i16(i1: i16, i2: i16) returns (i16) { (i1 - i2) }
function {:inline} $sub.i24(i1: i24, i2: i24) returns (i24) { (i1 - i2) }
function {:inline} $sub.i32(i1: i32, i2: i32) returns (i32) { (i1 - i2) }
function {:inline} $sub.i40(i1: i40, i2: i40) returns (i40) { (i1 - i2) }
function {:inline} $sub.i48(i1: i48, i2: i48) returns (i48) { (i1 - i2) }
function {:inline} $sub.i56(i1: i56, i2: i56) returns (i56) { (i1 - i2) }
function {:inline} $sub.i64(i1: i64, i2: i64) returns (i64) { (i1 - i2) }
function {:inline} $sub.i80(i1: i80, i2: i80) returns (i80) { (i1 - i2) }
function {:inline} $sub.i88(i1: i88, i2: i88) returns (i88) { (i1 - i2) }
function {:inline} $sub.i96(i1: i96, i2: i96) returns (i96) { (i1 - i2) }
function {:inline} $sub.i128(i1: i128, i2: i128) returns (i128) { (i1 - i2) }
function {:inline} $sub.i160(i1: i160, i2: i160) returns (i160) { (i1 - i2) }
function {:inline} $sub.i256(i1: i256, i2: i256) returns (i256) { (i1 - i2) }
function {:inline} $mul.i1(i1: i1, i2: i1) returns (i1) { (i1 * i2) }
function {:inline} $mul.i5(i1: i5, i2: i5) returns (i5) { (i1 * i2) }
function {:inline} $mul.i6(i1: i6, i2: i6) returns (i6) { (i1 * i2) }
function {:inline} $mul.i8(i1: i8, i2: i8) returns (i8) { (i1 * i2) }
function {:inline} $mul.i16(i1: i16, i2: i16) returns (i16) { (i1 * i2) }
function {:inline} $mul.i24(i1: i24, i2: i24) returns (i24) { (i1 * i2) }
function {:inline} $mul.i32(i1: i32, i2: i32) returns (i32) { (i1 * i2) }
function {:inline} $mul.i40(i1: i40, i2: i40) returns (i40) { (i1 * i2) }
function {:inline} $mul.i48(i1: i48, i2: i48) returns (i48) { (i1 * i2) }
function {:inline} $mul.i56(i1: i56, i2: i56) returns (i56) { (i1 * i2) }
function {:inline} $mul.i64(i1: i64, i2: i64) returns (i64) { (i1 * i2) }
function {:inline} $mul.i80(i1: i80, i2: i80) returns (i80) { (i1 * i2) }
function {:inline} $mul.i88(i1: i88, i2: i88) returns (i88) { (i1 * i2) }
function {:inline} $mul.i96(i1: i96, i2: i96) returns (i96) { (i1 * i2) }
function {:inline} $mul.i128(i1: i128, i2: i128) returns (i128) { (i1 * i2) }
function {:inline} $mul.i160(i1: i160, i2: i160) returns (i160) { (i1 * i2) }
function {:inline} $mul.i256(i1: i256, i2: i256) returns (i256) { (i1 * i2) }
function {:builtin "div"} $sdiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "div"} $sdiv.i5(i1: i5, i2: i5) returns (i5);
function {:builtin "div"} $sdiv.i6(i1: i6, i2: i6) returns (i6);
function {:builtin "div"} $sdiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $sdiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $sdiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $sdiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $sdiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $sdiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $sdiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $sdiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $sdiv.i80(i1: i80, i2: i80) returns (i80);
function {:builtin "div"} $sdiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $sdiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $sdiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $sdiv.i160(i1: i160, i2: i160) returns (i160);
function {:builtin "div"} $sdiv.i256(i1: i256, i2: i256) returns (i256);
function {:builtin "mod"} $smod.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "mod"} $smod.i5(i1: i5, i2: i5) returns (i5);
function {:builtin "mod"} $smod.i6(i1: i6, i2: i6) returns (i6);
function {:builtin "mod"} $smod.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "mod"} $smod.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "mod"} $smod.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "mod"} $smod.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "mod"} $smod.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "mod"} $smod.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "mod"} $smod.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "mod"} $smod.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "mod"} $smod.i80(i1: i80, i2: i80) returns (i80);
function {:builtin "mod"} $smod.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "mod"} $smod.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "mod"} $smod.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "mod"} $smod.i160(i1: i160, i2: i160) returns (i160);
function {:builtin "mod"} $smod.i256(i1: i256, i2: i256) returns (i256);
function {:builtin "div"} $udiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "div"} $udiv.i5(i1: i5, i2: i5) returns (i5);
function {:builtin "div"} $udiv.i6(i1: i6, i2: i6) returns (i6);
function {:builtin "div"} $udiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $udiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $udiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $udiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $udiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $udiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $udiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $udiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $udiv.i80(i1: i80, i2: i80) returns (i80);
function {:builtin "div"} $udiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $udiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $udiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $udiv.i160(i1: i160, i2: i160) returns (i160);
function {:builtin "div"} $udiv.i256(i1: i256, i2: i256) returns (i256);
function {:inline} $srem.i1(i1: i1, i2: i1) returns (i1) { (if ($ne.i1.bool($smod.i1(i1, i2), 0) && $slt.i1.bool(i1, 0)) then $sub.i1($smod.i1(i1, i2), $smax.i1(i2, $sub.i1(0, i2))) else $smod.i1(i1, i2)) }
function {:inline} $srem.i5(i1: i5, i2: i5) returns (i5) { (if ($ne.i5.bool($smod.i5(i1, i2), 0) && $slt.i5.bool(i1, 0)) then $sub.i5($smod.i5(i1, i2), $smax.i5(i2, $sub.i5(0, i2))) else $smod.i5(i1, i2)) }
function {:inline} $srem.i6(i1: i6, i2: i6) returns (i6) { (if ($ne.i6.bool($smod.i6(i1, i2), 0) && $slt.i6.bool(i1, 0)) then $sub.i6($smod.i6(i1, i2), $smax.i6(i2, $sub.i6(0, i2))) else $smod.i6(i1, i2)) }
function {:inline} $srem.i8(i1: i8, i2: i8) returns (i8) { (if ($ne.i8.bool($smod.i8(i1, i2), 0) && $slt.i8.bool(i1, 0)) then $sub.i8($smod.i8(i1, i2), $smax.i8(i2, $sub.i8(0, i2))) else $smod.i8(i1, i2)) }
function {:inline} $srem.i16(i1: i16, i2: i16) returns (i16) { (if ($ne.i16.bool($smod.i16(i1, i2), 0) && $slt.i16.bool(i1, 0)) then $sub.i16($smod.i16(i1, i2), $smax.i16(i2, $sub.i16(0, i2))) else $smod.i16(i1, i2)) }
function {:inline} $srem.i24(i1: i24, i2: i24) returns (i24) { (if ($ne.i24.bool($smod.i24(i1, i2), 0) && $slt.i24.bool(i1, 0)) then $sub.i24($smod.i24(i1, i2), $smax.i24(i2, $sub.i24(0, i2))) else $smod.i24(i1, i2)) }
function {:inline} $srem.i32(i1: i32, i2: i32) returns (i32) { (if ($ne.i32.bool($smod.i32(i1, i2), 0) && $slt.i32.bool(i1, 0)) then $sub.i32($smod.i32(i1, i2), $smax.i32(i2, $sub.i32(0, i2))) else $smod.i32(i1, i2)) }
function {:inline} $srem.i40(i1: i40, i2: i40) returns (i40) { (if ($ne.i40.bool($smod.i40(i1, i2), 0) && $slt.i40.bool(i1, 0)) then $sub.i40($smod.i40(i1, i2), $smax.i40(i2, $sub.i40(0, i2))) else $smod.i40(i1, i2)) }
function {:inline} $srem.i48(i1: i48, i2: i48) returns (i48) { (if ($ne.i48.bool($smod.i48(i1, i2), 0) && $slt.i48.bool(i1, 0)) then $sub.i48($smod.i48(i1, i2), $smax.i48(i2, $sub.i48(0, i2))) else $smod.i48(i1, i2)) }
function {:inline} $srem.i56(i1: i56, i2: i56) returns (i56) { (if ($ne.i56.bool($smod.i56(i1, i2), 0) && $slt.i56.bool(i1, 0)) then $sub.i56($smod.i56(i1, i2), $smax.i56(i2, $sub.i56(0, i2))) else $smod.i56(i1, i2)) }
function {:inline} $srem.i64(i1: i64, i2: i64) returns (i64) { (if ($ne.i64.bool($smod.i64(i1, i2), 0) && $slt.i64.bool(i1, 0)) then $sub.i64($smod.i64(i1, i2), $smax.i64(i2, $sub.i64(0, i2))) else $smod.i64(i1, i2)) }
function {:inline} $srem.i80(i1: i80, i2: i80) returns (i80) { (if ($ne.i80.bool($smod.i80(i1, i2), 0) && $slt.i80.bool(i1, 0)) then $sub.i80($smod.i80(i1, i2), $smax.i80(i2, $sub.i80(0, i2))) else $smod.i80(i1, i2)) }
function {:inline} $srem.i88(i1: i88, i2: i88) returns (i88) { (if ($ne.i88.bool($smod.i88(i1, i2), 0) && $slt.i88.bool(i1, 0)) then $sub.i88($smod.i88(i1, i2), $smax.i88(i2, $sub.i88(0, i2))) else $smod.i88(i1, i2)) }
function {:inline} $srem.i96(i1: i96, i2: i96) returns (i96) { (if ($ne.i96.bool($smod.i96(i1, i2), 0) && $slt.i96.bool(i1, 0)) then $sub.i96($smod.i96(i1, i2), $smax.i96(i2, $sub.i96(0, i2))) else $smod.i96(i1, i2)) }
function {:inline} $srem.i128(i1: i128, i2: i128) returns (i128) { (if ($ne.i128.bool($smod.i128(i1, i2), 0) && $slt.i128.bool(i1, 0)) then $sub.i128($smod.i128(i1, i2), $smax.i128(i2, $sub.i128(0, i2))) else $smod.i128(i1, i2)) }
function {:inline} $srem.i160(i1: i160, i2: i160) returns (i160) { (if ($ne.i160.bool($smod.i160(i1, i2), 0) && $slt.i160.bool(i1, 0)) then $sub.i160($smod.i160(i1, i2), $smax.i160(i2, $sub.i160(0, i2))) else $smod.i160(i1, i2)) }
function {:inline} $srem.i256(i1: i256, i2: i256) returns (i256) { (if ($ne.i256.bool($smod.i256(i1, i2), 0) && $slt.i256.bool(i1, 0)) then $sub.i256($smod.i256(i1, i2), $smax.i256(i2, $sub.i256(0, i2))) else $smod.i256(i1, i2)) }
function {:inline} $urem.i1(i1: i1, i2: i1) returns (i1) { $smod.i1(i1, i2) }
function {:inline} $urem.i5(i1: i5, i2: i5) returns (i5) { $smod.i5(i1, i2) }
function {:inline} $urem.i6(i1: i6, i2: i6) returns (i6) { $smod.i6(i1, i2) }
function {:inline} $urem.i8(i1: i8, i2: i8) returns (i8) { $smod.i8(i1, i2) }
function {:inline} $urem.i16(i1: i16, i2: i16) returns (i16) { $smod.i16(i1, i2) }
function {:inline} $urem.i24(i1: i24, i2: i24) returns (i24) { $smod.i24(i1, i2) }
function {:inline} $urem.i32(i1: i32, i2: i32) returns (i32) { $smod.i32(i1, i2) }
function {:inline} $urem.i40(i1: i40, i2: i40) returns (i40) { $smod.i40(i1, i2) }
function {:inline} $urem.i48(i1: i48, i2: i48) returns (i48) { $smod.i48(i1, i2) }
function {:inline} $urem.i56(i1: i56, i2: i56) returns (i56) { $smod.i56(i1, i2) }
function {:inline} $urem.i64(i1: i64, i2: i64) returns (i64) { $smod.i64(i1, i2) }
function {:inline} $urem.i80(i1: i80, i2: i80) returns (i80) { $smod.i80(i1, i2) }
function {:inline} $urem.i88(i1: i88, i2: i88) returns (i88) { $smod.i88(i1, i2) }
function {:inline} $urem.i96(i1: i96, i2: i96) returns (i96) { $smod.i96(i1, i2) }
function {:inline} $urem.i128(i1: i128, i2: i128) returns (i128) { $smod.i128(i1, i2) }
function {:inline} $urem.i160(i1: i160, i2: i160) returns (i160) { $smod.i160(i1, i2) }
function {:inline} $urem.i256(i1: i256, i2: i256) returns (i256) { $smod.i256(i1, i2) }
function $shl.i1(i1: i1, i2: i1) returns (i1);
function $shl.i5(i1: i5, i2: i5) returns (i5);
function $shl.i6(i1: i6, i2: i6) returns (i6);
function $shl.i8(i1: i8, i2: i8) returns (i8);
function $shl.i16(i1: i16, i2: i16) returns (i16);
function $shl.i24(i1: i24, i2: i24) returns (i24);
function $shl.i32(i1: i32, i2: i32) returns (i32);
function $shl.i40(i1: i40, i2: i40) returns (i40);
function $shl.i48(i1: i48, i2: i48) returns (i48);
function $shl.i56(i1: i56, i2: i56) returns (i56);
function $shl.i64(i1: i64, i2: i64) returns (i64);
function $shl.i80(i1: i80, i2: i80) returns (i80);
function $shl.i88(i1: i88, i2: i88) returns (i88);
function $shl.i96(i1: i96, i2: i96) returns (i96);
function $shl.i128(i1: i128, i2: i128) returns (i128);
function $shl.i160(i1: i160, i2: i160) returns (i160);
function $shl.i256(i1: i256, i2: i256) returns (i256);
function $lshr.i1(i1: i1, i2: i1) returns (i1);
function $lshr.i5(i1: i5, i2: i5) returns (i5);
function $lshr.i6(i1: i6, i2: i6) returns (i6);
function $lshr.i8(i1: i8, i2: i8) returns (i8);
function $lshr.i16(i1: i16, i2: i16) returns (i16);
function $lshr.i24(i1: i24, i2: i24) returns (i24);
function $lshr.i32(i1: i32, i2: i32) returns (i32);
function $lshr.i40(i1: i40, i2: i40) returns (i40);
function $lshr.i48(i1: i48, i2: i48) returns (i48);
function $lshr.i56(i1: i56, i2: i56) returns (i56);
function $lshr.i64(i1: i64, i2: i64) returns (i64);
function $lshr.i80(i1: i80, i2: i80) returns (i80);
function $lshr.i88(i1: i88, i2: i88) returns (i88);
function $lshr.i96(i1: i96, i2: i96) returns (i96);
function $lshr.i128(i1: i128, i2: i128) returns (i128);
function $lshr.i160(i1: i160, i2: i160) returns (i160);
function $lshr.i256(i1: i256, i2: i256) returns (i256);
function $ashr.i1(i1: i1, i2: i1) returns (i1);
function $ashr.i5(i1: i5, i2: i5) returns (i5);
function $ashr.i6(i1: i6, i2: i6) returns (i6);
function $ashr.i8(i1: i8, i2: i8) returns (i8);
function $ashr.i16(i1: i16, i2: i16) returns (i16);
function $ashr.i24(i1: i24, i2: i24) returns (i24);
function $ashr.i32(i1: i32, i2: i32) returns (i32);
function $ashr.i40(i1: i40, i2: i40) returns (i40);
function $ashr.i48(i1: i48, i2: i48) returns (i48);
function $ashr.i56(i1: i56, i2: i56) returns (i56);
function $ashr.i64(i1: i64, i2: i64) returns (i64);
function $ashr.i80(i1: i80, i2: i80) returns (i80);
function $ashr.i88(i1: i88, i2: i88) returns (i88);
function $ashr.i96(i1: i96, i2: i96) returns (i96);
function $ashr.i128(i1: i128, i2: i128) returns (i128);
function $ashr.i160(i1: i160, i2: i160) returns (i160);
function $ashr.i256(i1: i256, i2: i256) returns (i256);
function $and.i1(i1: i1, i2: i1) returns (i1);
function $and.i5(i1: i5, i2: i5) returns (i5);
function $and.i6(i1: i6, i2: i6) returns (i6);
function $and.i8(i1: i8, i2: i8) returns (i8);
function $and.i16(i1: i16, i2: i16) returns (i16);
function $and.i24(i1: i24, i2: i24) returns (i24);
function $and.i32(i1: i32, i2: i32) returns (i32);
function $and.i40(i1: i40, i2: i40) returns (i40);
function $and.i48(i1: i48, i2: i48) returns (i48);
function $and.i56(i1: i56, i2: i56) returns (i56);
function $and.i64(i1: i64, i2: i64) returns (i64);
function $and.i80(i1: i80, i2: i80) returns (i80);
function $and.i88(i1: i88, i2: i88) returns (i88);
function $and.i96(i1: i96, i2: i96) returns (i96);
function $and.i128(i1: i128, i2: i128) returns (i128);
function $and.i160(i1: i160, i2: i160) returns (i160);
function $and.i256(i1: i256, i2: i256) returns (i256);
function $or.i1(i1: i1, i2: i1) returns (i1);
function $or.i5(i1: i5, i2: i5) returns (i5);
function $or.i6(i1: i6, i2: i6) returns (i6);
function $or.i8(i1: i8, i2: i8) returns (i8);
function $or.i16(i1: i16, i2: i16) returns (i16);
function $or.i24(i1: i24, i2: i24) returns (i24);
function $or.i32(i1: i32, i2: i32) returns (i32);
function $or.i40(i1: i40, i2: i40) returns (i40);
function $or.i48(i1: i48, i2: i48) returns (i48);
function $or.i56(i1: i56, i2: i56) returns (i56);
function $or.i64(i1: i64, i2: i64) returns (i64);
function $or.i80(i1: i80, i2: i80) returns (i80);
function $or.i88(i1: i88, i2: i88) returns (i88);
function $or.i96(i1: i96, i2: i96) returns (i96);
function $or.i128(i1: i128, i2: i128) returns (i128);
function $or.i160(i1: i160, i2: i160) returns (i160);
function $or.i256(i1: i256, i2: i256) returns (i256);
function $xor.i1(i1: i1, i2: i1) returns (i1);
function $xor.i5(i1: i5, i2: i5) returns (i5);
function $xor.i6(i1: i6, i2: i6) returns (i6);
function $xor.i8(i1: i8, i2: i8) returns (i8);
function $xor.i16(i1: i16, i2: i16) returns (i16);
function $xor.i24(i1: i24, i2: i24) returns (i24);
function $xor.i32(i1: i32, i2: i32) returns (i32);
function $xor.i40(i1: i40, i2: i40) returns (i40);
function $xor.i48(i1: i48, i2: i48) returns (i48);
function $xor.i56(i1: i56, i2: i56) returns (i56);
function $xor.i64(i1: i64, i2: i64) returns (i64);
function $xor.i80(i1: i80, i2: i80) returns (i80);
function $xor.i88(i1: i88, i2: i88) returns (i88);
function $xor.i96(i1: i96, i2: i96) returns (i96);
function $xor.i128(i1: i128, i2: i128) returns (i128);
function $xor.i160(i1: i160, i2: i160) returns (i160);
function $xor.i256(i1: i256, i2: i256) returns (i256);
function $nand.i1(i1: i1, i2: i1) returns (i1);
function $nand.i5(i1: i5, i2: i5) returns (i5);
function $nand.i6(i1: i6, i2: i6) returns (i6);
function $nand.i8(i1: i8, i2: i8) returns (i8);
function $nand.i16(i1: i16, i2: i16) returns (i16);
function $nand.i24(i1: i24, i2: i24) returns (i24);
function $nand.i32(i1: i32, i2: i32) returns (i32);
function $nand.i40(i1: i40, i2: i40) returns (i40);
function $nand.i48(i1: i48, i2: i48) returns (i48);
function $nand.i56(i1: i56, i2: i56) returns (i56);
function $nand.i64(i1: i64, i2: i64) returns (i64);
function $nand.i80(i1: i80, i2: i80) returns (i80);
function $nand.i88(i1: i88, i2: i88) returns (i88);
function $nand.i96(i1: i96, i2: i96) returns (i96);
function $nand.i128(i1: i128, i2: i128) returns (i128);
function $nand.i160(i1: i160, i2: i160) returns (i160);
function $nand.i256(i1: i256, i2: i256) returns (i256);
function $not.i1(i: i1) returns (i1);
function $not.i5(i: i5) returns (i5);
function $not.i6(i: i6) returns (i6);
function $not.i8(i: i8) returns (i8);
function $not.i16(i: i16) returns (i16);
function $not.i24(i: i24) returns (i24);
function $not.i32(i: i32) returns (i32);
function $not.i40(i: i40) returns (i40);
function $not.i48(i: i48) returns (i48);
function $not.i56(i: i56) returns (i56);
function $not.i64(i: i64) returns (i64);
function $not.i80(i: i80) returns (i80);
function $not.i88(i: i88) returns (i88);
function $not.i96(i: i96) returns (i96);
function $not.i128(i: i128) returns (i128);
function $not.i160(i: i160) returns (i160);
function $not.i256(i: i256) returns (i256);
function {:inline} $smin.i1(i1: i1, i2: i1) returns (i1) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i5(i1: i5, i2: i5) returns (i5) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i6(i1: i6, i2: i6) returns (i6) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i8(i1: i8, i2: i8) returns (i8) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i16(i1: i16, i2: i16) returns (i16) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i24(i1: i24, i2: i24) returns (i24) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i32(i1: i32, i2: i32) returns (i32) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i40(i1: i40, i2: i40) returns (i40) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i48(i1: i48, i2: i48) returns (i48) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i56(i1: i56, i2: i56) returns (i56) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i64(i1: i64, i2: i64) returns (i64) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i80(i1: i80, i2: i80) returns (i80) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i88(i1: i88, i2: i88) returns (i88) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i96(i1: i96, i2: i96) returns (i96) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i128(i1: i128, i2: i128) returns (i128) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i160(i1: i160, i2: i160) returns (i160) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smin.i256(i1: i256, i2: i256) returns (i256) { (if (i1 < i2) then i1 else i2) }
function {:inline} $smax.i1(i1: i1, i2: i1) returns (i1) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i5(i1: i5, i2: i5) returns (i5) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i6(i1: i6, i2: i6) returns (i6) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i8(i1: i8, i2: i8) returns (i8) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i16(i1: i16, i2: i16) returns (i16) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i24(i1: i24, i2: i24) returns (i24) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i32(i1: i32, i2: i32) returns (i32) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i40(i1: i40, i2: i40) returns (i40) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i48(i1: i48, i2: i48) returns (i48) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i56(i1: i56, i2: i56) returns (i56) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i64(i1: i64, i2: i64) returns (i64) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i80(i1: i80, i2: i80) returns (i80) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i88(i1: i88, i2: i88) returns (i88) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i96(i1: i96, i2: i96) returns (i96) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i128(i1: i128, i2: i128) returns (i128) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i160(i1: i160, i2: i160) returns (i160) { (if (i2 < i1) then i1 else i2) }
function {:inline} $smax.i256(i1: i256, i2: i256) returns (i256) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umin.i1(i1: i1, i2: i1) returns (i1) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i5(i1: i5, i2: i5) returns (i5) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i6(i1: i6, i2: i6) returns (i6) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i8(i1: i8, i2: i8) returns (i8) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i16(i1: i16, i2: i16) returns (i16) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i24(i1: i24, i2: i24) returns (i24) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i32(i1: i32, i2: i32) returns (i32) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i40(i1: i40, i2: i40) returns (i40) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i48(i1: i48, i2: i48) returns (i48) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i56(i1: i56, i2: i56) returns (i56) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i64(i1: i64, i2: i64) returns (i64) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i80(i1: i80, i2: i80) returns (i80) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i88(i1: i88, i2: i88) returns (i88) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i96(i1: i96, i2: i96) returns (i96) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i128(i1: i128, i2: i128) returns (i128) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i160(i1: i160, i2: i160) returns (i160) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umin.i256(i1: i256, i2: i256) returns (i256) { (if (i1 < i2) then i1 else i2) }
function {:inline} $umax.i1(i1: i1, i2: i1) returns (i1) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i5(i1: i5, i2: i5) returns (i5) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i6(i1: i6, i2: i6) returns (i6) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i8(i1: i8, i2: i8) returns (i8) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i16(i1: i16, i2: i16) returns (i16) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i24(i1: i24, i2: i24) returns (i24) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i32(i1: i32, i2: i32) returns (i32) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i40(i1: i40, i2: i40) returns (i40) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i48(i1: i48, i2: i48) returns (i48) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i56(i1: i56, i2: i56) returns (i56) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i64(i1: i64, i2: i64) returns (i64) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i80(i1: i80, i2: i80) returns (i80) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i88(i1: i88, i2: i88) returns (i88) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i96(i1: i96, i2: i96) returns (i96) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i128(i1: i128, i2: i128) returns (i128) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i160(i1: i160, i2: i160) returns (i160) { (if (i2 < i1) then i1 else i2) }
function {:inline} $umax.i256(i1: i256, i2: i256) returns (i256) { (if (i2 < i1) then i1 else i2) }
axiom ($and.i1(0, 0) == 0);
axiom ($or.i1(0, 0) == 0);
axiom ($xor.i1(0, 0) == 0);
axiom ($and.i1(0, 1) == 0);
axiom ($or.i1(0, 1) == 1);
axiom ($xor.i1(0, 1) == 1);
axiom ($and.i1(1, 0) == 0);
axiom ($or.i1(1, 0) == 1);
axiom ($xor.i1(1, 0) == 1);
axiom ($and.i1(1, 1) == 1);
axiom ($or.i1(1, 1) == 1);
axiom ($xor.i1(1, 1) == 0);
axiom ($and.i32(32, 16) == 0);
// Integer predicates
function {:inline} $ule.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i1(i1: i1, i2: i1) returns (i1) { (if $ule.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i5(i1: i5, i2: i5) returns (i1) { (if $ule.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i6(i1: i6, i2: i6) returns (i1) { (if $ule.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i8(i1: i8, i2: i8) returns (i1) { (if $ule.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i16(i1: i16, i2: i16) returns (i1) { (if $ule.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i24(i1: i24, i2: i24) returns (i1) { (if $ule.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i32(i1: i32, i2: i32) returns (i1) { (if $ule.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i40(i1: i40, i2: i40) returns (i1) { (if $ule.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i48(i1: i48, i2: i48) returns (i1) { (if $ule.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i56(i1: i56, i2: i56) returns (i1) { (if $ule.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i64(i1: i64, i2: i64) returns (i1) { (if $ule.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i80(i1: i80, i2: i80) returns (i1) { (if $ule.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i88(i1: i88, i2: i88) returns (i1) { (if $ule.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i96(i1: i96, i2: i96) returns (i1) { (if $ule.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i128(i1: i128, i2: i128) returns (i1) { (if $ule.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i160(i1: i160, i2: i160) returns (i1) { (if $ule.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $ule.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 <= i2) }
function {:inline} $ule.i256(i1: i256, i2: i256) returns (i1) { (if $ule.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 < i2) }
function {:inline} $ult.i1(i1: i1, i2: i1) returns (i1) { (if $ult.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 < i2) }
function {:inline} $ult.i5(i1: i5, i2: i5) returns (i1) { (if $ult.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 < i2) }
function {:inline} $ult.i6(i1: i6, i2: i6) returns (i1) { (if $ult.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 < i2) }
function {:inline} $ult.i8(i1: i8, i2: i8) returns (i1) { (if $ult.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 < i2) }
function {:inline} $ult.i16(i1: i16, i2: i16) returns (i1) { (if $ult.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 < i2) }
function {:inline} $ult.i24(i1: i24, i2: i24) returns (i1) { (if $ult.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 < i2) }
function {:inline} $ult.i32(i1: i32, i2: i32) returns (i1) { (if $ult.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 < i2) }
function {:inline} $ult.i40(i1: i40, i2: i40) returns (i1) { (if $ult.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 < i2) }
function {:inline} $ult.i48(i1: i48, i2: i48) returns (i1) { (if $ult.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 < i2) }
function {:inline} $ult.i56(i1: i56, i2: i56) returns (i1) { (if $ult.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 < i2) }
function {:inline} $ult.i64(i1: i64, i2: i64) returns (i1) { (if $ult.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 < i2) }
function {:inline} $ult.i80(i1: i80, i2: i80) returns (i1) { (if $ult.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 < i2) }
function {:inline} $ult.i88(i1: i88, i2: i88) returns (i1) { (if $ult.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 < i2) }
function {:inline} $ult.i96(i1: i96, i2: i96) returns (i1) { (if $ult.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 < i2) }
function {:inline} $ult.i128(i1: i128, i2: i128) returns (i1) { (if $ult.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 < i2) }
function {:inline} $ult.i160(i1: i160, i2: i160) returns (i1) { (if $ult.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $ult.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 < i2) }
function {:inline} $ult.i256(i1: i256, i2: i256) returns (i1) { (if $ult.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i1(i1: i1, i2: i1) returns (i1) { (if $uge.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i5(i1: i5, i2: i5) returns (i1) { (if $uge.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i6(i1: i6, i2: i6) returns (i1) { (if $uge.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i8(i1: i8, i2: i8) returns (i1) { (if $uge.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i16(i1: i16, i2: i16) returns (i1) { (if $uge.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i24(i1: i24, i2: i24) returns (i1) { (if $uge.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i32(i1: i32, i2: i32) returns (i1) { (if $uge.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i40(i1: i40, i2: i40) returns (i1) { (if $uge.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i48(i1: i48, i2: i48) returns (i1) { (if $uge.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i56(i1: i56, i2: i56) returns (i1) { (if $uge.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i64(i1: i64, i2: i64) returns (i1) { (if $uge.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i80(i1: i80, i2: i80) returns (i1) { (if $uge.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i88(i1: i88, i2: i88) returns (i1) { (if $uge.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i96(i1: i96, i2: i96) returns (i1) { (if $uge.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i128(i1: i128, i2: i128) returns (i1) { (if $uge.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i160(i1: i160, i2: i160) returns (i1) { (if $uge.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $uge.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 >= i2) }
function {:inline} $uge.i256(i1: i256, i2: i256) returns (i1) { (if $uge.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i1(i1: i1, i2: i1) returns (i1) { (if $ugt.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i5(i1: i5, i2: i5) returns (i1) { (if $ugt.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i6(i1: i6, i2: i6) returns (i1) { (if $ugt.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i8(i1: i8, i2: i8) returns (i1) { (if $ugt.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i16(i1: i16, i2: i16) returns (i1) { (if $ugt.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i24(i1: i24, i2: i24) returns (i1) { (if $ugt.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i32(i1: i32, i2: i32) returns (i1) { (if $ugt.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i40(i1: i40, i2: i40) returns (i1) { (if $ugt.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i48(i1: i48, i2: i48) returns (i1) { (if $ugt.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i56(i1: i56, i2: i56) returns (i1) { (if $ugt.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i64(i1: i64, i2: i64) returns (i1) { (if $ugt.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i80(i1: i80, i2: i80) returns (i1) { (if $ugt.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i88(i1: i88, i2: i88) returns (i1) { (if $ugt.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i96(i1: i96, i2: i96) returns (i1) { (if $ugt.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i128(i1: i128, i2: i128) returns (i1) { (if $ugt.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i160(i1: i160, i2: i160) returns (i1) { (if $ugt.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $ugt.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 > i2) }
function {:inline} $ugt.i256(i1: i256, i2: i256) returns (i1) { (if $ugt.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i1(i1: i1, i2: i1) returns (i1) { (if $sle.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i5(i1: i5, i2: i5) returns (i1) { (if $sle.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i6(i1: i6, i2: i6) returns (i1) { (if $sle.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i8(i1: i8, i2: i8) returns (i1) { (if $sle.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i16(i1: i16, i2: i16) returns (i1) { (if $sle.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i24(i1: i24, i2: i24) returns (i1) { (if $sle.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i32(i1: i32, i2: i32) returns (i1) { (if $sle.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i40(i1: i40, i2: i40) returns (i1) { (if $sle.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i48(i1: i48, i2: i48) returns (i1) { (if $sle.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i56(i1: i56, i2: i56) returns (i1) { (if $sle.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i64(i1: i64, i2: i64) returns (i1) { (if $sle.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i80(i1: i80, i2: i80) returns (i1) { (if $sle.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i88(i1: i88, i2: i88) returns (i1) { (if $sle.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i96(i1: i96, i2: i96) returns (i1) { (if $sle.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i128(i1: i128, i2: i128) returns (i1) { (if $sle.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i160(i1: i160, i2: i160) returns (i1) { (if $sle.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $sle.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 <= i2) }
function {:inline} $sle.i256(i1: i256, i2: i256) returns (i1) { (if $sle.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 < i2) }
function {:inline} $slt.i1(i1: i1, i2: i1) returns (i1) { (if $slt.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 < i2) }
function {:inline} $slt.i5(i1: i5, i2: i5) returns (i1) { (if $slt.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 < i2) }
function {:inline} $slt.i6(i1: i6, i2: i6) returns (i1) { (if $slt.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 < i2) }
function {:inline} $slt.i8(i1: i8, i2: i8) returns (i1) { (if $slt.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 < i2) }
function {:inline} $slt.i16(i1: i16, i2: i16) returns (i1) { (if $slt.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 < i2) }
function {:inline} $slt.i24(i1: i24, i2: i24) returns (i1) { (if $slt.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 < i2) }
function {:inline} $slt.i32(i1: i32, i2: i32) returns (i1) { (if $slt.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 < i2) }
function {:inline} $slt.i40(i1: i40, i2: i40) returns (i1) { (if $slt.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 < i2) }
function {:inline} $slt.i48(i1: i48, i2: i48) returns (i1) { (if $slt.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 < i2) }
function {:inline} $slt.i56(i1: i56, i2: i56) returns (i1) { (if $slt.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 < i2) }
function {:inline} $slt.i64(i1: i64, i2: i64) returns (i1) { (if $slt.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 < i2) }
function {:inline} $slt.i80(i1: i80, i2: i80) returns (i1) { (if $slt.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 < i2) }
function {:inline} $slt.i88(i1: i88, i2: i88) returns (i1) { (if $slt.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 < i2) }
function {:inline} $slt.i96(i1: i96, i2: i96) returns (i1) { (if $slt.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 < i2) }
function {:inline} $slt.i128(i1: i128, i2: i128) returns (i1) { (if $slt.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 < i2) }
function {:inline} $slt.i160(i1: i160, i2: i160) returns (i1) { (if $slt.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $slt.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 < i2) }
function {:inline} $slt.i256(i1: i256, i2: i256) returns (i1) { (if $slt.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i1(i1: i1, i2: i1) returns (i1) { (if $sge.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i5(i1: i5, i2: i5) returns (i1) { (if $sge.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i6(i1: i6, i2: i6) returns (i1) { (if $sge.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i8(i1: i8, i2: i8) returns (i1) { (if $sge.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i16(i1: i16, i2: i16) returns (i1) { (if $sge.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i24(i1: i24, i2: i24) returns (i1) { (if $sge.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i32(i1: i32, i2: i32) returns (i1) { (if $sge.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i40(i1: i40, i2: i40) returns (i1) { (if $sge.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i48(i1: i48, i2: i48) returns (i1) { (if $sge.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i56(i1: i56, i2: i56) returns (i1) { (if $sge.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i64(i1: i64, i2: i64) returns (i1) { (if $sge.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i80(i1: i80, i2: i80) returns (i1) { (if $sge.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i88(i1: i88, i2: i88) returns (i1) { (if $sge.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i96(i1: i96, i2: i96) returns (i1) { (if $sge.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i128(i1: i128, i2: i128) returns (i1) { (if $sge.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i160(i1: i160, i2: i160) returns (i1) { (if $sge.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $sge.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 >= i2) }
function {:inline} $sge.i256(i1: i256, i2: i256) returns (i1) { (if $sge.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i1(i1: i1, i2: i1) returns (i1) { (if $sgt.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i5(i1: i5, i2: i5) returns (i1) { (if $sgt.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i6(i1: i6, i2: i6) returns (i1) { (if $sgt.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i8(i1: i8, i2: i8) returns (i1) { (if $sgt.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i16(i1: i16, i2: i16) returns (i1) { (if $sgt.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i24(i1: i24, i2: i24) returns (i1) { (if $sgt.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i32(i1: i32, i2: i32) returns (i1) { (if $sgt.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i40(i1: i40, i2: i40) returns (i1) { (if $sgt.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i48(i1: i48, i2: i48) returns (i1) { (if $sgt.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i56(i1: i56, i2: i56) returns (i1) { (if $sgt.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i64(i1: i64, i2: i64) returns (i1) { (if $sgt.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i80(i1: i80, i2: i80) returns (i1) { (if $sgt.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i88(i1: i88, i2: i88) returns (i1) { (if $sgt.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i96(i1: i96, i2: i96) returns (i1) { (if $sgt.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i128(i1: i128, i2: i128) returns (i1) { (if $sgt.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i160(i1: i160, i2: i160) returns (i1) { (if $sgt.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $sgt.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 > i2) }
function {:inline} $sgt.i256(i1: i256, i2: i256) returns (i1) { (if $sgt.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 == i2) }
function {:inline} $eq.i1(i1: i1, i2: i1) returns (i1) { (if $eq.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 == i2) }
function {:inline} $eq.i5(i1: i5, i2: i5) returns (i1) { (if $eq.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 == i2) }
function {:inline} $eq.i6(i1: i6, i2: i6) returns (i1) { (if $eq.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 == i2) }
function {:inline} $eq.i8(i1: i8, i2: i8) returns (i1) { (if $eq.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 == i2) }
function {:inline} $eq.i16(i1: i16, i2: i16) returns (i1) { (if $eq.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 == i2) }
function {:inline} $eq.i24(i1: i24, i2: i24) returns (i1) { (if $eq.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 == i2) }
function {:inline} $eq.i32(i1: i32, i2: i32) returns (i1) { (if $eq.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 == i2) }
function {:inline} $eq.i40(i1: i40, i2: i40) returns (i1) { (if $eq.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 == i2) }
function {:inline} $eq.i48(i1: i48, i2: i48) returns (i1) { (if $eq.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 == i2) }
function {:inline} $eq.i56(i1: i56, i2: i56) returns (i1) { (if $eq.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 == i2) }
function {:inline} $eq.i64(i1: i64, i2: i64) returns (i1) { (if $eq.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 == i2) }
function {:inline} $eq.i80(i1: i80, i2: i80) returns (i1) { (if $eq.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 == i2) }
function {:inline} $eq.i88(i1: i88, i2: i88) returns (i1) { (if $eq.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 == i2) }
function {:inline} $eq.i96(i1: i96, i2: i96) returns (i1) { (if $eq.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 == i2) }
function {:inline} $eq.i128(i1: i128, i2: i128) returns (i1) { (if $eq.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 == i2) }
function {:inline} $eq.i160(i1: i160, i2: i160) returns (i1) { (if $eq.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $eq.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 == i2) }
function {:inline} $eq.i256(i1: i256, i2: i256) returns (i1) { (if $eq.i256.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 != i2) }
function {:inline} $ne.i1(i1: i1, i2: i1) returns (i1) { (if $ne.i1.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 != i2) }
function {:inline} $ne.i5(i1: i5, i2: i5) returns (i1) { (if $ne.i5.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 != i2) }
function {:inline} $ne.i6(i1: i6, i2: i6) returns (i1) { (if $ne.i6.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 != i2) }
function {:inline} $ne.i8(i1: i8, i2: i8) returns (i1) { (if $ne.i8.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 != i2) }
function {:inline} $ne.i16(i1: i16, i2: i16) returns (i1) { (if $ne.i16.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 != i2) }
function {:inline} $ne.i24(i1: i24, i2: i24) returns (i1) { (if $ne.i24.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 != i2) }
function {:inline} $ne.i32(i1: i32, i2: i32) returns (i1) { (if $ne.i32.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 != i2) }
function {:inline} $ne.i40(i1: i40, i2: i40) returns (i1) { (if $ne.i40.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 != i2) }
function {:inline} $ne.i48(i1: i48, i2: i48) returns (i1) { (if $ne.i48.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 != i2) }
function {:inline} $ne.i56(i1: i56, i2: i56) returns (i1) { (if $ne.i56.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 != i2) }
function {:inline} $ne.i64(i1: i64, i2: i64) returns (i1) { (if $ne.i64.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 != i2) }
function {:inline} $ne.i80(i1: i80, i2: i80) returns (i1) { (if $ne.i80.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 != i2) }
function {:inline} $ne.i88(i1: i88, i2: i88) returns (i1) { (if $ne.i88.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 != i2) }
function {:inline} $ne.i96(i1: i96, i2: i96) returns (i1) { (if $ne.i96.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 != i2) }
function {:inline} $ne.i128(i1: i128, i2: i128) returns (i1) { (if $ne.i128.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 != i2) }
function {:inline} $ne.i160(i1: i160, i2: i160) returns (i1) { (if $ne.i160.bool(i1, i2) then 1 else 0) }
function {:inline} $ne.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 != i2) }
function {:inline} $ne.i256(i1: i256, i2: i256) returns (i1) { (if $ne.i256.bool(i1, i2) then 1 else 0) }
// Integer load/store operations
function {:inline} $load.i1(M: [ref] i1, p: ref) returns (i1) { M[p] }
function {:inline} $store.i1(M: [ref] i1, p: ref, i: i1) returns ([ref] i1) { M[p := i] }
function {:inline} $load.i5(M: [ref] i5, p: ref) returns (i5) { M[p] }
function {:inline} $store.i5(M: [ref] i5, p: ref, i: i5) returns ([ref] i5) { M[p := i] }
function {:inline} $load.i6(M: [ref] i6, p: ref) returns (i6) { M[p] }
function {:inline} $store.i6(M: [ref] i6, p: ref, i: i6) returns ([ref] i6) { M[p := i] }
function {:inline} $load.i8(M: [ref] i8, p: ref) returns (i8) { M[p] }
function {:inline} $store.i8(M: [ref] i8, p: ref, i: i8) returns ([ref] i8) { M[p := i] }
function {:inline} $load.i16(M: [ref] i16, p: ref) returns (i16) { M[p] }
function {:inline} $store.i16(M: [ref] i16, p: ref, i: i16) returns ([ref] i16) { M[p := i] }
function {:inline} $load.i24(M: [ref] i24, p: ref) returns (i24) { M[p] }
function {:inline} $store.i24(M: [ref] i24, p: ref, i: i24) returns ([ref] i24) { M[p := i] }
function {:inline} $load.i32(M: [ref] i32, p: ref) returns (i32) { M[p] }
function {:inline} $store.i32(M: [ref] i32, p: ref, i: i32) returns ([ref] i32) { M[p := i] }
function {:inline} $load.i40(M: [ref] i40, p: ref) returns (i40) { M[p] }
function {:inline} $store.i40(M: [ref] i40, p: ref, i: i40) returns ([ref] i40) { M[p := i] }
function {:inline} $load.i48(M: [ref] i48, p: ref) returns (i48) { M[p] }
function {:inline} $store.i48(M: [ref] i48, p: ref, i: i48) returns ([ref] i48) { M[p := i] }
function {:inline} $load.i56(M: [ref] i56, p: ref) returns (i56) { M[p] }
function {:inline} $store.i56(M: [ref] i56, p: ref, i: i56) returns ([ref] i56) { M[p := i] }
function {:inline} $load.i64(M: [ref] i64, p: ref) returns (i64) { M[p] }
function {:inline} $store.i64(M: [ref] i64, p: ref, i: i64) returns ([ref] i64) { M[p := i] }
function {:inline} $load.i80(M: [ref] i80, p: ref) returns (i80) { M[p] }
function {:inline} $store.i80(M: [ref] i80, p: ref, i: i80) returns ([ref] i80) { M[p := i] }
function {:inline} $load.i88(M: [ref] i88, p: ref) returns (i88) { M[p] }
function {:inline} $store.i88(M: [ref] i88, p: ref, i: i88) returns ([ref] i88) { M[p := i] }
function {:inline} $load.i96(M: [ref] i96, p: ref) returns (i96) { M[p] }
function {:inline} $store.i96(M: [ref] i96, p: ref, i: i96) returns ([ref] i96) { M[p := i] }
function {:inline} $load.i128(M: [ref] i128, p: ref) returns (i128) { M[p] }
function {:inline} $store.i128(M: [ref] i128, p: ref, i: i128) returns ([ref] i128) { M[p := i] }
function {:inline} $load.i160(M: [ref] i160, p: ref) returns (i160) { M[p] }
function {:inline} $store.i160(M: [ref] i160, p: ref, i: i160) returns ([ref] i160) { M[p := i] }
function {:inline} $load.i256(M: [ref] i256, p: ref) returns (i256) { M[p] }
function {:inline} $store.i256(M: [ref] i256, p: ref, i: i256) returns ([ref] i256) { M[p := i] }
// Conversion between integer types
function {:inline} $trunc.i5.i1(i: i5) returns (i1) { i }
function {:inline} $trunc.i6.i1(i: i6) returns (i1) { i }
function {:inline} $trunc.i8.i1(i: i8) returns (i1) { i }
function {:inline} $trunc.i16.i1(i: i16) returns (i1) { i }
function {:inline} $trunc.i24.i1(i: i24) returns (i1) { i }
function {:inline} $trunc.i32.i1(i: i32) returns (i1) { i }
function {:inline} $trunc.i40.i1(i: i40) returns (i1) { i }
function {:inline} $trunc.i48.i1(i: i48) returns (i1) { i }
function {:inline} $trunc.i56.i1(i: i56) returns (i1) { i }
function {:inline} $trunc.i64.i1(i: i64) returns (i1) { i }
function {:inline} $trunc.i80.i1(i: i80) returns (i1) { i }
function {:inline} $trunc.i88.i1(i: i88) returns (i1) { i }
function {:inline} $trunc.i96.i1(i: i96) returns (i1) { i }
function {:inline} $trunc.i128.i1(i: i128) returns (i1) { i }
function {:inline} $trunc.i160.i1(i: i160) returns (i1) { i }
function {:inline} $trunc.i256.i1(i: i256) returns (i1) { i }
function {:inline} $trunc.i6.i5(i: i6) returns (i5) { i }
function {:inline} $trunc.i8.i5(i: i8) returns (i5) { i }
function {:inline} $trunc.i16.i5(i: i16) returns (i5) { i }
function {:inline} $trunc.i24.i5(i: i24) returns (i5) { i }
function {:inline} $trunc.i32.i5(i: i32) returns (i5) { i }
function {:inline} $trunc.i40.i5(i: i40) returns (i5) { i }
function {:inline} $trunc.i48.i5(i: i48) returns (i5) { i }
function {:inline} $trunc.i56.i5(i: i56) returns (i5) { i }
function {:inline} $trunc.i64.i5(i: i64) returns (i5) { i }
function {:inline} $trunc.i80.i5(i: i80) returns (i5) { i }
function {:inline} $trunc.i88.i5(i: i88) returns (i5) { i }
function {:inline} $trunc.i96.i5(i: i96) returns (i5) { i }
function {:inline} $trunc.i128.i5(i: i128) returns (i5) { i }
function {:inline} $trunc.i160.i5(i: i160) returns (i5) { i }
function {:inline} $trunc.i256.i5(i: i256) returns (i5) { i }
function {:inline} $trunc.i8.i6(i: i8) returns (i6) { i }
function {:inline} $trunc.i16.i6(i: i16) returns (i6) { i }
function {:inline} $trunc.i24.i6(i: i24) returns (i6) { i }
function {:inline} $trunc.i32.i6(i: i32) returns (i6) { i }
function {:inline} $trunc.i40.i6(i: i40) returns (i6) { i }
function {:inline} $trunc.i48.i6(i: i48) returns (i6) { i }
function {:inline} $trunc.i56.i6(i: i56) returns (i6) { i }
function {:inline} $trunc.i64.i6(i: i64) returns (i6) { i }
function {:inline} $trunc.i80.i6(i: i80) returns (i6) { i }
function {:inline} $trunc.i88.i6(i: i88) returns (i6) { i }
function {:inline} $trunc.i96.i6(i: i96) returns (i6) { i }
function {:inline} $trunc.i128.i6(i: i128) returns (i6) { i }
function {:inline} $trunc.i160.i6(i: i160) returns (i6) { i }
function {:inline} $trunc.i256.i6(i: i256) returns (i6) { i }
function {:inline} $trunc.i16.i8(i: i16) returns (i8) { i }
function {:inline} $trunc.i24.i8(i: i24) returns (i8) { i }
function {:inline} $trunc.i32.i8(i: i32) returns (i8) { i }
function {:inline} $trunc.i40.i8(i: i40) returns (i8) { i }
function {:inline} $trunc.i48.i8(i: i48) returns (i8) { i }
function {:inline} $trunc.i56.i8(i: i56) returns (i8) { i }
function {:inline} $trunc.i64.i8(i: i64) returns (i8) { i }
function {:inline} $trunc.i80.i8(i: i80) returns (i8) { i }
function {:inline} $trunc.i88.i8(i: i88) returns (i8) { i }
function {:inline} $trunc.i96.i8(i: i96) returns (i8) { i }
function {:inline} $trunc.i128.i8(i: i128) returns (i8) { i }
function {:inline} $trunc.i160.i8(i: i160) returns (i8) { i }
function {:inline} $trunc.i256.i8(i: i256) returns (i8) { i }
function {:inline} $trunc.i24.i16(i: i24) returns (i16) { i }
function {:inline} $trunc.i32.i16(i: i32) returns (i16) { i }
function {:inline} $trunc.i40.i16(i: i40) returns (i16) { i }
function {:inline} $trunc.i48.i16(i: i48) returns (i16) { i }
function {:inline} $trunc.i56.i16(i: i56) returns (i16) { i }
function {:inline} $trunc.i64.i16(i: i64) returns (i16) { i }
function {:inline} $trunc.i80.i16(i: i80) returns (i16) { i }
function {:inline} $trunc.i88.i16(i: i88) returns (i16) { i }
function {:inline} $trunc.i96.i16(i: i96) returns (i16) { i }
function {:inline} $trunc.i128.i16(i: i128) returns (i16) { i }
function {:inline} $trunc.i160.i16(i: i160) returns (i16) { i }
function {:inline} $trunc.i256.i16(i: i256) returns (i16) { i }
function {:inline} $trunc.i32.i24(i: i32) returns (i24) { i }
function {:inline} $trunc.i40.i24(i: i40) returns (i24) { i }
function {:inline} $trunc.i48.i24(i: i48) returns (i24) { i }
function {:inline} $trunc.i56.i24(i: i56) returns (i24) { i }
function {:inline} $trunc.i64.i24(i: i64) returns (i24) { i }
function {:inline} $trunc.i80.i24(i: i80) returns (i24) { i }
function {:inline} $trunc.i88.i24(i: i88) returns (i24) { i }
function {:inline} $trunc.i96.i24(i: i96) returns (i24) { i }
function {:inline} $trunc.i128.i24(i: i128) returns (i24) { i }
function {:inline} $trunc.i160.i24(i: i160) returns (i24) { i }
function {:inline} $trunc.i256.i24(i: i256) returns (i24) { i }
function {:inline} $trunc.i40.i32(i: i40) returns (i32) { i }
function {:inline} $trunc.i48.i32(i: i48) returns (i32) { i }
function {:inline} $trunc.i56.i32(i: i56) returns (i32) { i }
function {:inline} $trunc.i64.i32(i: i64) returns (i32) { i }
function {:inline} $trunc.i80.i32(i: i80) returns (i32) { i }
function {:inline} $trunc.i88.i32(i: i88) returns (i32) { i }
function {:inline} $trunc.i96.i32(i: i96) returns (i32) { i }
function {:inline} $trunc.i128.i32(i: i128) returns (i32) { i }
function {:inline} $trunc.i160.i32(i: i160) returns (i32) { i }
function {:inline} $trunc.i256.i32(i: i256) returns (i32) { i }
function {:inline} $trunc.i48.i40(i: i48) returns (i40) { i }
function {:inline} $trunc.i56.i40(i: i56) returns (i40) { i }
function {:inline} $trunc.i64.i40(i: i64) returns (i40) { i }
function {:inline} $trunc.i80.i40(i: i80) returns (i40) { i }
function {:inline} $trunc.i88.i40(i: i88) returns (i40) { i }
function {:inline} $trunc.i96.i40(i: i96) returns (i40) { i }
function {:inline} $trunc.i128.i40(i: i128) returns (i40) { i }
function {:inline} $trunc.i160.i40(i: i160) returns (i40) { i }
function {:inline} $trunc.i256.i40(i: i256) returns (i40) { i }
function {:inline} $trunc.i56.i48(i: i56) returns (i48) { i }
function {:inline} $trunc.i64.i48(i: i64) returns (i48) { i }
function {:inline} $trunc.i80.i48(i: i80) returns (i48) { i }
function {:inline} $trunc.i88.i48(i: i88) returns (i48) { i }
function {:inline} $trunc.i96.i48(i: i96) returns (i48) { i }
function {:inline} $trunc.i128.i48(i: i128) returns (i48) { i }
function {:inline} $trunc.i160.i48(i: i160) returns (i48) { i }
function {:inline} $trunc.i256.i48(i: i256) returns (i48) { i }
function {:inline} $trunc.i64.i56(i: i64) returns (i56) { i }
function {:inline} $trunc.i80.i56(i: i80) returns (i56) { i }
function {:inline} $trunc.i88.i56(i: i88) returns (i56) { i }
function {:inline} $trunc.i96.i56(i: i96) returns (i56) { i }
function {:inline} $trunc.i128.i56(i: i128) returns (i56) { i }
function {:inline} $trunc.i160.i56(i: i160) returns (i56) { i }
function {:inline} $trunc.i256.i56(i: i256) returns (i56) { i }
function {:inline} $trunc.i80.i64(i: i80) returns (i64) { i }
function {:inline} $trunc.i88.i64(i: i88) returns (i64) { i }
function {:inline} $trunc.i96.i64(i: i96) returns (i64) { i }
function {:inline} $trunc.i128.i64(i: i128) returns (i64) { i }
function {:inline} $trunc.i160.i64(i: i160) returns (i64) { i }
function {:inline} $trunc.i256.i64(i: i256) returns (i64) { i }
function {:inline} $trunc.i88.i80(i: i88) returns (i80) { i }
function {:inline} $trunc.i96.i80(i: i96) returns (i80) { i }
function {:inline} $trunc.i128.i80(i: i128) returns (i80) { i }
function {:inline} $trunc.i160.i80(i: i160) returns (i80) { i }
function {:inline} $trunc.i256.i80(i: i256) returns (i80) { i }
function {:inline} $trunc.i96.i88(i: i96) returns (i88) { i }
function {:inline} $trunc.i128.i88(i: i128) returns (i88) { i }
function {:inline} $trunc.i160.i88(i: i160) returns (i88) { i }
function {:inline} $trunc.i256.i88(i: i256) returns (i88) { i }
function {:inline} $trunc.i128.i96(i: i128) returns (i96) { i }
function {:inline} $trunc.i160.i96(i: i160) returns (i96) { i }
function {:inline} $trunc.i256.i96(i: i256) returns (i96) { i }
function {:inline} $trunc.i160.i128(i: i160) returns (i128) { i }
function {:inline} $trunc.i256.i128(i: i256) returns (i128) { i }
function {:inline} $trunc.i256.i160(i: i256) returns (i160) { i }
function {:inline} $sext.i1.i5(i: i1) returns (i5) { i }
function {:inline} $sext.i1.i6(i: i1) returns (i6) { i }
function {:inline} $sext.i1.i8(i: i1) returns (i8) { i }
function {:inline} $sext.i1.i16(i: i1) returns (i16) { i }
function {:inline} $sext.i1.i24(i: i1) returns (i24) { i }
function {:inline} $sext.i1.i32(i: i1) returns (i32) { i }
function {:inline} $sext.i1.i40(i: i1) returns (i40) { i }
function {:inline} $sext.i1.i48(i: i1) returns (i48) { i }
function {:inline} $sext.i1.i56(i: i1) returns (i56) { i }
function {:inline} $sext.i1.i64(i: i1) returns (i64) { i }
function {:inline} $sext.i1.i80(i: i1) returns (i80) { i }
function {:inline} $sext.i1.i88(i: i1) returns (i88) { i }
function {:inline} $sext.i1.i96(i: i1) returns (i96) { i }
function {:inline} $sext.i1.i128(i: i1) returns (i128) { i }
function {:inline} $sext.i1.i160(i: i1) returns (i160) { i }
function {:inline} $sext.i1.i256(i: i1) returns (i256) { i }
function {:inline} $sext.i5.i6(i: i5) returns (i6) { i }
function {:inline} $sext.i5.i8(i: i5) returns (i8) { i }
function {:inline} $sext.i5.i16(i: i5) returns (i16) { i }
function {:inline} $sext.i5.i24(i: i5) returns (i24) { i }
function {:inline} $sext.i5.i32(i: i5) returns (i32) { i }
function {:inline} $sext.i5.i40(i: i5) returns (i40) { i }
function {:inline} $sext.i5.i48(i: i5) returns (i48) { i }
function {:inline} $sext.i5.i56(i: i5) returns (i56) { i }
function {:inline} $sext.i5.i64(i: i5) returns (i64) { i }
function {:inline} $sext.i5.i80(i: i5) returns (i80) { i }
function {:inline} $sext.i5.i88(i: i5) returns (i88) { i }
function {:inline} $sext.i5.i96(i: i5) returns (i96) { i }
function {:inline} $sext.i5.i128(i: i5) returns (i128) { i }
function {:inline} $sext.i5.i160(i: i5) returns (i160) { i }
function {:inline} $sext.i5.i256(i: i5) returns (i256) { i }
function {:inline} $sext.i6.i8(i: i6) returns (i8) { i }
function {:inline} $sext.i6.i16(i: i6) returns (i16) { i }
function {:inline} $sext.i6.i24(i: i6) returns (i24) { i }
function {:inline} $sext.i6.i32(i: i6) returns (i32) { i }
function {:inline} $sext.i6.i40(i: i6) returns (i40) { i }
function {:inline} $sext.i6.i48(i: i6) returns (i48) { i }
function {:inline} $sext.i6.i56(i: i6) returns (i56) { i }
function {:inline} $sext.i6.i64(i: i6) returns (i64) { i }
function {:inline} $sext.i6.i80(i: i6) returns (i80) { i }
function {:inline} $sext.i6.i88(i: i6) returns (i88) { i }
function {:inline} $sext.i6.i96(i: i6) returns (i96) { i }
function {:inline} $sext.i6.i128(i: i6) returns (i128) { i }
function {:inline} $sext.i6.i160(i: i6) returns (i160) { i }
function {:inline} $sext.i6.i256(i: i6) returns (i256) { i }
function {:inline} $sext.i8.i16(i: i8) returns (i16) { i }
function {:inline} $sext.i8.i24(i: i8) returns (i24) { i }
function {:inline} $sext.i8.i32(i: i8) returns (i32) { i }
function {:inline} $sext.i8.i40(i: i8) returns (i40) { i }
function {:inline} $sext.i8.i48(i: i8) returns (i48) { i }
function {:inline} $sext.i8.i56(i: i8) returns (i56) { i }
function {:inline} $sext.i8.i64(i: i8) returns (i64) { i }
function {:inline} $sext.i8.i80(i: i8) returns (i80) { i }
function {:inline} $sext.i8.i88(i: i8) returns (i88) { i }
function {:inline} $sext.i8.i96(i: i8) returns (i96) { i }
function {:inline} $sext.i8.i128(i: i8) returns (i128) { i }
function {:inline} $sext.i8.i160(i: i8) returns (i160) { i }
function {:inline} $sext.i8.i256(i: i8) returns (i256) { i }
function {:inline} $sext.i16.i24(i: i16) returns (i24) { i }
function {:inline} $sext.i16.i32(i: i16) returns (i32) { i }
function {:inline} $sext.i16.i40(i: i16) returns (i40) { i }
function {:inline} $sext.i16.i48(i: i16) returns (i48) { i }
function {:inline} $sext.i16.i56(i: i16) returns (i56) { i }
function {:inline} $sext.i16.i64(i: i16) returns (i64) { i }
function {:inline} $sext.i16.i80(i: i16) returns (i80) { i }
function {:inline} $sext.i16.i88(i: i16) returns (i88) { i }
function {:inline} $sext.i16.i96(i: i16) returns (i96) { i }
function {:inline} $sext.i16.i128(i: i16) returns (i128) { i }
function {:inline} $sext.i16.i160(i: i16) returns (i160) { i }
function {:inline} $sext.i16.i256(i: i16) returns (i256) { i }
function {:inline} $sext.i24.i32(i: i24) returns (i32) { i }
function {:inline} $sext.i24.i40(i: i24) returns (i40) { i }
function {:inline} $sext.i24.i48(i: i24) returns (i48) { i }
function {:inline} $sext.i24.i56(i: i24) returns (i56) { i }
function {:inline} $sext.i24.i64(i: i24) returns (i64) { i }
function {:inline} $sext.i24.i80(i: i24) returns (i80) { i }
function {:inline} $sext.i24.i88(i: i24) returns (i88) { i }
function {:inline} $sext.i24.i96(i: i24) returns (i96) { i }
function {:inline} $sext.i24.i128(i: i24) returns (i128) { i }
function {:inline} $sext.i24.i160(i: i24) returns (i160) { i }
function {:inline} $sext.i24.i256(i: i24) returns (i256) { i }
function {:inline} $sext.i32.i40(i: i32) returns (i40) { i }
function {:inline} $sext.i32.i48(i: i32) returns (i48) { i }
function {:inline} $sext.i32.i56(i: i32) returns (i56) { i }
function {:inline} $sext.i32.i64(i: i32) returns (i64) { i }
function {:inline} $sext.i32.i80(i: i32) returns (i80) { i }
function {:inline} $sext.i32.i88(i: i32) returns (i88) { i }
function {:inline} $sext.i32.i96(i: i32) returns (i96) { i }
function {:inline} $sext.i32.i128(i: i32) returns (i128) { i }
function {:inline} $sext.i32.i160(i: i32) returns (i160) { i }
function {:inline} $sext.i32.i256(i: i32) returns (i256) { i }
function {:inline} $sext.i40.i48(i: i40) returns (i48) { i }
function {:inline} $sext.i40.i56(i: i40) returns (i56) { i }
function {:inline} $sext.i40.i64(i: i40) returns (i64) { i }
function {:inline} $sext.i40.i80(i: i40) returns (i80) { i }
function {:inline} $sext.i40.i88(i: i40) returns (i88) { i }
function {:inline} $sext.i40.i96(i: i40) returns (i96) { i }
function {:inline} $sext.i40.i128(i: i40) returns (i128) { i }
function {:inline} $sext.i40.i160(i: i40) returns (i160) { i }
function {:inline} $sext.i40.i256(i: i40) returns (i256) { i }
function {:inline} $sext.i48.i56(i: i48) returns (i56) { i }
function {:inline} $sext.i48.i64(i: i48) returns (i64) { i }
function {:inline} $sext.i48.i80(i: i48) returns (i80) { i }
function {:inline} $sext.i48.i88(i: i48) returns (i88) { i }
function {:inline} $sext.i48.i96(i: i48) returns (i96) { i }
function {:inline} $sext.i48.i128(i: i48) returns (i128) { i }
function {:inline} $sext.i48.i160(i: i48) returns (i160) { i }
function {:inline} $sext.i48.i256(i: i48) returns (i256) { i }
function {:inline} $sext.i56.i64(i: i56) returns (i64) { i }
function {:inline} $sext.i56.i80(i: i56) returns (i80) { i }
function {:inline} $sext.i56.i88(i: i56) returns (i88) { i }
function {:inline} $sext.i56.i96(i: i56) returns (i96) { i }
function {:inline} $sext.i56.i128(i: i56) returns (i128) { i }
function {:inline} $sext.i56.i160(i: i56) returns (i160) { i }
function {:inline} $sext.i56.i256(i: i56) returns (i256) { i }
function {:inline} $sext.i64.i80(i: i64) returns (i80) { i }
function {:inline} $sext.i64.i88(i: i64) returns (i88) { i }
function {:inline} $sext.i64.i96(i: i64) returns (i96) { i }
function {:inline} $sext.i64.i128(i: i64) returns (i128) { i }
function {:inline} $sext.i64.i160(i: i64) returns (i160) { i }
function {:inline} $sext.i64.i256(i: i64) returns (i256) { i }
function {:inline} $sext.i80.i88(i: i80) returns (i88) { i }
function {:inline} $sext.i80.i96(i: i80) returns (i96) { i }
function {:inline} $sext.i80.i128(i: i80) returns (i128) { i }
function {:inline} $sext.i80.i160(i: i80) returns (i160) { i }
function {:inline} $sext.i80.i256(i: i80) returns (i256) { i }
function {:inline} $sext.i88.i96(i: i88) returns (i96) { i }
function {:inline} $sext.i88.i128(i: i88) returns (i128) { i }
function {:inline} $sext.i88.i160(i: i88) returns (i160) { i }
function {:inline} $sext.i88.i256(i: i88) returns (i256) { i }
function {:inline} $sext.i96.i128(i: i96) returns (i128) { i }
function {:inline} $sext.i96.i160(i: i96) returns (i160) { i }
function {:inline} $sext.i96.i256(i: i96) returns (i256) { i }
function {:inline} $sext.i128.i160(i: i128) returns (i160) { i }
function {:inline} $sext.i128.i256(i: i128) returns (i256) { i }
function {:inline} $sext.i160.i256(i: i160) returns (i256) { i }
function {:inline} $zext.i1.i5(i: i1) returns (i5) { i }
function {:inline} $zext.i1.i6(i: i1) returns (i6) { i }
function {:inline} $zext.i1.i8(i: i1) returns (i8) { i }
function {:inline} $zext.i1.i16(i: i1) returns (i16) { i }
function {:inline} $zext.i1.i24(i: i1) returns (i24) { i }
function {:inline} $zext.i1.i32(i: i1) returns (i32) { i }
function {:inline} $zext.i1.i40(i: i1) returns (i40) { i }
function {:inline} $zext.i1.i48(i: i1) returns (i48) { i }
function {:inline} $zext.i1.i56(i: i1) returns (i56) { i }
function {:inline} $zext.i1.i64(i: i1) returns (i64) { i }
function {:inline} $zext.i1.i80(i: i1) returns (i80) { i }
function {:inline} $zext.i1.i88(i: i1) returns (i88) { i }
function {:inline} $zext.i1.i96(i: i1) returns (i96) { i }
function {:inline} $zext.i1.i128(i: i1) returns (i128) { i }
function {:inline} $zext.i1.i160(i: i1) returns (i160) { i }
function {:inline} $zext.i1.i256(i: i1) returns (i256) { i }
function {:inline} $zext.i5.i6(i: i5) returns (i6) { i }
function {:inline} $zext.i5.i8(i: i5) returns (i8) { i }
function {:inline} $zext.i5.i16(i: i5) returns (i16) { i }
function {:inline} $zext.i5.i24(i: i5) returns (i24) { i }
function {:inline} $zext.i5.i32(i: i5) returns (i32) { i }
function {:inline} $zext.i5.i40(i: i5) returns (i40) { i }
function {:inline} $zext.i5.i48(i: i5) returns (i48) { i }
function {:inline} $zext.i5.i56(i: i5) returns (i56) { i }
function {:inline} $zext.i5.i64(i: i5) returns (i64) { i }
function {:inline} $zext.i5.i80(i: i5) returns (i80) { i }
function {:inline} $zext.i5.i88(i: i5) returns (i88) { i }
function {:inline} $zext.i5.i96(i: i5) returns (i96) { i }
function {:inline} $zext.i5.i128(i: i5) returns (i128) { i }
function {:inline} $zext.i5.i160(i: i5) returns (i160) { i }
function {:inline} $zext.i5.i256(i: i5) returns (i256) { i }
function {:inline} $zext.i6.i8(i: i6) returns (i8) { i }
function {:inline} $zext.i6.i16(i: i6) returns (i16) { i }
function {:inline} $zext.i6.i24(i: i6) returns (i24) { i }
function {:inline} $zext.i6.i32(i: i6) returns (i32) { i }
function {:inline} $zext.i6.i40(i: i6) returns (i40) { i }
function {:inline} $zext.i6.i48(i: i6) returns (i48) { i }
function {:inline} $zext.i6.i56(i: i6) returns (i56) { i }
function {:inline} $zext.i6.i64(i: i6) returns (i64) { i }
function {:inline} $zext.i6.i80(i: i6) returns (i80) { i }
function {:inline} $zext.i6.i88(i: i6) returns (i88) { i }
function {:inline} $zext.i6.i96(i: i6) returns (i96) { i }
function {:inline} $zext.i6.i128(i: i6) returns (i128) { i }
function {:inline} $zext.i6.i160(i: i6) returns (i160) { i }
function {:inline} $zext.i6.i256(i: i6) returns (i256) { i }
function {:inline} $zext.i8.i16(i: i8) returns (i16) { i }
function {:inline} $zext.i8.i24(i: i8) returns (i24) { i }
function {:inline} $zext.i8.i32(i: i8) returns (i32) { i }
function {:inline} $zext.i8.i40(i: i8) returns (i40) { i }
function {:inline} $zext.i8.i48(i: i8) returns (i48) { i }
function {:inline} $zext.i8.i56(i: i8) returns (i56) { i }
function {:inline} $zext.i8.i64(i: i8) returns (i64) { i }
function {:inline} $zext.i8.i80(i: i8) returns (i80) { i }
function {:inline} $zext.i8.i88(i: i8) returns (i88) { i }
function {:inline} $zext.i8.i96(i: i8) returns (i96) { i }
function {:inline} $zext.i8.i128(i: i8) returns (i128) { i }
function {:inline} $zext.i8.i160(i: i8) returns (i160) { i }
function {:inline} $zext.i8.i256(i: i8) returns (i256) { i }
function {:inline} $zext.i16.i24(i: i16) returns (i24) { i }
function {:inline} $zext.i16.i32(i: i16) returns (i32) { i }
function {:inline} $zext.i16.i40(i: i16) returns (i40) { i }
function {:inline} $zext.i16.i48(i: i16) returns (i48) { i }
function {:inline} $zext.i16.i56(i: i16) returns (i56) { i }
function {:inline} $zext.i16.i64(i: i16) returns (i64) { i }
function {:inline} $zext.i16.i80(i: i16) returns (i80) { i }
function {:inline} $zext.i16.i88(i: i16) returns (i88) { i }
function {:inline} $zext.i16.i96(i: i16) returns (i96) { i }
function {:inline} $zext.i16.i128(i: i16) returns (i128) { i }
function {:inline} $zext.i16.i160(i: i16) returns (i160) { i }
function {:inline} $zext.i16.i256(i: i16) returns (i256) { i }
function {:inline} $zext.i24.i32(i: i24) returns (i32) { i }
function {:inline} $zext.i24.i40(i: i24) returns (i40) { i }
function {:inline} $zext.i24.i48(i: i24) returns (i48) { i }
function {:inline} $zext.i24.i56(i: i24) returns (i56) { i }
function {:inline} $zext.i24.i64(i: i24) returns (i64) { i }
function {:inline} $zext.i24.i80(i: i24) returns (i80) { i }
function {:inline} $zext.i24.i88(i: i24) returns (i88) { i }
function {:inline} $zext.i24.i96(i: i24) returns (i96) { i }
function {:inline} $zext.i24.i128(i: i24) returns (i128) { i }
function {:inline} $zext.i24.i160(i: i24) returns (i160) { i }
function {:inline} $zext.i24.i256(i: i24) returns (i256) { i }
function {:inline} $zext.i32.i40(i: i32) returns (i40) { i }
function {:inline} $zext.i32.i48(i: i32) returns (i48) { i }
function {:inline} $zext.i32.i56(i: i32) returns (i56) { i }
function {:inline} $zext.i32.i64(i: i32) returns (i64) { i }
function {:inline} $zext.i32.i80(i: i32) returns (i80) { i }
function {:inline} $zext.i32.i88(i: i32) returns (i88) { i }
function {:inline} $zext.i32.i96(i: i32) returns (i96) { i }
function {:inline} $zext.i32.i128(i: i32) returns (i128) { i }
function {:inline} $zext.i32.i160(i: i32) returns (i160) { i }
function {:inline} $zext.i32.i256(i: i32) returns (i256) { i }
function {:inline} $zext.i40.i48(i: i40) returns (i48) { i }
function {:inline} $zext.i40.i56(i: i40) returns (i56) { i }
function {:inline} $zext.i40.i64(i: i40) returns (i64) { i }
function {:inline} $zext.i40.i80(i: i40) returns (i80) { i }
function {:inline} $zext.i40.i88(i: i40) returns (i88) { i }
function {:inline} $zext.i40.i96(i: i40) returns (i96) { i }
function {:inline} $zext.i40.i128(i: i40) returns (i128) { i }
function {:inline} $zext.i40.i160(i: i40) returns (i160) { i }
function {:inline} $zext.i40.i256(i: i40) returns (i256) { i }
function {:inline} $zext.i48.i56(i: i48) returns (i56) { i }
function {:inline} $zext.i48.i64(i: i48) returns (i64) { i }
function {:inline} $zext.i48.i80(i: i48) returns (i80) { i }
function {:inline} $zext.i48.i88(i: i48) returns (i88) { i }
function {:inline} $zext.i48.i96(i: i48) returns (i96) { i }
function {:inline} $zext.i48.i128(i: i48) returns (i128) { i }
function {:inline} $zext.i48.i160(i: i48) returns (i160) { i }
function {:inline} $zext.i48.i256(i: i48) returns (i256) { i }
function {:inline} $zext.i56.i64(i: i56) returns (i64) { i }
function {:inline} $zext.i56.i80(i: i56) returns (i80) { i }
function {:inline} $zext.i56.i88(i: i56) returns (i88) { i }
function {:inline} $zext.i56.i96(i: i56) returns (i96) { i }
function {:inline} $zext.i56.i128(i: i56) returns (i128) { i }
function {:inline} $zext.i56.i160(i: i56) returns (i160) { i }
function {:inline} $zext.i56.i256(i: i56) returns (i256) { i }
function {:inline} $zext.i64.i80(i: i64) returns (i80) { i }
function {:inline} $zext.i64.i88(i: i64) returns (i88) { i }
function {:inline} $zext.i64.i96(i: i64) returns (i96) { i }
function {:inline} $zext.i64.i128(i: i64) returns (i128) { i }
function {:inline} $zext.i64.i160(i: i64) returns (i160) { i }
function {:inline} $zext.i64.i256(i: i64) returns (i256) { i }
function {:inline} $zext.i80.i88(i: i80) returns (i88) { i }
function {:inline} $zext.i80.i96(i: i80) returns (i96) { i }
function {:inline} $zext.i80.i128(i: i80) returns (i128) { i }
function {:inline} $zext.i80.i160(i: i80) returns (i160) { i }
function {:inline} $zext.i80.i256(i: i80) returns (i256) { i }
function {:inline} $zext.i88.i96(i: i88) returns (i96) { i }
function {:inline} $zext.i88.i128(i: i88) returns (i128) { i }
function {:inline} $zext.i88.i160(i: i88) returns (i160) { i }
function {:inline} $zext.i88.i256(i: i88) returns (i256) { i }
function {:inline} $zext.i96.i128(i: i96) returns (i128) { i }
function {:inline} $zext.i96.i160(i: i96) returns (i160) { i }
function {:inline} $zext.i96.i256(i: i96) returns (i256) { i }
function {:inline} $zext.i128.i160(i: i128) returns (i160) { i }
function {:inline} $zext.i128.i256(i: i128) returns (i256) { i }
function {:inline} $zext.i160.i256(i: i160) returns (i256) { i }
function $extractvalue.i1(p: ref, i: int) returns (i1);
function $extractvalue.i5(p: ref, i: int) returns (i5);
function $extractvalue.i6(p: ref, i: int) returns (i6);
function $extractvalue.i8(p: ref, i: int) returns (i8);
function $extractvalue.i16(p: ref, i: int) returns (i16);
function $extractvalue.i24(p: ref, i: int) returns (i24);
function $extractvalue.i32(p: ref, i: int) returns (i32);
function $extractvalue.i40(p: ref, i: int) returns (i40);
function $extractvalue.i48(p: ref, i: int) returns (i48);
function $extractvalue.i56(p: ref, i: int) returns (i56);
function $extractvalue.i64(p: ref, i: int) returns (i64);
function $extractvalue.i80(p: ref, i: int) returns (i80);
function $extractvalue.i88(p: ref, i: int) returns (i88);
function $extractvalue.i96(p: ref, i: int) returns (i96);
function $extractvalue.i128(p: ref, i: int) returns (i128);
function $extractvalue.i160(p: ref, i: int) returns (i160);
function $extractvalue.i256(p: ref, i: int) returns (i256);
// Pointer arithmetic operations
function {:inline} $add.ref(p1: ref, p2: ref) returns (ref) { $add.i64(p1, p2) }
function {:inline} $sub.ref(p1: ref, p2: ref) returns (ref) { $sub.i64(p1, p2) }
function {:inline} $mul.ref(p1: ref, p2: ref) returns (ref) { $mul.i64(p1, p2) }

// Pointer predicates
function {:inline} $eq.ref(p1: ref, p2: ref) returns (i1) { (if $eq.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $eq.ref.bool(p1: ref, p2: ref) returns (bool) { $eq.i64.bool(p1, p2) }
function {:inline} $ne.ref(p1: ref, p2: ref) returns (i1) { (if $ne.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $ne.ref.bool(p1: ref, p2: ref) returns (bool) { $ne.i64.bool(p1, p2) }
function {:inline} $ugt.ref(p1: ref, p2: ref) returns (i1) { (if $ugt.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $ugt.ref.bool(p1: ref, p2: ref) returns (bool) { $ugt.i64.bool(p1, p2) }
function {:inline} $uge.ref(p1: ref, p2: ref) returns (i1) { (if $uge.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $uge.ref.bool(p1: ref, p2: ref) returns (bool) { $uge.i64.bool(p1, p2) }
function {:inline} $ult.ref(p1: ref, p2: ref) returns (i1) { (if $ult.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $ult.ref.bool(p1: ref, p2: ref) returns (bool) { $ult.i64.bool(p1, p2) }
function {:inline} $ule.ref(p1: ref, p2: ref) returns (i1) { (if $ule.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $ule.ref.bool(p1: ref, p2: ref) returns (bool) { $ule.i64.bool(p1, p2) }
function {:inline} $sgt.ref(p1: ref, p2: ref) returns (i1) { (if $sgt.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $sgt.ref.bool(p1: ref, p2: ref) returns (bool) { $sgt.i64.bool(p1, p2) }
function {:inline} $sge.ref(p1: ref, p2: ref) returns (i1) { (if $sge.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $sge.ref.bool(p1: ref, p2: ref) returns (bool) { $sge.i64.bool(p1, p2) }
function {:inline} $slt.ref(p1: ref, p2: ref) returns (i1) { (if $slt.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $slt.ref.bool(p1: ref, p2: ref) returns (bool) { $slt.i64.bool(p1, p2) }
function {:inline} $sle.ref(p1: ref, p2: ref) returns (i1) { (if $sle.i64.bool(p1, p2) then 1 else 0) }
function {:inline} $sle.ref.bool(p1: ref, p2: ref) returns (bool) { $sle.i64.bool(p1, p2) }

// Pointer load/store operations
function {:inline} $load.ref(M: [ref] ref, p: ref) returns (ref) { M[p] }
function {:inline} $store.ref(M: [ref] ref, p: ref, i: ref) returns ([ref] ref) { M[p := i] }

// Pointer conversion
function {:inline} $bitcast.ref.ref(p: ref) returns (ref) { p }
function $extractvalue.ref(p: ref, i: int) returns (ref);
// Pointer-number conversion
function {:inline} $p2i.ref.i8(p: ref) returns (i8) { $trunc.i64.i8(p) }
function {:inline} $i2p.i8.ref(i: i8) returns (ref) { $zext.i8.i64(i) }
function {:inline} $p2i.ref.i16(p: ref) returns (i16) { $trunc.i64.i16(p) }
function {:inline} $i2p.i16.ref(i: i16) returns (ref) { $zext.i16.i64(i) }
function {:inline} $p2i.ref.i32(p: ref) returns (i32) { $trunc.i64.i32(p) }
function {:inline} $i2p.i32.ref(i: i32) returns (ref) { $zext.i32.i64(i) }
function {:inline} $p2i.ref.i64(p: ref) returns (i64) { p }
function {:inline} $i2p.i64.ref(i: i64) returns (ref) { i }

function $fp(ipart: int, fpart: int, epart: int) returns (float);
// Floating-point arithmetic operations
function $abs.float(f: float) returns (float);
function $round.float(f: float) returns (float);
function $sqrt.float(f: float) returns (float);
function $fadd.float(f1: float, f2: float) returns (float);
function $fsub.float(f1: float, f2: float) returns (float);
function $fmul.float(f1: float, f2: float) returns (float);
function $fdiv.float(f1: float, f2: float) returns (float);
function $frem.float(f1: float, f2: float) returns (float);
function $min.float(f1: float, f2: float) returns (float);
function $max.float(f1: float, f2: float) returns (float);
function $fma.float(f1: float, f2: float, f3: float) returns (float);
// Floating-point predicates
function $foeq.float.bool(f1: float, f2: float) returns (bool);
function $fole.float.bool(f1: float, f2: float) returns (bool);
function $folt.float.bool(f1: float, f2: float) returns (bool);
function $foge.float.bool(f1: float, f2: float) returns (bool);
function $fogt.float.bool(f1: float, f2: float) returns (bool);
function $fone.float.bool(f1: float, f2: float) returns (bool);
function $ford.float.bool(f1: float, f2: float) returns (bool);
function $fueq.float.bool(f1: float, f2: float) returns (bool);
function $fugt.float.bool(f1: float, f2: float) returns (bool);
function $fuge.float.bool(f1: float, f2: float) returns (bool);
function $fult.float.bool(f1: float, f2: float) returns (bool);
function $fule.float.bool(f1: float, f2: float) returns (bool);
function $fune.float.bool(f1: float, f2: float) returns (bool);
function $funo.float.bool(f1: float, f2: float) returns (bool);
function $ffalse.float.bool(f1: float, f2: float) returns (bool);
function $ftrue.float.bool(f1: float, f2: float) returns (bool);
// Floating-point/integer conversion
function $bitcast.float.i8(f: float) returns (i8);
function $bitcast.float.i16(f: float) returns (i16);
function $bitcast.float.i32(f: float) returns (i32);
function $bitcast.float.i64(f: float) returns (i64);
function $bitcast.float.i80(f: float) returns (i80);
function $bitcast.i8.float(i: i8) returns (float);
function $bitcast.i16.float(i: i16) returns (float);
function $bitcast.i32.float(i: i32) returns (float);
function $bitcast.i64.float(i: i64) returns (float);
function $bitcast.i80.float(i: i80) returns (float);
function $fp2si.float.i1(f: float) returns (i1);
function $fp2si.float.i5(f: float) returns (i5);
function $fp2si.float.i6(f: float) returns (i6);
function $fp2si.float.i8(f: float) returns (i8);
function $fp2si.float.i16(f: float) returns (i16);
function $fp2si.float.i24(f: float) returns (i24);
function $fp2si.float.i32(f: float) returns (i32);
function $fp2si.float.i40(f: float) returns (i40);
function $fp2si.float.i48(f: float) returns (i48);
function $fp2si.float.i56(f: float) returns (i56);
function $fp2si.float.i64(f: float) returns (i64);
function $fp2si.float.i80(f: float) returns (i80);
function $fp2si.float.i88(f: float) returns (i88);
function $fp2si.float.i96(f: float) returns (i96);
function $fp2si.float.i128(f: float) returns (i128);
function $fp2si.float.i160(f: float) returns (i160);
function $fp2si.float.i256(f: float) returns (i256);
function $fp2ui.float.i1(f: float) returns (i1);
function $fp2ui.float.i5(f: float) returns (i5);
function $fp2ui.float.i6(f: float) returns (i6);
function $fp2ui.float.i8(f: float) returns (i8);
function $fp2ui.float.i16(f: float) returns (i16);
function $fp2ui.float.i24(f: float) returns (i24);
function $fp2ui.float.i32(f: float) returns (i32);
function $fp2ui.float.i40(f: float) returns (i40);
function $fp2ui.float.i48(f: float) returns (i48);
function $fp2ui.float.i56(f: float) returns (i56);
function $fp2ui.float.i64(f: float) returns (i64);
function $fp2ui.float.i80(f: float) returns (i80);
function $fp2ui.float.i88(f: float) returns (i88);
function $fp2ui.float.i96(f: float) returns (i96);
function $fp2ui.float.i128(f: float) returns (i128);
function $fp2ui.float.i160(f: float) returns (i160);
function $fp2ui.float.i256(f: float) returns (i256);
function $si2fp.i1.float(i: i1) returns (float);
function $si2fp.i5.float(i: i5) returns (float);
function $si2fp.i6.float(i: i6) returns (float);
function $si2fp.i8.float(i: i8) returns (float);
function $si2fp.i16.float(i: i16) returns (float);
function $si2fp.i24.float(i: i24) returns (float);
function $si2fp.i32.float(i: i32) returns (float);
function $si2fp.i40.float(i: i40) returns (float);
function $si2fp.i48.float(i: i48) returns (float);
function $si2fp.i56.float(i: i56) returns (float);
function $si2fp.i64.float(i: i64) returns (float);
function $si2fp.i80.float(i: i80) returns (float);
function $si2fp.i88.float(i: i88) returns (float);
function $si2fp.i96.float(i: i96) returns (float);
function $si2fp.i128.float(i: i128) returns (float);
function $si2fp.i160.float(i: i160) returns (float);
function $si2fp.i256.float(i: i256) returns (float);
function $ui2fp.i1.float(i: i1) returns (float);
function $ui2fp.i5.float(i: i5) returns (float);
function $ui2fp.i6.float(i: i6) returns (float);
function $ui2fp.i8.float(i: i8) returns (float);
function $ui2fp.i16.float(i: i16) returns (float);
function $ui2fp.i24.float(i: i24) returns (float);
function $ui2fp.i32.float(i: i32) returns (float);
function $ui2fp.i40.float(i: i40) returns (float);
function $ui2fp.i48.float(i: i48) returns (float);
function $ui2fp.i56.float(i: i56) returns (float);
function $ui2fp.i64.float(i: i64) returns (float);
function $ui2fp.i80.float(i: i80) returns (float);
function $ui2fp.i88.float(i: i88) returns (float);
function $ui2fp.i96.float(i: i96) returns (float);
function $ui2fp.i128.float(i: i128) returns (float);
function $ui2fp.i160.float(i: i160) returns (float);
function $ui2fp.i256.float(i: i256) returns (float);
// Floating-point conversion
function $fpext.float.float(f: float) returns (float);
function $fptrunc.float.float(f: float) returns (float);
// Floating-point load/store operations
function {:inline} $load.float(M: [ref] float, p: ref) returns (float) { M[p] }
function {:inline} $store.float(M: [ref] float, p: ref, f: float) returns ([ref] float) { M[p := f] }
function {:inline} $load.unsafe.float(M: [ref] i8, p: ref) returns (float) { $bitcast.i8.float(M[p]) }
function {:inline} $store.unsafe.float(M: [ref] i8, p: ref, f: float) returns ([ref] i8) { M[p := $bitcast.float.i8(f)] }
function $extractvalue.float(p: ref, i: int) returns (float);
const ldv_irq_1_2: ref;
axiom (ldv_irq_1_2 == $sub.ref(0, 1028));
const LDV_IN_INTERRUPT: ref;
axiom (LDV_IN_INTERRUPT == $sub.ref(0, 2056));
const ldv_irq_1_3: ref;
axiom (ldv_irq_1_3 == $sub.ref(0, 3084));
const ldv_irq_1_1: ref;
axiom (ldv_irq_1_1 == $sub.ref(0, 4112));
const ldv_irq_1_0: ref;
axiom (ldv_irq_1_0 == $sub.ref(0, 5140));
const ldv_irq_line_1_0: ref;
axiom (ldv_irq_line_1_0 == $sub.ref(0, 6168));
const ldv_irq_data_1_0: ref;
axiom (ldv_irq_data_1_0 == $sub.ref(0, 7200));
const ldv_irq_line_1_1: ref;
axiom (ldv_irq_line_1_1 == $sub.ref(0, 8228));
const ldv_irq_data_1_1: ref;
axiom (ldv_irq_data_1_1 == $sub.ref(0, 9260));
const ldv_irq_line_1_2: ref;
axiom (ldv_irq_line_1_2 == $sub.ref(0, 10288));
const ldv_irq_data_1_2: ref;
axiom (ldv_irq_data_1_2 == $sub.ref(0, 11320));
const ldv_irq_line_1_3: ref;
axiom (ldv_irq_line_1_3 == $sub.ref(0, 12348));
const ldv_irq_data_1_3: ref;
axiom (ldv_irq_data_1_3 == $sub.ref(0, 13380));
const ks8842_netdev_ops_group1: ref;
axiom (ks8842_netdev_ops_group1 == $sub.ref(0, 14412));
const ks8842_platform_driver_group0: ref;
axiom (ks8842_platform_driver_group0 == $sub.ref(0, 15444));
const ldv_state_variable_4: ref;
axiom (ldv_state_variable_4 == $sub.ref(0, 16472));
const ldv_state_variable_1: ref;
axiom (ldv_state_variable_1 == $sub.ref(0, 17500));
const ref_cnt: ref;
axiom (ref_cnt == $sub.ref(0, 18528));
const ldv_state_variable_0: ref;
axiom (ldv_state_variable_0 == $sub.ref(0, 19556));
const ldv_state_variable_3: ref;
axiom (ldv_state_variable_3 == $sub.ref(0, 20584));
const ldv_state_variable_2: ref;
axiom (ldv_state_variable_2 == $sub.ref(0, 21612));
const ldv_retval_1: ref;
axiom (ldv_retval_1 == $sub.ref(0, 22640));
const ldv_retval_0: ref;
axiom (ldv_retval_0 == $sub.ref(0, 23668));
const ldv_retval_2: ref;
axiom (ldv_retval_2 == $sub.ref(0, 24696));
const ldv_retval_3: ref;
axiom (ldv_retval_3 == $sub.ref(0, 25724));
const last_index: ref;
axiom (last_index == $sub.ref(0, 26752));
const LDV_SKBS: ref;
axiom (LDV_SKBS == $sub.ref(0, 27784));
const {:count 15} set_impl: ref;
axiom (set_impl == $sub.ref(0, 28928));
const .str: ref;
axiom (.str == $sub.ref(0, 29959));
const {:count 11} .str.1: ref;
axiom (.str.1 == $sub.ref(0, 30994));
const {:count 234} .str.2: ref;
axiom (.str.2 == $sub.ref(0, 32252));
const {:count 16} .str.3: ref;
axiom (.str.3 == $sub.ref(0, 33292));
const iomem_resource: ref;
axiom (iomem_resource == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32776)));
const {:count 25} .str.31: ref;
axiom (.str.31 == $sub.ref(0, 34341));
const {:count 25} .str.32: ref;
axiom (.str.32 == $sub.ref(0, 35390));
const ks8842_netdev_ops: ref;
axiom (ks8842_netdev_ops == $sub.ref(0, 36894));
const ks8842_ethtool_ops: ref;
axiom (ks8842_ethtool_ops == $sub.ref(0, 38294));
const {:count 6} .str.33: ref;
axiom (.str.33 == $sub.ref(0, 39324));
const {:count 56} .str.34: ref;
axiom (.str.34 == $sub.ref(0, 40404));
const {:count 15} .str.36: ref;
axiom (.str.36 == $sub.ref(0, 41443));
const {:count 25} .str.42: ref;
axiom (.str.42 == $sub.ref(0, 42492));
const {:count 11} .str.22: ref;
axiom (.str.22 == $sub.ref(0, 43527));
const {:count 17} .str.40: ref;
axiom (.str.40 == $sub.ref(0, 44568));
const {:count 20} .str.41: ref;
axiom (.str.41 == $sub.ref(0, 45612));
const {:count 17} .str.37: ref;
axiom (.str.37 == $sub.ref(0, 46653));
const {:count 24} .str.38: ref;
axiom (.str.38 == $sub.ref(0, 47701));
const {:count 16} .str.39: ref;
axiom (.str.39 == $sub.ref(0, 48741));
const {:count 26} .str.11: ref;
axiom (.str.11 == $sub.ref(0, 49791));
const {:count 30} .str.14: ref;
axiom (.str.14 == $sub.ref(0, 50845));
const {:count 22} .str.15: ref;
axiom (.str.15 == $sub.ref(0, 51891));
const {:count 26} .str.12: ref;
axiom (.str.12 == $sub.ref(0, 52941));
const {:count 20} .str.13: ref;
axiom (.str.13 == $sub.ref(0, 53985));
const {:count 26} .str.19: ref;
axiom (.str.19 == $sub.ref(0, 55035));
const {:count 71} .str.20: ref;
axiom (.str.20 == $sub.ref(0, 56130));
const {:count 23} .str.35: ref;
axiom (.str.35 == $sub.ref(0, 57177));
const {:count 37} .str.16: ref;
axiom (.str.16 == $sub.ref(0, 58238));
const {:count 41} .str.6: ref;
axiom (.str.6 == $sub.ref(0, 59303));
const dma_ops: ref;
axiom (dma_ops == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32784)));
const {:count 17} .str.17: ref;
axiom (.str.17 == $sub.ref(0, 60344));
const {:count 17} .str.18: ref;
axiom (.str.18 == $sub.ref(0, 61385));
const ks8842_platform_driver: ref;
axiom (ks8842_platform_driver == $sub.ref(0, 62585));
const __this_module: ref;
axiom (__this_module == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32792)));
const {:count 18} .str.30: ref;
axiom (.str.30 == $sub.ref(0, 63627));
const system_wq: ref;
axiom (system_wq == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32800)));
const {:count 15} .str.29: ref;
axiom (.str.29 == $sub.ref(0, 64666));
const {:count 18} .str.21: ref;
axiom (.str.21 == $sub.ref(0, 65708));
const {:count 16} .str.27: ref;
axiom (.str.27 == $sub.ref(0, 66748));
const {:count 43} .str.28: ref;
axiom (.str.28 == $sub.ref(0, 67815));
const {:count 20} .str.23: ref;
axiom (.str.23 == $sub.ref(0, 68859));
const {:count 16} .str.24: ref;
axiom (.str.24 == $sub.ref(0, 69899));
const {:count 17} .str.25: ref;
axiom (.str.25 == $sub.ref(0, 70940));
const {:count 17} .str.26: ref;
axiom (.str.26 == $sub.ref(0, 71981));
const {:count 12} .str.7: ref;
axiom (.str.7 == $sub.ref(0, 73017));
const {:count 12} .str.5: ref;
axiom (.str.5 == $sub.ref(0, 74053));
const {:count 46} .str.8: ref;
axiom (.str.8 == $sub.ref(0, 75123));
const {:count 40} .str.9: ref;
axiom (.str.9 == $sub.ref(0, 76187));
const {:count 28} .str.10: ref;
axiom (.str.10 == $sub.ref(0, 77239));
const {:count 13} .str.4: ref;
axiom (.str.4 == $sub.ref(0, 78276));
const env_value_str: ref;
axiom (env_value_str == $sub.ref(0, 79308));
const {:count 3} .str.1.75: ref;
axiom (.str.1.75 == $sub.ref(0, 80335));
const {:count 14} .str.76: ref;
axiom (.str.76 == $sub.ref(0, 81373));
const errno_global: ref;
axiom (errno_global == $sub.ref(0, 82401));
const __kmalloc: ref;
axiom (__kmalloc == $sub.ref(0, 83433));
procedure  __kmalloc($i0: i64, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5394, 9} true;
  assume {:verifier.code 0} true;
  call {:cexpr "__kmalloc:arg:size"} boogie_si_record_i64($i0);
  call {:cexpr "__kmalloc:arg:t"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5394, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := ldv_malloc($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5394, 2} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const llvm.dbg.declare: ref;
axiom (llvm.dbg.declare == $sub.ref(0, 84465));
procedure  llvm.dbg.declare($p0: ref, $p1: ref, $p2: ref);
const ldv_malloc: ref;
axiom (ldv_malloc == $sub.ref(0, 85497));
procedure  ldv_malloc($i0: i64)
  returns ($r: ref)
{
  var $i1: i32;
  var $i2: i1;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $i7: i32;
  var $p3: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5670, 13} true;
  assume {:verifier.code 1} true;
  call {:cexpr "ldv_malloc:arg:size"} boogie_si_record_i64($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5670, 13} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
  call {:cexpr "tmp___0"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5671, 15} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5671, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5672, 5} true;
  assume {:verifier.code 0} true;
  $p3 := $0.ref;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5674, 11} true;
  assume {:verifier.code 0} true;
  call $p4 := malloc($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5676, 23} true;
  assume {:verifier.code 1} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5676, 41} true;
  assume {:verifier.code 1} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5676, 41} true;
  assume {:verifier.code 1} true;
  $i7 := $zext.i1.i32($i6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5676, 5} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5677, 5} true;
  assume {:verifier.code 0} true;
  $p3 := $p4;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5680, 1} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const malloc: ref;
axiom (malloc == $sub.ref(0, 86529));
procedure  malloc($i0: i64)
  returns ($r: ref)
{
  call $r := $malloc($i0);
}
const ldv_zalloc: ref;
axiom (ldv_zalloc == $sub.ref(0, 87561));
procedure  ldv_zalloc($i0: i64)
  returns ($r: ref)
{
  var $i1: i32;
  var $i2: i1;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $i7: i32;
  var $p3: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5687, 13} true;
  assume {:verifier.code 1} true;
  call {:cexpr "ldv_zalloc:arg:size"} boogie_si_record_i64($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5687, 13} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
  call {:cexpr "tmp___0"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5688, 15} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5688, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5689, 5} true;
  assume {:verifier.code 0} true;
  $p3 := $0.ref;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5691, 11} true;
  assume {:verifier.code 0} true;
  call $p4 := calloc(1, $i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5693, 23} true;
  assume {:verifier.code 1} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5693, 41} true;
  assume {:verifier.code 1} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5693, 41} true;
  assume {:verifier.code 1} true;
  $i7 := $zext.i1.i32($i6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5693, 5} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5694, 5} true;
  assume {:verifier.code 0} true;
  $p3 := $p4;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5697, 1} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const ldv__builtin_expect: ref;
axiom (ldv__builtin_expect == $sub.ref(0, 88593));
procedure  ldv__builtin_expect($i0: i64, $i1: i64)
  returns ($r: i64)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5739, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "ldv__builtin_expect:arg:exp"} boogie_si_record_i64($i0);
  call {:cexpr "ldv__builtin_expect:arg:c"} boogie_si_record_i64($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5739, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const ldv_error: ref;
axiom (ldv_error == $sub.ref(0, 89625));
procedure  ldv_error()
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5724, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5724, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5726, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_error();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5728, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_irq_1: ref;
axiom (ldv_irq_1 == $sub.ref(0, 90657));
procedure  ldv_irq_1($i0: i32, $i1: i32, $p2: ref)
  returns ($r: i32)
{
  var $i3: i1;
  var $i4: i32;
  var $i5: i1;
  var $i6: i1;
  var $i7: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7546, 13} true;
  assume {:verifier.code 0} true;
  call {:cexpr "ldv_irq_1:arg:state"} boogie_si_record_i32($i0);
  call {:cexpr "ldv_irq_1:arg:line"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7546, 13} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i0, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7546, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7547, 11} true;
  assume {:verifier.code 1} true;
  call $i4 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i4);
  call {:cexpr "tmp"} boogie_si_record_i32($i4);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb3:
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i4, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i5 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7550, 15} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i0, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7550, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb6, $bb7;
$bb5:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb6:
  assume ($i6 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7551, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := 2;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7552, 20} true;
  assume {:verifier.code 0} true;
  call $i7 := ks8842_irq($i1, $p2);
  call {:cexpr "irq_retval"} boogie_si_record_i32($i7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7553, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := 1;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7554, 7} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7566, 1} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
$bb9:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7557, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7562, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb11:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7559, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7560, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7560, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb13:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7564, 3} true;
  assume {:verifier.code 0} true;
  goto $bb8;
}
const ks8842_irq: ref;
axiom (ks8842_irq == $sub.ref(0, 91689));
procedure  ks8842_irq($i0: i32, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $i10: i16;
  var $i11: i16;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i24;
  var $i19: i24;
  var $i20: i24;
  var $p21: ref;
  var $p22: ref;
  var $i23: i8;
  var $i24: i64;
  var $i25: i64;
  var $i26: i64;
  var $i27: i1;
  var $i28: i32;
  var $i29: i32;
  var $i30: i32;
  var $i31: i1;
  var $p32: ref;
  var $p33: ref;
  var $i34: i32;
  var $i35: i1;
  var $p36: ref;
  var $p37: ref;
  var $i38: i32;
  var $i39: i1;
  var $p40: ref;
  var $i41: i32;
  var $i42: i32;
  var $i43: i16;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6882, 12} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  call {:cexpr "ks8842_irq:arg:irq"} boogie_si_record_i32($i0);
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6882, 12} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6883, 9} true;
  assume {:verifier.code 0} true;
  call $p4 := netdev_priv($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6884, 13} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6885, 31} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p5, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6885, 31} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.1, $p6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6885, 39} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p7, $mul.ref(14, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6885, 13} true;
  assume {:verifier.code 0} true;
  call $i9 := ioread16($p8);
  call {:cexpr "tmp___0"} boogie_si_record_i32($i9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6886, 16} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i32.i16($i9);
  call {:cexpr "entry_bank"} boogie_si_record_i16($i10);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6888, 9} true;
  assume {:verifier.code 0} true;
  call $i11 := ks8842_read16($p5, 18, 2);
  call {:cexpr "isr"} boogie_si_record_i16($i11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6889, 14} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6889, 22} true;
  assume {:verifier.code 0} true;
  $M.2 := $store.ref($M.2, $p12, .str);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6890, 14} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6890, 23} true;
  assume {:verifier.code 0} true;
  $M.3 := $store.ref($M.3, $p13, .str.1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6891, 14} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6891, 23} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.ref($M.4, $p14, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6892, 14} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6892, 21} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.ref($M.5, $p15, .str.3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6893, 14} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6893, 14} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6893, 21} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i24($M.6, $p17);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6893, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6893:21: warning: over-approximating bitwise operation and;
  $i19 := $and.i24($i18, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6893, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6893:21: warning: over-approximating bitwise operation or;
  $i20 := $or.i24($i19, 868);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6893, 21} true;
  assume {:verifier.code 0} true;
  $M.6 := $store.i24($M.6, $p17, $i20);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6894, 14} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6894, 20} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i8($M.7, $p21, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6895, 51} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6895, 51} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i8($M.7, $p22);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6895, 33} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i8.i64($i23);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6895, 57} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6895:57: warning: over-approximating bitwise operation and;
  $i25 := $and.i64($i24, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6895, 13} true;
  assume {:verifier.code 0} true;
  call $i26 := ldv__builtin_expect($i25, 0);
  call {:cexpr "tmp___1"} boogie_si_record_i64($i26);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6896, 15} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i64($i26, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6896, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i27 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6898, 40} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i16.i32($i11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6897, 5} true;
  assume {:verifier.code 0} true;
  call $i29 := __dynamic_netdev_dbg.ref.ref.ref.ref.i32($p2, $p3, .str.3, .str.1, $i28);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6899, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6901, 7} true;
  assume {:verifier.code 0} true;
  $i30 := $zext.i16.i32($i11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6901, 26} true;
  assume {:verifier.code 0} true;
  $i31 := $ne.i32($i30, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6901, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i31 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6902, 18} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p5, $mul.ref(0, 416)), $mul.ref(232, 1));
  $p33 := $add.ref($add.ref($add.ref($p5, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6902, 25} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i32($M.1, $p33);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6902, 33} true;
  assume {:verifier.code 0} true;
  $i35 := $ne.i32($i34, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6902, 39} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb6, $bb7;
$bb5:
  assume !(($i31 == 1));
  assume {:verifier.code 0} true;
  $i41 := 0;
  goto $bb12;
$bb6:
  assume ($i35 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6902, 51} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p5, $mul.ref(0, 416)), $mul.ref(304, 1));
  $p37 := $add.ref($add.ref($add.ref($p5, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(104, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6902, 58} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i32($M.1, $p37);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6902, 66} true;
  assume {:verifier.code 0} true;
  $i39 := $ne.i32($i38, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6902, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb9, $bb10;
$bb7:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6902, 39} true;
  assume {:verifier.code 0} true;
  assume !(($i35 == 1));
  goto $bb8;
$bb8:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6905, 7} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p5, 18, 0, 0);
  assume {:verifier.code 0} true;
  goto $bb11;
$bb9:
  assume ($i39 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6903, 7} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p5, 18, 8192, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6904, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6902, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i39 == 1));
  goto $bb8;
$bb11:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6907, 33} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p5, $mul.ref(0, 416)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6907, 5} true;
  assume {:verifier.code 0} true;
  call tasklet_schedule($p40);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6909, 3} true;
  assume {:verifier.code 0} true;
  $i41 := 1;
  goto $bb12;
$bb12:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6911, 13} true;
  assume {:verifier.code 0} true;
  $i42 := $zext.i16.i32($i10);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6911, 13} true;
  assume {:verifier.code 0} true;
  $i43 := $trunc.i32.i16($i42);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6911, 40} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($add.ref($p5, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6911, 40} true;
  assume {:verifier.code 0} true;
  $p45 := $load.ref($M.1, $p44);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6911, 48} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p45, $mul.ref(14, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6911, 3} true;
  assume {:verifier.code 0} true;
  call iowrite16($i43, $p46);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6912, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_resume_dma($p5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6913, 3} true;
  assume {:verifier.code 0} true;
  $r := $i41;
  $exn := false;
  return;
}
const ldv_stop: ref;
axiom (ldv_stop == $sub.ref(0, 92721));
procedure  ldv_stop()
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5731, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5731, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5733, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb2:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5735, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const netdev_priv: ref;
axiom (netdev_priv == $sub.ref(0, 93753));
procedure  netdev_priv($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5845, 11} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5845, 11} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5845, 23} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, $mul.ref(3264, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5845, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const ioread16: ref;
axiom (ioread16 == $sub.ref(0, 94785));
procedure  ioread16($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8364, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8364, 10} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_uint();
  call {:cexpr "smack:ext:__VERIFIER_nondet_uint"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8364, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const ks8842_read16: ref;
axiom (ks8842_read16 == $sub.ref(0, 95817));
procedure  ks8842_read16($p0: ref, $i1: i16, $i2: i32)
  returns ($r: i16)
{
  var $i3: i32;
  var $i4: i16;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $p8: ref;
  var $i9: i32;
  var $i10: i16;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6086, 31} true;
  assume {:verifier.code 0} true;
  call {:cexpr "ks8842_read16:arg:bank"} boogie_si_record_i16($i1);
  call {:cexpr "ks8842_read16:arg:offset"} boogie_si_record_i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6086, 31} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i16.i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6086, 31} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.i32.i16($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6086, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_select_bank($p0, $i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6087, 27} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6087, 27} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.1, $p5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6087, 37} true;
  assume {:verifier.code 0} true;
  $i7 := $sext.i32.i64($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6087, 35} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p6, $mul.ref($i7, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6087, 9} true;
  assume {:verifier.code 0} true;
  call $i9 := ioread16($p8);
  call {:cexpr "tmp"} boogie_si_record_i32($i9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6088, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i32.i16($i9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6088, 3} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
}
const __dynamic_netdev_dbg: ref;
axiom (__dynamic_netdev_dbg == $sub.ref(0, 96849));
procedure  __dynamic_netdev_dbg.ref.ref.ref.ref($p0: ref, $p1: ref, $p2: ref, p.3: ref)
  returns ($r: i32)
{
  var $i3: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8278, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8278, 10} true;
  assume {:verifier.code 1} true;
  call $i3 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8278, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
procedure  __dynamic_netdev_dbg.ref.ref.ref.ref.i32($p0: ref, $p1: ref, $p2: ref, p.3: ref, p.4: i32)
  returns ($r: i32)
{
  var $i3: i32;
$bb1:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8278, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8278, 10} true;
  assume {:verifier.code 1} true;
  call $i3 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8278, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
procedure  __dynamic_netdev_dbg.ref.ref.ref($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32)
{
  var $i3: i32;
$bb2:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8278, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8278, 10} true;
  assume {:verifier.code 1} true;
  call $i3 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8278, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
procedure  __dynamic_netdev_dbg.ref.ref.ref.ref.i32.ref.ref.ref.ref($p0: ref, $p1: ref, $p2: ref, p.3: ref, p.4: i32, p.5: ref, p.6: ref, p.7: ref, p.8: ref)
  returns ($r: i32)
{
  var $i3: i32;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8278, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8278, 10} true;
  assume {:verifier.code 1} true;
  call $i3 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8278, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
procedure  __dynamic_netdev_dbg.ref.ref.ref.i32($p0: ref, $p1: ref, $p2: ref, p.3: i32)
  returns ($r: i32)
{
  var $i3: i32;
$bb4:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8278, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8278, 10} true;
  assume {:verifier.code 1} true;
  call $i3 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8278, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const ks8842_write16: ref;
axiom (ks8842_write16 == $sub.ref(0, 97881));
procedure  ks8842_write16($p0: ref, $i1: i16, $i2: i16, $i3: i32)
{
  var $i4: i32;
  var $i5: i16;
  var $i6: i32;
  var $i7: i16;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $p11: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6031, 31} true;
  assume {:verifier.code 0} true;
  call {:cexpr "ks8842_write16:arg:bank"} boogie_si_record_i16($i1);
  call {:cexpr "ks8842_write16:arg:value"} boogie_si_record_i16($i2);
  call {:cexpr "ks8842_write16:arg:offset"} boogie_si_record_i32($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6031, 31} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i16.i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6031, 31} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i16($i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6031, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_select_bank($p0, $i5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6032, 13} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i16.i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6032, 13} true;
  assume {:verifier.code 0} true;
  $i7 := $trunc.i32.i16($i6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6032, 35} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6032, 35} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.1, $p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6032, 45} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6032, 43} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p9, $mul.ref($i10, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6032, 3} true;
  assume {:verifier.code 0} true;
  call iowrite16($i7, $p11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6033, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const tasklet_schedule: ref;
axiom (tasklet_schedule == $sub.ref(0, 98913));
procedure  tasklet_schedule($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5801, 62} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5801, 62} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5801, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := test_and_set_bit(0, $p1);
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5802, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i32($i2, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5802, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5803, 5} true;
  assume {:verifier.code 0} true;
  call __tasklet_schedule($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5804, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5806, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const iowrite16: ref;
axiom (iowrite16 == $sub.ref(0, 99945));
procedure  iowrite16($i0: i16, $p1: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8382, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "iowrite16:arg:arg0"} boogie_si_record_i16($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8382, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ks8842_resume_dma: ref;
axiom (ks8842_resume_dma == $sub.ref(0, 100977));
procedure  ks8842_resume_dma($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6007, 26} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6007, 26} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6007, 26} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.1, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6007, 34} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, $mul.ref(48, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6007, 3} true;
  assume {:verifier.code 0} true;
  call iowrite32(1, $p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6008, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const iowrite32: ref;
axiom (iowrite32 == $sub.ref(0, 102009));
procedure  iowrite32($i0: i32, $p1: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8385, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "iowrite32:arg:arg0"} boogie_si_record_i32($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8385, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const test_and_set_bit: ref;
axiom (test_and_set_bit == $sub.ref(0, 103041));
procedure  test_and_set_bit($i0: i64, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i8;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5277, 32} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  call {:cexpr "test_and_set_bit:arg:nr"} boogie_si_record_i64($i0);
  assume true;
  call devirtbounce(0, $p1, $p2, $i0, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5277, 32} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i8($M.8, $p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5277, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i8.i32($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5277, 35} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5277, 35} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i32($i5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5277, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const __tasklet_schedule: ref;
axiom (__tasklet_schedule == $sub.ref(0, 104073));
procedure  __tasklet_schedule($p0: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8309, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8309, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ks8842_select_bank: ref;
axiom (ks8842_select_bank == $sub.ref(0, 105105));
procedure  ks8842_select_bank($p0: ref, $i1: i16)
{
  var $i2: i32;
  var $i3: i16;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6014, 13} true;
  assume {:verifier.code 0} true;
  call {:cexpr "ks8842_select_bank:arg:bank"} boogie_si_record_i16($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6014, 13} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i16.i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6014, 13} true;
  assume {:verifier.code 0} true;
  $i3 := $trunc.i32.i16($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6014, 34} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6014, 34} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.1, $p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6014, 42} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p5, $mul.ref(14, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6014, 3} true;
  assume {:verifier.code 0} true;
  call iowrite16($i3, $p6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6015, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const activate_suitable_irq_1: ref;
axiom (activate_suitable_irq_1 == $sub.ref(0, 106137));
procedure  activate_suitable_irq_1($i0: i32, $p1: ref)
{
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
  var $i9: i1;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7570, 7} true;
  assume {:verifier.code 0} true;
  call {:cexpr "activate_suitable_irq_1:arg:line"} boogie_si_record_i32($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7570, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $M.9;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7570, 19} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i32($i2, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7570, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7571, 22} true;
  assume {:verifier.code 0} true;
  $M.10 := $i0;
  call {:cexpr "ldv_irq_line_1_0"} boogie_si_record_i32($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7572, 22} true;
  assume {:verifier.code 0} true;
  $M.11 := $p1;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7573, 17} true;
  assume {:verifier.code 0} true;
  $M.9 := 1;
  call {:cexpr "ldv_irq_1_0"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7574, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7600, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7577, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $M.12;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7577, 19} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i4, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7577, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i5 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7578, 22} true;
  assume {:verifier.code 0} true;
  $M.13 := $i0;
  call {:cexpr "ldv_irq_line_1_1"} boogie_si_record_i32($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7579, 22} true;
  assume {:verifier.code 0} true;
  $M.14 := $p1;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7580, 17} true;
  assume {:verifier.code 0} true;
  $M.12 := 1;
  call {:cexpr "ldv_irq_1_1"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7581, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb6:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7584, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $M.15;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7584, 19} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i6, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7584, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i7 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7585, 22} true;
  assume {:verifier.code 0} true;
  $M.16 := $i0;
  call {:cexpr "ldv_irq_line_1_2"} boogie_si_record_i32($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7586, 22} true;
  assume {:verifier.code 0} true;
  $M.17 := $p1;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7587, 17} true;
  assume {:verifier.code 0} true;
  $M.15 := 1;
  call {:cexpr "ldv_irq_1_2"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7588, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb9:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7591, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $M.18;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7591, 19} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i8, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7591, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i9 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7592, 22} true;
  assume {:verifier.code 0} true;
  $M.19 := $i0;
  call {:cexpr "ldv_irq_line_1_3"} boogie_si_record_i32($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7593, 22} true;
  assume {:verifier.code 0} true;
  $M.20 := $p1;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7594, 17} true;
  assume {:verifier.code 0} true;
  $M.18 := 1;
  call {:cexpr "ldv_irq_1_3"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7595, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb12:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7598, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const reg_check_1: ref;
axiom (reg_check_1 == $sub.ref(0, 107169));
procedure  reg_check_1($p0: ref)
  returns ($r: i32)
{
  var $i1: i64;
  var $i2: i1;
  var $i3: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7604, 7} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7604, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7604, 31} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i64($i1, $p2i.ref.i64(ks8842_irq));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7604, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7605, 5} true;
  assume {:verifier.code 0} true;
  $i3 := 1;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7610, 1} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7608, 3} true;
  assume {:verifier.code 0} true;
  $i3 := 0;
  goto $bb3;
}
const ldv_net_device_ops_4: ref;
axiom (ldv_net_device_ops_4 == $sub.ref(0, 108201));
procedure  ldv_net_device_ops_4()
{
  var $p0: ref;
  var $p1: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7615, 9} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7615, 9} true;
  assume {:verifier.code 0} true;
  call $p0 := ldv_zalloc(3264);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7616, 30} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7616, 28} true;
  assume {:verifier.code 0} true;
  $M.21 := $p0;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7617, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const choose_interrupt_1: ref;
axiom (choose_interrupt_1 == $sub.ref(0, 109233));
procedure  choose_interrupt_1()
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i1;
  var $i3: i1;
  var $i4: i1;
  var $i5: i1;
  var $i6: i32;
  var $i7: i32;
  var $p8: ref;
  var $i9: i32;
  var $i10: i32;
  var $i11: i32;
  var $p12: ref;
  var $i13: i32;
  var $i14: i32;
  var $i15: i32;
  var $p16: ref;
  var $i17: i32;
  var $i18: i32;
  var $i19: i32;
  var $p20: ref;
  var $i21: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7624, 9} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7624, 9} true;
  assume {:verifier.code 1} true;
  call $i0 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
  call {:cexpr "tmp"} boogie_si_record_i32($i0);
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  $i1 := $slt.i32($i0, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i1 == 1);
  assume {:verifier.code 0} true;
  $i4 := $slt.i32($i0, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb9, $bb10;
$bb3:
  assume !(($i1 == 1));
  assume {:verifier.code 0} true;
  $i2 := $slt.i32($i0, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i2 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7633, 27} true;
  assume {:verifier.code 0} true;
  $i14 := $M.15;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7633, 40} true;
  assume {:verifier.code 0} true;
  $i15 := $M.16;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7633, 58} true;
  assume {:verifier.code 0} true;
  $p16 := $M.17;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7633, 17} true;
  assume {:verifier.code 0} true;
  call $i17 := ldv_irq_1($i14, $i15, $p16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7633, 15} true;
  assume {:verifier.code 0} true;
  $M.9 := $i17;
  call {:cexpr "ldv_irq_1_0"} boogie_si_record_i32($i17);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7634, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb5:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  $i3 := $eq.i32($i0, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i3 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7636, 27} true;
  assume {:verifier.code 0} true;
  $i18 := $M.18;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7636, 40} true;
  assume {:verifier.code 0} true;
  $i19 := $M.19;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7636, 58} true;
  assume {:verifier.code 0} true;
  $p20 := $M.20;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7636, 17} true;
  assume {:verifier.code 0} true;
  call $i21 := ldv_irq_1($i18, $i19, $p20);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7636, 15} true;
  assume {:verifier.code 0} true;
  $M.9 := $i21;
  call {:cexpr "ldv_irq_1_0"} boogie_si_record_i32($i21);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7637, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb7:
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  goto $bb14;
$bb9:
  assume ($i4 == 1);
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i0, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb11, $bb12;
$bb10:
  assume !(($i4 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7630, 27} true;
  assume {:verifier.code 0} true;
  $i10 := $M.12;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7630, 40} true;
  assume {:verifier.code 0} true;
  $i11 := $M.13;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7630, 58} true;
  assume {:verifier.code 0} true;
  $p12 := $M.14;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7630, 17} true;
  assume {:verifier.code 0} true;
  call $i13 := ldv_irq_1($i10, $i11, $p12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7630, 15} true;
  assume {:verifier.code 0} true;
  $M.9 := $i13;
  call {:cexpr "ldv_irq_1_0"} boogie_si_record_i32($i13);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7631, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb11:
  assume ($i5 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7627, 27} true;
  assume {:verifier.code 0} true;
  $i6 := $M.9;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7627, 40} true;
  assume {:verifier.code 0} true;
  $i7 := $M.10;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7627, 58} true;
  assume {:verifier.code 0} true;
  $p8 := $M.11;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7627, 17} true;
  assume {:verifier.code 0} true;
  call $i9 := ldv_irq_1($i6, $i7, $p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7627, 15} true;
  assume {:verifier.code 0} true;
  $M.9 := $i9;
  call {:cexpr "ldv_irq_1_0"} boogie_si_record_i32($i9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7628, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume {:verifier.code 0} true;
  assume !(($i5 == 1));
  goto $bb8;
$bb13:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7642, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb14:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7639, 3} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7640, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7640, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
}
const ldv_initialize_platform_driver_2: ref;
axiom (ldv_initialize_platform_driver_2 == $sub.ref(0, 110265));
procedure  ldv_initialize_platform_driver_2()
{
  var $p0: ref;
  var $p1: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7649, 9} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7649, 9} true;
  assume {:verifier.code 0} true;
  call $p0 := ldv_zalloc(1464);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7650, 35} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7650, 33} true;
  assume {:verifier.code 0} true;
  $M.22 := $p0;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7651, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const disable_suitable_irq_1: ref;
axiom (disable_suitable_irq_1 == $sub.ref(0, 111297));
procedure  disable_suitable_irq_1($i0: i32, $p1: ref)
{
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
  var $i9: i1;
  var $i10: i32;
  var $i11: i1;
  var $i12: i32;
  var $i13: i1;
  var $i14: i32;
  var $i15: i1;
  var $i16: i32;
  var $i17: i1;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7657, 7} true;
  assume {:verifier.code 0} true;
  call {:cexpr "disable_suitable_irq_1:arg:line"} boogie_si_record_i32($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7657, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $M.9;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7657, 19} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7657, 24} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7657, 35} true;
  assume {:verifier.code 0} true;
  $i4 := $M.10;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7657, 32} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i0, $i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7657, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7657, 24} true;
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb7;
$bb4:
  assume ($i5 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7658, 17} true;
  assume {:verifier.code 0} true;
  $M.9 := 0;
  call {:cexpr "ldv_irq_1_0"} boogie_si_record_i32(0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7659, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7657, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i5 == 1));
  goto $bb3;
$bb6:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7679, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7662, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $M.12;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7662, 19} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7662, 24} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i7 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7662, 35} true;
  assume {:verifier.code 0} true;
  $i8 := $M.13;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7662, 32} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i0, $i8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7662, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb11, $bb12;
$bb9:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7662, 24} true;
  assume {:verifier.code 0} true;
  assume !(($i7 == 1));
  goto $bb10;
$bb10:
  assume {:verifier.code 0} true;
  goto $bb13;
$bb11:
  assume ($i9 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7663, 17} true;
  assume {:verifier.code 0} true;
  $M.12 := 0;
  call {:cexpr "ldv_irq_1_1"} boogie_si_record_i32(0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7664, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb12:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7662, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i9 == 1));
  goto $bb10;
$bb13:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7667, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $M.15;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7667, 19} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i10, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7667, 24} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i11 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7667, 35} true;
  assume {:verifier.code 0} true;
  $i12 := $M.16;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7667, 32} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i0, $i12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7667, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb17, $bb18;
$bb15:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7667, 24} true;
  assume {:verifier.code 0} true;
  assume !(($i11 == 1));
  goto $bb16;
$bb16:
  assume {:verifier.code 0} true;
  goto $bb19;
$bb17:
  assume ($i13 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7668, 17} true;
  assume {:verifier.code 0} true;
  $M.15 := 0;
  call {:cexpr "ldv_irq_1_2"} boogie_si_record_i32(0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7669, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb18:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7667, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i13 == 1));
  goto $bb16;
$bb19:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7672, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $M.18;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7672, 19} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i32($i14, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7672, 24} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i15 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7672, 35} true;
  assume {:verifier.code 0} true;
  $i16 := $M.19;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7672, 32} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i32($i0, $i16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7672, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb23, $bb24;
$bb21:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7672, 24} true;
  assume {:verifier.code 0} true;
  assume !(($i15 == 1));
  goto $bb22;
$bb22:
  assume {:verifier.code 0} true;
  goto $bb25;
$bb23:
  assume ($i17 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7673, 17} true;
  assume {:verifier.code 0} true;
  $M.18 := 0;
  call {:cexpr "ldv_irq_1_3"} boogie_si_record_i32(0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7674, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb24:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7672, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i17 == 1));
  goto $bb22;
$bb25:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7677, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
}
const main: ref;
axiom (main == $sub.ref(0, 112329));
procedure {:entrypoint} main()
  returns ($r: i32)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $i7: i1;
  var $i8: i1;
  var $i9: i1;
  var $i10: i1;
  var $i11: i1;
  var $i12: i32;
  var $i13: i1;
  var $i14: i32;
  var $i15: i1;
  var $i16: i1;
  var $i17: i1;
  var $i18: i1;
  var $i19: i1;
  var $i20: i1;
  var $i21: i1;
  var $i22: i1;
  var $i23: i1;
  var $i24: i32;
  var $i25: i1;
  var $p26: ref;
  var $i27: i32;
  var $i28: i32;
  var $i29: i1;
  var $p30: ref;
  var $i31: i32;
  var $i32: i32;
  var $i33: i1;
  var $p34: ref;
  var $i35: i32;
  var $i36: i32;
  var $i37: i1;
  var $p38: ref;
  var $i39: i32;
  var $i40: i32;
  var $i41: i1;
  var $p42: ref;
  var $i43: i32;
  var $i44: i32;
  var $i45: i1;
  var $i46: i32;
  var $i47: i1;
  var $p48: ref;
  var $i49: i32;
  var $i50: i32;
  var $i51: i1;
  var $p52: ref;
  var $i53: i32;
  var $i54: i32;
  var $i55: i1;
  var $p56: ref;
  var $i57: i32;
  var $i58: i32;
  var $i59: i1;
  var $p60: ref;
  var $i61: i32;
  var $i62: i32;
  var $i63: i1;
  var $p64: ref;
  var $i65: i32;
  var $i66: i1;
  var $p67: ref;
  var $i68: i32;
  var $i69: i1;
  var $p70: ref;
  var $i71: i32;
  var $i72: i1;
  var $i73: i32;
  var $i74: i32;
  var $i75: i1;
  var $i76: i32;
  var $i77: i32;
  var $i78: i32;
  var $i79: i1;
  var $i80: i32;
  var $i81: i32;
  var $i82: i32;
  var $i83: i32;
  var $i84: i1;
  var $i85: i32;
  var $i86: i1;
  var $i87: i32;
  var $i88: i1;
  var $i89: i1;
  var $i90: i1;
  var $i91: i32;
  var $i92: i1;
  var $i93: i32;
  var $i94: i1;
  var $i95: i32;
  var $i96: i1;
  var $i97: i32;
  var $i98: i32;
  var $i99: i1;
  var $i100: i32;
  var $i101: i1;
  var $i102: i32;
  var $i103: i1;
  var $i104: i32;
  var $i105: i1;
  var $i106: i32;
  var $i107: i1;
  var $i108: i32;
  var $i109: i32;
  var $i110: i1;
  var $i111: i32;
  var $i112: i1;
  var $i113: i1;
  var $i114: i1;
  var $i115: i32;
  var $i116: i1;
  var $p117: ref;
  var $i118: i32;
  var $i119: i32;
  var $i120: i1;
  var $i121: i32;
  var $i122: i32;
  var $i123: i32;
  var $i124: i1;
  var $p125: ref;
  var $i126: i32;
  var $i127: i32;
  var $i128: i32;
$bb0:
  call $initialize();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7694, 9} true;
  assume {:verifier.code 0} true;
  call {:cexpr "smack:entry:main"} boogie_si_record_ref(main);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7694, 9} true;
  assume {:verifier.code 0} true;
  call $p0 := ldv_zalloc(232);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7695, 13} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7696, 13} true;
  assume {:verifier.code 0} true;
  call $p2 := ldv_zalloc(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7698, 13} true;
  assume {:verifier.code 0} true;
  call $p3 := ldv_zalloc(3264);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7699, 13} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7700, 3} true;
  assume {:verifier.code 0} true;
  call ldv_initialize();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7701, 24} true;
  assume {:verifier.code 0} true;
  $M.23 := 0;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7702, 24} true;
  assume {:verifier.code 0} true;
  $M.24 := 1;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7703, 11} true;
  assume {:verifier.code 0} true;
  $M.25 := 0;
  call {:cexpr "ref_cnt"} boogie_si_record_i32(0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7704, 24} true;
  assume {:verifier.code 0} true;
  $M.26 := 1;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7705, 24} true;
  assume {:verifier.code 0} true;
  $M.27 := 0;
  call {:cexpr "ldv_state_variable_3"} boogie_si_record_i32(0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7706, 24} true;
  assume {:verifier.code 0} true;
  $M.28 := 0;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7706, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7708, 13} true;
  assume {:verifier.code 1} true;
  call $i5 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i5);
  call {:cexpr "tmp___2"} boogie_si_record_i32($i5);
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:verifier.code 0} true;
  $i6 := $slt.i32($i5, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i6 == 1);
  assume {:verifier.code 0} true;
  $i10 := $slt.i32($i5, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb12, $bb13;
$bb4:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  $i7 := $slt.i32($i5, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i7 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7822, 7} true;
  assume {:verifier.code 0} true;
  $i85 := $M.26;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7822, 28} true;
  assume {:verifier.code 0} true;
  $i86 := $ne.i32($i85, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7822, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i86} true;
  goto $bb94, $bb95;
$bb6:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  $i8 := $slt.i32($i5, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i8 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7857, 7} true;
  assume {:verifier.code 0} true;
  $i102 := $M.27;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7857, 28} true;
  assume {:verifier.code 0} true;
  $i103 := $ne.i32($i102, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7857, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i103} true;
  goto $bb124, $bb125;
$bb8:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i5, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i9 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7875, 7} true;
  assume {:verifier.code 0} true;
  $i109 := $M.28;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7875, 28} true;
  assume {:verifier.code 0} true;
  $i110 := $ne.i32($i109, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7875, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i110} true;
  goto $bb136, $bb137;
$bb10:
  assume {:verifier.code 0} true;
  assume !(($i9 == 1));
  goto $bb11;
$bb11:
  assume {:verifier.code 0} true;
  goto $bb159;
$bb12:
  assume ($i10 == 1);
  assume {:verifier.code 0} true;
  $i11 := $eq.i32($i5, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb14, $bb15;
$bb13:
  assume !(($i10 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7816, 7} true;
  assume {:verifier.code 0} true;
  $i83 := $M.24;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7816, 28} true;
  assume {:verifier.code 0} true;
  $i84 := $ne.i32($i83, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7816, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i84} true;
  goto $bb91, $bb92;
$bb14:
  assume ($i11 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7711, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $M.23;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7711, 28} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7711, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb16, $bb17;
$bb15:
  assume {:verifier.code 0} true;
  assume !(($i11 == 1));
  goto $bb11;
$bb16:
  assume ($i13 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7712, 15} true;
  assume {:verifier.code 1} true;
  call $i14 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i14);
  call {:cexpr "tmp___3"} boogie_si_record_i32($i14);
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb89;
$bb18:
  assume {:verifier.code 0} true;
  $i15 := $slt.i32($i14, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i15 == 1);
  assume {:verifier.code 0} true;
  $i20 := $slt.i32($i14, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb30, $bb31;
$bb20:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  $i16 := $slt.i32($i14, 6);
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i16 == 1);
  assume {:verifier.code 0} true;
  $i19 := $slt.i32($i14, 5);
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb28, $bb29;
$bb22:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  $i17 := $slt.i32($i14, 7);
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i17 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7790, 9} true;
  assume {:verifier.code 0} true;
  $i71 := $M.23;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7790, 30} true;
  assume {:verifier.code 0} true;
  $i72 := $eq.i32($i71, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7790, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i72} true;
  goto $bb78, $bb79;
$bb24:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  $i18 := $eq.i32($i14, 7);
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i18 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7801, 9} true;
  assume {:verifier.code 0} true;
  $i78 := $M.23;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7801, 30} true;
  assume {:verifier.code 0} true;
  $i79 := $eq.i32($i78, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7801, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i79} true;
  goto $bb84, $bb85;
$bb26:
  assume {:verifier.code 0} true;
  assume !(($i18 == 1));
  goto $bb27;
$bb27:
  assume {:verifier.code 0} true;
  goto $bb87;
$bb28:
  assume ($i19 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7756, 9} true;
  assume {:verifier.code 0} true;
  $i50 := $M.23;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7756, 30} true;
  assume {:verifier.code 0} true;
  $i51 := $eq.i32($i50, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7756, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i51} true;
  goto $bb60, $bb61;
$bb29:
  assume !(($i19 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7773, 9} true;
  assume {:verifier.code 0} true;
  $i62 := $M.23;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7773, 30} true;
  assume {:verifier.code 0} true;
  $i63 := $eq.i32($i62, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7773, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb69, $bb70;
$bb30:
  assume ($i20 == 1);
  assume {:verifier.code 0} true;
  $i22 := $slt.i32($i14, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb34, $bb35;
$bb31:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  $i21 := $slt.i32($i14, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb32, $bb33;
$bb32:
  assume ($i21 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7739, 9} true;
  assume {:verifier.code 0} true;
  $i40 := $M.23;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7739, 30} true;
  assume {:verifier.code 0} true;
  $i41 := $eq.i32($i40, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7739, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb51, $bb52;
$bb33:
  assume !(($i21 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7749, 9} true;
  assume {:verifier.code 0} true;
  $i46 := $M.23;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7749, 30} true;
  assume {:verifier.code 0} true;
  $i47 := $eq.i32($i46, 3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7749, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb57, $bb58;
$bb34:
  assume ($i22 == 1);
  assume {:verifier.code 0} true;
  $i23 := $eq.i32($i14, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb36, $bb37;
$bb35:
  assume !(($i22 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7732, 9} true;
  assume {:verifier.code 0} true;
  $i36 := $M.23;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7732, 30} true;
  assume {:verifier.code 0} true;
  $i37 := $eq.i32($i36, 3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7732, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb48, $bb49;
$bb36:
  assume ($i23 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7715, 9} true;
  assume {:verifier.code 0} true;
  $i24 := $M.23;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7715, 30} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i32($i24, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7715, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb38, $bb39;
$bb37:
  assume {:verifier.code 0} true;
  assume !(($i23 == 1));
  goto $bb27;
$bb38:
  assume ($i25 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7716, 25} true;
  assume {:verifier.code 0} true;
  $p26 := $M.21;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7716, 7} true;
  assume {:verifier.code 0} true;
  call $i27 := eth_validate_addr($p26);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7717, 28} true;
  assume {:verifier.code 0} true;
  $M.23 := 1;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7718, 5} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb39:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb40;
$bb40:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7720, 9} true;
  assume {:verifier.code 0} true;
  $i28 := $M.23;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7720, 30} true;
  assume {:verifier.code 0} true;
  $i29 := $eq.i32($i28, 3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7720, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb41, $bb42;
$bb41:
  assume ($i29 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7721, 25} true;
  assume {:verifier.code 0} true;
  $p30 := $M.21;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7721, 7} true;
  assume {:verifier.code 0} true;
  call $i31 := eth_validate_addr($p30);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7722, 28} true;
  assume {:verifier.code 0} true;
  $M.23 := 3;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7723, 5} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume !(($i29 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7725, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $M.23;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7725, 30} true;
  assume {:verifier.code 0} true;
  $i33 := $eq.i32($i32, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7725, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb44, $bb45;
$bb44:
  assume ($i33 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7726, 25} true;
  assume {:verifier.code 0} true;
  $p34 := $M.21;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7726, 7} true;
  assume {:verifier.code 0} true;
  call $i35 := eth_validate_addr($p34);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7727, 28} true;
  assume {:verifier.code 0} true;
  $M.23 := 2;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7728, 5} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb45:
  assume !(($i33 == 1));
  assume {:verifier.code 0} true;
  goto $bb46;
$bb46:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7730, 5} true;
  assume {:verifier.code 0} true;
  goto $bb47;
$bb47:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7812, 3} true;
  assume {:verifier.code 0} true;
  goto $bb89;
$bb48:
  assume ($i37 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7733, 20} true;
  assume {:verifier.code 0} true;
  $p38 := $M.21;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7733, 7} true;
  assume {:verifier.code 0} true;
  call $i39 := ks8842_close($p38);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7734, 28} true;
  assume {:verifier.code 0} true;
  $M.23 := 2;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7735, 5} true;
  assume {:verifier.code 0} true;
  goto $bb50;
$bb49:
  assume !(($i37 == 1));
  assume {:verifier.code 0} true;
  goto $bb50;
$bb50:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7737, 5} true;
  assume {:verifier.code 0} true;
  goto $bb47;
$bb51:
  assume ($i41 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7740, 34} true;
  assume {:verifier.code 0} true;
  $p42 := $M.21;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7740, 22} true;
  assume {:verifier.code 0} true;
  call $i43 := ks8842_open($p42);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7740, 20} true;
  assume {:verifier.code 0} true;
  $M.29 := $i43;
  call {:cexpr "ldv_retval_1"} boogie_si_record_i32($i43);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7741, 11} true;
  assume {:verifier.code 0} true;
  $i44 := $M.29;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7741, 24} true;
  assume {:verifier.code 0} true;
  $i45 := $eq.i32($i44, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7741, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb53, $bb54;
$bb52:
  assume !(($i41 == 1));
  assume {:verifier.code 0} true;
  goto $bb56;
$bb53:
  assume ($i45 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7742, 30} true;
  assume {:verifier.code 0} true;
  $M.23 := 3;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7743, 7} true;
  assume {:verifier.code 0} true;
  goto $bb55;
$bb54:
  assume !(($i45 == 1));
  assume {:verifier.code 0} true;
  goto $bb55;
$bb55:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7745, 5} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb56:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7747, 5} true;
  assume {:verifier.code 0} true;
  goto $bb47;
$bb57:
  assume ($i47 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7750, 34} true;
  assume {:verifier.code 0} true;
  $p48 := $M.21;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7750, 7} true;
  assume {:verifier.code 0} true;
  call $i49 := ks8842_xmit_frame($p1, $p48);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7751, 28} true;
  assume {:verifier.code 0} true;
  $M.23 := 3;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7752, 5} true;
  assume {:verifier.code 0} true;
  goto $bb59;
$bb58:
  assume !(($i47 == 1));
  assume {:verifier.code 0} true;
  goto $bb59;
$bb59:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7754, 5} true;
  assume {:verifier.code 0} true;
  goto $bb47;
$bb60:
  assume ($i51 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7757, 22} true;
  assume {:verifier.code 0} true;
  $p52 := $M.21;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7757, 7} true;
  assume {:verifier.code 0} true;
  call $i53 := ks8842_set_mac($p52, $p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7758, 28} true;
  assume {:verifier.code 0} true;
  $M.23 := 1;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7759, 5} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb61:
  assume !(($i51 == 1));
  assume {:verifier.code 0} true;
  goto $bb62;
$bb62:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7761, 9} true;
  assume {:verifier.code 0} true;
  $i54 := $M.23;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7761, 30} true;
  assume {:verifier.code 0} true;
  $i55 := $eq.i32($i54, 3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7761, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i55} true;
  goto $bb63, $bb64;
$bb63:
  assume ($i55 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7762, 22} true;
  assume {:verifier.code 0} true;
  $p56 := $M.21;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7762, 7} true;
  assume {:verifier.code 0} true;
  call $i57 := ks8842_set_mac($p56, $p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7763, 28} true;
  assume {:verifier.code 0} true;
  $M.23 := 3;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7764, 5} true;
  assume {:verifier.code 0} true;
  goto $bb65;
$bb64:
  assume !(($i55 == 1));
  assume {:verifier.code 0} true;
  goto $bb65;
$bb65:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7766, 9} true;
  assume {:verifier.code 0} true;
  $i58 := $M.23;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7766, 30} true;
  assume {:verifier.code 0} true;
  $i59 := $eq.i32($i58, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7766, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i59} true;
  goto $bb66, $bb67;
$bb66:
  assume ($i59 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7767, 22} true;
  assume {:verifier.code 0} true;
  $p60 := $M.21;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7767, 7} true;
  assume {:verifier.code 0} true;
  call $i61 := ks8842_set_mac($p60, $p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7768, 28} true;
  assume {:verifier.code 0} true;
  $M.23 := 2;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7769, 5} true;
  assume {:verifier.code 0} true;
  goto $bb68;
$bb67:
  assume !(($i59 == 1));
  assume {:verifier.code 0} true;
  goto $bb68;
$bb68:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7771, 5} true;
  assume {:verifier.code 0} true;
  goto $bb47;
$bb69:
  assume ($i63 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7774, 25} true;
  assume {:verifier.code 0} true;
  $p64 := $M.21;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7774, 7} true;
  assume {:verifier.code 0} true;
  call ks8842_tx_timeout($p64);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7775, 28} true;
  assume {:verifier.code 0} true;
  $M.23 := 1;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7776, 5} true;
  assume {:verifier.code 0} true;
  goto $bb71;
$bb70:
  assume !(($i63 == 1));
  assume {:verifier.code 0} true;
  goto $bb71;
$bb71:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7778, 9} true;
  assume {:verifier.code 0} true;
  $i65 := $M.23;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7778, 30} true;
  assume {:verifier.code 0} true;
  $i66 := $eq.i32($i65, 3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7778, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i66} true;
  goto $bb72, $bb73;
$bb72:
  assume ($i66 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7779, 25} true;
  assume {:verifier.code 0} true;
  $p67 := $M.21;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7779, 7} true;
  assume {:verifier.code 0} true;
  call ks8842_tx_timeout($p67);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7780, 28} true;
  assume {:verifier.code 0} true;
  $M.23 := 3;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7781, 5} true;
  assume {:verifier.code 0} true;
  goto $bb74;
$bb73:
  assume !(($i66 == 1));
  assume {:verifier.code 0} true;
  goto $bb74;
$bb74:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7783, 9} true;
  assume {:verifier.code 0} true;
  $i68 := $M.23;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7783, 30} true;
  assume {:verifier.code 0} true;
  $i69 := $eq.i32($i68, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7783, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i69} true;
  goto $bb75, $bb76;
$bb75:
  assume ($i69 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7784, 25} true;
  assume {:verifier.code 0} true;
  $p70 := $M.21;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7784, 7} true;
  assume {:verifier.code 0} true;
  call ks8842_tx_timeout($p70);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7785, 28} true;
  assume {:verifier.code 0} true;
  $M.23 := 2;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7786, 5} true;
  assume {:verifier.code 0} true;
  goto $bb77;
$bb76:
  assume !(($i69 == 1));
  assume {:verifier.code 0} true;
  goto $bb77;
$bb77:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7788, 5} true;
  assume {:verifier.code 0} true;
  goto $bb47;
$bb78:
  assume ($i72 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7791, 22} true;
  assume {:verifier.code 0} true;
  call $i73 := ldv_ndo_init_4();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7791, 20} true;
  assume {:verifier.code 0} true;
  $M.30 := $i73;
  call {:cexpr "ldv_retval_0"} boogie_si_record_i32($i73);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7792, 11} true;
  assume {:verifier.code 0} true;
  $i74 := $M.30;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7792, 24} true;
  assume {:verifier.code 0} true;
  $i75 := $eq.i32($i74, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7792, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i75} true;
  goto $bb80, $bb81;
$bb79:
  assume !(($i72 == 1));
  assume {:verifier.code 0} true;
  goto $bb83;
$bb80:
  assume ($i75 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7793, 30} true;
  assume {:verifier.code 0} true;
  $M.23 := 2;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7794, 19} true;
  assume {:verifier.code 0} true;
  $i76 := $M.25;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7794, 27} true;
  assume {:verifier.code 0} true;
  $i77 := $add.i32($i76, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7794, 17} true;
  assume {:verifier.code 0} true;
  $M.25 := $i77;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i77);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7795, 7} true;
  assume {:verifier.code 0} true;
  goto $bb82;
$bb81:
  assume !(($i75 == 1));
  assume {:verifier.code 0} true;
  goto $bb82;
$bb82:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7797, 5} true;
  assume {:verifier.code 0} true;
  goto $bb83;
$bb83:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7799, 5} true;
  assume {:verifier.code 0} true;
  goto $bb47;
$bb84:
  assume ($i79 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7802, 7} true;
  assume {:verifier.code 0} true;
  call $i80 := ldv_ndo_uninit_4();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7803, 28} true;
  assume {:verifier.code 0} true;
  $M.23 := 1;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7804, 17} true;
  assume {:verifier.code 0} true;
  $i81 := $M.25;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7804, 25} true;
  assume {:verifier.code 0} true;
  $i82 := $sub.i32($i81, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7804, 15} true;
  assume {:verifier.code 0} true;
  $M.25 := $i82;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i82);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7805, 5} true;
  assume {:verifier.code 0} true;
  goto $bb86;
$bb85:
  assume !(($i79 == 1));
  assume {:verifier.code 0} true;
  goto $bb86;
$bb86:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7807, 5} true;
  assume {:verifier.code 0} true;
  goto $bb47;
$bb87:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7809, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7810, 5} true;
  assume {:verifier.code 0} true;
  goto $bb88;
$bb88:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7810, 5} true;
  assume {:verifier.code 0} true;
  goto $bb47;
$bb89:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7814, 3} true;
  assume {:verifier.code 0} true;
  goto $bb90;
$bb90:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7908, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb91:
  assume ($i84 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7817, 5} true;
  assume {:verifier.code 0} true;
  call choose_interrupt_1();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7818, 3} true;
  assume {:verifier.code 0} true;
  goto $bb93;
$bb92:
  assume !(($i84 == 1));
  assume {:verifier.code 0} true;
  goto $bb93;
$bb93:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7820, 3} true;
  assume {:verifier.code 0} true;
  goto $bb90;
$bb94:
  assume ($i86 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7823, 15} true;
  assume {:verifier.code 1} true;
  call $i87 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i87);
  call {:cexpr "tmp___4"} boogie_si_record_i32($i87);
  assume {:verifier.code 0} true;
  goto $bb96;
$bb95:
  assume !(($i86 == 1));
  assume {:verifier.code 0} true;
  goto $bb123;
$bb96:
  assume {:verifier.code 0} true;
  $i88 := $slt.i32($i87, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i88} true;
  goto $bb97, $bb98;
$bb97:
  assume ($i88 == 1);
  assume {:verifier.code 0} true;
  $i90 := $eq.i32($i87, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i90} true;
  goto $bb102, $bb103;
$bb98:
  assume !(($i88 == 1));
  assume {:verifier.code 0} true;
  $i89 := $eq.i32($i87, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i89} true;
  goto $bb99, $bb100;
$bb99:
  assume ($i89 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7834, 9} true;
  assume {:verifier.code 0} true;
  $i95 := $M.26;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7834, 30} true;
  assume {:verifier.code 0} true;
  $i96 := $eq.i32($i95, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7834, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i96} true;
  goto $bb112, $bb113;
$bb100:
  assume {:verifier.code 0} true;
  assume !(($i89 == 1));
  goto $bb101;
$bb101:
  assume {:verifier.code 0} true;
  goto $bb121;
$bb102:
  assume ($i90 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7826, 9} true;
  assume {:verifier.code 0} true;
  $i91 := $M.26;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7826, 30} true;
  assume {:verifier.code 0} true;
  $i92 := $eq.i32($i91, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7826, 35} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i92} true;
  goto $bb104, $bb105;
$bb103:
  assume {:verifier.code 0} true;
  assume !(($i90 == 1));
  goto $bb101;
$bb104:
  assume ($i92 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7826, 38} true;
  assume {:verifier.code 0} true;
  $i93 := $M.25;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7826, 46} true;
  assume {:verifier.code 0} true;
  $i94 := $eq.i32($i93, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7826, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i94} true;
  goto $bb107, $bb108;
$bb105:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7826, 35} true;
  assume {:verifier.code 0} true;
  assume !(($i92 == 1));
  goto $bb106;
$bb106:
  assume {:verifier.code 0} true;
  goto $bb110;
$bb107:
  assume ($i94 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7827, 7} true;
  assume {:verifier.code 0} true;
  call ks8842_platform_driver_exit();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7828, 28} true;
  assume {:verifier.code 0} true;
  $M.26 := 3;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7829, 7} true;
  assume {:verifier.code 0} true;
  goto $bb109;
$bb108:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7826, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i94 == 1));
  goto $bb106;
$bb109:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7910, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_final_state();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7911, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
$bb110:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7832, 5} true;
  assume {:verifier.code 0} true;
  goto $bb111;
$bb111:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7853, 3} true;
  assume {:verifier.code 0} true;
  goto $bb123;
$bb112:
  assume ($i96 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7835, 22} true;
  assume {:verifier.code 0} true;
  call $i97 := ks8842_platform_driver_init();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7835, 20} true;
  assume {:verifier.code 0} true;
  $M.31 := $i97;
  call {:cexpr "ldv_retval_2"} boogie_si_record_i32($i97);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7836, 11} true;
  assume {:verifier.code 0} true;
  $i98 := $M.31;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7836, 24} true;
  assume {:verifier.code 0} true;
  $i99 := $ne.i32($i98, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7836, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i99} true;
  goto $bb114, $bb115;
$bb113:
  assume !(($i96 == 1));
  assume {:verifier.code 0} true;
  goto $bb120;
$bb114:
  assume ($i99 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7837, 30} true;
  assume {:verifier.code 0} true;
  $M.26 := 3;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7838, 9} true;
  assume {:verifier.code 0} true;
  goto $bb109;
$bb115:
  assume !(($i99 == 1));
  assume {:verifier.code 0} true;
  goto $bb116;
$bb116:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7841, 11} true;
  assume {:verifier.code 0} true;
  $i100 := $M.31;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7841, 24} true;
  assume {:verifier.code 0} true;
  $i101 := $eq.i32($i100, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7841, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i101} true;
  goto $bb117, $bb118;
$bb117:
  assume ($i101 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7842, 30} true;
  assume {:verifier.code 0} true;
  $M.26 := 2;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7843, 30} true;
  assume {:verifier.code 0} true;
  $M.27 := 1;
  call {:cexpr "ldv_state_variable_3"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7844, 7} true;
  assume {:verifier.code 0} true;
  goto $bb119;
$bb118:
  assume !(($i101 == 1));
  assume {:verifier.code 0} true;
  goto $bb119;
$bb119:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7846, 5} true;
  assume {:verifier.code 0} true;
  goto $bb120;
$bb120:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7848, 5} true;
  assume {:verifier.code 0} true;
  goto $bb111;
$bb121:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7850, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7851, 5} true;
  assume {:verifier.code 0} true;
  goto $bb122;
$bb122:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7851, 5} true;
  assume {:verifier.code 0} true;
  goto $bb111;
$bb123:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7855, 3} true;
  assume {:verifier.code 0} true;
  goto $bb90;
$bb124:
  assume ($i103 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7858, 15} true;
  assume {:verifier.code 1} true;
  call $i104 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i104);
  call {:cexpr "tmp___5"} boogie_si_record_i32($i104);
  assume {:verifier.code 0} true;
  goto $bb126;
$bb125:
  assume !(($i103 == 1));
  assume {:verifier.code 0} true;
  goto $bb135;
$bb126:
  assume {:verifier.code 0} true;
  $i105 := $eq.i32($i104, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i105} true;
  goto $bb127, $bb128;
$bb127:
  assume ($i105 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7861, 9} true;
  assume {:verifier.code 0} true;
  $i106 := $M.27;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7861, 30} true;
  assume {:verifier.code 0} true;
  $i107 := $eq.i32($i106, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7861, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i107} true;
  goto $bb129, $bb130;
$bb128:
  assume !(($i105 == 1));
  assume {:verifier.code 0} true;
  goto $bb133;
$bb129:
  assume ($i107 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7862, 7} true;
  assume {:verifier.code 0} true;
  call $i108 := ethtool_op_get_link($p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7863, 28} true;
  assume {:verifier.code 0} true;
  $M.27 := 1;
  call {:cexpr "ldv_state_variable_3"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7864, 5} true;
  assume {:verifier.code 0} true;
  goto $bb131;
$bb130:
  assume !(($i107 == 1));
  assume {:verifier.code 0} true;
  goto $bb131;
$bb131:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7866, 5} true;
  assume {:verifier.code 0} true;
  goto $bb132;
$bb132:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7871, 3} true;
  assume {:verifier.code 0} true;
  goto $bb135;
$bb133:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7868, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7869, 5} true;
  assume {:verifier.code 0} true;
  goto $bb134;
$bb134:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7869, 5} true;
  assume {:verifier.code 0} true;
  goto $bb132;
$bb135:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7873, 3} true;
  assume {:verifier.code 0} true;
  goto $bb90;
$bb136:
  assume ($i110 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7876, 15} true;
  assume {:verifier.code 1} true;
  call $i111 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i111);
  call {:cexpr "tmp___6"} boogie_si_record_i32($i111);
  assume {:verifier.code 0} true;
  goto $bb138;
$bb137:
  assume !(($i110 == 1));
  assume {:verifier.code 0} true;
  goto $bb158;
$bb138:
  assume {:verifier.code 0} true;
  $i112 := $slt.i32($i111, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i112} true;
  goto $bb139, $bb140;
$bb139:
  assume ($i112 == 1);
  assume {:verifier.code 0} true;
  $i114 := $eq.i32($i111, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i114} true;
  goto $bb144, $bb145;
$bb140:
  assume !(($i112 == 1));
  assume {:verifier.code 0} true;
  $i113 := $eq.i32($i111, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i113} true;
  goto $bb141, $bb142;
$bb141:
  assume ($i113 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7890, 9} true;
  assume {:verifier.code 0} true;
  $i123 := $M.28;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7890, 30} true;
  assume {:verifier.code 0} true;
  $i124 := $eq.i32($i123, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7890, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i124} true;
  goto $bb153, $bb154;
$bb142:
  assume {:verifier.code 0} true;
  assume !(($i113 == 1));
  goto $bb143;
$bb143:
  assume {:verifier.code 0} true;
  goto $bb156;
$bb144:
  assume ($i114 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7879, 9} true;
  assume {:verifier.code 0} true;
  $i115 := $M.28;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7879, 30} true;
  assume {:verifier.code 0} true;
  $i116 := $eq.i32($i115, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7879, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i116} true;
  goto $bb146, $bb147;
$bb145:
  assume {:verifier.code 0} true;
  assume !(($i114 == 1));
  goto $bb143;
$bb146:
  assume ($i116 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7880, 35} true;
  assume {:verifier.code 0} true;
  $p117 := $M.22;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7880, 22} true;
  assume {:verifier.code 0} true;
  call $i118 := ks8842_probe($p117);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7880, 20} true;
  assume {:verifier.code 0} true;
  $M.32 := $i118;
  call {:cexpr "ldv_retval_3"} boogie_si_record_i32($i118);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7881, 11} true;
  assume {:verifier.code 0} true;
  $i119 := $M.32;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7881, 24} true;
  assume {:verifier.code 0} true;
  $i120 := $eq.i32($i119, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7881, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i120} true;
  goto $bb148, $bb149;
$bb147:
  assume !(($i116 == 1));
  assume {:verifier.code 0} true;
  goto $bb151;
$bb148:
  assume ($i120 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7882, 30} true;
  assume {:verifier.code 0} true;
  $M.28 := 2;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7883, 19} true;
  assume {:verifier.code 0} true;
  $i121 := $M.25;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7883, 27} true;
  assume {:verifier.code 0} true;
  $i122 := $add.i32($i121, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7883, 17} true;
  assume {:verifier.code 0} true;
  $M.25 := $i122;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i122);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7884, 7} true;
  assume {:verifier.code 0} true;
  goto $bb150;
$bb149:
  assume !(($i120 == 1));
  assume {:verifier.code 0} true;
  goto $bb150;
$bb150:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7886, 5} true;
  assume {:verifier.code 0} true;
  goto $bb151;
$bb151:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7888, 5} true;
  assume {:verifier.code 0} true;
  goto $bb152;
$bb152:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7901, 3} true;
  assume {:verifier.code 0} true;
  goto $bb158;
$bb153:
  assume ($i124 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7891, 21} true;
  assume {:verifier.code 0} true;
  $p125 := $M.22;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7891, 7} true;
  assume {:verifier.code 0} true;
  call $i126 := ks8842_remove($p125);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7892, 28} true;
  assume {:verifier.code 0} true;
  $M.28 := 1;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7893, 17} true;
  assume {:verifier.code 0} true;
  $i127 := $M.25;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7893, 25} true;
  assume {:verifier.code 0} true;
  $i128 := $sub.i32($i127, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7893, 15} true;
  assume {:verifier.code 0} true;
  $M.25 := $i128;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i128);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7894, 5} true;
  assume {:verifier.code 0} true;
  goto $bb155;
$bb154:
  assume !(($i124 == 1));
  assume {:verifier.code 0} true;
  goto $bb155;
$bb155:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7896, 5} true;
  assume {:verifier.code 0} true;
  goto $bb152;
$bb156:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7898, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7899, 5} true;
  assume {:verifier.code 0} true;
  goto $bb157;
$bb157:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7899, 5} true;
  assume {:verifier.code 0} true;
  goto $bb152;
$bb158:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7903, 3} true;
  assume {:verifier.code 0} true;
  goto $bb90;
$bb159:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7905, 3} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7906, 3} true;
  assume {:verifier.code 0} true;
  goto $bb160;
$bb160:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7906, 3} true;
  assume {:verifier.code 0} true;
  goto $bb90;
}
const ldv_initialize: ref;
axiom (ldv_initialize == $sub.ref(0, 113361));
procedure  ldv_initialize()
{
  var $p0: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8211, 16} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8211, 16} true;
  assume {:verifier.code 0} true;
  $p0 := $M.33;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8211, 3} true;
  assume {:verifier.code 0} true;
  call ldv_set_init($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8212, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const eth_validate_addr: ref;
axiom (eth_validate_addr == $sub.ref(0, 114393));
procedure  eth_validate_addr($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8347, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8347, 10} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8347, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const ks8842_close: ref;
axiom (ks8842_close == $sub.ref(0, 115425));
procedure  ks8842_close($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i24;
  var $i11: i24;
  var $i12: i24;
  var $p13: ref;
  var $p14: ref;
  var $i15: i8;
  var $i16: i64;
  var $i17: i64;
  var $i18: i64;
  var $i19: i1;
  var $i20: i32;
  var $p21: ref;
  var $i22: i1;
  var $p23: ref;
  var $p24: ref;
  var $i25: i32;
  var $i26: i1;
  var $p27: ref;
  var $p28: ref;
  var $i29: i32;
  var $i30: i1;
  var $p31: ref;
  var $i32: i32;
  var $p33: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7159, 9} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7159, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7160, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7161, 14} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7161, 22} true;
  assume {:verifier.code 0} true;
  $M.2 := $store.ref($M.2, $p4, .str);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7162, 14} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7162, 23} true;
  assume {:verifier.code 0} true;
  $M.3 := $store.ref($M.3, $p5, .str.4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7163, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7163, 23} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.ref($M.4, $p6, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7164, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7164, 21} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.ref($M.5, $p7, .str.5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7165, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7165, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7165, 21} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i24($M.6, $p9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7165, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:7165:21: warning: over-approximating bitwise operation and;
  $i11 := $and.i24($i10, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7165, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:7165:21: warning: over-approximating bitwise operation or;
  $i12 := $or.i24($i11, 1081);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7165, 21} true;
  assume {:verifier.code 0} true;
  $M.6 := $store.i24($M.6, $p9, $i12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7166, 14} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7166, 20} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i8($M.7, $p13, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7167, 51} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7167, 51} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i8($M.7, $p14);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7167, 33} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i8.i64($i15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7167, 57} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:7167:57: warning: over-approximating bitwise operation and;
  $i17 := $and.i64($i16, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7167, 13} true;
  assume {:verifier.code 0} true;
  call $i18 := ldv__builtin_expect($i17, 0);
  call {:cexpr "tmp___0"} boogie_si_record_i64($i18);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7168, 15} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i64($i18, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7168, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i19 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7169, 5} true;
  assume {:verifier.code 0} true;
  call $i20 := __dynamic_netdev_dbg.ref.ref.ref.ref($p1, $p0, .str.5, .str.4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7171, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7173, 31} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(136, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7173, 3} true;
  assume {:verifier.code 0} true;
  call $i22 := cancel_work_sync($p21);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7174, 16} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(232, 1));
  $p24 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7174, 23} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i32($M.1, $p24);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7174, 31} true;
  assume {:verifier.code 0} true;
  $i26 := $ne.i32($i25, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7174, 37} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i26 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7174, 49} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(304, 1));
  $p28 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(104, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7174, 56} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i32($M.1, $p28);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7174, 64} true;
  assume {:verifier.code 0} true;
  $i30 := $ne.i32($i29, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7174, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb7, $bb8;
$bb5:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7174, 37} true;
  assume {:verifier.code 0} true;
  assume !(($i26 == 1));
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb9;
$bb7:
  assume ($i30 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7175, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_dealloc_dma_bufs($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7176, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7174, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i30 == 1));
  goto $bb6;
$bb9:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7178, 43} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7178, 43} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i32($M.1, $p31);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7178, 48} true;
  assume {:verifier.code 0} true;
  $p33 := $bitcast.ref.ref($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7178, 3} true;
  assume {:verifier.code 0} true;
  call ldv_free_irq_16($i32, $p33);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7179, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p3, 32, 0, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7180, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const ks8842_open: ref;
axiom (ks8842_open == $sub.ref(0, 116457));
procedure  ks8842_open($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i24;
  var $i11: i24;
  var $i12: i24;
  var $p13: ref;
  var $p14: ref;
  var $i15: i8;
  var $i16: i64;
  var $i17: i64;
  var $i18: i64;
  var $i19: i1;
  var $i20: i32;
  var $p21: ref;
  var $p22: ref;
  var $i23: i32;
  var $i24: i1;
  var $p25: ref;
  var $p26: ref;
  var $i27: i32;
  var $i28: i1;
  var $i29: i32;
  var $i30: i1;
  var $i31: i32;
  var $i32: i1;
  var $i33: i32;
  var $i34: i1;
  var $i35: i32;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i32;
  var $p44: ref;
  var $i45: i32;
  var $i46: i1;
  var $p47: ref;
  var $i48: i32;
  var $i49: i32;
  var $i50: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7106, 9} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7106, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7107, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7108, 14} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7108, 22} true;
  assume {:verifier.code 0} true;
  $M.2 := $store.ref($M.2, $p4, .str);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7109, 14} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7109, 23} true;
  assume {:verifier.code 0} true;
  $M.3 := $store.ref($M.3, $p5, .str.7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7110, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7110, 23} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.ref($M.4, $p6, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7111, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7111, 21} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.ref($M.5, $p7, .str.5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7112, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7112, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7112, 21} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i24($M.6, $p9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7112, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:7112:21: warning: over-approximating bitwise operation and;
  $i11 := $and.i24($i10, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7112, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:7112:21: warning: over-approximating bitwise operation or;
  $i12 := $or.i24($i11, 1039);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7112, 21} true;
  assume {:verifier.code 0} true;
  $M.6 := $store.i24($M.6, $p9, $i12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7113, 14} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7113, 20} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i8($M.7, $p13, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7114, 51} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7114, 51} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i8($M.7, $p14);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7114, 33} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i8.i64($i15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7114, 57} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:7114:57: warning: over-approximating bitwise operation and;
  $i17 := $and.i64($i16, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7114, 13} true;
  assume {:verifier.code 0} true;
  call $i18 := ldv__builtin_expect($i17, 0);
  call {:cexpr "tmp___0"} boogie_si_record_i64($i18);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7115, 15} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i64($i18, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7115, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i19 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7116, 5} true;
  assume {:verifier.code 0} true;
  call $i20 := __dynamic_netdev_dbg.ref.ref.ref.ref($p1, $p0, .str.5, .str.7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7118, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7120, 16} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(232, 1));
  $p22 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7120, 23} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i32($M.1, $p22);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7120, 31} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i32($i23, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7120, 37} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i24 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7120, 49} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(304, 1));
  $p26 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(104, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7120, 56} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i32($M.1, $p26);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7120, 64} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.i32($i27, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7120, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb7, $bb8;
$bb5:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7120, 37} true;
  assume {:verifier.code 0} true;
  assume !(($i24 == 1));
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb18;
$bb7:
  assume ($i28 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7121, 11} true;
  assume {:verifier.code 0} true;
  call $i29 := ks8842_alloc_dma_bufs($p0);
  call {:cexpr "err"} boogie_si_record_i32($i29);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7122, 13} true;
  assume {:verifier.code 0} true;
  $i30 := $eq.i32($i29, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7122, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb9, $bb10;
$bb8:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7120, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i28 == 1));
  goto $bb6;
$bb9:
  assume ($i30 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7123, 13} true;
  assume {:verifier.code 0} true;
  call $i31 := __ks8842_start_new_rx_dma($p0);
  call {:cexpr "err"} boogie_si_record_i32($i31);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7124, 15} true;
  assume {:verifier.code 0} true;
  $i32 := $ne.i32($i31, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7124, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb11, $bb12;
$bb10:
  assume !(($i30 == 1));
  assume {:verifier.code 0} true;
  $i33 := $i29;
  goto $bb14;
$bb11:
  assume ($i32 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7125, 9} true;
  assume {:verifier.code 0} true;
  call ks8842_dealloc_dma_bufs($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7126, 7} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7128, 5} true;
  assume {:verifier.code 0} true;
  $i33 := $i31;
  goto $bb14;
$bb14:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7130, 13} true;
  assume {:verifier.code 0} true;
  $i34 := $ne.i32($i33, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7130, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i34 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7131, 7} true;
  assume {:verifier.code 0} true;
  call $i35 := printk.ref(.str.8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7132, 7} true;
  assume {:verifier.code 0} true;
  call ks8842_dealloc_dma_bufs($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7133, 16} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(304, 1));
  $p37 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(104, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7133, 31} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i32($M.1, $p37, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7134, 16} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(232, 1));
  $p39 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7134, 31} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i32($M.1, $p39, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7135, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7137, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7139, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_reset_hw($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7140, 42} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(840, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7140, 42} true;
  assume {:verifier.code 0} true;
  $p41 := $load.ref($M.1, $p40);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7140, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_write_mac_addr($p3, $p41);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7141, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_update_link_status($p0, $p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7142, 52} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7142, 52} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i32($M.1, $p42);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7143, 28} true;
  assume {:verifier.code 0} true;
  $p44 := $bitcast.ref.ref($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7142, 9} true;
  assume {:verifier.code 0} true;
  call $i45 := ldv_request_irq_15($i43, ks8842_irq, 128, .str, $p44);
  call {:cexpr "err"} boogie_si_record_i32($i45);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7144, 11} true;
  assume {:verifier.code 0} true;
  $i46 := $ne.i32($i45, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7144, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i46 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7145, 66} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7145, 66} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i32($M.1, $p47);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7145, 5} true;
  assume {:verifier.code 0} true;
  call $i49 := printk.ref.i32.i32(.str.9, $i48, $i45);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7146, 5} true;
  assume {:verifier.code 0} true;
  $i50 := $i45;
  goto $bb21;
$bb20:
  assume !(($i46 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7151, 1} true;
  assume {:verifier.code 0} true;
  $r := $i50;
  $exn := false;
  return;
$bb22:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7149, 3} true;
  assume {:verifier.code 0} true;
  $i50 := 0;
  goto $bb21;
}
const ks8842_xmit_frame: ref;
axiom (ks8842_xmit_frame == $sub.ref(0, 117489));
procedure  ks8842_xmit_frame($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i24;
  var $i12: i24;
  var $i13: i24;
  var $p14: ref;
  var $p15: ref;
  var $i16: i8;
  var $i17: i64;
  var $i18: i64;
  var $i19: i64;
  var $i20: i1;
  var $i21: i32;
  var $p22: ref;
  var $p23: ref;
  var $i24: i32;
  var $i25: i1;
  var $p26: ref;
  var $p27: ref;
  var $i28: i32;
  var $i29: i1;
  var $i30: i32;
  var $p31: ref;
  var $p32: ref;
  var $i33: i64;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $i37: i64;
  var $i38: i1;
  var $p39: ref;
  var $i41: i32;
  var $i42: i16;
  var $i43: i32;
  var $p44: ref;
  var $i45: i32;
  var $i46: i32;
  var $i47: i1;
  var $i40: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7194, 9} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7194, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := netdev_priv($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7195, 13} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7196, 14} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7196, 22} true;
  assume {:verifier.code 0} true;
  $M.2 := $store.ref($M.2, $p5, .str);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7197, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7197, 23} true;
  assume {:verifier.code 0} true;
  $M.3 := $store.ref($M.3, $p6, .str.21);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7198, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7198, 23} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.ref($M.4, $p7, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7199, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7199, 21} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.ref($M.5, $p8, .str.22);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7200, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7200, 14} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7200, 21} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i24($M.6, $p10);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7200, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:7200:21: warning: over-approximating bitwise operation and;
  $i12 := $and.i24($i11, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7200, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:7200:21: warning: over-approximating bitwise operation or;
  $i13 := $or.i24($i12, 1103);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7200, 21} true;
  assume {:verifier.code 0} true;
  $M.6 := $store.i24($M.6, $p10, $i13);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7201, 14} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7201, 20} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i8($M.7, $p14, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7202, 51} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7202, 51} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i8($M.7, $p15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7202, 33} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i64($i16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7202, 57} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:7202:57: warning: over-approximating bitwise operation and;
  $i18 := $and.i64($i17, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7202, 13} true;
  assume {:verifier.code 0} true;
  call $i19 := ldv__builtin_expect($i18, 0);
  call {:cexpr "tmp___0"} boogie_si_record_i64($i19);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7203, 15} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i64($i19, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7203, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i20 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7204, 5} true;
  assume {:verifier.code 0} true;
  call $i21 := __dynamic_netdev_dbg.ref.ref.ref.ref($p2, $p1, .str.22, .str.21);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7206, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7208, 16} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1));
  $p23 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7208, 23} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i32($M.1, $p23);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7208, 31} true;
  assume {:verifier.code 0} true;
  $i25 := $ne.i32($i24, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7208, 37} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i25 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7208, 49} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(304, 1));
  $p27 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(104, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7208, 56} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i32($M.1, $p27);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7208, 64} true;
  assume {:verifier.code 0} true;
  $i29 := $ne.i32($i28, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7208, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb7, $bb8;
$bb5:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7208, 37} true;
  assume {:verifier.code 0} true;
  assume !(($i25 == 1));
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb13;
$bb7:
  assume ($i29 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7209, 11} true;
  assume {:verifier.code 0} true;
  call $i30 := ks8842_tx_frame_dma($p0, $p1);
  call {:cexpr "ret"} boogie_si_record_i32($i30);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7210, 41} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7210, 15} true;
  assume {:verifier.code 0} true;
  call $p32 := spinlock_check($p31);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7211, 13} true;
  assume {:verifier.code 0} true;
  call $i33 := _raw_spin_lock_irqsave($p32);
  call {:cexpr "flags"} boogie_si_record_i64($i33);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7212, 34} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1));
  $p35 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7212, 41} true;
  assume {:verifier.code 0} true;
  $p36 := $load.ref($M.1, $p35);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7212, 9} true;
  assume {:verifier.code 0} true;
  $i37 := $p2i.ref.i64($p36);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7212, 47} true;
  assume {:verifier.code 0} true;
  $i38 := $ne.i64($i37, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7212, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb9, $bb10;
$bb8:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7208, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i29 == 1));
  goto $bb6;
$bb9:
  assume ($i38 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7213, 7} true;
  assume {:verifier.code 0} true;
  call netif_stop_queue($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7214, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i38 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7216, 39} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7216, 5} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p39, $i33);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7217, 5} true;
  assume {:verifier.code 0} true;
  $i40 := $i30;
  goto $bb12;
$bb12:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7228, 1} true;
  assume {:verifier.code 0} true;
  $r := $i40;
  $exn := false;
  return;
$bb13:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7220, 9} true;
  assume {:verifier.code 0} true;
  call $i41 := ks8842_tx_frame($p0, $p1);
  call {:cexpr "ret"} boogie_si_record_i32($i41);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7221, 13} true;
  assume {:verifier.code 0} true;
  call $i42 := ks8842_tx_fifo_space($p4);
  call {:cexpr "tmp___2"} boogie_si_record_i16($i42);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7222, 7} true;
  assume {:verifier.code 0} true;
  $i43 := $zext.i16.i32($i42);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7222, 40} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($add.ref($p1, $mul.ref(0, 3176)), $mul.ref(536, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7222, 40} true;
  assume {:verifier.code 0} true;
  $i45 := $load.i32($M.1, $p44);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7222, 44} true;
  assume {:verifier.code 0} true;
  $i46 := $add.i32($i45, 8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7222, 30} true;
  assume {:verifier.code 0} true;
  $i47 := $ult.i32($i43, $i46);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7222, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i47 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7223, 5} true;
  assume {:verifier.code 0} true;
  call netif_stop_queue($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7224, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i47 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7226, 3} true;
  assume {:verifier.code 0} true;
  $i40 := $i41;
  goto $bb12;
}
const ks8842_set_mac: ref;
axiom (ks8842_set_mac == $sub.ref(0, 118521));
procedure  ks8842_set_mac($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i24;
  var $i15: i24;
  var $i16: i24;
  var $p17: ref;
  var $p18: ref;
  var $i19: i8;
  var $i20: i64;
  var $i21: i64;
  var $i22: i64;
  var $i23: i1;
  var $i24: i32;
  var $p25: ref;
  var $p26: ref;
  var $i27: i1;
  var $i28: i8;
  var $i29: i1;
  var $i30: i32;
  var $i31: i1;
  var $p33: ref;
  var $i34: i8;
  var $i35: i64;
  var $p36: ref;
  var $p37: ref;
  var $i32: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7242, 9} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7242, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := netdev_priv($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7243, 13} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7244, 10} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7245, 26} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p5, $mul.ref(0, 16)), $mul.ref(2, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7245, 9} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7246, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7246, 22} true;
  assume {:verifier.code 0} true;
  $M.2 := $store.ref($M.2, $p8, .str);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7247, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7247, 23} true;
  assume {:verifier.code 0} true;
  $M.3 := $store.ref($M.3, $p9, .str.29);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7248, 14} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7248, 23} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.ref($M.4, $p10, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7249, 14} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7249, 21} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.ref($M.5, $p11, .str.22);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7250, 14} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7250, 14} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7250, 21} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i24($M.6, $p13);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7250, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:7250:21: warning: over-approximating bitwise operation and;
  $i15 := $and.i24($i14, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7250, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:7250:21: warning: over-approximating bitwise operation or;
  $i16 := $or.i24($i15, 1130);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7250, 21} true;
  assume {:verifier.code 0} true;
  $M.6 := $store.i24($M.6, $p13, $i16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7251, 14} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7251, 20} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i8($M.7, $p17, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7252, 51} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7252, 51} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i8($M.7, $p18);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7252, 33} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i8.i64($i19);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7252, 57} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:7252:57: warning: over-approximating bitwise operation and;
  $i21 := $and.i64($i20, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7252, 13} true;
  assume {:verifier.code 0} true;
  call $i22 := ldv__builtin_expect($i21, 0);
  call {:cexpr "tmp___0"} boogie_si_record_i64($i22);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7253, 15} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i64($i22, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7253, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i23 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7254, 5} true;
  assume {:verifier.code 0} true;
  call $i24 := __dynamic_netdev_dbg.ref.ref.ref.ref($p2, $p0, .str.22, .str.29);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7256, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7258, 54} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p5, $mul.ref(0, 16)), $mul.ref(2, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7258, 33} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p25);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7258, 13} true;
  assume {:verifier.code 0} true;
  call $i27 := is_valid_ether_addr($p26);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7258, 11} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i1.i8($i27);
  call {:cexpr "tmp___1"} boogie_si_record_i8($i28);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7259, 7} true;
  assume {:verifier.code 0} true;
  $i29 := $trunc.i8.i1($i28);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7259, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i29 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7261, 3} true;
  assume {:verifier.code 0} true;
  $i30 := 0;
  goto $bb6;
$bb5:
  assume !(($i29 == 1));
  assume {:verifier.code 0} true;
  $i30 := 1;
  goto $bb6;
$bb6:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7264, 7} true;
  assume {:verifier.code 0} true;
  $i31 := $ne.i32($i30, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7264, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i31 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7265, 5} true;
  assume {:verifier.code 0} true;
  $i32 := $sub.i32(0, 99);
  goto $bb9;
$bb8:
  assume !(($i31 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7273, 1} true;
  assume {:verifier.code 0} true;
  $r := $i32;
  $exn := false;
  return;
$bb10:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7268, 28} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(581, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7268, 28} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i8($M.1, $p33);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7268, 11} true;
  assume {:verifier.code 0} true;
  $i35 := $zext.i8.i64($i34);
  call {:cexpr "__len"} boogie_si_record_i64($i35);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7269, 34} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(840, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7269, 34} true;
  assume {:verifier.code 0} true;
  $p37 := $load.ref($M.1, $p36);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7269, 11} true;
  assume {:verifier.code 0} true;
  call $M.1 := $memcpy.i8($M.1, $M.1, $p37, $p7, $i35, false);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7270, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_write_mac_addr($p4, $p7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7271, 3} true;
  assume {:verifier.code 0} true;
  $i32 := 0;
  goto $bb9;
}
const ks8842_tx_timeout: ref;
axiom (ks8842_tx_timeout == $sub.ref(0, 119553));
procedure  ks8842_tx_timeout($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i24;
  var $i11: i24;
  var $i12: i24;
  var $p13: ref;
  var $p14: ref;
  var $i15: i8;
  var $i16: i64;
  var $i17: i64;
  var $i18: i64;
  var $i19: i1;
  var $i20: i32;
  var $p21: ref;
  var $i22: i1;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7326, 9} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7326, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7327, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7328, 14} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7328, 22} true;
  assume {:verifier.code 0} true;
  $M.2 := $store.ref($M.2, $p4, .str);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7329, 14} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7329, 23} true;
  assume {:verifier.code 0} true;
  $M.3 := $store.ref($M.3, $p5, .str.30);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7330, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7330, 23} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.ref($M.4, $p6, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7331, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7331, 21} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.ref($M.5, $p7, .str.22);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7332, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7332, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7332, 21} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i24($M.6, $p9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7332, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:7332:21: warning: over-approximating bitwise operation and;
  $i11 := $and.i24($i10, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7332, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:7332:21: warning: over-approximating bitwise operation or;
  $i12 := $or.i24($i11, 1177);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7332, 21} true;
  assume {:verifier.code 0} true;
  $M.6 := $store.i24($M.6, $p9, $i12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7333, 14} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7333, 20} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i8($M.7, $p13, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7334, 51} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7334, 51} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i8($M.7, $p14);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7334, 33} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i8.i64($i15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7334, 57} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:7334:57: warning: over-approximating bitwise operation and;
  $i17 := $and.i64($i16, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7334, 13} true;
  assume {:verifier.code 0} true;
  call $i18 := ldv__builtin_expect($i17, 0);
  call {:cexpr "tmp___0"} boogie_si_record_i64($i18);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7335, 15} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i64($i18, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7335, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i19 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7336, 5} true;
  assume {:verifier.code 0} true;
  call $i20 := __dynamic_netdev_dbg.ref.ref.ref.ref($p1, $p0, .str.22, .str.30);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7338, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7340, 28} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(136, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7340, 3} true;
  assume {:verifier.code 0} true;
  call $i22 := schedule_work($p21);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7341, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_ndo_init_4: ref;
axiom (ldv_ndo_init_4 == $sub.ref(0, 120585));
procedure  ldv_ndo_init_4()
  returns ($r: i32)
{
  var $i0: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8392, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8392, 10} true;
  assume {:verifier.code 1} true;
  call $i0 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8392, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const ldv_ndo_uninit_4: ref;
axiom (ldv_ndo_uninit_4 == $sub.ref(0, 121617));
procedure  ldv_ndo_uninit_4()
  returns ($r: i32)
{
  var $i0: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8396, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8396, 10} true;
  assume {:verifier.code 1} true;
  call $i0 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8396, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const ks8842_platform_driver_exit: ref;
axiom (ks8842_platform_driver_exit == $sub.ref(0, 122649));
procedure  ks8842_platform_driver_exit()
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7529, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7529, 3} true;
  assume {:verifier.code 0} true;
  call ldv_platform_driver_unregister_22(ks8842_platform_driver);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7530, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ks8842_platform_driver_init: ref;
axiom (ks8842_platform_driver_init == $sub.ref(0, 123681));
procedure  ks8842_platform_driver_init()
  returns ($r: i32)
{
  var $i0: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7522, 9} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7522, 9} true;
  assume {:verifier.code 0} true;
  call $i0 := ldv___platform_driver_register_21(ks8842_platform_driver, __this_module);
  call {:cexpr "tmp"} boogie_si_record_i32($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7523, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const ethtool_op_get_link: ref;
axiom (ethtool_op_get_link == $sub.ref(0, 124713));
procedure  ethtool_op_get_link($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8351, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8351, 10} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_uint();
  call {:cexpr "smack:ext:__VERIFIER_nondet_uint"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8351, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const ks8842_probe: ref;
axiom (ks8842_probe == $sub.ref(0, 125745));
procedure  ks8842_probe($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $p9: ref;
  var $i10: i64;
  var $p11: ref;
  var $i12: i64;
  var $i13: i1;
  var $p15: ref;
  var $i16: i64;
  var $i17: i1;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $i37: i64;
  var $p38: ref;
  var $i39: i64;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i64;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $i47: i64;
  var $i48: i1;
  var $i50: i32;
  var $p51: ref;
  var $p52: ref;
  var $i53: i32;
  var $i54: i1;
  var $p55: ref;
  var $i56: i32;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $i61: i64;
  var $i62: i1;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p67: ref;
  var $p66: ref;
  var $p68: ref;
  var $p69: ref;
  var $i70: i64;
  var $i71: i64;
  var $i72: i1;
  var $i73: i64;
  var $i74: i1;
  var $p75: ref;
  var $i76: i32;
  var $i77: i1;
  var $p78: ref;
  var $i79: i32;
  var $i80: i1;
  var $p81: ref;
  var $i82: i32;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $i86: i32;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $i94: i64;
  var $p95: ref;
  var $p96: ref;
  var $p97: ref;
  var $p98: ref;
  var $p99: ref;
  var $p100: ref;
  var $p101: ref;
  var $p102: ref;
  var $i103: i8;
  var $i104: i32;
  var $i105: i64;
  var $i106: i1;
  var $p107: ref;
  var $i108: i8;
  var $i109: i32;
  var $i110: i1;
  var $p113: ref;
  var $i114: i64;
  var $p115: ref;
  var $i116: i8;
  var $i117: i32;
  var $i118: i1;
  var $i119: i32;
  var $i121: i32;
  var $i122: i8;
  var $i123: i32;
  var $i124: i1;
  var $i112: i32;
  var $i125: i32;
  var $i111: i32;
  var $i120: i32;
  var $p126: ref;
  var $i127: i8;
  var $i128: i32;
  var $i129: i1;
  var $p130: ref;
  var $i131: i8;
  var $i132: i64;
  var $p133: ref;
  var $p134: ref;
  var $p135: ref;
  var $p136: ref;
  var $i137: i32;
  var $p138: ref;
  var $i139: i8;
  var $i140: i32;
  var $i141: i1;
  var $p142: ref;
  var $p143: ref;
  var $p144: ref;
  var $p145: ref;
  var $i146: i1;
  var $i147: i8;
  var $i148: i1;
  var $i149: i32;
  var $i150: i1;
  var $i151: i16;
  var $p152: ref;
  var $p153: ref;
  var $p154: ref;
  var $i155: i32;
  var $i156: i1;
  var $p157: ref;
  var $i158: i32;
  var $i159: i32;
  var $i160: i32;
  var $i161: i32;
  var $i162: i32;
  var $i163: i32;
  var $i164: i32;
  var $i165: i32;
  var $i166: i32;
  var $i167: i32;
  var $i57: i32;
  var $p169: ref;
  var $p170: ref;
  var $i49: i32;
  var $i18: i32;
  var $i171: i64;
  var $p172: ref;
  var $i173: i64;
  var $i14: i32;
  var $i168: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7377, 58} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume true;
  assume true;
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7377, 58} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p0, $mul.ref(0, 1472)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7377, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := dev_get_platdata($p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7378, 11} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7379, 11} true;
  assume {:verifier.code 0} true;
  call $p7 := platform_get_resource($p0, 512, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7380, 13} true;
  assume {:verifier.code 0} true;
  call $i8 := resource_size($p7);
  call {:cexpr "tmp___0"} boogie_si_record_i64($i8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7381, 55} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p7, $mul.ref(0, 56)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7381, 55} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i64($M.1, $p9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7381, 13} true;
  assume {:verifier.code 0} true;
  call $p11 := __request_region(iomem_resource, $i10, $i8, .str, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7382, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $p2i.ref.i64($p11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7382, 31} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i64($i12, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7382, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i13 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7383, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $sub.i32(0, 12);
  goto $bb3;
$bb2:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7376, 7} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7487, 3} true;
  assume {:verifier.code 0} true;
  $i168 := $i14;
  goto $bb61;
$bb4:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7386, 12} true;
  assume {:verifier.code 0} true;
  call $p15 := alloc_etherdev_mqs(416, 1, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7387, 7} true;
  assume {:verifier.code 0} true;
  $i16 := $p2i.ref.i64($p15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7387, 30} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i64($i16, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7387, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i17 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7388, 5} true;
  assume {:verifier.code 0} true;
  $i18 := $sub.i32(0, 12);
  goto $bb7;
$bb6:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7376, 7} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7484, 13} true;
  assume {:verifier.code 0} true;
  call $i171 := resource_size($p7);
  call {:cexpr "tmp___6"} boogie_si_record_i64($i171);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7485, 45} true;
  assume {:verifier.code 0} true;
  $p172 := $add.ref($add.ref($p7, $mul.ref(0, 56)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7485, 45} true;
  assume {:verifier.code 0} true;
  $i173 := $load.i64($M.1, $p172);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7485, 3} true;
  assume {:verifier.code 0} true;
  call __release_region(iomem_resource, $i173, $i171);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7485, 3} true;
  assume {:verifier.code 0} true;
  $i14 := $i18;
  goto $bb3;
$bb8:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7391, 32} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($add.ref($p0, $mul.ref(0, 1472)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7391, 11} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p15, $mul.ref(0, 3176)), $mul.ref(1296, 1));
  $p21 := $add.ref($add.ref($add.ref($p15, $mul.ref(0, 3176)), $mul.ref(1296, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7391, 22} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p21, $p19);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7392, 13} true;
  assume {:verifier.code 0} true;
  call $p22 := netdev_priv($p15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7393, 13} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($p22);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7394, 12} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(216, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7394, 19} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p24, $p15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7395, 26} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(136, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7395, 3} true;
  assume {:verifier.code 0} true;
  call __init_work($p25, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7396, 19} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p2, $mul.ref(0, 8)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7396, 27} true;
  assume {:verifier.code 0} true;
  $M.34 := $store.i64($M.34, $p26, 137438953408);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7397, 12} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(136, 1));
  $p28 := $add.ref($add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(136, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7397, 32} true;
  assume {:verifier.code 0} true;
  $p29 := $bitcast.ref.ref($p28);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7397, 32} true;
  assume {:verifier.code 0} true;
  $p30 := $bitcast.ref.ref($p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7397, 32} true;
  assume {:verifier.code 0} true;
  call $M.1 := $memcpy.i8($M.1, $M.34, $p29, $p30, 8, false);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7398, 31} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(136, 1));
  $p32 := $add.ref($add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(136, 1)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7398, 3} true;
  assume {:verifier.code 0} true;
  call lockdep_init_map($p32, .str.31, $p1, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7400, 29} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(136, 1));
  $p34 := $add.ref($add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(136, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7400, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p34);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7401, 12} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(136, 1));
  $p36 := $add.ref($add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(136, 1)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7401, 30} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p36, ks8842_tx_timeout_work);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7402, 13} true;
  assume {:verifier.code 0} true;
  call $i37 := resource_size($p7);
  call {:cexpr "tmp___3"} boogie_si_record_i64($i37);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7403, 37} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p7, $mul.ref(0, 56)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7403, 37} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i64($M.1, $p38);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7403, 22} true;
  assume {:verifier.code 0} true;
  call $p40 := ioremap($i39, $i37);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7403, 12} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7403, 20} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p41, $p40);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7404, 32} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($add.ref($p7, $mul.ref(0, 56)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7404, 32} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i64($M.1, $p42);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7404, 12} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7404, 23} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i64($M.1, $p44, $i43);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7405, 32} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7405, 32} true;
  assume {:verifier.code 0} true;
  $p46 := $load.ref($M.1, $p45);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7405, 7} true;
  assume {:verifier.code 0} true;
  $i47 := $p2i.ref.i64($p46);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7405, 40} true;
  assume {:verifier.code 0} true;
  $i48 := $eq.i64($i47, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7405, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i48 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7406, 5} true;
  assume {:verifier.code 0} true;
  $i49 := $sub.i32(0, 12);
  goto $bb11;
$bb10:
  assume !(($i48 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7482, 3} true;
  assume {:verifier.code 0} true;
  call ldv_free_netdev_18($p15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7482, 3} true;
  assume {:verifier.code 0} true;
  $i18 := $i49;
  goto $bb7;
$bb12:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7409, 18} true;
  assume {:verifier.code 0} true;
  call $i50 := platform_get_irq($p0, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7409, 12} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7409, 16} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i32($M.1, $p51, $i50);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7410, 16} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7410, 16} true;
  assume {:verifier.code 0} true;
  $i53 := $load.i32($M.1, $p52);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7410, 20} true;
  assume {:verifier.code 0} true;
  $i54 := $slt.i32($i53, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7410, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i54 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7411, 20} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7411, 20} true;
  assume {:verifier.code 0} true;
  $i56 := $load.i32($M.1, $p55);
  call {:cexpr "err"} boogie_si_record_i32($i56);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7412, 5} true;
  assume {:verifier.code 0} true;
  $i57 := $i56;
  goto $bb15;
$bb14:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7480, 37} true;
  assume {:verifier.code 0} true;
  $p169 := $add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7480, 37} true;
  assume {:verifier.code 0} true;
  $p170 := $load.ref($M.1, $p169);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7480, 3} true;
  assume {:verifier.code 0} true;
  call iounmap($p170);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7480, 3} true;
  assume {:verifier.code 0} true;
  $i49 := $i57;
  goto $bb11;
$bb16:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7415, 40} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($add.ref($p0, $mul.ref(0, 1472)), $mul.ref(16, 1));
  $p59 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 1472)), $mul.ref(16, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7415, 44} true;
  assume {:verifier.code 0} true;
  $p60 := $load.ref($M.1, $p59);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7415, 18} true;
  assume {:verifier.code 0} true;
  $i61 := $p2i.ref.i64($p60);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7415, 51} true;
  assume {:verifier.code 0} true;
  $i62 := $ne.i64($i61, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7415, 18} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i62} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i62 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7415, 99} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($add.ref($p0, $mul.ref(0, 1472)), $mul.ref(16, 1));
  $p64 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 1472)), $mul.ref(16, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7415, 103} true;
  assume {:verifier.code 0} true;
  $p65 := $load.ref($M.1, $p64);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7415, 18} true;
  assume {:verifier.code 0} true;
  $p66 := $p65;
  goto $bb19;
$bb18:
  assume !(($i62 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7415, 120} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($add.ref($p0, $mul.ref(0, 1472)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7415, 18} true;
  assume {:verifier.code 0} true;
  $p66 := $p67;
  goto $bb19;
$bb19:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7415, 18} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7415, 12} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(224, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7415, 16} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p68, $p66);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7416, 19} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7416, 19} true;
  assume {:verifier.code 0} true;
  $i70 := $load.i64($M.1, $p69);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7416, 30} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:7416:30: warning: over-approximating bitwise operation and;
  $i71 := $and.i64($i70, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7416, 37} true;
  assume {:verifier.code 0} true;
  $i72 := $eq.i64($i71, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7416, 44} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i72} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i72 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7416, 47} true;
  assume {:verifier.code 0} true;
  $i73 := $p2i.ref.i64($p6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7416, 69} true;
  assume {:verifier.code 0} true;
  $i74 := $ne.i64($i73, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7416, 124} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i74} true;
  goto $bb23, $bb24;
$bb21:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7416, 44} true;
  assume {:verifier.code 0} true;
  assume !(($i72 == 1));
  goto $bb22;
$bb22:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7420, 14} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(304, 1));
  $p90 := $add.ref($add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(104, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7420, 29} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i32($M.1, $p90, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7421, 14} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(232, 1));
  $p92 := $add.ref($add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7421, 29} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i32($M.1, $p92, $sub.i32(0, 1));
  assume {:verifier.code 0} true;
  goto $bb29;
$bb23:
  assume ($i74 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7416, 134} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($add.ref($p6, $mul.ref(0, 16)), $mul.ref(12, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7416, 134} true;
  assume {:verifier.code 0} true;
  $i76 := $load.i32($M.1, $p75);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7416, 149} true;
  assume {:verifier.code 0} true;
  $i77 := $ne.i32($i76, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7416, 156} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i77} true;
  goto $bb25, $bb26;
$bb24:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7416, 124} true;
  assume {:verifier.code 0} true;
  assume !(($i74 == 1));
  goto $bb22;
$bb25:
  assume ($i77 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7416, 166} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($add.ref($p6, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7416, 166} true;
  assume {:verifier.code 0} true;
  $i79 := $load.i32($M.1, $p78);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7416, 181} true;
  assume {:verifier.code 0} true;
  $i80 := $ne.i32($i79, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7416, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i80} true;
  goto $bb27, $bb28;
$bb26:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7416, 156} true;
  assume {:verifier.code 0} true;
  assume !(($i77 == 1));
  goto $bb22;
$bb27:
  assume ($i80 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7417, 38} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($add.ref($p6, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7417, 38} true;
  assume {:verifier.code 0} true;
  $i82 := $load.i32($M.1, $p81);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7417, 14} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(304, 1));
  $p84 := $add.ref($add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(104, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7417, 29} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i32($M.1, $p84, $i82);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7418, 38} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($add.ref($p6, $mul.ref(0, 16)), $mul.ref(12, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7418, 38} true;
  assume {:verifier.code 0} true;
  $i86 := $load.i32($M.1, $p85);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7418, 14} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(232, 1));
  $p88 := $add.ref($add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7418, 29} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i32($M.1, $p88, $i86);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7419, 3} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7416, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i80 == 1));
  goto $bb22;
$bb29:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7423, 27} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7423, 54} true;
  assume {:verifier.code 0} true;
  $i94 := $p2i.ref.i64($p15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7423, 3} true;
  assume {:verifier.code 0} true;
  call tasklet_init($p93, ks8842_tasklet, $i94);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7424, 29} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7424, 3} true;
  assume {:verifier.code 0} true;
  call $p96 := spinlock_check($p95);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7425, 35} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(64, 1));
  $p98 := $add.ref($add.ref($add.ref($p23, $mul.ref(0, 416)), $mul.ref(64, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7425, 49} true;
  assume {:verifier.code 0} true;
  $p99 := $bitcast.ref.ref($p98);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7425, 3} true;
  assume {:verifier.code 0} true;
  call __raw_spin_lock_init($p99, .str.32, $p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7427, 11} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($add.ref($p15, $mul.ref(0, 3176)), $mul.ref(488, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7427, 22} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p100, ks8842_netdev_ops);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7428, 11} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($add.ref($p15, $mul.ref(0, 3176)), $mul.ref(496, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7428, 23} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p101, ks8842_ethtool_ops);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7429, 30} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($add.ref($p15, $mul.ref(0, 3176)), $mul.ref(581, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7429, 30} true;
  assume {:verifier.code 0} true;
  $i103 := $load.i8($M.1, $p102);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7429, 7} true;
  assume {:verifier.code 0} true;
  $i104 := $zext.i8.i32($i103);
  call {:cexpr "i"} boogie_si_record_i32($i104);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7430, 7} true;
  assume {:verifier.code 0} true;
  $i105 := $p2i.ref.i64($p6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7430, 29} true;
  assume {:verifier.code 0} true;
  $i106 := $ne.i64($i105, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7430, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i106} true;
  goto $bb30, $bb31;
$bb30:
  assume ($i106 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7440, 32} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($add.ref($p15, $mul.ref(0, 3176)), $mul.ref(581, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7440, 32} true;
  assume {:verifier.code 0} true;
  $i108 := $load.i8($M.1, $p107);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7440, 9} true;
  assume {:verifier.code 0} true;
  $i109 := $zext.i8.i32($i108);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7440, 41} true;
  assume {:verifier.code 0} true;
  $i110 := $ugt.i32($i109, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7440, 9} true;
  assume {:verifier.code 0} true;
  $i111 := 0;
  assume {:branchcond $i110} true;
  goto $bb32, $bb33;
$bb31:
  assume !(($i106 == 1));
  assume {:verifier.code 0} true;
  $i137 := $i104;
  goto $bb47;
$bb32:
  assume ($i110 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7440, 9} true;
  assume {:verifier.code 0} true;
  $i112 := 0;
  goto $bb35;
$bb33:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7440, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i110 == 1));
  goto $bb34;
$bb34:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb35:
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7441, 7} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7434, 31} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($add.ref($p6, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7434, 24} true;
  assume {:verifier.code 0} true;
  $i114 := $zext.i32.i64($i112);
  $p115 := $add.ref($add.ref($add.ref($p6, $mul.ref(0, 16)), $mul.ref(0, 1)), $mul.ref($i114, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7434, 24} true;
  assume {:verifier.code 0} true;
  $i116 := $load.i8($M.1, $p115);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7434, 9} true;
  assume {:verifier.code 0} true;
  $i117 := $zext.i8.i32($i116);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7434, 42} true;
  assume {:verifier.code 0} true;
  $i118 := $ne.i32($i117, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7434, 9} true;
  assume {:verifier.code 0} true;
  $i119 := $i112;
  assume {:branchcond $i118} true;
  goto $bb37, $bb38;
$bb37:
  assume ($i118 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7435, 7} true;
  assume {:verifier.code 0} true;
  $i120 := $i119;
  goto $bb39;
$bb38:
  assume !(($i118 == 1));
  assume {:verifier.code 0} true;
  goto $bb40;
$bb39:
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7445, 32} true;
  assume {:verifier.code 0} true;
  $p126 := $add.ref($add.ref($p15, $mul.ref(0, 3176)), $mul.ref(581, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7445, 32} true;
  assume {:verifier.code 0} true;
  $i127 := $load.i8($M.1, $p126);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7445, 9} true;
  assume {:verifier.code 0} true;
  $i128 := $zext.i8.i32($i127);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7445, 41} true;
  assume {:verifier.code 0} true;
  $i129 := $ugt.i32($i128, $i120);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7445, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i129} true;
  goto $bb44, $bb45;
$bb40:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7438, 11} true;
  assume {:verifier.code 0} true;
  $i121 := $add.i32($i112, 1);
  call {:cexpr "i"} boogie_si_record_i32($i121);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7440, 32} true;
  assume {:verifier.code 0} true;
  $i122 := $load.i8($M.1, $p107);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7440, 9} true;
  assume {:verifier.code 0} true;
  $i123 := $zext.i8.i32($i122);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7440, 41} true;
  assume {:verifier.code 0} true;
  $i124 := $ugt.i32($i123, $i121);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7440, 9} true;
  assume {:verifier.code 0} true;
  $i125 := $i121;
  assume {:branchcond $i124} true;
  goto $bb41, $bb42;
$bb41:
  assume ($i124 == 1);
  assume {:verifier.code 0} true;
  $i112 := $i121;
  goto $bb35;
$bb42:
  assume !(($i124 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7440, 9} true;
  assume {:verifier.code 0} true;
  $i111 := $i125;
  goto $bb34;
$bb43:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7440, 43} true;
  assume {:verifier.code 0} true;
  $i120 := $i111;
  goto $bb39;
$bb44:
  assume ($i129 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7446, 32} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($add.ref($p15, $mul.ref(0, 3176)), $mul.ref(581, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7446, 32} true;
  assume {:verifier.code 0} true;
  $i131 := $load.i8($M.1, $p130);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7446, 15} true;
  assume {:verifier.code 0} true;
  $i132 := $zext.i8.i64($i131);
  call {:cexpr "__len"} boogie_si_record_i64($i132);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7447, 38} true;
  assume {:verifier.code 0} true;
  $p133 := $add.ref($add.ref($p15, $mul.ref(0, 3176)), $mul.ref(840, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7447, 38} true;
  assume {:verifier.code 0} true;
  $p134 := $load.ref($M.1, $p133);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7447, 72} true;
  assume {:verifier.code 0} true;
  $p135 := $add.ref($add.ref($p6, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7447, 15} true;
  assume {:verifier.code 0} true;
  $p136 := $bitcast.ref.ref($p135);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7447, 15} true;
  assume {:verifier.code 0} true;
  call $M.1 := $memcpy.i8($M.1, $M.1, $p134, $p136, $i132, false);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7449, 5} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb45:
  assume !(($i129 == 1));
  assume {:verifier.code 0} true;
  goto $bb46;
$bb46:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7451, 3} true;
  assume {:verifier.code 0} true;
  $i137 := $i120;
  goto $bb47;
$bb47:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7453, 30} true;
  assume {:verifier.code 0} true;
  $p138 := $add.ref($add.ref($p15, $mul.ref(0, 3176)), $mul.ref(581, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7453, 30} true;
  assume {:verifier.code 0} true;
  $i139 := $load.i8($M.1, $p138);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7453, 7} true;
  assume {:verifier.code 0} true;
  $i140 := $zext.i8.i32($i139);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7453, 39} true;
  assume {:verifier.code 0} true;
  $i141 := $eq.i32($i140, $i137);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7453, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i141} true;
  goto $bb48, $bb49;
$bb48:
  assume ($i141 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7454, 43} true;
  assume {:verifier.code 0} true;
  $p142 := $add.ref($add.ref($p15, $mul.ref(0, 3176)), $mul.ref(840, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7454, 43} true;
  assume {:verifier.code 0} true;
  $p143 := $load.ref($M.1, $p142);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7454, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_read_mac_addr($p23, $p143);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7455, 55} true;
  assume {:verifier.code 0} true;
  $p144 := $add.ref($add.ref($p15, $mul.ref(0, 3176)), $mul.ref(840, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7455, 55} true;
  assume {:verifier.code 0} true;
  $p145 := $load.ref($M.1, $p144);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7455, 15} true;
  assume {:verifier.code 0} true;
  call $i146 := is_valid_ether_addr($p145);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7455, 13} true;
  assume {:verifier.code 0} true;
  $i147 := $zext.i1.i8($i146);
  call {:cexpr "tmp___4"} boogie_si_record_i8($i147);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7456, 9} true;
  assume {:verifier.code 0} true;
  $i148 := $trunc.i8.i1($i147);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7456, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i148} true;
  goto $bb50, $bb51;
$bb49:
  assume !(($i141 == 1));
  assume {:verifier.code 0} true;
  goto $bb56;
$bb50:
  assume ($i148 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7458, 5} true;
  assume {:verifier.code 0} true;
  $i149 := 0;
  goto $bb52;
$bb51:
  assume !(($i148 == 1));
  assume {:verifier.code 0} true;
  $i149 := 1;
  goto $bb52;
$bb52:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7461, 9} true;
  assume {:verifier.code 0} true;
  $i150 := $ne.i32($i149, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7461, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i150} true;
  goto $bb53, $bb54;
$bb53:
  assume ($i150 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7462, 7} true;
  assume {:verifier.code 0} true;
  call eth_hw_addr_random($p15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7463, 5} true;
  assume {:verifier.code 0} true;
  goto $bb55;
$bb54:
  assume !(($i150 == 1));
  assume {:verifier.code 0} true;
  goto $bb55;
$bb55:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7465, 3} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb56:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7467, 8} true;
  assume {:verifier.code 0} true;
  call $i151 := ks8842_read16($p23, 32, 0);
  call {:cexpr "id"} boogie_si_record_i16($i151);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7468, 29} true;
  assume {:verifier.code 0} true;
  $p152 := $add.ref($add.ref($p15, $mul.ref(0, 3176)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7468, 10} true;
  assume {:verifier.code 0} true;
  $p153 := $bitcast.ref.ref($p152);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7468, 3} true;
  assume {:verifier.code 0} true;
  call $p154 := strcpy($p153, .str.33);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7469, 9} true;
  assume {:verifier.code 0} true;
  call $i155 := ldv_register_netdev_17($p15);
  call {:cexpr "err"} boogie_si_record_i32($i155);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7470, 11} true;
  assume {:verifier.code 0} true;
  $i156 := $ne.i32($i155, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7470, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i156} true;
  goto $bb57, $bb58;
$bb57:
  assume ($i156 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7471, 5} true;
  assume {:verifier.code 0} true;
  goto $bb59;
$bb58:
  assume !(($i156 == 1));
  assume {:verifier.code 0} true;
  goto $bb60;
$bb59:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7477, 3} true;
  assume {:verifier.code 0} true;
  $i57 := $i155;
  goto $bb15;
$bb60:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7474, 30} true;
  assume {:verifier.code 0} true;
  $p157 := $bitcast.ref.ref($p15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7474, 3} true;
  assume {:verifier.code 0} true;
  call platform_set_drvdata($p0, $p157);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7475, 74} true;
  assume {:verifier.code 0} true;
  $i158 := $zext.i16.i32($i151);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7475, 83} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:7475:83: warning: over-approximating bitwise operation ashr;
  $i159 := $ashr.i32($i158, 8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7475, 89} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:7475:89: warning: over-approximating bitwise operation and;
  $i160 := $and.i32($i159, 255);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7476, 11} true;
  assume {:verifier.code 0} true;
  $i161 := $zext.i16.i32($i151);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7476, 20} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:7476:20: warning: over-approximating bitwise operation ashr;
  $i162 := $ashr.i32($i161, 4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7476, 26} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:7476:26: warning: over-approximating bitwise operation and;
  $i163 := $and.i32($i162, 15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7476, 33} true;
  assume {:verifier.code 0} true;
  $i164 := $zext.i16.i32($i151);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7476, 42} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:7476:42: warning: over-approximating bitwise operation ashr;
  $i165 := $ashr.i32($i164, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7476, 48} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:7476:48: warning: over-approximating bitwise operation and;
  $i166 := $and.i32($i165, 7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7475, 3} true;
  assume {:verifier.code 0} true;
  call $i167 := printk.ref.i32.i32.i32(.str.34, $i160, $i163, $i166);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7477, 3} true;
  assume {:verifier.code 0} true;
  $i168 := 0;
  goto $bb61;
$bb61:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7489, 1} true;
  assume {:verifier.code 0} true;
  $r := $i168;
  $exn := false;
  return;
}
const ks8842_remove: ref;
axiom (ks8842_remove == $sub.ref(0, 126777));
procedure  ks8842_remove($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $p10: ref;
  var $i11: i64;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7500, 9} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7500, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := platform_get_drvdata($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7501, 12} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7502, 13} true;
  assume {:verifier.code 0} true;
  call $p3 := netdev_priv($p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7503, 13} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7504, 13} true;
  assume {:verifier.code 0} true;
  call $p5 := platform_get_resource($p0, 512, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7506, 3} true;
  assume {:verifier.code 0} true;
  call ldv_unregister_netdev_19($p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7507, 27} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7507, 3} true;
  assume {:verifier.code 0} true;
  call tasklet_kill($p6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7508, 37} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7508, 37} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.1, $p7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7508, 3} true;
  assume {:verifier.code 0} true;
  call iounmap($p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7509, 3} true;
  assume {:verifier.code 0} true;
  call ldv_free_netdev_20($p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7510, 13} true;
  assume {:verifier.code 0} true;
  call $i9 := resource_size($p5);
  call {:cexpr "tmp___2"} boogie_si_record_i64($i9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7511, 45} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p5, $mul.ref(0, 56)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7511, 45} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i64($M.1, $p10);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7511, 3} true;
  assume {:verifier.code 0} true;
  call __release_region(iomem_resource, $i11, $i9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7512, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const ldv_check_final_state: ref;
axiom (ldv_check_final_state == $sub.ref(0, 127809));
procedure  ldv_check_final_state()
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i1;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8264, 30} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8264, 30} true;
  assume {:verifier.code 0} true;
  $p0 := $M.33;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8264, 13} true;
  assume {:verifier.code 0} true;
  call $i1 := ldv_set_is_empty($p0);
  call {:cexpr "tmp___7"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8265, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8265, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8266, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8267, 5} true;
  assume {:verifier.code 0} true;
  call ldv_error();
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8269, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_set_is_empty: ref;
axiom (ldv_set_is_empty == $sub.ref(0, 128841));
procedure  ldv_set_is_empty($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8153, 11} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8153, 11} true;
  assume {:verifier.code 0} true;
  $i1 := $M.35;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8153, 22} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i32($i1, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8153, 22} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8153, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const platform_get_drvdata: ref;
axiom (platform_get_drvdata == $sub.ref(0, 129873));
procedure  platform_get_drvdata($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5822, 33} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5822, 33} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 1472)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5822, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := dev_get_drvdata($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5823, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const platform_get_resource: ref;
axiom (platform_get_resource == $sub.ref(0, 130905));
procedure  platform_get_resource($p0: ref, $i1: i32, $i2: i32)
  returns ($r: ref)
{
  var $p3: ref;
  var $p4: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8419, 29} true;
  assume {:verifier.code 0} true;
  call {:cexpr "platform_get_resource:arg:arg1"} boogie_si_record_i32($i1);
  call {:cexpr "platform_get_resource:arg:arg2"} boogie_si_record_i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8419, 29} true;
  assume {:verifier.code 0} true;
  call $p3 := external_alloc();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8419, 10} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8419, 3} true;
  assume {:verifier.code 0} true;
  $r := $p4;
  $exn := false;
  return;
}
const ldv_unregister_netdev_19: ref;
axiom (ldv_unregister_netdev_19 == $sub.ref(0, 131937));
procedure  ldv_unregister_netdev_19($p0: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8023, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8023, 3} true;
  assume {:verifier.code 0} true;
  call unregister_netdev($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8024, 24} true;
  assume {:verifier.code 0} true;
  $M.23 := 0;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8025, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const tasklet_kill: ref;
axiom (tasklet_kill == $sub.ref(0, 132969));
procedure  tasklet_kill($p0: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8448, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8448, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const iounmap: ref;
axiom (iounmap == $sub.ref(0, 134001));
procedure  iounmap($p0: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8379, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8379, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_free_netdev_20: ref;
axiom (ldv_free_netdev_20 == $sub.ref(0, 135033));
procedure  ldv_free_netdev_20($p0: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8031, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8031, 3} true;
  assume {:verifier.code 0} true;
  call free_netdev($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8032, 24} true;
  assume {:verifier.code 0} true;
  $M.23 := 0;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8033, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const resource_size: ref;
axiom (resource_size == $sub.ref(0, 136065));
procedure  resource_size($p0: ref)
  returns ($r: i64)
{
  var $p1: ref;
  var $i2: i64;
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $i6: i64;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5341, 38} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5341, 38} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 56)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5341, 38} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i64($M.1, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5341, 70} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p0, $mul.ref(0, 56)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5341, 70} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i64($M.1, $p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5341, 42} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i64($i2, $i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5341, 77} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i64($i5, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5341, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const __release_region: ref;
axiom (__release_region == $sub.ref(0, 137097));
procedure  __release_region($p0: ref, $i1: i64, $i2: i64)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8302, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "__release_region:arg:arg1"} boogie_si_record_i64($i1);
  call {:cexpr "__release_region:arg:arg2"} boogie_si_record_i64($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8302, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const free_netdev: ref;
axiom (free_netdev == $sub.ref(0, 138129));
procedure  free_netdev($p0: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8357, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8357, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const unregister_netdev: ref;
axiom (unregister_netdev == $sub.ref(0, 139161));
procedure  unregister_netdev($p0: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8451, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8451, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const external_alloc: ref;
axiom (external_alloc == $sub.ref(0, 140193));
procedure  external_alloc()
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8458, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8458, 10} true;
  assume {:verifier.code 1} true;
  call $p0 := __VERIFIER_nondet_pointer();
  call {:cexpr "smack:ext:__VERIFIER_nondet_pointer"} boogie_si_record_ref($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8458, 3} true;
  assume {:verifier.code 0} true;
  $r := $p0;
  $exn := false;
  return;
}
const dev_get_drvdata: ref;
axiom (dev_get_drvdata == $sub.ref(0, 141225));
procedure  dev_get_drvdata($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5407, 24} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5407, 24} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 1424)), $mul.ref(520, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5407, 24} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.1, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5407, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const dev_get_platdata: ref;
axiom (dev_get_platdata == $sub.ref(0, 142257));
procedure  dev_get_platdata($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5420, 24} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5420, 24} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 1424)), $mul.ref(512, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5420, 24} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.1, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5420, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const __request_region: ref;
axiom (__request_region == $sub.ref(0, 143289));
procedure  __request_region($p0: ref, $i1: i64, $i2: i64, $p3: ref, $i4: i32)
  returns ($r: ref)
{
  var $p5: ref;
  var $p6: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8306, 29} true;
  assume {:verifier.code 0} true;
  call {:cexpr "__request_region:arg:arg1"} boogie_si_record_i64($i1);
  call {:cexpr "__request_region:arg:arg2"} boogie_si_record_i64($i2);
  call {:cexpr "__request_region:arg:arg4"} boogie_si_record_i32($i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8306, 29} true;
  assume {:verifier.code 0} true;
  call $p5 := external_alloc();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8306, 10} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8306, 3} true;
  assume {:verifier.code 0} true;
  $r := $p6;
  $exn := false;
  return;
}
const alloc_etherdev_mqs: ref;
axiom (alloc_etherdev_mqs == $sub.ref(0, 144321));
procedure  alloc_etherdev_mqs($i0: i32, $i1: i32, $i2: i32)
  returns ($r: ref)
{
  var $p3: ref;
  var $p4: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8320, 31} true;
  assume {:verifier.code 0} true;
  call {:cexpr "alloc_etherdev_mqs:arg:arg0"} boogie_si_record_i32($i0);
  call {:cexpr "alloc_etherdev_mqs:arg:arg1"} boogie_si_record_i32($i1);
  call {:cexpr "alloc_etherdev_mqs:arg:arg2"} boogie_si_record_i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8320, 31} true;
  assume {:verifier.code 0} true;
  call $p3 := external_alloc();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8320, 10} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8320, 3} true;
  assume {:verifier.code 0} true;
  $r := $p4;
  $exn := false;
  return;
}
const __init_work: ref;
axiom (__init_work == $sub.ref(0, 145353));
procedure  __init_work($p0: ref, $i1: i32)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8281, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "__init_work:arg:arg1"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8281, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const llvm.memcpy.p0i8.p0i8.i64: ref;
axiom (llvm.memcpy.p0i8.p0i8.i64 == $sub.ref(0, 146385));
procedure  llvm.memcpy.p0i8.p0i8.i64($p0: ref, $p1: ref, $i2: i64, $i3: i1);
const lockdep_init_map: ref;
axiom (lockdep_init_map == $sub.ref(0, 147417));
procedure  lockdep_init_map($p0: ref, $p1: ref, $p2: ref, $i3: i32)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8399, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "lockdep_init_map:arg:arg3"} boogie_si_record_i32($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8399, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const INIT_LIST_HEAD: ref;
axiom (INIT_LIST_HEAD == $sub.ref(0, 148449));
procedure  INIT_LIST_HEAD($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5301, 9} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5301, 9} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 16)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5301, 14} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p1, $p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5302, 9} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 16)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5302, 14} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p2, $p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5303, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ks8842_tx_timeout_work: ref;
axiom (ks8842_tx_timeout_work == $sub.ref(0, 149481));
procedure  ks8842_tx_timeout_work($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i24;
  var $i13: i24;
  var $i14: i24;
  var $p15: ref;
  var $p16: ref;
  var $i17: i8;
  var $i18: i64;
  var $i19: i64;
  var $i20: i64;
  var $i21: i1;
  var $i22: i32;
  var $p23: ref;
  var $p24: ref;
  var $i25: i64;
  var $p26: ref;
  var $p27: ref;
  var $i28: i32;
  var $i29: i1;
  var $p30: ref;
  var $p31: ref;
  var $i32: i32;
  var $i33: i1;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i32;
  var $i40: i1;
  var $p41: ref;
  var $p42: ref;
  var $i43: i32;
  var $i44: i1;
  var $i45: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7285, 13} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7285, 13} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7285, 45} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, $mul.ref($sub.ref(0, 136), 416));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7286, 21} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p2, $mul.ref($sub.ref(0, 136), 416)), $mul.ref(216, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7286, 21} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.1, $p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7287, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7287, 22} true;
  assume {:verifier.code 0} true;
  $M.2 := $store.ref($M.2, $p6, .str);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7288, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7288, 23} true;
  assume {:verifier.code 0} true;
  $M.3 := $store.ref($M.3, $p7, .str.35);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7289, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7289, 23} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.ref($M.4, $p8, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7290, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7290, 21} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.ref($M.5, $p9, .str.22);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7291, 14} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7291, 14} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7291, 21} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i24($M.6, $p11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7291, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:7291:21: warning: over-approximating bitwise operation and;
  $i13 := $and.i24($i12, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7291, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:7291:21: warning: over-approximating bitwise operation or;
  $i14 := $or.i24($i13, 1148);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7291, 21} true;
  assume {:verifier.code 0} true;
  $M.6 := $store.i24($M.6, $p11, $i14);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7292, 14} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7292, 20} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i8($M.7, $p15, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7293, 47} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7293, 47} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i8($M.7, $p16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7293, 29} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i8.i64($i17);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7293, 53} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:7293:53: warning: over-approximating bitwise operation and;
  $i19 := $and.i64($i18, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7293, 9} true;
  assume {:verifier.code 0} true;
  call $i20 := ldv__builtin_expect($i19, 0);
  call {:cexpr "tmp"} boogie_si_record_i64($i20);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7294, 11} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i64($i20, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7294, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i21 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7295, 5} true;
  assume {:verifier.code 0} true;
  call $i22 := __dynamic_netdev_dbg.ref.ref.ref.ref($p1, $p5, .str.22, .str.35);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7297, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7299, 39} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($add.ref($p2, $mul.ref($sub.ref(0, 136), 416)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7299, 13} true;
  assume {:verifier.code 0} true;
  call $p24 := spinlock_check($p23);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7300, 11} true;
  assume {:verifier.code 0} true;
  call $i25 := _raw_spin_lock_irqsave($p24);
  call {:cexpr "flags"} boogie_si_record_i64($i25);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7301, 16} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p2, $mul.ref($sub.ref(0, 136), 416)), $mul.ref(232, 1));
  $p27 := $add.ref($add.ref($add.ref($p2, $mul.ref($sub.ref(0, 136), 416)), $mul.ref(232, 1)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7301, 23} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i32($M.1, $p27);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7301, 31} true;
  assume {:verifier.code 0} true;
  $i29 := $ne.i32($i28, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7301, 37} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i29 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7301, 49} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p2, $mul.ref($sub.ref(0, 136), 416)), $mul.ref(304, 1));
  $p31 := $add.ref($add.ref($add.ref($p2, $mul.ref($sub.ref(0, 136), 416)), $mul.ref(304, 1)), $mul.ref(104, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7301, 56} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i32($M.1, $p31);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7301, 64} true;
  assume {:verifier.code 0} true;
  $i33 := $ne.i32($i32, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7301, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb7, $bb8;
$bb5:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7301, 37} true;
  assume {:verifier.code 0} true;
  assume !(($i29 == 1));
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb9;
$bb7:
  assume ($i33 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7302, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_stop_dma($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7303, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7301, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i33 == 1));
  goto $bb6;
$bb9:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7305, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p3, 18, 0, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7306, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p3, 18, $sub.i16(0, 1), 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7307, 3} true;
  assume {:verifier.code 0} true;
  call netif_stop_queue($p5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7308, 37} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p2, $mul.ref($sub.ref(0, 136), 416)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7308, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p34, $i25);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7309, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_reset_hw($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7310, 42} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($add.ref($p5, $mul.ref(0, 3176)), $mul.ref(840, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7310, 42} true;
  assume {:verifier.code 0} true;
  $p36 := $load.ref($M.1, $p35);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7310, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_write_mac_addr($p3, $p36);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7311, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_update_link_status($p5, $p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7312, 16} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p2, $mul.ref($sub.ref(0, 136), 416)), $mul.ref(232, 1));
  $p38 := $add.ref($add.ref($add.ref($p2, $mul.ref($sub.ref(0, 136), 416)), $mul.ref(232, 1)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7312, 23} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i32($M.1, $p38);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7312, 31} true;
  assume {:verifier.code 0} true;
  $i40 := $ne.i32($i39, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7312, 37} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i40 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7312, 49} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($add.ref($p2, $mul.ref($sub.ref(0, 136), 416)), $mul.ref(304, 1));
  $p42 := $add.ref($add.ref($add.ref($p2, $mul.ref($sub.ref(0, 136), 416)), $mul.ref(304, 1)), $mul.ref(104, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7312, 56} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i32($M.1, $p42);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7312, 64} true;
  assume {:verifier.code 0} true;
  $i44 := $ne.i32($i43, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7312, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb13, $bb14;
$bb11:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7312, 37} true;
  assume {:verifier.code 0} true;
  assume !(($i40 == 1));
  goto $bb12;
$bb12:
  assume {:verifier.code 0} true;
  goto $bb15;
$bb13:
  assume ($i44 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7313, 5} true;
  assume {:verifier.code 0} true;
  call $i45 := __ks8842_start_new_rx_dma($p5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7314, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7312, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i44 == 1));
  goto $bb12;
$bb15:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7316, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ioremap: ref;
axiom (ioremap == $sub.ref(0, 150513));
procedure  ioremap($i0: i64, $i1: i64)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5372, 9} true;
  assume {:verifier.code 0} true;
  call {:cexpr "ioremap:arg:offset"} boogie_si_record_i64($i0);
  call {:cexpr "ioremap:arg:size"} boogie_si_record_i64($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5372, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := ioremap_nocache($i0, $i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5373, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const platform_get_irq: ref;
axiom (platform_get_irq == $sub.ref(0, 151545));
procedure  platform_get_irq($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8415, 10} true;
  assume {:verifier.code 1} true;
  call {:cexpr "platform_get_irq:arg:arg1"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8415, 10} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8415, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const ks8842_tasklet: ref;
axiom (ks8842_tasklet == $sub.ref(0, 152577));
procedure  ks8842_tasklet($i0: i64)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $i12: i16;
  var $p13: ref;
  var $i14: i16;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $i21: i24;
  var $i22: i24;
  var $i23: i24;
  var $p24: ref;
  var $p25: ref;
  var $i26: i8;
  var $i27: i64;
  var $i28: i64;
  var $i29: i64;
  var $i30: i1;
  var $i31: i32;
  var $i32: i32;
  var $p33: ref;
  var $p34: ref;
  var $i35: i32;
  var $i36: i1;
  var $p37: ref;
  var $p38: ref;
  var $i39: i32;
  var $i40: i1;
  var $i41: i32;
  var $i42: i32;
  var $i43: i16;
  var $i44: i16;
  var $i45: i32;
  var $i46: i16;
  var $p47: ref;
  var $i48: i64;
  var $i49: i64;
  var $i50: i1;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $i54: i1;
  var $i55: i8;
  var $i56: i1;
  var $i57: i32;
  var $i58: i1;
  var $i59: i32;
  var $i60: i1;
  var $i61: i32;
  var $i62: i32;
  var $i63: i1;
  var $p64: ref;
  var $p65: ref;
  var $i66: i32;
  var $i67: i1;
  var $p68: ref;
  var $p69: ref;
  var $i70: i32;
  var $i71: i1;
  var $i72: i32;
  var $i73: i32;
  var $i74: i1;
  var $i75: i32;
  var $i76: i32;
  var $i77: i1;
  var $i78: i32;
  var $i79: i32;
  var $i80: i1;
  var $i81: i32;
  var $i82: i32;
  var $i83: i1;
  var $p84: ref;
  var $p85: ref;
  var $i86: i64;
  var $p87: ref;
  var $p88: ref;
  var $i89: i32;
  var $i90: i1;
  var $p91: ref;
  var $p92: ref;
  var $i93: i32;
  var $i94: i1;
  var $i95: i32;
  var $i96: i16;
  var $p97: ref;
  var $p98: ref;
  var $p99: ref;
  var $p100: ref;
  var $p101: ref;
  var $i102: i32;
  var $i103: i1;
  var $p104: ref;
  var $p105: ref;
  var $i106: i32;
  var $i107: i1;
  var $p108: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6788, 12} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  call {:cexpr "ks8842_tasklet:arg:arg"} boogie_si_record_i64($i0);
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6788, 12} true;
  assume {:verifier.code 0} true;
  $p2 := $i2p.i64.ref($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6789, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := netdev_priv($p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6790, 13} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6791, 39} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6791, 13} true;
  assume {:verifier.code 0} true;
  call $p6 := spinlock_check($p5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6792, 11} true;
  assume {:verifier.code 0} true;
  call $i7 := _raw_spin_lock_irqsave($p6);
  call {:cexpr "flags"} boogie_si_record_i64($i7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6793, 31} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6793, 31} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.1, $p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6793, 39} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p9, $mul.ref(14, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6793, 13} true;
  assume {:verifier.code 0} true;
  call $i11 := ioread16($p10);
  call {:cexpr "tmp___1"} boogie_si_record_i32($i11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6794, 16} true;
  assume {:verifier.code 0} true;
  $i12 := $trunc.i32.i16($i11);
  call {:cexpr "entry_bank"} boogie_si_record_i16($i12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6795, 37} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6795, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p13, $i7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6796, 9} true;
  assume {:verifier.code 0} true;
  call $i14 := ks8842_read16($p4, 18, 2);
  call {:cexpr "isr"} boogie_si_record_i16($i14);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6797, 14} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6797, 22} true;
  assume {:verifier.code 0} true;
  $M.2 := $store.ref($M.2, $p15, .str);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6798, 14} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6798, 23} true;
  assume {:verifier.code 0} true;
  $M.3 := $store.ref($M.3, $p16, .str.36);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6799, 14} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6799, 23} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.ref($M.4, $p17, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6800, 14} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6800, 21} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.ref($M.5, $p18, .str.3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6801, 14} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6801, 14} true;
  assume {:verifier.code 0} true;
  $p20 := $bitcast.ref.ref($p19);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6801, 21} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i24($M.6, $p20);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6801, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6801:21: warning: over-approximating bitwise operation and;
  $i22 := $and.i24($i21, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6801, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6801:21: warning: over-approximating bitwise operation or;
  $i23 := $or.i24($i22, 801);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6801, 21} true;
  assume {:verifier.code 0} true;
  $M.6 := $store.i24($M.6, $p20, $i23);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6802, 14} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6802, 20} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i8($M.7, $p24, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6803, 51} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6803, 51} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i8($M.7, $p25);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6803, 33} true;
  assume {:verifier.code 0} true;
  $i27 := $zext.i8.i64($i26);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6803, 57} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6803:57: warning: over-approximating bitwise operation and;
  $i28 := $and.i64($i27, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6803, 13} true;
  assume {:verifier.code 0} true;
  call $i29 := ldv__builtin_expect($i28, 0);
  call {:cexpr "tmp___2"} boogie_si_record_i64($i29);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6804, 15} true;
  assume {:verifier.code 0} true;
  $i30 := $ne.i64($i29, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6804, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i30 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6806, 44} true;
  assume {:verifier.code 0} true;
  $i31 := $zext.i16.i32($i14);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6805, 5} true;
  assume {:verifier.code 0} true;
  call $i32 := __dynamic_netdev_dbg.ref.ref.ref.ref.i32($p1, $p2, .str.3, .str.36, $i31);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6807, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i30 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6809, 16} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1));
  $p34 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6809, 23} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i32($M.1, $p34);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6809, 31} true;
  assume {:verifier.code 0} true;
  $i36 := $ne.i32($i35, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6809, 37} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i36 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6809, 49} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(304, 1));
  $p38 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(104, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6809, 56} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i32($M.1, $p38);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6809, 64} true;
  assume {:verifier.code 0} true;
  $i40 := $ne.i32($i39, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6809, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb7, $bb8;
$bb5:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6809, 37} true;
  assume {:verifier.code 0} true;
  assume !(($i36 == 1));
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  $i44 := $i14;
  goto $bb9;
$bb7:
  assume ($i40 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6810, 11} true;
  assume {:verifier.code 0} true;
  $i41 := $zext.i16.i32($i14);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6810, 30} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6810:30: warning: over-approximating bitwise operation and;
  $i42 := $and.i32($i41, 57343);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6810, 11} true;
  assume {:verifier.code 0} true;
  $i43 := $trunc.i32.i16($i42);
  call {:cexpr "isr"} boogie_si_record_i16($i43);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6811, 3} true;
  assume {:verifier.code 0} true;
  $i44 := $i43;
  goto $bb9;
$bb8:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6809, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i40 == 1));
  goto $bb6;
$bb9:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6813, 31} true;
  assume {:verifier.code 0} true;
  $i45 := $zext.i16.i32($i44);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6813, 31} true;
  assume {:verifier.code 0} true;
  $i46 := $trunc.i32.i16($i45);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6813, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p4, 18, $i46, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6814, 17} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6814, 17} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i64($M.1, $p47);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6814, 28} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6814:28: warning: over-approximating bitwise operation and;
  $i49 := $and.i64($i48, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6814, 35} true;
  assume {:verifier.code 0} true;
  $i50 := $eq.i64($i49, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6814, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i50} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i50 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6815, 28} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6815, 28} true;
  assume {:verifier.code 0} true;
  $p52 := $load.ref($M.1, $p51);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6815, 36} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p52, $mul.ref(44, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6815, 5} true;
  assume {:verifier.code 0} true;
  call iowrite32(1, $p53);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6816, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i50 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6818, 13} true;
  assume {:verifier.code 0} true;
  call $i54 := netif_running($p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6818, 11} true;
  assume {:verifier.code 0} true;
  $i55 := $zext.i1.i8($i54);
  call {:cexpr "tmp___3"} boogie_si_record_i8($i55);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6819, 7} true;
  assume {:verifier.code 0} true;
  $i56 := $trunc.i8.i1($i55);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6819, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i56} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i56 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6821, 3} true;
  assume {:verifier.code 0} true;
  $i57 := 0;
  goto $bb15;
$bb14:
  assume !(($i56 == 1));
  assume {:verifier.code 0} true;
  $i57 := 1;
  goto $bb15;
$bb15:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6824, 7} true;
  assume {:verifier.code 0} true;
  $i58 := $ne.i32($i57, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6824, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i58 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6825, 5} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i58 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6869, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb19:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6828, 7} true;
  assume {:verifier.code 0} true;
  $i59 := $sext.i16.i32($i44);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6828, 27} true;
  assume {:verifier.code 0} true;
  $i60 := $slt.i32($i59, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6828, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i60} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i60 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6829, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_update_link_status($p2, $p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6830, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i60 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6832, 8} true;
  assume {:verifier.code 0} true;
  $i61 := $zext.i16.i32($i44);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6832, 18} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6832:18: warning: over-approximating bitwise operation and;
  $i62 := $and.i32($i61, 8320);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6832, 26} true;
  assume {:verifier.code 0} true;
  $i63 := $ne.i32($i62, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6832, 31} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i63 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6832, 44} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1));
  $p65 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6832, 51} true;
  assume {:verifier.code 0} true;
  $i66 := $load.i32($M.1, $p65);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6832, 59} true;
  assume {:verifier.code 0} true;
  $i67 := $eq.i32($i66, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6832, 65} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i67} true;
  goto $bb26, $bb28;
$bb24:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6832, 31} true;
  assume {:verifier.code 0} true;
  assume !(($i63 == 1));
  goto $bb25;
$bb25:
  assume {:verifier.code 0} true;
  goto $bb31;
$bb26:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6832, 65} true;
  assume {:verifier.code 0} true;
  assume ($i67 == 1);
  goto $bb27;
$bb27:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6833, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_handle_rx($p2, $p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6834, 3} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb28:
  assume !(($i67 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6832, 77} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(304, 1));
  $p69 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(104, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6832, 84} true;
  assume {:verifier.code 0} true;
  $i70 := $load.i32($M.1, $p69);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6832, 92} true;
  assume {:verifier.code 0} true;
  $i71 := $eq.i32($i70, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6832, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i71} true;
  goto $bb29, $bb30;
$bb29:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6832, 7} true;
  assume {:verifier.code 0} true;
  assume ($i71 == 1);
  goto $bb27;
$bb30:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6832, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i71 == 1));
  goto $bb25;
$bb31:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6836, 8} true;
  assume {:verifier.code 0} true;
  $i72 := $zext.i16.i32($i44);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6836, 18} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6836:18: warning: over-approximating bitwise operation and;
  $i73 := $and.i32($i72, 16384);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6836, 27} true;
  assume {:verifier.code 0} true;
  $i74 := $ne.i32($i73, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6836, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i74} true;
  goto $bb32, $bb33;
$bb32:
  assume ($i74 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6837, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_handle_tx($p2, $p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6838, 3} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume !(($i74 == 1));
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6840, 8} true;
  assume {:verifier.code 0} true;
  $i75 := $zext.i16.i32($i44);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6840, 18} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6840:18: warning: over-approximating bitwise operation and;
  $i76 := $and.i32($i75, 2048);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6840, 26} true;
  assume {:verifier.code 0} true;
  $i77 := $ne.i32($i76, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6840, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i77} true;
  goto $bb35, $bb36;
$bb35:
  assume ($i77 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6841, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_handle_rx_overrun($p2, $p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6842, 3} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb36:
  assume !(($i77 == 1));
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6844, 8} true;
  assume {:verifier.code 0} true;
  $i78 := $zext.i16.i32($i44);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6844, 18} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6844:18: warning: over-approximating bitwise operation and;
  $i79 := $and.i32($i78, 512);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6844, 25} true;
  assume {:verifier.code 0} true;
  $i80 := $ne.i32($i79, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6844, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i80} true;
  goto $bb38, $bb39;
$bb38:
  assume ($i80 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6845, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_disable_tx($p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6846, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_enable_tx($p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6847, 3} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb39:
  assume !(($i80 == 1));
  assume {:verifier.code 0} true;
  goto $bb40;
$bb40:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6849, 8} true;
  assume {:verifier.code 0} true;
  $i81 := $zext.i16.i32($i44);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6849, 18} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6849:18: warning: over-approximating bitwise operation and;
  $i82 := $and.i32($i81, 256);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6849, 25} true;
  assume {:verifier.code 0} true;
  $i83 := $ne.i32($i82, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6849, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i83} true;
  goto $bb41, $bb42;
$bb41:
  assume ($i83 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6850, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_disable_rx($p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6851, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_enable_rx($p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6852, 3} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume !(($i83 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6854, 39} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6854, 13} true;
  assume {:verifier.code 0} true;
  call $p85 := spinlock_check($p84);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6855, 11} true;
  assume {:verifier.code 0} true;
  call $i86 := _raw_spin_lock_irqsave($p85);
  call {:cexpr "flags"} boogie_si_record_i64($i86);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6856, 16} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1));
  $p88 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6856, 23} true;
  assume {:verifier.code 0} true;
  $i89 := $load.i32($M.1, $p88);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6856, 31} true;
  assume {:verifier.code 0} true;
  $i90 := $ne.i32($i89, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6856, 37} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i90} true;
  goto $bb44, $bb45;
$bb44:
  assume ($i90 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6856, 49} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(304, 1));
  $p92 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(104, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6856, 56} true;
  assume {:verifier.code 0} true;
  $i93 := $load.i32($M.1, $p92);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6856, 64} true;
  assume {:verifier.code 0} true;
  $i94 := $ne.i32($i93, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6856, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i94} true;
  goto $bb47, $bb48;
$bb45:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6856, 37} true;
  assume {:verifier.code 0} true;
  assume !(($i90 == 1));
  goto $bb46;
$bb46:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6859, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p4, 18, $sub.i16(0, 5248), 0);
  assume {:verifier.code 0} true;
  goto $bb49;
$bb47:
  assume ($i94 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6857, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p4, 18, $sub.i16(0, 21632), 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6858, 3} true;
  assume {:verifier.code 0} true;
  goto $bb49;
$bb48:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6856, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i94 == 1));
  goto $bb46;
$bb49:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6861, 13} true;
  assume {:verifier.code 0} true;
  $i95 := $zext.i16.i32($i12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6861, 13} true;
  assume {:verifier.code 0} true;
  $i96 := $trunc.i32.i16($i95);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6861, 40} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6861, 40} true;
  assume {:verifier.code 0} true;
  $p98 := $load.ref($M.1, $p97);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6861, 48} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p98, $mul.ref(14, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6861, 3} true;
  assume {:verifier.code 0} true;
  call iowrite16($i96, $p99);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6862, 16} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1));
  $p101 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6862, 23} true;
  assume {:verifier.code 0} true;
  $i102 := $load.i32($M.1, $p101);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6862, 31} true;
  assume {:verifier.code 0} true;
  $i103 := $ne.i32($i102, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6862, 37} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i103} true;
  goto $bb50, $bb51;
$bb50:
  assume ($i103 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6862, 49} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(304, 1));
  $p105 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(104, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6862, 56} true;
  assume {:verifier.code 0} true;
  $i106 := $load.i32($M.1, $p105);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6862, 64} true;
  assume {:verifier.code 0} true;
  $i107 := $ne.i32($i106, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6862, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i107} true;
  goto $bb53, $bb54;
$bb51:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6862, 37} true;
  assume {:verifier.code 0} true;
  assume !(($i103 == 1));
  goto $bb52;
$bb52:
  assume {:verifier.code 0} true;
  goto $bb55;
$bb53:
  assume ($i107 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6863, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_resume_dma($p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6864, 3} true;
  assume {:verifier.code 0} true;
  goto $bb55;
$bb54:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6862, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i107 == 1));
  goto $bb52;
$bb55:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6866, 37} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6866, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p108, $i86);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6867, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
}
const tasklet_init: ref;
axiom (tasklet_init == $sub.ref(0, 153609));
procedure  tasklet_init($p0: ref, $p1: ref, $i2: i64)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8445, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "tasklet_init:arg:arg2"} boogie_si_record_i64($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8445, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const spinlock_check: ref;
axiom (spinlock_check == $sub.ref(0, 154641));
procedure  spinlock_check($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5327, 19} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5327, 19} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5327, 28} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5327, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const __raw_spin_lock_init: ref;
axiom (__raw_spin_lock_init == $sub.ref(0, 155673));
procedure  __raw_spin_lock_init($p0: ref, $p1: ref, $p2: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8299, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8299, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ks8842_read_mac_addr: ref;
axiom (ks8842_read_mac_addr == $sub.ref(0, 156705));
procedure  ks8842_read_mac_addr($p0: ref, $p1: ref)
{
  var $i2: i8;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i32;
  var $i7: i32;
  var $i8: i1;
  var $i9: i16;
  var $i10: i32;
  var $i11: i16;
  var $i12: i16;
  var $i13: i32;
  var $i14: i16;
  var $i15: i16;
  var $i16: i32;
  var $i17: i16;
  var $i18: i16;
  var $i19: i32;
  var $i20: i16;
  var $i21: i16;
  var $i22: i32;
  var $i23: i16;
  var $i24: i16;
  var $i25: i32;
  var $i26: i16;
  var $i27: i8;
  var $p28: ref;
  var $i29: i8;
  var $p30: ref;
  var $i31: i8;
  var $p32: ref;
  var $i33: i8;
  var $p34: ref;
  var $i35: i8;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6199, 7} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6199, 7} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6200, 5} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6195, 64} true;
  assume {:verifier.code 0} true;
  call $i2 := ks8842_read8($p0, 2, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6195, 10} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p1, $mul.ref(5, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6195, 62} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i8($M.1, $p3, $i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6200, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6195, 64} true;
  assume {:verifier.code 0} true;
  call $i27 := ks8842_read8($p0, 2, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6195, 10} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p1, $mul.ref(4, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6195, 62} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i8($M.1, $p28, $i27);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6200, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb4:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6203, 22} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6203, 22} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i64($M.1, $p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6203, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $trunc.i64.i32($i5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6203, 33} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6203:33: warning: over-approximating bitwise operation and;
  $i7 := $and.i32($i6, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6203, 33} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6203, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i8 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6204, 11} true;
  assume {:verifier.code 0} true;
  call $i9 := ks8842_read16($p0, 2, 0);
  call {:cexpr "mac"} boogie_si_record_i16($i9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6205, 33} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i16.i32($i9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6205, 33} true;
  assume {:verifier.code 0} true;
  $i11 := $trunc.i32.i16($i10);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6205, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p0, 39, $i11, 4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6206, 11} true;
  assume {:verifier.code 0} true;
  call $i12 := ks8842_read16($p0, 2, 2);
  call {:cexpr "mac"} boogie_si_record_i16($i12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6207, 33} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i16.i32($i12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6207, 33} true;
  assume {:verifier.code 0} true;
  $i14 := $trunc.i32.i16($i13);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6207, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p0, 39, $i14, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6208, 11} true;
  assume {:verifier.code 0} true;
  call $i15 := ks8842_read16($p0, 2, 4);
  call {:cexpr "mac"} boogie_si_record_i16($i15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6209, 33} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i16.i32($i15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6209, 33} true;
  assume {:verifier.code 0} true;
  $i17 := $trunc.i32.i16($i16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6209, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p0, 39, $i17, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6210, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i8 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6211, 11} true;
  assume {:verifier.code 0} true;
  call $i18 := ks8842_read16($p0, 2, 0);
  call {:cexpr "mac"} boogie_si_record_i16($i18);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6212, 33} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i16.i32($i18);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6212, 33} true;
  assume {:verifier.code 0} true;
  $i20 := $trunc.i32.i16($i19);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6212, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p0, 39, $i20, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6213, 11} true;
  assume {:verifier.code 0} true;
  call $i21 := ks8842_read16($p0, 2, 2);
  call {:cexpr "mac"} boogie_si_record_i16($i21);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6214, 33} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i16.i32($i21);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6214, 33} true;
  assume {:verifier.code 0} true;
  $i23 := $trunc.i32.i16($i22);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6214, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p0, 39, $i23, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6215, 11} true;
  assume {:verifier.code 0} true;
  call $i24 := ks8842_read16($p0, 2, 4);
  call {:cexpr "mac"} boogie_si_record_i16($i24);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6216, 33} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i16.i32($i24);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6216, 33} true;
  assume {:verifier.code 0} true;
  $i26 := $trunc.i32.i16($i25);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6216, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p0, 39, $i26, 4);
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6218, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb8:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6195, 64} true;
  assume {:verifier.code 0} true;
  call $i29 := ks8842_read8($p0, 2, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6195, 10} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p1, $mul.ref(3, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6195, 62} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i8($M.1, $p30, $i29);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6200, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6195, 64} true;
  assume {:verifier.code 0} true;
  call $i31 := ks8842_read8($p0, 2, 3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6195, 10} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p1, $mul.ref(2, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6195, 62} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i8($M.1, $p32, $i31);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6200, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6195, 64} true;
  assume {:verifier.code 0} true;
  call $i33 := ks8842_read8($p0, 2, 4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6195, 10} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p1, $mul.ref(1, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6195, 62} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i8($M.1, $p34, $i33);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6200, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6195, 64} true;
  assume {:verifier.code 0} true;
  call $i35 := ks8842_read8($p0, 2, 5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6195, 62} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i8($M.1, $p1, $i35);
  assume {:verifier.code 0} true;
  goto $bb4;
}
const is_valid_ether_addr: ref;
axiom (is_valid_ether_addr == $sub.ref(0, 157737));
procedure  is_valid_ether_addr($p0: ref)
  returns ($r: i1)
{
  var $i1: i1;
  var $i2: i8;
  var $i3: i1;
  var $i4: i32;
  var $i5: i1;
  var $i6: i1;
  var $i7: i8;
  var $i8: i1;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i32;
  var $i13: i1;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5961, 9} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5961, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := is_multicast_ether_addr($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5961, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i1.i8($i1);
  call {:cexpr "tmp"} boogie_si_record_i8($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5962, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $trunc.i8.i1($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5962, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5964, 3} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  $i4 := 1;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5967, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5967, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i5 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5968, 15} true;
  assume {:verifier.code 0} true;
  call $i6 := is_zero_ether_addr($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5968, 13} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i1.i8($i6);
  call {:cexpr "tmp___1"} boogie_si_record_i8($i7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5969, 9} true;
  assume {:verifier.code 0} true;
  $i8 := $trunc.i8.i1($i7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5969, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb6, $bb7;
$bb5:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  $i12 := 0;
  goto $bb12;
$bb6:
  assume ($i8 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5971, 5} true;
  assume {:verifier.code 0} true;
  $i9 := 0;
  goto $bb8;
$bb7:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  $i9 := 1;
  goto $bb8;
$bb8:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5974, 9} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5974, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i10 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5976, 5} true;
  assume {:verifier.code 0} true;
  $i11 := 1;
  goto $bb11;
$bb10:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  $i11 := 0;
  goto $bb11;
$bb11:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5979, 3} true;
  assume {:verifier.code 0} true;
  $i12 := $i11;
  goto $bb12;
$bb12:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5982, 11} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5982, 3} true;
  assume {:verifier.code 0} true;
  $r := $i13;
  $exn := false;
  return;
}
const eth_hw_addr_random: ref;
axiom (eth_hw_addr_random == $sub.ref(0, 158769));
procedure  eth_hw_addr_random($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5997, 8} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5997, 8} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(580, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5997, 25} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i8($M.1, $p1, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5998, 24} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(840, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5998, 24} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.1, $p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5998, 3} true;
  assume {:verifier.code 0} true;
  call eth_random_addr($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5999, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const strcpy: ref;
axiom (strcpy == $sub.ref(0, 159801));
procedure  strcpy($p0: ref, $p1: ref)
  returns ($r: ref);
const ldv_register_netdev_17: ref;
axiom (ldv_register_netdev_17 == $sub.ref(0, 160833));
procedure  ldv_register_netdev_17($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8005, 9} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8005, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := register_netdev($p0);
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8007, 24} true;
  assume {:verifier.code 0} true;
  $M.23 := 1;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8008, 3} true;
  assume {:verifier.code 0} true;
  call ldv_net_device_ops_4();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8009, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const platform_set_drvdata: ref;
axiom (platform_set_drvdata == $sub.ref(0, 161865));
procedure  platform_set_drvdata($p0: ref, $p1: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5829, 27} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5829, 27} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 1472)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5829, 3} true;
  assume {:verifier.code 0} true;
  call dev_set_drvdata($p2, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5830, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const printk: ref;
axiom (printk == $sub.ref(0, 162897));
procedure  printk.ref.i32.i32($p0: ref, p.1: i32, p.2: i32)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8423, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8423, 10} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8423, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
procedure  printk.ref($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
$bb1:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8423, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8423, 10} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8423, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
procedure  printk.ref.i32($p0: ref, p.1: i32)
  returns ($r: i32)
{
  var $i1: i32;
$bb2:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8423, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8423, 10} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8423, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
procedure  printk.ref.i32.i32.i32($p0: ref, p.1: i32, p.2: i32, p.3: i32)
  returns ($r: i32)
{
  var $i1: i32;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8423, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8423, 10} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8423, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const ldv_free_netdev_18: ref;
axiom (ldv_free_netdev_18 == $sub.ref(0, 163929));
procedure  ldv_free_netdev_18($p0: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8015, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8015, 3} true;
  assume {:verifier.code 0} true;
  call free_netdev($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8016, 24} true;
  assume {:verifier.code 0} true;
  $M.23 := 0;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8017, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const dev_set_drvdata: ref;
axiom (dev_set_drvdata == $sub.ref(0, 164961));
procedure  dev_set_drvdata($p0: ref, $p1: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5413, 8} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5413, 8} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 1424)), $mul.ref(520, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5413, 20} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p2, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5414, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const register_netdev: ref;
axiom (register_netdev == $sub.ref(0, 165993));
procedure  register_netdev($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8431, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8431, 10} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8431, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const eth_random_addr: ref;
axiom (eth_random_addr == $sub.ref(0, 167025));
procedure  eth_random_addr($p0: ref)
{
  var $i1: i8;
  var $i2: i32;
  var $i3: i32;
  var $i4: i8;
  var $i5: i8;
  var $i6: i32;
  var $i7: i32;
  var $i8: i8;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5988, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5988, 3} true;
  assume {:verifier.code 0} true;
  call get_random_bytes($p0, 6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5989, 26} true;
  assume {:verifier.code 0} true;
  $i1 := $load.i8($M.1, $p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5989, 11} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i8.i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5989, 32} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:5989:32: warning: over-approximating bitwise operation and;
  $i3 := $and.i32($i2, 254);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5989, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.i32.i8($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5989, 9} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i8($M.1, $p0, $i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5990, 32} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i8($M.1, $p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5990, 17} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i8.i32($i5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5990, 38} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:5990:38: warning: over-approximating bitwise operation or;
  $i7 := $or.i32($i6, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5990, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $trunc.i32.i8($i7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5990, 9} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i8($M.1, $p0, $i8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5991, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const get_random_bytes: ref;
axiom (get_random_bytes == $sub.ref(0, 168057));
procedure  get_random_bytes($p0: ref, $i1: i32)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8360, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "get_random_bytes:arg:arg1"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8360, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const is_multicast_ether_addr: ref;
axiom (is_multicast_ether_addr == $sub.ref(0, 169089));
procedure  is_multicast_ether_addr($p0: ref)
  returns ($r: i1)
{
  var $i1: i8;
  var $i2: i32;
  var $i3: i32;
  var $i4: i1;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5950, 18} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5950, 18} true;
  assume {:verifier.code 0} true;
  $i1 := $load.i8($M.1, $p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5950, 12} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i8.i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5950, 24} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:5950:24: warning: over-approximating bitwise operation and;
  $i3 := $and.i32($i2, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5950, 29} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5950, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const is_zero_ether_addr: ref;
axiom (is_zero_ether_addr == $sub.ref(0, 170121));
procedure  is_zero_ether_addr($p0: ref)
  returns ($r: i1)
{
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $p4: ref;
  var $i5: i16;
  var $i6: i32;
  var $i7: i32;
  var $i8: i1;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5944, 27} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5944, 27} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5944, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i32($M.1, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5944, 67} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5944, 85} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, $mul.ref(4, 2));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5944, 65} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i16($M.1, $p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5944, 50} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i16.i32($i5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5944, 48} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:5944:48: warning: over-approximating bitwise operation or;
  $i7 := $or.i32($i2, $i6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5944, 92} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i7, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5944, 3} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
}
const ks8842_read8: ref;
axiom (ks8842_read8 == $sub.ref(0, 171153));
procedure  ks8842_read8($p0: ref, $i1: i16, $i2: i32)
  returns ($r: i8)
{
  var $i3: i32;
  var $i4: i16;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $p8: ref;
  var $i9: i32;
  var $i10: i8;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6077, 31} true;
  assume {:verifier.code 0} true;
  call {:cexpr "ks8842_read8:arg:bank"} boogie_si_record_i16($i1);
  call {:cexpr "ks8842_read8:arg:offset"} boogie_si_record_i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6077, 31} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i16.i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6077, 31} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.i32.i16($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6077, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_select_bank($p0, $i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6078, 26} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6078, 26} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.1, $p5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6078, 36} true;
  assume {:verifier.code 0} true;
  $i7 := $sext.i32.i64($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6078, 34} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p6, $mul.ref($i7, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6078, 9} true;
  assume {:verifier.code 0} true;
  call $i9 := ioread8($p8);
  call {:cexpr "tmp"} boogie_si_record_i32($i9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6079, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i32.i8($i9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6079, 3} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
}
const ioread8: ref;
axiom (ioread8 == $sub.ref(0, 172185));
procedure  ioread8($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8372, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8372, 10} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_uint();
  call {:cexpr "smack:ext:__VERIFIER_nondet_uint"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8372, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const _raw_spin_lock_irqsave: ref;
axiom (_raw_spin_lock_irqsave == $sub.ref(0, 173217));
procedure  _raw_spin_lock_irqsave($p0: ref)
  returns ($r: i64)
{
  var $i1: i64;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8313, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8313, 10} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_ulong();
  call {:cexpr "smack:ext:__VERIFIER_nondet_ulong"} boogie_si_record_i64($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8313, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const spin_unlock_irqrestore: ref;
axiom (spin_unlock_irqrestore == $sub.ref(0, 174249));
procedure  spin_unlock_irqrestore($p0: ref, $i1: i64)
{
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5333, 39} true;
  assume {:verifier.code 0} true;
  call {:cexpr "spin_unlock_irqrestore:arg:flags"} boogie_si_record_i64($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5333, 39} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5333, 48} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5333, 3} true;
  assume {:verifier.code 0} true;
  call _raw_spin_unlock_irqrestore($p3, $i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5334, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const netif_running: ref;
axiom (netif_running == $sub.ref(0, 175281));
procedure  netif_running($p0: ref)
  returns ($r: i1)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5926, 71} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5926, 71} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5926, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := constant_test_bit(0, $p1);
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5927, 15} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5927, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const ks8842_update_link_status: ref;
axiom (ks8842_update_link_status == $sub.ref(0, 176313));
procedure  ks8842_update_link_status($p0: ref, $p1: ref)
{
  var $i2: i16;
  var $i3: i32;
  var $i4: i32;
  var $i5: i1;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6118, 9} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6118, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := ks8842_read16($p1, 45, 2);
  call {:cexpr "tmp"} boogie_si_record_i16($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6119, 8} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i16.i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6119, 18} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6119:18: warning: over-approximating bitwise operation and;
  $i4 := $and.i32($i3, 4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6119, 23} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6119, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6120, 5} true;
  assume {:verifier.code 0} true;
  call netif_carrier_on($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6121, 5} true;
  assume {:verifier.code 0} true;
  call netif_wake_queue($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6122, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6123, 5} true;
  assume {:verifier.code 0} true;
  call netif_stop_queue($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6124, 5} true;
  assume {:verifier.code 0} true;
  call netif_carrier_off($p0);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6126, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ks8842_handle_rx: ref;
axiom (ks8842_handle_rx == $sub.ref(0, 177345));
procedure  ks8842_handle_rx($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $i3: i16;
  var $i4: i32;
  var $i5: i32;
  var $i6: i16;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i24;
  var $i14: i24;
  var $i15: i24;
  var $p16: ref;
  var $p17: ref;
  var $i18: i8;
  var $i19: i64;
  var $i20: i64;
  var $i21: i64;
  var $i22: i1;
  var $i23: i32;
  var $i24: i32;
  var $i25: i32;
  var $i26: i1;
  var $i27: i16;
  var $i28: i32;
  var $i29: i32;
  var $i30: i16;
  var $i31: i32;
  var $i32: i1;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6692, 9} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6692, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := ks8842_read16($p1, 16, 10);
  call {:cexpr "tmp"} boogie_si_record_i16($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6693, 13} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i16.i32($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6693, 32} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6693:32: warning: over-approximating bitwise operation and;
  $i5 := $and.i32($i4, 8191);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6693, 13} true;
  assume {:verifier.code 0} true;
  $i6 := $trunc.i32.i16($i5);
  call {:cexpr "rx_data"} boogie_si_record_i16($i6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6694, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6694, 22} true;
  assume {:verifier.code 0} true;
  $M.2 := $store.ref($M.2, $p7, .str);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6695, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6695, 23} true;
  assume {:verifier.code 0} true;
  $M.3 := $store.ref($M.3, $p8, .str.37);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6696, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6696, 23} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.ref($M.4, $p9, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6697, 14} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6697, 21} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.ref($M.5, $p10, .str.38);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6698, 14} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6698, 14} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6698, 21} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i24($M.6, $p12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6698, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6698:21: warning: over-approximating bitwise operation and;
  $i14 := $and.i24($i13, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6698, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6698:21: warning: over-approximating bitwise operation or;
  $i15 := $or.i24($i14, 762);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6698, 21} true;
  assume {:verifier.code 0} true;
  $M.6 := $store.i24($M.6, $p12, $i15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6699, 14} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6699, 20} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i8($M.7, $p16, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6700, 51} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6700, 51} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i8($M.7, $p17);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6700, 33} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i8.i64($i18);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6700, 57} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6700:57: warning: over-approximating bitwise operation and;
  $i20 := $and.i64($i19, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6700, 13} true;
  assume {:verifier.code 0} true;
  call $i21 := ldv__builtin_expect($i20, 0);
  call {:cexpr "tmp___0"} boogie_si_record_i64($i21);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6701, 15} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i64($i21, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6701, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i22 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6703, 46} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i16.i32($i6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6702, 5} true;
  assume {:verifier.code 0} true;
  call $i24 := __dynamic_netdev_dbg.ref.ref.ref.ref.i32($p2, $p0, .str.38, .str.37, $i23);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6704, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6712, 7} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i16.i32($i6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6712, 30} true;
  assume {:verifier.code 0} true;
  $i26 := $ne.i32($i25, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6712, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i26 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6712, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb5:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6712, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i26 == 1));
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb11;
$bb7:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6713, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6708, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_rx_frame($p0, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6709, 13} true;
  assume {:verifier.code 0} true;
  call $i27 := ks8842_read16($p1, 16, 10);
  call {:cexpr "tmp___1"} boogie_si_record_i16($i27);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6710, 13} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i16.i32($i27);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6710, 36} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6710:36: warning: over-approximating bitwise operation and;
  $i29 := $and.i32($i28, 8191);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6710, 13} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i32.i16($i29);
  call {:cexpr "rx_data"} boogie_si_record_i16($i30);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6712, 7} true;
  assume {:verifier.code 0} true;
  $i31 := $zext.i16.i32($i30);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6712, 30} true;
  assume {:verifier.code 0} true;
  $i32 := $ne.i32($i31, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6712, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb9, $bb10;
$bb9:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6712, 7} true;
  assume {:verifier.code 0} true;
  assume ($i32 == 1);
  goto $bb7;
$bb10:
  assume !(($i32 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6712, 7} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb11:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6716, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ks8842_handle_tx: ref;
axiom (ks8842_handle_tx == $sub.ref(0, 178377));
procedure  ks8842_handle_tx($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $i3: i16;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i24;
  var $i11: i24;
  var $i12: i24;
  var $p13: ref;
  var $p14: ref;
  var $i15: i8;
  var $i16: i64;
  var $i17: i64;
  var $i18: i64;
  var $i19: i1;
  var $i20: i32;
  var $i21: i32;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $i25: i64;
  var $p26: ref;
  var $p27: ref;
  var $i28: i1;
  var $i29: i8;
  var $i30: i1;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6727, 9} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6727, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := ks8842_read16($p1, 16, 2);
  call {:cexpr "tmp"} boogie_si_record_i16($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6729, 14} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6729, 22} true;
  assume {:verifier.code 0} true;
  $M.2 := $store.ref($M.2, $p4, .str);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6730, 14} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6730, 23} true;
  assume {:verifier.code 0} true;
  $M.3 := $store.ref($M.3, $p5, .str.40);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6731, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6731, 23} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.ref($M.4, $p6, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6732, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6732, 21} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.ref($M.5, $p7, .str.41);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6733, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6733, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6733, 21} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i24($M.6, $p9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6733, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6733:21: warning: over-approximating bitwise operation and;
  $i11 := $and.i24($i10, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6733, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6733:21: warning: over-approximating bitwise operation or;
  $i12 := $or.i24($i11, 773);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6733, 21} true;
  assume {:verifier.code 0} true;
  $M.6 := $store.i24($M.6, $p9, $i12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6734, 14} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6734, 20} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i8($M.7, $p13, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6735, 51} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6735, 51} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i8($M.7, $p14);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6735, 33} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i8.i64($i15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6735, 57} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6735:57: warning: over-approximating bitwise operation and;
  $i17 := $and.i64($i16, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6735, 13} true;
  assume {:verifier.code 0} true;
  call $i18 := ldv__builtin_expect($i17, 0);
  call {:cexpr "tmp___0"} boogie_si_record_i64($i18);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6736, 15} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i64($i18, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6736, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i19 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6738, 46} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i16.i32($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6737, 5} true;
  assume {:verifier.code 0} true;
  call $i21 := __dynamic_netdev_dbg.ref.ref.ref.ref.i32($p2, $p0, .str.41, .str.40, $i20);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6739, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6741, 38} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p23 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6741, 44} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i64($M.1, $p23);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6741, 55} true;
  assume {:verifier.code 0} true;
  $i25 := $add.i64($i24, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6741, 11} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p27 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6741, 28} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i64($M.1, $p27, $i25);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6742, 13} true;
  assume {:verifier.code 0} true;
  call $i28 := netif_queue_stopped($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6742, 11} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.i1.i8($i28);
  call {:cexpr "tmp___1"} boogie_si_record_i8($i29);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6743, 13} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i8.i1($i29);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6743, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i30 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6744, 5} true;
  assume {:verifier.code 0} true;
  call netif_wake_queue($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6745, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i30 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6747, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ks8842_handle_rx_overrun: ref;
axiom (ks8842_handle_rx_overrun == $sub.ref(0, 179409));
procedure  ks8842_handle_rx_overrun($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i24;
  var $i10: i24;
  var $i11: i24;
  var $p12: ref;
  var $p13: ref;
  var $i14: i8;
  var $i15: i64;
  var $i16: i64;
  var $i17: i64;
  var $i18: i1;
  var $i19: i32;
  var $p20: ref;
  var $p21: ref;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i64;
  var $i29: i64;
  var $p30: ref;
  var $p31: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6755, 14} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6755, 14} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6755, 22} true;
  assume {:verifier.code 0} true;
  $M.2 := $store.ref($M.2, $p3, .str);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6756, 14} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6756, 23} true;
  assume {:verifier.code 0} true;
  $M.3 := $store.ref($M.3, $p4, .str.42);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6757, 14} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6757, 23} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.ref($M.4, $p5, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6758, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6758, 21} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.ref($M.5, $p6, .str.22);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6759, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6759, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6759, 21} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i24($M.6, $p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6759, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6759:21: warning: over-approximating bitwise operation and;
  $i10 := $and.i24($i9, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6759, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6759:21: warning: over-approximating bitwise operation or;
  $i11 := $or.i24($i10, 782);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6759, 21} true;
  assume {:verifier.code 0} true;
  $M.6 := $store.i24($M.6, $p8, $i11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6760, 14} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6760, 20} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i8($M.7, $p12, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6761, 47} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6761, 47} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i8($M.7, $p13);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6761, 29} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i8.i64($i14);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6761, 53} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6761:53: warning: over-approximating bitwise operation and;
  $i16 := $and.i64($i15, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6761, 9} true;
  assume {:verifier.code 0} true;
  call $i17 := ldv__builtin_expect($i16, 0);
  call {:cexpr "tmp"} boogie_si_record_i64($i17);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6762, 11} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i64($i17, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6762, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i18 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6763, 5} true;
  assume {:verifier.code 0} true;
  call $i19 := __dynamic_netdev_dbg.ref.ref.ref.ref($p2, $p0, .str.22, .str.42);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6765, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6767, 37} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p21 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6767, 43} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i64($M.1, $p21);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6767, 53} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i64($i22, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6767, 11} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p25 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6767, 27} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i64($M.1, $p25, $i23);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6768, 42} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p27 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(112, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6768, 48} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i64($M.1, $p27);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6768, 63} true;
  assume {:verifier.code 0} true;
  $i29 := $add.i64($i28, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6768, 11} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p31 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(112, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6768, 32} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i64($M.1, $p31, $i29);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6769, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ks8842_disable_tx: ref;
axiom (ks8842_disable_tx == $sub.ref(0, 180441));
procedure  ks8842_disable_tx($p0: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6139, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6139, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_clear_bits($p0, 16, 1, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6140, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ks8842_enable_tx: ref;
axiom (ks8842_enable_tx == $sub.ref(0, 181473));
procedure  ks8842_enable_tx($p0: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6132, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6132, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_enable_bits($p0, 16, 1, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6133, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ks8842_disable_rx: ref;
axiom (ks8842_disable_rx == $sub.ref(0, 182505));
procedure  ks8842_disable_rx($p0: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6153, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6153, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_clear_bits($p0, 16, 1, 4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6154, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ks8842_enable_rx: ref;
axiom (ks8842_enable_rx == $sub.ref(0, 183537));
procedure  ks8842_enable_rx($p0: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6146, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6146, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_enable_bits($p0, 16, 1, 4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6147, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ks8842_enable_bits: ref;
axiom (ks8842_enable_bits == $sub.ref(0, 184569));
procedure  ks8842_enable_bits($p0: ref, $i1: i16, $i2: i16, $i3: i32)
{
  var $i4: i32;
  var $i5: i16;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $p9: ref;
  var $i10: i32;
  var $i11: i16;
  var $i12: i32;
  var $i13: i32;
  var $i14: i32;
  var $i15: i16;
  var $i16: i32;
  var $i17: i16;
  var $p18: ref;
  var $p19: ref;
  var $i20: i64;
  var $p21: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6042, 31} true;
  assume {:verifier.code 0} true;
  call {:cexpr "ks8842_enable_bits:arg:bank"} boogie_si_record_i16($i1);
  call {:cexpr "ks8842_enable_bits:arg:bits"} boogie_si_record_i16($i2);
  call {:cexpr "ks8842_enable_bits:arg:offset"} boogie_si_record_i32($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6042, 31} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i16.i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6042, 31} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i16($i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6042, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_select_bank($p0, $i5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6043, 27} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6043, 27} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.1, $p6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6043, 37} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6043, 35} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p7, $mul.ref($i8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6043, 9} true;
  assume {:verifier.code 0} true;
  call $i10 := ioread16($p9);
  call {:cexpr "tmp"} boogie_si_record_i32($i10);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6044, 9} true;
  assume {:verifier.code 0} true;
  $i11 := $trunc.i32.i16($i10);
  call {:cexpr "reg"} boogie_si_record_i16($i11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6045, 16} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i16.i32($i11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6045, 28} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i16.i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6045, 26} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6045:26: warning: over-approximating bitwise operation or;
  $i14 := $or.i32($i12, $i13);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6045, 9} true;
  assume {:verifier.code 0} true;
  $i15 := $trunc.i32.i16($i14);
  call {:cexpr "reg"} boogie_si_record_i16($i15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6046, 13} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i16.i32($i15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6046, 13} true;
  assume {:verifier.code 0} true;
  $i17 := $trunc.i32.i16($i16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6046, 33} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6046, 33} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.1, $p18);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6046, 43} true;
  assume {:verifier.code 0} true;
  $i20 := $sext.i32.i64($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6046, 41} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p19, $mul.ref($i20, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6046, 3} true;
  assume {:verifier.code 0} true;
  call iowrite16($i17, $p21);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6047, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ks8842_clear_bits: ref;
axiom (ks8842_clear_bits == $sub.ref(0, 185601));
procedure  ks8842_clear_bits($p0: ref, $i1: i16, $i2: i16, $i3: i32)
{
  var $i4: i32;
  var $i5: i16;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $p9: ref;
  var $i10: i32;
  var $i11: i16;
  var $i12: i32;
  var $i13: i32;
  var $i14: i32;
  var $i15: i32;
  var $i16: i16;
  var $i17: i32;
  var $i18: i16;
  var $p19: ref;
  var $p20: ref;
  var $i21: i64;
  var $p22: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6056, 31} true;
  assume {:verifier.code 0} true;
  call {:cexpr "ks8842_clear_bits:arg:bank"} boogie_si_record_i16($i1);
  call {:cexpr "ks8842_clear_bits:arg:bits"} boogie_si_record_i16($i2);
  call {:cexpr "ks8842_clear_bits:arg:offset"} boogie_si_record_i32($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6056, 31} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i16.i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6056, 31} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i16($i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6056, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_select_bank($p0, $i5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6057, 27} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6057, 27} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.1, $p6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6057, 37} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6057, 35} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p7, $mul.ref($i8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6057, 9} true;
  assume {:verifier.code 0} true;
  call $i10 := ioread16($p9);
  call {:cexpr "tmp"} boogie_si_record_i32($i10);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6058, 9} true;
  assume {:verifier.code 0} true;
  $i11 := $trunc.i32.i16($i10);
  call {:cexpr "reg"} boogie_si_record_i16($i11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6059, 19} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i16.i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6059, 16} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6059:16: warning: over-approximating bitwise operation xor;
  $i13 := $xor.i32($i12, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6059, 43} true;
  assume {:verifier.code 0} true;
  $i14 := $sext.i16.i32($i11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6059, 41} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6059:41: warning: over-approximating bitwise operation and;
  $i15 := $and.i32($i13, $i14);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6059, 9} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i32.i16($i15);
  call {:cexpr "reg"} boogie_si_record_i16($i16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6060, 13} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i16.i32($i16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6060, 13} true;
  assume {:verifier.code 0} true;
  $i18 := $trunc.i32.i16($i17);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6060, 33} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6060, 33} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.1, $p19);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6060, 43} true;
  assume {:verifier.code 0} true;
  $i21 := $sext.i32.i64($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6060, 41} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p20, $mul.ref($i21, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6060, 3} true;
  assume {:verifier.code 0} true;
  call iowrite16($i18, $p22);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6061, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const netif_queue_stopped: ref;
axiom (netif_queue_stopped == $sub.ref(0, 186633));
procedure  netif_queue_stopped($p0: ref)
  returns ($r: i1)
{
  var $p1: ref;
  var $i2: i1;
  var $i3: i8;
  var $i4: i1;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5917, 9} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5917, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := netdev_get_tx_queue($p0, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5918, 13} true;
  assume {:verifier.code 0} true;
  call $i2 := netif_tx_queue_stopped($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5918, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i8($i2);
  call {:cexpr "tmp___0"} boogie_si_record_i8($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5919, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.i8.i1($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5919, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const netif_wake_queue: ref;
axiom (netif_wake_queue == $sub.ref(0, 187665));
procedure  netif_wake_queue($p0: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5868, 9} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5868, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := netdev_get_tx_queue($p0, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5869, 3} true;
  assume {:verifier.code 0} true;
  call netif_tx_wake_queue($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5870, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const netdev_get_tx_queue: ref;
axiom (netdev_get_tx_queue == $sub.ref(0, 188697));
procedure  netdev_get_tx_queue($p0: ref, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $p5: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5839, 39} true;
  assume {:verifier.code 0} true;
  call {:cexpr "netdev_get_tx_queue:arg:index"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5839, 39} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(920, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5839, 39} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.1, $p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5839, 45} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i32.i64($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5839, 43} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p3, $mul.ref($i4, 496));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5839, 3} true;
  assume {:verifier.code 0} true;
  $r := $p5;
  $exn := false;
  return;
}
const netif_tx_wake_queue: ref;
axiom (netif_tx_wake_queue == $sub.ref(0, 189729));
procedure  netif_tx_wake_queue($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
  var $p4: ref;
  var $p5: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5856, 72} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5856, 72} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 496)), $mul.ref(424, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5856, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := test_and_clear_bit(0, $p1);
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5857, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5857, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5858, 33} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p0, $mul.ref(0, 496)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5858, 33} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.1, $p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5858, 5} true;
  assume {:verifier.code 0} true;
  call __netif_schedule($p5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5859, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5861, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const test_and_clear_bit: ref;
axiom (test_and_clear_bit == $sub.ref(0, 190761));
procedure  test_and_clear_bit($i0: i64, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i8;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5286, 32} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  call {:cexpr "test_and_clear_bit:arg:nr"} boogie_si_record_i64($i0);
  assume true;
  call devirtbounce(0, $p1, $p2, $i0, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5286, 32} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i8($M.8, $p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5286, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i8.i32($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5286, 35} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5286, 35} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i32($i5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5286, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const __netif_schedule: ref;
axiom (__netif_schedule == $sub.ref(0, 191793));
procedure  __netif_schedule($p0: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8288, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8288, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const netif_tx_queue_stopped: ref;
axiom (netif_tx_queue_stopped == $sub.ref(0, 192825));
procedure  netif_tx_queue_stopped($p0: ref)
  returns ($r: i1)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5908, 77} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5908, 77} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 496)), $mul.ref(424, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5908, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := constant_test_bit(0, $p1);
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5909, 15} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5909, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const constant_test_bit: ref;
axiom (constant_test_bit == $sub.ref(0, 193857));
procedure  constant_test_bit($i0: i64, $p1: ref)
  returns ($r: i32)
{
  var $i2: i64;
  var $p3: ref;
  var $i4: i64;
  var $i5: i32;
  var $i6: i32;
  var $i7: i64;
  var $i8: i64;
  var $i9: i32;
  var $i10: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5292, 63} true;
  assume {:verifier.code 0} true;
  call {:cexpr "constant_test_bit:arg:nr"} boogie_si_record_i64($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5292, 63} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:5292:63: warning: over-approximating bitwise operation ashr;
  $i2 := $ashr.i64($i0, 6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5292, 41} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p1, $mul.ref($i2, 8));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5292, 34} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i64($M.1, $p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5292, 74} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i64.i32($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5292, 83} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:5292:83: warning: over-approximating bitwise operation and;
  $i6 := $and.i32($i5, 63);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5292, 70} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i32.i64($i6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5292, 70} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:5292:70: warning: over-approximating bitwise operation lshr;
  $i8 := $lshr.i64($i4, $i7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5292, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i64.i32($i8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5292, 90} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:5292:90: warning: over-approximating bitwise operation and;
  $i10 := $and.i32($i9, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5292, 3} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
}
const ks8842_rx_frame: ref;
axiom (ks8842_rx_frame == $sub.ref(0, 194889));
procedure  ks8842_rx_frame($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i64;
  var $i7: i1;
  var $i8: i16;
  var $i9: i32;
  var $i10: i16;
  var $i11: i32;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i24;
  var $i19: i24;
  var $i20: i24;
  var $p21: ref;
  var $p22: ref;
  var $i23: i8;
  var $i24: i64;
  var $i25: i64;
  var $i26: i64;
  var $i27: i1;
  var $i28: i32;
  var $i31: i32;
  var $i32: i32;
  var $i33: i32;
  var $i34: i32;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $i41: i24;
  var $i42: i24;
  var $i43: i24;
  var $p44: ref;
  var $p45: ref;
  var $i46: i8;
  var $i47: i64;
  var $i48: i64;
  var $i49: i64;
  var $i50: i1;
  var $i51: i32;
  var $i29: i32;
  var $i30: i32;
  var $i52: i32;
  var $i53: i1;
  var $i54: i32;
  var $i55: i1;
  var $i56: i32;
  var $p57: ref;
  var $i58: i64;
  var $i59: i1;
  var $p60: ref;
  var $i61: i64;
  var $i62: i64;
  var $i63: i1;
  var $p64: ref;
  var $p65: ref;
  var $i66: i1;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $i73: i32;
  var $i74: i16;
  var $i75: i64;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $i80: i32;
  var $i81: i16;
  var $i82: i32;
  var $i83: i1;
  var $p67: ref;
  var $i68: i32;
  var $p84: ref;
  var $p85: ref;
  var $i86: i1;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $i93: i32;
  var $i94: i32;
  var $i95: i1;
  var $p87: ref;
  var $i88: i32;
  var $i96: i16;
  var $p97: ref;
  var $i98: i32;
  var $p99: ref;
  var $p100: ref;
  var $i101: i64;
  var $i102: i64;
  var $p103: ref;
  var $p104: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6595, 17} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume true;
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6595, 17} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p1, $mul.ref(0, 416)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6595, 17} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i64($M.1, $p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6595, 28} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6595:28: warning: over-approximating bitwise operation and;
  $i6 := $and.i64($i5, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6595, 35} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i64($i6, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6595, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6596, 11} true;
  assume {:verifier.code 0} true;
  call $i8 := ks8842_read16($p1, 17, 8);
  call {:cexpr "tmp"} boogie_si_record_i16($i8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6597, 14} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i16.i32($i8);
  call {:cexpr "status"} boogie_si_record_i32($i9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6598, 15} true;
  assume {:verifier.code 0} true;
  call $i10 := ks8842_read16($p1, 17, 10);
  call {:cexpr "tmp___0"} boogie_si_record_i16($i10);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6599, 11} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i16.i32($i10);
  call {:cexpr "len"} boogie_si_record_i32($i11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6600, 16} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6600, 24} true;
  assume {:verifier.code 0} true;
  $M.2 := $store.ref($M.2, $p12, .str);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6601, 16} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6601, 25} true;
  assume {:verifier.code 0} true;
  $M.3 := $store.ref($M.3, $p13, .str.39);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6602, 16} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6602, 25} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.ref($M.4, $p14, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6603, 16} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6603, 23} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.ref($M.5, $p15, .str.11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6604, 16} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6604, 16} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6604, 23} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i24($M.6, $p17);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6604, 23} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6604:23: warning: over-approximating bitwise operation and;
  $i19 := $and.i24($i18, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6604, 23} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6604:23: warning: over-approximating bitwise operation or;
  $i20 := $or.i24($i19, 704);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6604, 23} true;
  assume {:verifier.code 0} true;
  $M.6 := $store.i24($M.6, $p17, $i20);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6605, 16} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6605, 22} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i8($M.7, $p21, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6606, 53} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6606, 53} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i8($M.7, $p22);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6606, 35} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i8.i64($i23);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6606, 59} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6606:59: warning: over-approximating bitwise operation and;
  $i25 := $and.i64($i24, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6606, 15} true;
  assume {:verifier.code 0} true;
  call $i26 := ldv__builtin_expect($i25, 0);
  call {:cexpr "tmp___1"} boogie_si_record_i64($i26);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6607, 17} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i64($i26, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6607, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i7 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6613, 14} true;
  assume {:verifier.code 0} true;
  call $i31 := ks8842_read32($p1, 17, 8);
  call {:cexpr "status"} boogie_si_record_i32($i31);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6614, 25} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6614:25: warning: over-approximating bitwise operation lshr;
  $i32 := $lshr.i32($i31, 16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6614, 32} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6614:32: warning: over-approximating bitwise operation and;
  $i33 := $and.i32($i32, 2047);
  call {:cexpr "len"} boogie_si_record_i32($i33);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6615, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6615:21: warning: over-approximating bitwise operation and;
  $i34 := $and.i32($i31, 65535);
  call {:cexpr "status"} boogie_si_record_i32($i34);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6616, 20} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6616, 28} true;
  assume {:verifier.code 0} true;
  $M.2 := $store.ref($M.2, $p35, .str);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6617, 20} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6617, 29} true;
  assume {:verifier.code 0} true;
  $M.3 := $store.ref($M.3, $p36, .str.39);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6618, 20} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6618, 29} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.ref($M.4, $p37, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6619, 20} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6619, 27} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.ref($M.5, $p38, .str.11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6620, 20} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6620, 20} true;
  assume {:verifier.code 0} true;
  $p40 := $bitcast.ref.ref($p39);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6620, 27} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i24($M.6, $p40);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6620, 27} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6620:27: warning: over-approximating bitwise operation and;
  $i42 := $and.i24($i41, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6620, 27} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6620:27: warning: over-approximating bitwise operation or;
  $i43 := $or.i24($i42, 710);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6620, 27} true;
  assume {:verifier.code 0} true;
  $M.6 := $store.i24($M.6, $p40, $i43);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6621, 20} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6621, 26} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i8($M.7, $p44, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6622, 57} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6622, 57} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i8($M.7, $p45);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6622, 35} true;
  assume {:verifier.code 0} true;
  $i47 := $zext.i8.i64($i46);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6622, 63} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6622:63: warning: over-approximating bitwise operation and;
  $i48 := $and.i64($i47, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6622, 15} true;
  assume {:verifier.code 0} true;
  call $i49 := ldv__builtin_expect($i48, 0);
  call {:cexpr "tmp___2"} boogie_si_record_i64($i49);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6623, 17} true;
  assume {:verifier.code 0} true;
  $i50 := $ne.i64($i49, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6623, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i50} true;
  goto $bb7, $bb8;
$bb3:
  assume ($i27 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6608, 7} true;
  assume {:verifier.code 0} true;
  call $i28 := __dynamic_netdev_dbg.ref.ref.ref.ref.i32($p2, $p0, .str.11, .str.39, $i9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6610, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6612, 3} true;
  assume {:verifier.code 0} true;
  $i29, $i30 := $i11, $i9;
  goto $bb6;
$bb6:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6629, 15} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6629:15: warning: over-approximating bitwise operation and;
  $i52 := $and.i32($i30, 32768);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6629, 25} true;
  assume {:verifier.code 0} true;
  $i53 := $ne.i32($i52, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6629, 31} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i53} true;
  goto $bb10, $bb11;
$bb7:
  assume ($i50 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6624, 7} true;
  assume {:verifier.code 0} true;
  call $i51 := __dynamic_netdev_dbg.ref.ref.ref.ref.i32($p3, $p0, .str.11, .str.39, $i34);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6626, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i50 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  $i29, $i30 := $i33, $i34;
  goto $bb6;
$bb10:
  assume ($i53 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6629, 42} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6629:42: warning: over-approximating bitwise operation and;
  $i54 := $and.i32($i30, 7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6629, 48} true;
  assume {:verifier.code 0} true;
  $i55 := $eq.i32($i54, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6629, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i55} true;
  goto $bb13, $bb14;
$bb11:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6629, 31} true;
  assume {:verifier.code 0} true;
  assume !(($i53 == 1));
  goto $bb12;
$bb12:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6676, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_update_rx_err_counters($p0, $i30);
  assume {:verifier.code 0} true;
  goto $bb37;
$bb13:
  assume ($i55 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6630, 69} true;
  assume {:verifier.code 0} true;
  $i56 := $add.i32($i29, 3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6630, 15} true;
  assume {:verifier.code 0} true;
  call $p57 := netdev_alloc_skb_ip_align($p0, $i56);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6632, 9} true;
  assume {:verifier.code 0} true;
  $i58 := $p2i.ref.i64($p57);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6632, 29} true;
  assume {:verifier.code 0} true;
  $i59 := $ne.i64($i58, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6632, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i59} true;
  goto $bb15, $bb16;
$bb14:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6629, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i55 == 1));
  goto $bb12;
$bb15:
  assume ($i59 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6633, 7} true;
  assume {:verifier.code 0} true;
  call ks8842_update_rx_counters($p0, $i30, $i29);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6634, 21} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($add.ref($p1, $mul.ref(0, 416)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6634, 21} true;
  assume {:verifier.code 0} true;
  $i61 := $load.i64($M.1, $p60);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6634, 32} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6634:32: warning: over-approximating bitwise operation and;
  $i62 := $and.i64($i61, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6634, 39} true;
  assume {:verifier.code 0} true;
  $i63 := $ne.i64($i62, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6634, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb17, $bb18;
$bb16:
  assume !(($i59 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6673, 42} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p100 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(48, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6673, 48} true;
  assume {:verifier.code 0} true;
  $i101 := $load.i64($M.1, $p100);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6673, 59} true;
  assume {:verifier.code 0} true;
  $i102 := $add.i64($i101, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6673, 15} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p104 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(48, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6673, 32} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i64($M.1, $p104, $i102);
  assume {:verifier.code 0} true;
  goto $bb36;
$bb17:
  assume ($i63 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6635, 19} true;
  assume {:verifier.code 0} true;
  call $p64 := skb_put($p57, $i29);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6636, 18} true;
  assume {:verifier.code 0} true;
  $p65 := $bitcast.ref.ref($p64);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6637, 9} true;
  assume {:verifier.code 0} true;
  call ks8842_select_bank($p1, 17);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6650, 17} true;
  assume {:verifier.code 0} true;
  $i66 := $sgt.i32($i29, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6650, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i66} true;
  goto $bb19, $bb20;
$bb18:
  assume !(($i63 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6655, 19} true;
  assume {:verifier.code 0} true;
  call $p84 := skb_put($p57, $i29);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6656, 16} true;
  assume {:verifier.code 0} true;
  $p85 := $bitcast.ref.ref($p84);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6657, 9} true;
  assume {:verifier.code 0} true;
  call ks8842_select_bank($p1, 17);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6665, 17} true;
  assume {:verifier.code 0} true;
  $i86 := $sgt.i32($i29, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6665, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i86} true;
  goto $bb28, $bb29;
$bb19:
  assume ($i66 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6650, 13} true;
  assume {:verifier.code 0} true;
  $p67, $i68 := $p64, $i29;
  goto $bb22;
$bb20:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6650, 13} true;
  assume {:verifier.code 0} true;
  assume !(($i66 == 1));
  goto $bb21;
$bb21:
  assume {:verifier.code 0} true;
  goto $bb26;
$bb22:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6651, 11} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6641, 25} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p67, $mul.ref(1, 2));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6642, 37} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($add.ref($p1, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6642, 37} true;
  assume {:verifier.code 0} true;
  $p71 := $load.ref($M.1, $p70);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6642, 45} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p71, $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6642, 19} true;
  assume {:verifier.code 0} true;
  call $i73 := ioread16($p72);
  call {:cexpr "tmp___6"} boogie_si_record_i32($i73);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6643, 20} true;
  assume {:verifier.code 0} true;
  $i74 := $trunc.i32.i16($i73);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6643, 18} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i16($M.1, $p67, $i74);
  $i75 := $add.i64(1, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6645, 25} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p67, $mul.ref($i75, 2));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6646, 37} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($add.ref($p1, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6646, 37} true;
  assume {:verifier.code 0} true;
  $p78 := $load.ref($M.1, $p77);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6646, 45} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p78, $mul.ref(10, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6646, 19} true;
  assume {:verifier.code 0} true;
  call $i80 := ioread16($p79);
  call {:cexpr "tmp___8"} boogie_si_record_i32($i80);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6647, 20} true;
  assume {:verifier.code 0} true;
  $i81 := $trunc.i32.i16($i80);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6647, 18} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i16($M.1, $p69, $i81);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6648, 41} true;
  assume {:verifier.code 0} true;
  $i82 := $sub.i32($i68, 4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6650, 17} true;
  assume {:verifier.code 0} true;
  $i83 := $sgt.i32($i82, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6650, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i83} true;
  goto $bb24, $bb25;
$bb24:
  assume ($i83 == 1);
  assume {:verifier.code 0} true;
  $p67, $i68 := $p76, $i82;
  goto $bb22;
$bb25:
  assume !(($i83 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6650, 13} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb26:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6654, 7} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6670, 23} true;
  assume {:verifier.code 0} true;
  call $i96 := eth_type_trans($p57, $p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6670, 12} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($add.ref($p57, $mul.ref(0, 232)), $mul.ref(126, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6670, 21} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i16($M.1, $p97, $i96);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6671, 7} true;
  assume {:verifier.code 0} true;
  call $i98 := ldv_netif_rx_14($p57);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6672, 5} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb28:
  assume ($i86 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6665, 13} true;
  assume {:verifier.code 0} true;
  $p87, $i88 := $p84, $i29;
  goto $bb31;
$bb29:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6665, 13} true;
  assume {:verifier.code 0} true;
  assume !(($i86 == 1));
  goto $bb30;
$bb30:
  assume {:verifier.code 0} true;
  goto $bb35;
$bb31:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6666, 11} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb32:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6661, 21} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p87, $mul.ref(1, 4));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6662, 39} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($add.ref($p1, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6662, 39} true;
  assume {:verifier.code 0} true;
  $p91 := $load.ref($M.1, $p90);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6662, 47} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p91, $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6662, 21} true;
  assume {:verifier.code 0} true;
  call $i93 := ioread32($p92);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6662, 19} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i32($M.1, $p87, $i93);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6663, 41} true;
  assume {:verifier.code 0} true;
  $i94 := $sub.i32($i88, 4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6665, 17} true;
  assume {:verifier.code 0} true;
  $i95 := $sgt.i32($i94, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6665, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i95} true;
  goto $bb33, $bb34;
$bb33:
  assume ($i95 == 1);
  assume {:verifier.code 0} true;
  $p87, $i88 := $p89, $i94;
  goto $bb31;
$bb34:
  assume !(($i95 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6665, 13} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb35:
  assume {:verifier.code 0} true;
  goto $bb27;
$bb36:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6675, 3} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6678, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_clear_bits($p1, 0, 4096, 4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6679, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p1, 17, 1, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6680, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_enable_bits($p1, 0, 4096, 4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6681, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ks8842_read32: ref;
axiom (ks8842_read32 == $sub.ref(0, 195921));
procedure  ks8842_read32($p0: ref, $i1: i16, $i2: i32)
  returns ($r: i32)
{
  var $i3: i32;
  var $i4: i16;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $p8: ref;
  var $i9: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6095, 31} true;
  assume {:verifier.code 0} true;
  call {:cexpr "ks8842_read32:arg:bank"} boogie_si_record_i16($i1);
  call {:cexpr "ks8842_read32:arg:offset"} boogie_si_record_i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6095, 31} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i16.i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6095, 31} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.i32.i16($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6095, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_select_bank($p0, $i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6096, 27} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6096, 27} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.1, $p5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6096, 37} true;
  assume {:verifier.code 0} true;
  $i7 := $sext.i32.i64($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6096, 35} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p6, $mul.ref($i7, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6096, 9} true;
  assume {:verifier.code 0} true;
  call $i9 := ioread32($p8);
  call {:cexpr "tmp"} boogie_si_record_i32($i9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6097, 3} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
}
const netdev_alloc_skb_ip_align: ref;
axiom (netdev_alloc_skb_ip_align == $sub.ref(0, 196953));
procedure  netdev_alloc_skb_ip_align($p0: ref, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5639, 9} true;
  assume {:verifier.code 0} true;
  call {:cexpr "netdev_alloc_skb_ip_align:arg:length"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5639, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := __netdev_alloc_skb_ip_align($p0, $i1, 32);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5640, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const ks8842_update_rx_counters: ref;
axiom (ks8842_update_rx_counters == $sub.ref(0, 197985));
procedure  ks8842_update_rx_counters($p0: ref, $i1: i32, $i2: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i24;
  var $i11: i24;
  var $i12: i24;
  var $p13: ref;
  var $p14: ref;
  var $i15: i8;
  var $i16: i64;
  var $i17: i64;
  var $i18: i64;
  var $i19: i1;
  var $i20: i32;
  var $p21: ref;
  var $p22: ref;
  var $i23: i64;
  var $i24: i64;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $i29: i64;
  var $i30: i64;
  var $i31: i64;
  var $p32: ref;
  var $p33: ref;
  var $i34: i32;
  var $i35: i1;
  var $p36: ref;
  var $p37: ref;
  var $i38: i64;
  var $i39: i64;
  var $p40: ref;
  var $p41: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6448, 14} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  call {:cexpr "ks8842_update_rx_counters:arg:status"} boogie_si_record_i32($i1);
  call {:cexpr "ks8842_update_rx_counters:arg:len"} boogie_si_record_i32($i2);
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6448, 14} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6448, 22} true;
  assume {:verifier.code 0} true;
  $M.2 := $store.ref($M.2, $p4, .str);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6449, 14} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6449, 23} true;
  assume {:verifier.code 0} true;
  $M.3 := $store.ref($M.3, $p5, .str.12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6450, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6450, 23} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.ref($M.4, $p6, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6451, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6451, 21} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.ref($M.5, $p7, .str.13);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6452, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6452, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6452, 21} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i24($M.6, $p9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6452, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6452:21: warning: over-approximating bitwise operation and;
  $i11 := $and.i24($i10, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6452, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6452:21: warning: over-approximating bitwise operation or;
  $i12 := $or.i24($i11, 596);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6452, 21} true;
  assume {:verifier.code 0} true;
  $M.6 := $store.i24($M.6, $p9, $i12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6453, 14} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6453, 20} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i8($M.7, $p13, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6454, 47} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6454, 47} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i8($M.7, $p14);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6454, 29} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i8.i64($i15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6454, 53} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6454:53: warning: over-approximating bitwise operation and;
  $i17 := $and.i64($i16, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6454, 9} true;
  assume {:verifier.code 0} true;
  call $i18 := ldv__builtin_expect($i17, 0);
  call {:cexpr "tmp"} boogie_si_record_i64($i18);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6455, 11} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i64($i18, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6455, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i19 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6456, 5} true;
  assume {:verifier.code 0} true;
  call $i20 := __dynamic_netdev_dbg.ref.ref.ref.i32($p3, $p0, .str.13, $i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6458, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6460, 38} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p22 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6460, 44} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i64($M.1, $p22);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6460, 55} true;
  assume {:verifier.code 0} true;
  $i24 := $add.i64($i23, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6460, 11} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p26 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6460, 28} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i64($M.1, $p26, $i24);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6461, 36} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p28 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6461, 42} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i64($M.1, $p28);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6461, 53} true;
  assume {:verifier.code 0} true;
  $i30 := $sext.i32.i64($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6461, 51} true;
  assume {:verifier.code 0} true;
  $i31 := $add.i64($i29, $i30);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6461, 11} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p33 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6461, 26} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i64($M.1, $p33, $i31);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6462, 15} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6462:15: warning: over-approximating bitwise operation and;
  $i34 := $and.i32($i1, 64);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6462, 22} true;
  assume {:verifier.code 0} true;
  $i35 := $ne.i32($i34, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6462, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i35 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6463, 39} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p37 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6463, 45} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i64($M.1, $p37);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6463, 55} true;
  assume {:verifier.code 0} true;
  $i39 := $add.i64($i38, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6463, 13} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p41 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6463, 29} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i64($M.1, $p41, $i39);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6464, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6466, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const skb_put: ref;
axiom (skb_put == $sub.ref(0, 199017));
procedure  skb_put($p0: ref, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8442, 27} true;
  assume {:verifier.code 0} true;
  call {:cexpr "skb_put:arg:arg1"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8442, 27} true;
  assume {:verifier.code 0} true;
  call $p2 := external_alloc();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8442, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const ioread32: ref;
axiom (ioread32 == $sub.ref(0, 200049));
procedure  ioread32($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8368, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8368, 10} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_uint();
  call {:cexpr "smack:ext:__VERIFIER_nondet_uint"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8368, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const eth_type_trans: ref;
axiom (eth_type_trans == $sub.ref(0, 201081));
procedure  eth_type_trans($p0: ref, $p1: ref)
  returns ($r: i16)
{
  var $i2: i16;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8343, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8343, 10} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_ushort();
  call {:cexpr "smack:ext:__VERIFIER_nondet_ushort"} boogie_si_record_i16($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8343, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const ldv_netif_rx_14: ref;
axiom (ldv_netif_rx_14 == $sub.ref(0, 202113));
procedure  ldv_netif_rx_14($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7969, 26} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7969, 26} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7969, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := ldv_skb_free_int($p1);
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7970, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const ks8842_update_rx_err_counters: ref;
axiom (ks8842_update_rx_err_counters == $sub.ref(0, 203145));
procedure  ks8842_update_rx_err_counters($p0: ref, $i1: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i24;
  var $i10: i24;
  var $i11: i24;
  var $p12: ref;
  var $p13: ref;
  var $i14: i8;
  var $i15: i64;
  var $i16: i64;
  var $i17: i64;
  var $i18: i1;
  var $i19: i32;
  var $p20: ref;
  var $p21: ref;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $p25: ref;
  var $i26: i32;
  var $i27: i1;
  var $p28: ref;
  var $p29: ref;
  var $i30: i64;
  var $i31: i64;
  var $p32: ref;
  var $p33: ref;
  var $i34: i32;
  var $i35: i1;
  var $p36: ref;
  var $p37: ref;
  var $i38: i64;
  var $i39: i64;
  var $p40: ref;
  var $p41: ref;
  var $i42: i32;
  var $i43: i1;
  var $p44: ref;
  var $p45: ref;
  var $i46: i64;
  var $i47: i64;
  var $p48: ref;
  var $p49: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6415, 14} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  call {:cexpr "ks8842_update_rx_err_counters:arg:status"} boogie_si_record_i32($i1);
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6415, 14} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6415, 22} true;
  assume {:verifier.code 0} true;
  $M.2 := $store.ref($M.2, $p3, .str);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6416, 14} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6416, 23} true;
  assume {:verifier.code 0} true;
  $M.3 := $store.ref($M.3, $p4, .str.14);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6417, 14} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6417, 23} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.ref($M.4, $p5, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6418, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6418, 21} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.ref($M.5, $p6, .str.15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6419, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6419, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6419, 21} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i24($M.6, $p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6419, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6419:21: warning: over-approximating bitwise operation and;
  $i10 := $and.i24($i9, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6419, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6419:21: warning: over-approximating bitwise operation or;
  $i11 := $or.i24($i10, 582);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6419, 21} true;
  assume {:verifier.code 0} true;
  $M.6 := $store.i24($M.6, $p8, $i11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6420, 14} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6420, 20} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i8($M.7, $p12, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6421, 47} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6421, 47} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i8($M.7, $p13);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6421, 29} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i8.i64($i14);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6421, 53} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6421:53: warning: over-approximating bitwise operation and;
  $i16 := $and.i64($i15, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6421, 9} true;
  assume {:verifier.code 0} true;
  call $i17 := ldv__builtin_expect($i16, 0);
  call {:cexpr "tmp"} boogie_si_record_i64($i17);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6422, 11} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i64($i17, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6422, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i18 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6423, 5} true;
  assume {:verifier.code 0} true;
  call $i19 := __dynamic_netdev_dbg.ref.ref.ref.i32($p2, $p0, .str.15, $i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6425, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6427, 37} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p21 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6427, 43} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i64($M.1, $p21);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6427, 53} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i64($i22, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6427, 11} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p25 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6427, 27} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i64($M.1, $p25, $i23);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6428, 15} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6428:15: warning: over-approximating bitwise operation and;
  $i26 := $and.i32($i1, 4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6428, 21} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i32($i26, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6428, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i27 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6429, 46} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p29 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(80, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6429, 52} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i64($M.1, $p29);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6429, 69} true;
  assume {:verifier.code 0} true;
  $i31 := $add.i64($i30, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6429, 13} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p33 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(80, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6429, 36} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i64($M.1, $p33, $i31);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6430, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6432, 20} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6432:20: warning: over-approximating bitwise operation and;
  $i34 := $and.i32($i1, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6432, 20} true;
  assume {:verifier.code 0} true;
  $i35 := $ne.i32($i34, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6432, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i35 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6433, 43} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p37 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(96, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6433, 49} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i64($M.1, $p37);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6433, 63} true;
  assume {:verifier.code 0} true;
  $i39 := $add.i64($i38, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6433, 13} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p41 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(96, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6433, 33} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i64($M.1, $p41, $i39);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6434, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6436, 15} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6436:15: warning: over-approximating bitwise operation and;
  $i42 := $and.i32($i1, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6436, 21} true;
  assume {:verifier.code 0} true;
  $i43 := $ne.i32($i42, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6436, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i43 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6437, 45} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p45 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(104, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6437, 51} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i64($M.1, $p45);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6437, 67} true;
  assume {:verifier.code 0} true;
  $i47 := $add.i64($i46, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6437, 13} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p49 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(104, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6437, 35} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i64($M.1, $p49, $i47);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6438, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i43 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6440, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_skb_free_int: ref;
axiom (ldv_skb_free_int == $sub.ref(0, 204177));
procedure  ldv_skb_free_int($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8225, 18} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8225, 18} true;
  assume {:verifier.code 0} true;
  $p1 := $M.33;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8225, 28} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8225, 3} true;
  assume {:verifier.code 0} true;
  call ldv_set_remove($p1, $p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8226, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const ldv_set_remove: ref;
axiom (ldv_set_remove == $sub.ref(0, 205209));
procedure  ldv_set_remove($p0: ref, $p1: ref)
{
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i64;
  var $i11: i1;
  var $i12: i32;
  var $i13: i32;
  var $i14: i32;
  var $i15: i1;
  var $i5: i32;
  var $i16: i1;
  var $i17: i32;
  var $i18: i32;
  var $i19: i1;
  var $i20: i32;
  var $i21: i64;
  var $p22: ref;
  var $p23: ref;
  var $i24: i32;
  var $i25: i64;
  var $p26: ref;
  var $i27: i32;
  var $i28: i32;
  var $i29: i1;
  var $i30: i32;
  var $i31: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8102, 13} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8102, 13} true;
  assume {:verifier.code 0} true;
  $i2 := $M.35;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8102, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $slt.i32(0, $i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8102, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8102, 9} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  goto $bb4;
$bb2:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8102, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8104, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i32(0, 1);
  goto $bb7;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8103, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8106, 25} true;
  assume {:verifier.code 0} true;
  $i6 := $sext.i32.i64($i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8106, 25} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref($i6, 8));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8106, 25} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.36, $p7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8106, 9} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8106, 40} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8106, 37} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i64($i9, $i10);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8106, 9} true;
  assume {:verifier.code 0} true;
  $i12 := $i4;
  assume {:branchcond $i11} true;
  goto $bb8, $bb9;
$bb6:
  assume !(($i15 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8102, 9} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb7:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8113, 21} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i32($i5, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8113, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb12, $bb13;
$bb8:
  assume ($i11 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8108, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $i12;
  goto $bb7;
$bb9:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8111, 11} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i32($i4, 1);
  call {:cexpr "i"} boogie_si_record_i32($i13);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8102, 13} true;
  assume {:verifier.code 0} true;
  $i14 := $M.35;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8102, 11} true;
  assume {:verifier.code 0} true;
  $i15 := $slt.i32($i13, $i14);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8102, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb11, $bb6;
$bb11:
  assume ($i15 == 1);
  assume {:verifier.code 0} true;
  $i4 := $i13;
  goto $bb4;
$bb12:
  assume ($i16 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8114, 23} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i32($i5, 1);
  call {:cexpr "i"} boogie_si_record_i32($i17);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8116, 15} true;
  assume {:verifier.code 0} true;
  $i18 := $M.35;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8116, 13} true;
  assume {:verifier.code 0} true;
  $i19 := $slt.i32($i17, $i18);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8116, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb14, $bb15;
$bb13:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb14:
  assume ($i19 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8116, 11} true;
  assume {:verifier.code 0} true;
  $i20 := $i17;
  goto $bb17;
$bb15:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8116, 11} true;
  assume {:verifier.code 0} true;
  assume !(($i19 == 1));
  goto $bb16;
$bb16:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8118, 9} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb17:
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8117, 7} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8120, 25} true;
  assume {:verifier.code 0} true;
  $i21 := $sext.i32.i64($i20);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8120, 25} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref($i21, 8));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8120, 25} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.36, $p22);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8120, 18} true;
  assume {:verifier.code 0} true;
  $i24 := $sub.i32($i20, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8120, 7} true;
  assume {:verifier.code 0} true;
  $i25 := $sext.i32.i64($i24);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8120, 7} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref($i25, 8));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8120, 23} true;
  assume {:verifier.code 0} true;
  $M.36 := $store.ref($M.36, $p26, $p23);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8121, 13} true;
  assume {:verifier.code 0} true;
  $i27 := $add.i32($i20, 1);
  call {:cexpr "i"} boogie_si_record_i32($i27);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8116, 15} true;
  assume {:verifier.code 0} true;
  $i28 := $M.35;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8116, 13} true;
  assume {:verifier.code 0} true;
  $i29 := $slt.i32($i27, $i28);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8116, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb21, $bb19;
$bb19:
  assume !(($i29 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8116, 11} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb20:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8123, 18} true;
  assume {:verifier.code 0} true;
  $i30 := $M.35;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8123, 29} true;
  assume {:verifier.code 0} true;
  $i31 := $sub.i32($i30, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8123, 16} true;
  assume {:verifier.code 0} true;
  $M.35 := $i31;
  call {:cexpr "last_index"} boogie_si_record_i32($i31);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8124, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume ($i29 == 1);
  assume {:verifier.code 0} true;
  $i20 := $i27;
  goto $bb17;
$bb22:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8126, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __netdev_alloc_skb_ip_align: ref;
axiom (__netdev_alloc_skb_ip_align == $sub.ref(0, 206241));
procedure  __netdev_alloc_skb_ip_align($p0: ref, $i1: i32, $i2: i32)
  returns ($r: ref)
{
  var $p3: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5629, 9} true;
  assume {:verifier.code 0} true;
  call {:cexpr "__netdev_alloc_skb_ip_align:arg:length"} boogie_si_record_i32($i1);
  call {:cexpr "__netdev_alloc_skb_ip_align:arg:gfp"} boogie_si_record_i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5629, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := __netdev_alloc_skb($p0, $i1, $i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5631, 3} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const __netdev_alloc_skb: ref;
axiom (__netdev_alloc_skb == $sub.ref(0, 207273));
procedure  __netdev_alloc_skb($p0: ref, $i1: i32, $i2: i32)
  returns ($r: ref)
{
  var $p3: ref;
  var $p4: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8285, 28} true;
  assume {:verifier.code 0} true;
  call {:cexpr "__netdev_alloc_skb:arg:arg1"} boogie_si_record_i32($i1);
  call {:cexpr "__netdev_alloc_skb:arg:arg2"} boogie_si_record_i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8285, 28} true;
  assume {:verifier.code 0} true;
  call $p3 := external_alloc();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8285, 10} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8285, 3} true;
  assume {:verifier.code 0} true;
  $r := $p4;
  $exn := false;
  return;
}
const netif_carrier_on: ref;
axiom (netif_carrier_on == $sub.ref(0, 208305));
procedure  netif_carrier_on($p0: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8408, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8408, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const netif_stop_queue: ref;
axiom (netif_stop_queue == $sub.ref(0, 209337));
procedure  netif_stop_queue($p0: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5899, 9} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5899, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := netdev_get_tx_queue($p0, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5900, 3} true;
  assume {:verifier.code 0} true;
  call netif_tx_stop_queue($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5901, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const netif_carrier_off: ref;
axiom (netif_carrier_off == $sub.ref(0, 210369));
procedure  netif_carrier_off($p0: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8405, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8405, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const netif_tx_stop_queue: ref;
axiom (netif_tx_stop_queue == $sub.ref(0, 211401));
procedure  netif_tx_stop_queue($p0: ref)
{
  var $i1: i64;
  var $i2: i1;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
  var $i6: i64;
  var $i7: i64;
  var $i8: i1;
  var $i9: i1;
  var $i10: i32;
  var $i11: i64;
  var $i12: i64;
  var $i13: i1;
  var $i14: i32;
  var $p15: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5879, 19} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5879, 19} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5879, 45} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i64($i1, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5879, 45} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i32($i2);
  call {:cexpr "__ret_warn_on"} boogie_si_record_i32($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5880, 43} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5880, 43} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i1.i32($i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5880, 29} true;
  assume {:verifier.code 0} true;
  $i6 := $sext.i32.i64($i5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5880, 9} true;
  assume {:verifier.code 0} true;
  call $i7 := ldv__builtin_expect($i6, 0);
  call {:cexpr "tmp"} boogie_si_record_i64($i7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5881, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i64($i7, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5881, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5882, 5} true;
  assume {:verifier.code 0} true;
  call warn_slowpath_null(.str.19, 2212);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5883, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5885, 47} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i3, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5885, 47} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i1.i32($i9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5885, 33} true;
  assume {:verifier.code 0} true;
  $i11 := $sext.i32.i64($i10);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5885, 13} true;
  assume {:verifier.code 0} true;
  call $i12 := ldv__builtin_expect($i11, 0);
  call {:cexpr "tmp___0"} boogie_si_record_i64($i12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5886, 15} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i64($i12, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5886, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i13 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5887, 5} true;
  assume {:verifier.code 0} true;
  call $i14 := printk.ref(.str.20);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5888, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5894, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5891, 55} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p0, $mul.ref(0, 496)), $mul.ref(424, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5891, 3} true;
  assume {:verifier.code 0} true;
  call set_bit(0, $p15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5892, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
}
const warn_slowpath_null: ref;
axiom (warn_slowpath_null == $sub.ref(0, 212433));
procedure  warn_slowpath_null($p0: ref, $i1: i32)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8454, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "warn_slowpath_null:arg:arg1"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8454, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const set_bit: ref;
axiom (set_bit == $sub.ref(0, 213465));
procedure  set_bit($i0: i64, $p1: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5268, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "set_bit:arg:nr"} boogie_si_record_i64($i0);
  call devirtbounce.1(0, $p1, $i0, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5268, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const _raw_spin_unlock_irqrestore: ref;
axiom (_raw_spin_unlock_irqrestore == $sub.ref(0, 214497));
procedure  _raw_spin_unlock_irqrestore($p0: ref, $i1: i64)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8316, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "_raw_spin_unlock_irqrestore:arg:arg1"} boogie_si_record_i64($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8316, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ioremap_nocache: ref;
axiom (ioremap_nocache == $sub.ref(0, 215529));
procedure  ioremap_nocache($i0: i64, $i1: i64)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8376, 18} true;
  assume {:verifier.code 0} true;
  call {:cexpr "ioremap_nocache:arg:arg0"} boogie_si_record_i64($i0);
  call {:cexpr "ioremap_nocache:arg:arg1"} boogie_si_record_i64($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8376, 18} true;
  assume {:verifier.code 0} true;
  call $p2 := external_alloc();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8376, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const ks8842_stop_dma: ref;
axiom (ks8842_stop_dma == $sub.ref(0, 216561));
procedure  ks8842_stop_dma($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i1;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i32;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $i20: i64;
  var $i21: i1;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $i30: i32;
  var $p31: ref;
  var $p32: ref;
  var $i33: i64;
  var $i34: i1;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i64;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6989, 23} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6989, 23} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(232, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6990, 23} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(304, 1));
  $p3 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6991, 17} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p3, $0.ref);
  $p4 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6992, 31} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.1, $p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6992, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $p2i.ref.i64($p5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6992, 36} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i64($i6, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6992, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  $p8 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6993, 18} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.1, $p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6993, 25} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p9, $mul.ref(0, 72)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6993, 25} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.1, $p10);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6993, 34} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p11, $mul.ref(0, 200)), $mul.ref(168, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6993, 34} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.1, $p12);
  $p14 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6993, 59} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.1, $p14);
  call $i16 := devirtbounce.2($p13, $p15, 0, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6994, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  $p17 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6996, 17} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p17, $0.ref);
  $p18 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6997, 31} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.1, $p18);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6997, 7} true;
  assume {:verifier.code 0} true;
  $i20 := $p2i.ref.i64($p19);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6997, 36} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i64($i20, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6997, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i21 == 1);
  $p22 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6998, 18} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.1, $p22);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6998, 25} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p23, $mul.ref(0, 72)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6998, 25} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.1, $p24);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6998, 34} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p25, $mul.ref(0, 200)), $mul.ref(168, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6998, 34} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.1, $p26);
  $p28 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6998, 59} true;
  assume {:verifier.code 0} true;
  $p29 := $load.ref($M.1, $p28);
  call $i30 := devirtbounce.2($p27, $p29, 0, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6999, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  $p31 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(24, 1));
  $p32 := $add.ref($add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(24, 1)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7001, 18} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i64($M.1, $p32);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7001, 30} true;
  assume {:verifier.code 0} true;
  $i34 := $ne.i64($i33, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7001, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i34 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7002, 37} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(224, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7002, 37} true;
  assume {:verifier.code 0} true;
  $p36 := $load.ref($M.1, $p35);
  $p37 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(24, 1));
  $p38 := $add.ref($add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(24, 1)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7002, 53} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i64($M.1, $p38);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7002, 5} true;
  assume {:verifier.code 0} true;
  call dma_unmap_single_attrs($p36, $i39, 2048, 2, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7003, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  $p40 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(24, 1));
  $p41 := $add.ref($add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(24, 1)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7005, 26} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i64($M.1, $p41, 0);
  $p42 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7006, 24} true;
  assume {:verifier.code 0} true;
  $p43 := $load.ref($M.1, $p42);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7006, 16} true;
  assume {:verifier.code 0} true;
  $p44 := $bitcast.ref.ref($p43);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7006, 3} true;
  assume {:verifier.code 0} true;
  call ldv_skb_free($p44);
  $p45 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7007, 15} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p45, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7008, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ks8842_reset_hw: ref;
axiom (ks8842_reset_hw == $sub.ref(0, 217593));
procedure  ks8842_reset_hw($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
  var $i14: i64;
  var $i15: i1;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6160, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6160, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_reset($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6161, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p0, 16, 14, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6162, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p0, 16, 1256, 4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6163, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p0, 17, 16384, 4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6164, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p0, 17, 16384, 6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6165, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p0, 0, 4096, 4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6166, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_enable_bits($p0, 32, 256, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6167, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_enable_bits($p0, 32, 8, 4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6168, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p0, 48, 7687, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6169, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_enable_bits($p0, 49, 8192, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6170, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_enable_tx($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6171, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_enable_rx($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6172, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p0, 18, $sub.i16(0, 1), 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6173, 16} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(232, 1));
  $p2 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6173, 23} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.1, $p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6173, 31} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6173, 37} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6173, 49} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(304, 1));
  $p6 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(104, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6173, 56} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.1, $p6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6173, 64} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, $sub.i32(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6173, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6173, 37} true;
  assume {:verifier.code 0} true;
  assume !(($i4 == 1));
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6177, 19} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6177, 19} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i64($M.1, $p12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6177, 30} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6177:30: warning: over-approximating bitwise operation and;
  $i14 := $and.i64($i13, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6177, 37} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i64($i14, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6177, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb7, $bb8;
$bb4:
  assume ($i8 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6174, 31} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6174, 31} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.1, $p9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6174, 39} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p10, $mul.ref(40, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6174, 5} true;
  assume {:verifier.code 0} true;
  call iowrite16($sub.i16(0, 29824), $p11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6175, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p0, 18, $sub.i16(0, 21632), 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6176, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6173, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i8 == 1));
  goto $bb3;
$bb6:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6183, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p0, 32, 1, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6184, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb7:
  assume ($i15 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6178, 33} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6178, 33} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.1, $p16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6178, 41} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p17, $mul.ref(40, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6178, 7} true;
  assume {:verifier.code 0} true;
  call iowrite16($sub.i16(0, 5248), $p18);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6179, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6181, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p0, 18, $sub.i16(0, 5248), 0);
  assume {:verifier.code 0} true;
  goto $bb6;
}
const ks8842_write_mac_addr: ref;
axiom (ks8842_write_mac_addr == $sub.ref(0, 218625));
procedure  ks8842_write_mac_addr($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $p5: ref;
  var $i6: i8;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $i10: i1;
  var $p11: ref;
  var $i12: i8;
  var $p13: ref;
  var $i14: i64;
  var $i15: i32;
  var $i16: i32;
  var $i17: i1;
  var $i18: i16;
  var $i19: i32;
  var $i20: i16;
  var $i21: i16;
  var $i22: i32;
  var $i23: i16;
  var $i24: i16;
  var $i25: i32;
  var $i26: i16;
  var $p27: ref;
  var $p28: ref;
  var $i29: i8;
  var $p30: ref;
  var $i31: i64;
  var $i32: i64;
  var $i33: i1;
  var $p34: ref;
  var $i35: i8;
  var $p36: ref;
  var $i37: i8;
  var $p38: ref;
  var $i39: i64;
  var $i40: i64;
  var $i41: i1;
  var $p42: ref;
  var $i43: i8;
  var $p44: ref;
  var $i45: i8;
  var $p46: ref;
  var $i47: i64;
  var $i48: i64;
  var $i49: i1;
  var $p50: ref;
  var $i51: i8;
  var $p52: ref;
  var $i53: i8;
  var $p54: ref;
  var $i55: i64;
  var $i56: i64;
  var $i57: i1;
  var $p58: ref;
  var $i59: i8;
  var $i60: i8;
  var $p61: ref;
  var $i62: i64;
  var $i63: i64;
  var $i64: i1;
  var $i65: i8;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6228, 35} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6228, 35} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6228, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := spinlock_check($p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6229, 11} true;
  assume {:verifier.code 0} true;
  call $i4 := _raw_spin_lock_irqsave($p3);
  call {:cexpr "flags"} boogie_si_record_i64($i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6240, 7} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6241, 5} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6233, 41} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p1, $mul.ref(5, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6233, 35} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i8($M.1, $p5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6233, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_write8($p0, 2, $i6, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 17} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 17} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i64($M.1, $p7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 28} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6234:28: warning: over-approximating bitwise operation and;
  $i9 := $and.i64($i8, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 35} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i64($i9, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i10 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6235, 44} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p1, $mul.ref(5, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6235, 38} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i8($M.1, $p11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6235, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_write8($p0, 39, $i12, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6236, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6241, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6233, 41} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p1, $mul.ref(4, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6233, 35} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i8($M.1, $p28);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6233, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_write8($p0, 2, $i29, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 17} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 17} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i64($M.1, $p30);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 28} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6234:28: warning: over-approximating bitwise operation and;
  $i32 := $and.i64($i31, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 35} true;
  assume {:verifier.code 0} true;
  $i33 := $eq.i64($i32, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb11, $bb12;
$bb7:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6244, 22} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6244, 22} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i64($M.1, $p13);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6244, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $trunc.i64.i32($i14);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6244, 33} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6244:33: warning: over-approximating bitwise operation and;
  $i16 := $and.i32($i15, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6244, 33} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.i32($i16, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6244, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i17 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6245, 15} true;
  assume {:verifier.code 0} true;
  call $i18 := ks8842_read16($p0, 2, 0);
  call {:cexpr "mac___0"} boogie_si_record_i16($i18);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6246, 33} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i16.i32($i18);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6246, 33} true;
  assume {:verifier.code 0} true;
  $i20 := $trunc.i32.i16($i19);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6246, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p0, 39, $i20, 4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6247, 15} true;
  assume {:verifier.code 0} true;
  call $i21 := ks8842_read16($p0, 2, 2);
  call {:cexpr "mac___0"} boogie_si_record_i16($i21);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6248, 33} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i16.i32($i21);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6248, 33} true;
  assume {:verifier.code 0} true;
  $i23 := $trunc.i32.i16($i22);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6248, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p0, 39, $i23, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6249, 15} true;
  assume {:verifier.code 0} true;
  call $i24 := ks8842_read16($p0, 2, 4);
  call {:cexpr "mac___0"} boogie_si_record_i16($i24);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6250, 33} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i16.i32($i24);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6250, 33} true;
  assume {:verifier.code 0} true;
  $i26 := $trunc.i32.i16($i25);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6250, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p0, 39, $i26, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6251, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6253, 37} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6253, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p27, $i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6254, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb11:
  assume ($i33 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6235, 44} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p1, $mul.ref(4, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6235, 38} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i8($M.1, $p34);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6235, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_write8($p0, 39, $i35, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6236, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i33 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6241, 5} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6233, 41} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p1, $mul.ref(3, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6233, 35} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i8($M.1, $p36);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6233, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_write8($p0, 2, $i37, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 17} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 17} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i64($M.1, $p38);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 28} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6234:28: warning: over-approximating bitwise operation and;
  $i40 := $and.i64($i39, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 35} true;
  assume {:verifier.code 0} true;
  $i41 := $eq.i64($i40, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i41 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6235, 44} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p1, $mul.ref(3, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6235, 38} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i8($M.1, $p42);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6235, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_write8($p0, 39, $i43, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6236, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i41 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6241, 5} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6233, 41} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p1, $mul.ref(2, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6233, 35} true;
  assume {:verifier.code 0} true;
  $i45 := $load.i8($M.1, $p44);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6233, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_write8($p0, 2, $i45, 3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 17} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 17} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i64($M.1, $p46);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 28} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6234:28: warning: over-approximating bitwise operation and;
  $i48 := $and.i64($i47, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 35} true;
  assume {:verifier.code 0} true;
  $i49 := $eq.i64($i48, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i49} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i49 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6235, 44} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p1, $mul.ref(2, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6235, 38} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i8($M.1, $p50);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6235, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_write8($p0, 39, $i51, 3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6236, 3} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume !(($i49 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6241, 5} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6233, 41} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p1, $mul.ref(1, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6233, 35} true;
  assume {:verifier.code 0} true;
  $i53 := $load.i8($M.1, $p52);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6233, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_write8($p0, 2, $i53, 4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 17} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 17} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i64($M.1, $p54);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 28} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6234:28: warning: over-approximating bitwise operation and;
  $i56 := $and.i64($i55, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 35} true;
  assume {:verifier.code 0} true;
  $i57 := $eq.i64($i56, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i57} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i57 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6235, 44} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p1, $mul.ref(1, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6235, 38} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i8($M.1, $p58);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6235, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_write8($p0, 39, $i59, 4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6236, 3} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i57 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6241, 5} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6233, 35} true;
  assume {:verifier.code 0} true;
  $i60 := $load.i8($M.1, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6233, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_write8($p0, 2, $i60, 5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 17} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 17} true;
  assume {:verifier.code 0} true;
  $i62 := $load.i64($M.1, $p61);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 28} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6234:28: warning: over-approximating bitwise operation and;
  $i63 := $and.i64($i62, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 35} true;
  assume {:verifier.code 0} true;
  $i64 := $eq.i64($i63, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6234, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i64} true;
  goto $bb27, $bb28;
$bb27:
  assume ($i64 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6235, 38} true;
  assume {:verifier.code 0} true;
  $i65 := $load.i8($M.1, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6235, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_write8($p0, 39, $i65, 5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6236, 3} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  assume !(($i64 == 1));
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:verifier.code 0} true;
  goto $bb7;
}
const __ks8842_start_new_rx_dma: ref;
axiom (__ks8842_start_new_rx_dma == $sub.ref(0, 219657));
procedure  __ks8842_start_new_rx_dma($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i64;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i64;
  var $i23: i32;
  var $i24: i1;
  var $i25: i32;
  var $i26: i64;
  var $i27: i64;
  var $i28: i1;
  var $p29: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $i38: i64;
  var $i39: i1;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $i53: i32;
  var $p54: ref;
  var $i30: i32;
  var $p56: ref;
  var $i57: i64;
  var $i58: i1;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $i62: i64;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $i66: i64;
  var $i67: i1;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $i72: i32;
  var $i55: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6478, 9} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6478, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := netdev_priv($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6479, 13} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6480, 20} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p2, $mul.ref(0, 416)), $mul.ref(304, 1));
  $p4 := $add.ref($add.ref($add.ref($p2, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6482, 14} true;
  assume {:verifier.code 0} true;
  call $p5 := ldv_netdev_alloc_skb_12($p0, 2048);
  $p6 := $add.ref($add.ref($add.ref($p2, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6482, 12} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p6, $p5);
  $p7 := $add.ref($add.ref($add.ref($p2, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6483, 28} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.1, $p7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6483, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6483, 32} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i64($i9, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6483, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6484, 5} true;
  assume {:verifier.code 0} true;
  call sg_init_table($p4, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6485, 53} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p2, $mul.ref(0, 416)), $mul.ref(224, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6485, 53} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.1, $p11);
  $p13 := $add.ref($add.ref($add.ref($p2, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6485, 72} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.1, $p13);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6485, 78} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p14, $mul.ref(0, 232)), $mul.ref(216, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6485, 78} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.1, $p15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6485, 23} true;
  assume {:verifier.code 0} true;
  call $i17 := dma_map_single_attrs($p12, $p16, 2048, 2, $0.ref);
  $p18 := $add.ref($add.ref($add.ref($add.ref($p2, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(24, 1)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6485, 21} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i64($M.1, $p18, $i17);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6487, 38} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($add.ref($p2, $mul.ref(0, 416)), $mul.ref(224, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6487, 38} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.1, $p19);
  $p21 := $add.ref($add.ref($add.ref($add.ref($p2, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(24, 1)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6487, 47} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i64($M.1, $p21);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6487, 11} true;
  assume {:verifier.code 0} true;
  call $i23 := dma_mapping_error($p20, $i22);
  call {:cexpr "err"} boogie_si_record_i32($i23);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6488, 39} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i32($i23, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6488, 39} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i1.i32($i24);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6488, 35} true;
  assume {:verifier.code 0} true;
  $i26 := $sext.i32.i64($i25);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6488, 15} true;
  assume {:verifier.code 0} true;
  call $i27 := ldv__builtin_expect($i26, 0);
  call {:cexpr "tmp___0"} boogie_si_record_i64($i27);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6489, 17} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.i64($i27, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6489, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i10 == 1));
  $p54 := $add.ref($add.ref($add.ref($add.ref($p2, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(24, 1)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6505, 21} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i64($M.1, $p54, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6506, 5} true;
  assume {:verifier.code 0} true;
  $i30 := $sub.i32(0, 12);
  goto $bb5;
$bb3:
  assume ($i28 == 1);
  $p29 := $add.ref($add.ref($add.ref($add.ref($p2, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(24, 1)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6490, 23} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i64($M.1, $p29, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6491, 7} true;
  assume {:verifier.code 0} true;
  $i30 := $i23;
  goto $bb5;
$bb4:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($add.ref($add.ref($add.ref($p2, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(24, 1)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6510, 11} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i64($M.1, $p56);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6510, 23} true;
  assume {:verifier.code 0} true;
  $i58 := $ne.i64($i57, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6510, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb12, $bb13;
$bb6:
  $p31 := $add.ref($add.ref($add.ref($add.ref($p2, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(24, 1)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6494, 20} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i32($M.1, $p31, 2048);
  $p32 := $add.ref($add.ref($add.ref($p2, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6495, 47} true;
  assume {:verifier.code 0} true;
  $p33 := $load.ref($M.1, $p32);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6495, 18} true;
  assume {:verifier.code 0} true;
  call $p34 := dmaengine_prep_slave_sg($p33, $p4, 1, 2, 1);
  $p35 := $add.ref($add.ref($add.ref($p2, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6495, 16} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p35, $p34);
  $p36 := $add.ref($add.ref($add.ref($p2, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6496, 30} true;
  assume {:verifier.code 0} true;
  $p37 := $load.ref($M.1, $p36);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6496, 9} true;
  assume {:verifier.code 0} true;
  $i38 := $p2i.ref.i64($p37);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6496, 36} true;
  assume {:verifier.code 0} true;
  $i39 := $eq.i64($i38, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6496, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i39 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6497, 7} true;
  assume {:verifier.code 0} true;
  $i30 := $i23;
  goto $bb5;
$bb8:
  assume !(($i39 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6500, 36} true;
  assume {:verifier.code 0} true;
  $p40 := $bitcast.ref.ref($p0);
  $p41 := $add.ref($add.ref($add.ref($p2, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6500, 11} true;
  assume {:verifier.code 0} true;
  $p42 := $load.ref($M.1, $p41);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6500, 19} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($add.ref($p42, $mul.ref(0, 56)), $mul.ref(40, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6500, 34} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p43, $p0);
  $p44 := $add.ref($add.ref($add.ref($p2, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6501, 11} true;
  assume {:verifier.code 0} true;
  $p45 := $load.ref($M.1, $p44);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6501, 19} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p45, $mul.ref(0, 56)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6501, 28} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p46, ks8842_dma_rx_cb);
  $p47 := $add.ref($add.ref($add.ref($p2, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6502, 14} true;
  assume {:verifier.code 0} true;
  $p48 := $load.ref($M.1, $p47);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6502, 22} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($add.ref($p48, $mul.ref(0, 56)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6502, 22} true;
  assume {:verifier.code 0} true;
  $p50 := $load.ref($M.1, $p49);
  $p51 := $add.ref($add.ref($add.ref($p2, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6502, 39} true;
  assume {:verifier.code 0} true;
  $p52 := $load.ref($M.1, $p51);
  call $i53 := devirtbounce.3($p50, $p52);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6503, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6508, 3} true;
  assume {:verifier.code 0} true;
  $i55 := $i23;
  goto $bb11;
$bb11:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6523, 1} true;
  assume {:verifier.code 0} true;
  $r := $i55;
  $exn := false;
  return;
$bb12:
  assume ($i58 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6511, 37} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($add.ref($p2, $mul.ref(0, 416)), $mul.ref(224, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6511, 37} true;
  assume {:verifier.code 0} true;
  $p60 := $load.ref($M.1, $p59);
  $p61 := $add.ref($add.ref($add.ref($add.ref($p2, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(24, 1)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6511, 46} true;
  assume {:verifier.code 0} true;
  $i62 := $load.i64($M.1, $p61);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6511, 5} true;
  assume {:verifier.code 0} true;
  call dma_unmap_single_attrs($p60, $i62, 2048, 2, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6512, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !(($i58 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  $p63 := $add.ref($add.ref($add.ref($add.ref($p2, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(24, 1)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6514, 19} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i64($M.1, $p63, 0);
  $p64 := $add.ref($add.ref($add.ref($p2, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6515, 28} true;
  assume {:verifier.code 0} true;
  $p65 := $load.ref($M.1, $p64);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6515, 7} true;
  assume {:verifier.code 0} true;
  $i66 := $p2i.ref.i64($p65);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6515, 32} true;
  assume {:verifier.code 0} true;
  $i67 := $ne.i64($i66, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6515, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i67} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i67 == 1);
  $p68 := $add.ref($add.ref($add.ref($p2, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6516, 23} true;
  assume {:verifier.code 0} true;
  $p69 := $load.ref($M.1, $p68);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6516, 18} true;
  assume {:verifier.code 0} true;
  $p70 := $bitcast.ref.ref($p69);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6516, 5} true;
  assume {:verifier.code 0} true;
  call ldv_skb_free($p70);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6517, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i67 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  $p71 := $add.ref($add.ref($add.ref($p2, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6519, 12} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p71, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6520, 3} true;
  assume {:verifier.code 0} true;
  call $i72 := printk.ref.i32(.str.16, $i30);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6521, 3} true;
  assume {:verifier.code 0} true;
  $i55 := $i30;
  goto $bb11;
}
const ldv_netdev_alloc_skb_12: ref;
axiom (ldv_netdev_alloc_skb_12 == $sub.ref(0, 220689));
procedure  ldv_netdev_alloc_skb_12($p0: ref, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7953, 9} true;
  assume {:verifier.code 0} true;
  call {:cexpr "ldv_netdev_alloc_skb_12:arg:length"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7953, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := ldv_skb_alloc();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7953, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7954, 3} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const sg_init_table: ref;
axiom (sg_init_table == $sub.ref(0, 221721));
procedure  sg_init_table($p0: ref, $i1: i32)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8438, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "sg_init_table:arg:arg1"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8438, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const dma_map_single_attrs: ref;
axiom (dma_map_single_attrs == $sub.ref(0, 222753));
procedure  dma_map_single_attrs($p0: ref, $p1: ref, $i2: i64, $i3: i32, $p4: ref)
  returns ($r: i64)
{
  var $p5: ref;
  var $i6: i32;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i64;
  var $i11: i64;
  var $i12: i1;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $p16: ref;
  var $i17: i64;
  var $p18: ref;
  var $i19: i64;
  var $i20: i64;
  var $i21: i64;
  var $i22: i64;
  var $i23: i64;
  var $i24: i64;
  var $p25: ref;
  var $i26: i64;
  var $i27: i64;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5492, 9} true;
  assume {:verifier.code 0} true;
  call {:cexpr "dma_map_single_attrs:arg:size"} boogie_si_record_i64($i2);
  call {:cexpr "dma_map_single_attrs:arg:dir"} boogie_si_record_i32($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5492, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := get_dma_ops($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5494, 35} true;
  assume {:verifier.code 0} true;
  $i6 := $trunc.i64.i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5494, 3} true;
  assume {:verifier.code 0} true;
  call kmemcheck_mark_initialized($p1, $i6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5495, 13} true;
  assume {:verifier.code 0} true;
  call $i7 := valid_dma_direction($i3);
  call {:cexpr "tmp___0"} boogie_si_record_i32($i7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5496, 41} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i7, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5496, 41} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i1.i32($i8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5496, 33} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5496, 13} true;
  assume {:verifier.code 0} true;
  call $i11 := ldv__builtin_expect($i10, 0);
  call {:cexpr "tmp___1"} boogie_si_record_i64($i11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5497, 15} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i64($i11, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5497, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i12 == 1);
  call devirtbounce.4(0, .str.6, 19, 12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5498, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5501, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb4:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5504, 25} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5504, 13} true;
  assume {:verifier.code 0} true;
  call $i14 := __phys_addr($i13);
  call {:cexpr "tmp___2"} boogie_si_record_i64($i14);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5505, 18} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p5, $mul.ref(0, 128)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5505, 18} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.1, $p15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5505, 77} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:5505:77: warning: over-approximating bitwise operation lshr;
  $i17 := $lshr.i64($i14, 12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5505, 66} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($i2p.i64.ref($sub.i64(0, 24189255811072)), $mul.ref($i17, 64));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5506, 29} true;
  assume {:verifier.code 0} true;
  $i19 := $p2i.ref.i64($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5506, 49} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:5506:49: warning: over-approximating bitwise operation and;
  $i20 := $and.i64($i19, 4095);
  call $i21 := devirtbounce.5($p16, $p0, $p18, $i20, $i2, $i3, $p4);
  call {:cexpr "addr"} boogie_si_record_i64($i21);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5507, 25} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5507, 13} true;
  assume {:verifier.code 0} true;
  call $i23 := __phys_addr($i22);
  call {:cexpr "tmp___3"} boogie_si_record_i64($i23);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5508, 70} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:5508:70: warning: over-approximating bitwise operation lshr;
  $i24 := $lshr.i64($i23, 12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5508, 59} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($i2p.i64.ref($sub.i64(0, 24189255811072)), $mul.ref($i24, 64));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5508, 78} true;
  assume {:verifier.code 0} true;
  $i26 := $p2i.ref.i64($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5508, 98} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:5508:98: warning: over-approximating bitwise operation and;
  $i27 := $and.i64($i26, 4095);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5508, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_map_page($p0, $p25, $i27, $i2, $i3, $i21, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5510, 3} true;
  assume {:verifier.code 0} true;
  $r := $i21;
  $exn := false;
  return;
}
const dma_mapping_error: ref;
axiom (dma_mapping_error == $sub.ref(0, 223785));
procedure  dma_mapping_error($p0: ref, $i1: i64)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $i11: i1;
  var $i12: i32;
  var $i10: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5582, 9} true;
  assume {:verifier.code 0} true;
  call {:cexpr "dma_mapping_error:arg:dma_addr"} boogie_si_record_i64($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5582, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := get_dma_ops($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5584, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_mapping_error($p0, $i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5585, 28} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p2, $mul.ref(0, 128)), $mul.ref(96, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5585, 28} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.1, $p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5585, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5585, 42} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5585, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5587, 23} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p2, $mul.ref(0, 128)), $mul.ref(96, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5587, 23} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.1, $p7);
  call $i9 := devirtbounce.6($p8, $p0, $i1);
  call {:cexpr "tmp___0"} boogie_si_record_i32($i9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5588, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $i9;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5593, 1} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5591, 20} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i64($i1, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5591, 20} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i1.i32($i11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5591, 3} true;
  assume {:verifier.code 0} true;
  $i10 := $i12;
  goto $bb3;
}
const dmaengine_prep_slave_sg: ref;
axiom (dmaengine_prep_slave_sg == $sub.ref(0, 224817));
procedure  dmaengine_prep_slave_sg($p0: ref, $p1: ref, $i2: i32, $i3: i32, $i4: i64)
  returns ($r: ref)
{
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5432, 19} true;
  assume {:verifier.code 0} true;
  call {:cexpr "dmaengine_prep_slave_sg:arg:sg_len"} boogie_si_record_i32($i2);
  call {:cexpr "dmaengine_prep_slave_sg:arg:dir"} boogie_si_record_i32($i3);
  call {:cexpr "dmaengine_prep_slave_sg:arg:flags"} boogie_si_record_i64($i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5432, 19} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5432, 19} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.1, $p5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5432, 28} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p6, $mul.ref(0, 200)), $mul.ref(144, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5432, 28} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.1, $p7);
  call $p9 := devirtbounce.7($p8, $p0, $p1, $i2, $i3, $i4, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5433, 3} true;
  assume {:verifier.code 0} true;
  $r := $p9;
  $exn := false;
  return;
}
const ks8842_dma_rx_cb: ref;
axiom (ks8842_dma_rx_cb == $sub.ref(0, 225849));
procedure  ks8842_dma_rx_cb($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i24;
  var $i12: i24;
  var $i13: i24;
  var $p14: ref;
  var $p15: ref;
  var $i16: i8;
  var $i17: i64;
  var $i18: i64;
  var $i19: i64;
  var $i20: i1;
  var $i21: i32;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $i25: i64;
  var $i26: i1;
  var $p27: ref;
  var $p28: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6924, 12} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6924, 12} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6925, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := netdev_priv($p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6926, 13} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6927, 14} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6927, 22} true;
  assume {:verifier.code 0} true;
  $M.2 := $store.ref($M.2, $p5, .str);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6928, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6928, 23} true;
  assume {:verifier.code 0} true;
  $M.3 := $store.ref($M.3, $p6, .str.17);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6929, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6929, 23} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.ref($M.4, $p7, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6930, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6930, 21} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.ref($M.5, $p8, .str.18);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6931, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6931, 14} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6931, 21} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i24($M.6, $p10);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6931, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6931:21: warning: over-approximating bitwise operation and;
  $i12 := $and.i24($i11, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6931, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6931:21: warning: over-approximating bitwise operation or;
  $i13 := $or.i24($i12, 899);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6931, 21} true;
  assume {:verifier.code 0} true;
  $M.6 := $store.i24($M.6, $p10, $i13);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6932, 14} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6932, 20} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i8($M.7, $p14, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6933, 51} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6933, 51} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i8($M.7, $p15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6933, 33} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i64($i16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6933, 57} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6933:57: warning: over-approximating bitwise operation and;
  $i18 := $and.i64($i17, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6933, 13} true;
  assume {:verifier.code 0} true;
  call $i19 := ldv__builtin_expect($i18, 0);
  call {:cexpr "tmp___0"} boogie_si_record_i64($i19);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6934, 15} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i64($i19, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6934, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i20 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6935, 5} true;
  assume {:verifier.code 0} true;
  call $i21 := __dynamic_netdev_dbg.ref.ref.ref($p1, $p2, .str.18);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6936, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6938, 32} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(304, 1));
  $p23 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6938, 39} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.1, $p23);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6938, 7} true;
  assume {:verifier.code 0} true;
  $i25 := $p2i.ref.i64($p24);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6938, 45} true;
  assume {:verifier.code 0} true;
  $i26 := $ne.i64($i25, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6938, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i26 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6939, 33} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(304, 1));
  $p28 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6939, 5} true;
  assume {:verifier.code 0} true;
  call tasklet_schedule($p28);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6940, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i26 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6942, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const dma_unmap_single_attrs: ref;
axiom (dma_unmap_single_attrs == $sub.ref(0, 226881));
procedure  dma_unmap_single_attrs($p0: ref, $i1: i64, $i2: i64, $i3: i32, $p4: ref)
{
  var $p5: ref;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
  var $i9: i64;
  var $i10: i64;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $i15: i1;
  var $p16: ref;
  var $p17: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5522, 9} true;
  assume {:verifier.code 0} true;
  call {:cexpr "dma_unmap_single_attrs:arg:addr"} boogie_si_record_i64($i1);
  call {:cexpr "dma_unmap_single_attrs:arg:size"} boogie_si_record_i64($i2);
  call {:cexpr "dma_unmap_single_attrs:arg:dir"} boogie_si_record_i32($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5522, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := get_dma_ops($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5524, 13} true;
  assume {:verifier.code 0} true;
  call $i6 := valid_dma_direction($i3);
  call {:cexpr "tmp___0"} boogie_si_record_i32($i6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5525, 41} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i6, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5525, 41} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i1.i32($i7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5525, 33} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i32.i64($i8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5525, 13} true;
  assume {:verifier.code 0} true;
  call $i10 := ldv__builtin_expect($i9, 0);
  call {:cexpr "tmp___1"} boogie_si_record_i64($i10);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5526, 15} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i64($i10, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5526, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  call devirtbounce.4(0, .str.6, 36, 12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5527, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5530, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb4:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5533, 28} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p5, $mul.ref(0, 128)), $mul.ref(40, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5533, 28} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.1, $p12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5533, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i64($p13);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5533, 39} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i64($i14, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5533, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i15 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5537, 13} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p5, $mul.ref(0, 128)), $mul.ref(40, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5537, 13} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.1, $p16);
  call devirtbounce.8($p17, $p0, $i1, $i2, $i3, $p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5538, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5540, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_unmap_page($p0, $i1, $i2, $i3, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5541, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_skb_free: ref;
axiom (ldv_skb_free == $sub.ref(0, 227913));
procedure  ldv_skb_free($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8218, 18} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8218, 18} true;
  assume {:verifier.code 0} true;
  $p1 := $M.33;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8218, 28} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8218, 3} true;
  assume {:verifier.code 0} true;
  call ldv_set_remove($p1, $p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8219, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const get_dma_ops: ref;
axiom (get_dma_ops == $sub.ref(0, 228945));
procedure  get_dma_ops($p0: ref)
  returns ($r: ref)
{
  var $i1: i64;
  var $i2: i1;
  var $i3: i32;
  var $i4: i64;
  var $i5: i64;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $p12: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p13: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5472, 29} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5472, 29} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5472, 49} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i64($i1, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5472, 49} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5472, 29} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5472, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := ldv__builtin_expect($i4, 0);
  call {:cexpr "tmp"} boogie_si_record_i64($i5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5474, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5474, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5474, 17} true;
  assume {:verifier.code 0} true;
  assume ($i6 == 1);
  goto $bb2;
$bb2:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5475, 13} true;
  assume {:verifier.code 0} true;
  $p12 := $M.37;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5475, 5} true;
  assume {:verifier.code 0} true;
  $p13 := $p12;
  goto $bb6;
$bb3:
  assume !(($i6 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5474, 41} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p0, $mul.ref(0, 1424)), $mul.ref(1224, 1));
  $p8 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 1424)), $mul.ref(1224, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5474, 50} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.1, $p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5474, 20} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5474, 58} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i64($i10, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5474, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb4, $bb5;
$bb4:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5474, 7} true;
  assume {:verifier.code 0} true;
  assume ($i11 == 1);
  goto $bb2;
$bb5:
  assume !(($i11 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5477, 18} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p0, $mul.ref(0, 1424)), $mul.ref(1224, 1));
  $p15 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 1424)), $mul.ref(1224, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5477, 27} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.1, $p15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5477, 5} true;
  assume {:verifier.code 0} true;
  $p13 := $p16;
  goto $bb6;
$bb6:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5480, 1} true;
  assume {:verifier.code 0} true;
  $r := $p13;
  $exn := false;
  return;
}
const valid_dma_direction: ref;
axiom (valid_dma_direction == $sub.ref(0, 229977));
procedure  valid_dma_direction($i0: i32)
  returns ($r: i32)
{
  var $i1: i1;
  var $i3: i1;
  var $i4: i1;
  var $i2: i1;
  var $i5: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5457, 26} true;
  assume {:verifier.code 0} true;
  call {:cexpr "valid_dma_direction:arg:dma_direction"} boogie_si_record_i32($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5457, 26} true;
  assume {:verifier.code 0} true;
  $i1 := $eq.i32($i0, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5457, 31} true;
  assume {:verifier.code 0} true;
  $i2 := 1;
  assume {:branchcond $i1} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5457, 31} true;
  assume {:verifier.code 0} true;
  assume ($i1 == 1);
  goto $bb2;
$bb2:
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5457, 54} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i1.i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5457, 3} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
$bb3:
  assume !(($i1 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5457, 48} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i32($i0, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5457, 54} true;
  assume {:verifier.code 0} true;
  $i2 := 1;
  assume {:branchcond $i3} true;
  goto $bb4, $bb5;
$bb4:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5457, 54} true;
  assume {:verifier.code 0} true;
  assume ($i3 == 1);
  goto $bb2;
$bb5:
  assume !(($i3 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5457, 71} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i32($i0, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5457, 54} true;
  assume {:verifier.code 0} true;
  $i2 := $i4;
  goto $bb2;
}
const debug_dma_unmap_page: ref;
axiom (debug_dma_unmap_page == $sub.ref(0, 231009));
procedure  debug_dma_unmap_page($p0: ref, $i1: i64, $i2: i64, $i3: i32, $i4: i1)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8336, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "debug_dma_unmap_page:arg:arg1"} boogie_si_record_i64($i1);
  call {:cexpr "debug_dma_unmap_page:arg:arg2"} boogie_si_record_i64($i2);
  call {:cexpr "debug_dma_unmap_page:arg:arg3"} boogie_si_record_i32($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8336, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const debug_dma_mapping_error: ref;
axiom (debug_dma_mapping_error == $sub.ref(0, 232041));
procedure  debug_dma_mapping_error($p0: ref, $i1: i64)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8330, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "debug_dma_mapping_error:arg:arg1"} boogie_si_record_i64($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8330, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const kmemcheck_mark_initialized: ref;
axiom (kmemcheck_mark_initialized == $sub.ref(0, 233073));
procedure  kmemcheck_mark_initialized($p0: ref, $i1: i32)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5386, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "kmemcheck_mark_initialized:arg:n"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5386, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __phys_addr: ref;
axiom (__phys_addr == $sub.ref(0, 234105));
procedure  __phys_addr($i0: i64)
  returns ($r: i64)
{
  var $i1: i64;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8292, 10} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__phys_addr:arg:arg0"} boogie_si_record_i64($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8292, 10} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_ulong();
  call {:cexpr "smack:ext:__VERIFIER_nondet_ulong"} boogie_si_record_i64($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8292, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const debug_dma_map_page: ref;
axiom (debug_dma_map_page == $sub.ref(0, 235137));
procedure  debug_dma_map_page($p0: ref, $p1: ref, $i2: i64, $i3: i64, $i4: i32, $i5: i64, $i6: i1)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8327, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "debug_dma_map_page:arg:arg2"} boogie_si_record_i64($i2);
  call {:cexpr "debug_dma_map_page:arg:arg3"} boogie_si_record_i64($i3);
  call {:cexpr "debug_dma_map_page:arg:arg4"} boogie_si_record_i32($i4);
  call {:cexpr "debug_dma_map_page:arg:arg5"} boogie_si_record_i64($i5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8327, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_skb_alloc: ref;
axiom (ldv_skb_alloc == $sub.ref(0, 236169));
procedure  ldv_skb_alloc()
  returns ($r: ref)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $i3: i1;
  var $p5: ref;
  var $p6: ref;
  var $p4: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8198, 13} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8198, 13} true;
  assume {:verifier.code 0} true;
  call $p0 := ldv_zalloc(232);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8199, 9} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8199, 9} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8200, 9} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.ref($p2, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8200, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8203, 17} true;
  assume {:verifier.code 0} true;
  $p5 := $M.33;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8203, 5} true;
  assume {:verifier.code 0} true;
  call ldv_set_add($p5, $p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8204, 12} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8204, 5} true;
  assume {:verifier.code 0} true;
  $p4 := $p0;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8201, 5} true;
  assume {:verifier.code 0} true;
  $p4 := $0.ref;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8207, 1} true;
  assume {:verifier.code 0} true;
  $r := $p4;
  $exn := false;
  return;
}
const ldv_set_add: ref;
axiom (ldv_set_add == $sub.ref(0, 237201));
procedure  ldv_set_add($p0: ref, $p1: ref)
{
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $i10: i1;
  var $i11: i32;
  var $i12: i32;
  var $i13: i1;
  var $i14: i32;
  var $i15: i1;
  var $i16: i32;
  var $i17: i64;
  var $p18: ref;
  var $i19: i32;
  var $i20: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8075, 13} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8075, 13} true;
  assume {:verifier.code 0} true;
  $i2 := $M.35;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8075, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $slt.i32(0, $i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8075, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8075, 9} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  goto $bb4;
$bb2:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8075, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8077, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8076, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8079, 25} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i32.i64($i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8079, 25} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref($i5, 8));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8079, 25} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.36, $p6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8079, 9} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8079, 40} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8079, 37} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i64($i8, $i9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8079, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb8, $bb9;
$bb6:
  assume !(($i13 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8075, 9} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb7:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8085, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $M.35;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8085, 18} true;
  assume {:verifier.code 0} true;
  $i15 := $slt.i32($i14, 15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8085, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb13, $bb14;
$bb8:
  assume ($i10 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8080, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8092, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb11:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8083, 11} true;
  assume {:verifier.code 0} true;
  $i11 := $add.i32($i4, 1);
  call {:cexpr "i"} boogie_si_record_i32($i11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8075, 13} true;
  assume {:verifier.code 0} true;
  $i12 := $M.35;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8075, 11} true;
  assume {:verifier.code 0} true;
  $i13 := $slt.i32($i11, $i12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8075, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb12, $bb6;
$bb12:
  assume ($i13 == 1);
  assume {:verifier.code 0} true;
  $i4 := $i11;
  goto $bb4;
$bb13:
  assume ($i15 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8086, 14} true;
  assume {:verifier.code 0} true;
  $i16 := $M.35;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8086, 5} true;
  assume {:verifier.code 0} true;
  $i17 := $sext.i32.i64($i16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8086, 5} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref($i17, 8));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8086, 26} true;
  assume {:verifier.code 0} true;
  $M.36 := $store.ref($M.36, $p18, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8087, 18} true;
  assume {:verifier.code 0} true;
  $i19 := $M.35;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8087, 29} true;
  assume {:verifier.code 0} true;
  $i20 := $add.i32($i19, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8087, 16} true;
  assume {:verifier.code 0} true;
  $M.35 := $i20;
  call {:cexpr "last_index"} boogie_si_record_i32($i20);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8088, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8090, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
}
const ks8842_write8: ref;
axiom (ks8842_write8 == $sub.ref(0, 238233));
procedure  ks8842_write8($p0: ref, $i1: i16, $i2: i8, $i3: i32)
{
  var $i4: i32;
  var $i5: i16;
  var $i6: i32;
  var $i7: i8;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $p11: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6022, 31} true;
  assume {:verifier.code 0} true;
  call {:cexpr "ks8842_write8:arg:bank"} boogie_si_record_i16($i1);
  call {:cexpr "ks8842_write8:arg:value"} boogie_si_record_i8($i2);
  call {:cexpr "ks8842_write8:arg:offset"} boogie_si_record_i32($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6022, 31} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i16.i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6022, 31} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i16($i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6022, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_select_bank($p0, $i5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6023, 12} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i8.i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6023, 12} true;
  assume {:verifier.code 0} true;
  $i7 := $trunc.i32.i8($i6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6023, 34} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6023, 34} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.1, $p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6023, 44} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6023, 42} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p9, $mul.ref($i10, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6023, 3} true;
  assume {:verifier.code 0} true;
  call iowrite8($i7, $p11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6024, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const iowrite8: ref;
axiom (iowrite8 == $sub.ref(0, 239265));
procedure  iowrite8($i0: i8, $p1: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8388, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "iowrite8:arg:arg0"} boogie_si_record_i8($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8388, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ks8842_reset: ref;
axiom (ks8842_reset == $sub.ref(0, 240297));
procedure  ks8842_reset($p0: ref)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i32;
  var $i4: i32;
  var $i5: i1;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6103, 22} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6103, 22} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6103, 22} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i64($M.1, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6103, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $trunc.i64.i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6103, 33} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6103:33: warning: over-approximating bitwise operation and;
  $i4 := $and.i32($i3, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6103, 33} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6103, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6104, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p0, 3, 1, 6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6105, 5} true;
  assume {:verifier.code 0} true;
  call msleep(10);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6106, 27} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6106, 27} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.1, $p6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6106, 35} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p7, $mul.ref(6, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6106, 5} true;
  assume {:verifier.code 0} true;
  call iowrite16(0, $p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6107, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6108, 28} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6108, 28} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.1, $p9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6108, 36} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p10, $mul.ref(28, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6108, 5} true;
  assume {:verifier.code 0} true;
  call iowrite32(1, $p11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6109, 5} true;
  assume {:verifier.code 0} true;
  call msleep(20);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6111, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const msleep: ref;
axiom (msleep == $sub.ref(0, 241329));
procedure  msleep($i0: i32)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8402, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "msleep:arg:arg0"} boogie_si_record_i32($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8402, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv___platform_driver_register_21: ref;
axiom (ldv___platform_driver_register_21 == $sub.ref(0, 242361));
procedure  ldv___platform_driver_register_21($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8041, 9} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8041, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := __platform_driver_register($p0, $p1);
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8043, 24} true;
  assume {:verifier.code 0} true;
  $M.28 := 1;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8044, 3} true;
  assume {:verifier.code 0} true;
  call ldv_initialize_platform_driver_2();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8045, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const __platform_driver_register: ref;
axiom (__platform_driver_register == $sub.ref(0, 243393));
procedure  __platform_driver_register($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8296, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8296, 10} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8296, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const ldv_platform_driver_unregister_22: ref;
axiom (ldv_platform_driver_unregister_22 == $sub.ref(0, 244425));
procedure  ldv_platform_driver_unregister_22($p0: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8051, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8051, 3} true;
  assume {:verifier.code 0} true;
  call platform_driver_unregister($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8052, 24} true;
  assume {:verifier.code 0} true;
  $M.28 := 0;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8053, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const platform_driver_unregister: ref;
axiom (platform_driver_unregister == $sub.ref(0, 245457));
procedure  platform_driver_unregister($p0: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8411, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8411, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const schedule_work: ref;
axiom (schedule_work == $sub.ref(0, 246489));
procedure  schedule_work($p0: ref)
  returns ($r: i1)
{
  var $p1: ref;
  var $i2: i1;
  var $i3: i8;
  var $i4: i1;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5363, 20} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5363, 20} true;
  assume {:verifier.code 0} true;
  $p1 := $M.38;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5363, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := queue_work($p1, $p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5363, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i8($i2);
  call {:cexpr "tmp"} boogie_si_record_i8($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5364, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.i8.i1($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5364, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const queue_work: ref;
axiom (queue_work == $sub.ref(0, 247521));
procedure  queue_work($p0: ref, $p1: ref)
  returns ($r: i1)
{
  var $i2: i1;
  var $i3: i8;
  var $i4: i1;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5355, 9} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5355, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := queue_work_on(8192, $p0, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5355, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i8($i2);
  call {:cexpr "tmp"} boogie_si_record_i8($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5356, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.i8.i1($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5356, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const queue_work_on: ref;
axiom (queue_work_on == $sub.ref(0, 248553));
procedure  queue_work_on($i0: i32, $p1: ref, $p2: ref)
  returns ($r: i1)
{
  var $i3: i1;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8427, 10} true;
  assume {:verifier.code 1} true;
  call {:cexpr "queue_work_on:arg:arg0"} boogie_si_record_i32($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8427, 10} true;
  assume {:verifier.code 1} true;
  call $i3 := __VERIFIER_nondet_bool();
  call {:cexpr "smack:ext:__VERIFIER_nondet_bool"} boogie_si_record_i1($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8427, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const ks8842_tx_frame_dma: ref;
axiom (ks8842_tx_frame_dma == $sub.ref(0, 249585));
procedure  ks8842_tx_frame_dma($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i24;
  var $i19: i24;
  var $i20: i24;
  var $p21: ref;
  var $p22: ref;
  var $i23: i8;
  var $i24: i64;
  var $i25: i64;
  var $i26: i64;
  var $i27: i1;
  var $i28: i32;
  var $p30: ref;
  var $i31: i32;
  var $i32: i32;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $i36: i64;
  var $p37: ref;
  var $i38: i64;
  var $p39: ref;
  var $p40: ref;
  var $i41: i32;
  var $i42: i8;
  var $i43: i64;
  var $p44: ref;
  var $p45: ref;
  var $i46: i32;
  var $i47: i32;
  var $i48: i8;
  var $p49: ref;
  var $i50: i32;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $i55: i64;
  var $p56: ref;
  var $p57: ref;
  var $i58: i32;
  var $i59: i64;
  var $p60: ref;
  var $p61: ref;
  var $i62: i32;
  var $i63: i32;
  var $i64: i1;
  var $p65: ref;
  var $p66: ref;
  var $i67: i32;
  var $i68: i32;
  var $i69: i32;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $i79: i64;
  var $i80: i1;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $i94: i32;
  var $p95: ref;
  var $p96: ref;
  var $i97: i64;
  var $p98: ref;
  var $i99: i32;
  var $i100: i64;
  var $i101: i64;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $i29: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6278, 9} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6278, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := netdev_priv($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6279, 13} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6280, 20} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1));
  $p6 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6281, 20} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.1, $p6);
  $p8 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6282, 28} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.1, $p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6282, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6282, 34} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i64($i10, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6282, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6283, 16} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6283, 24} true;
  assume {:verifier.code 0} true;
  $M.2 := $store.ref($M.2, $p12, .str);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6284, 16} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6284, 25} true;
  assume {:verifier.code 0} true;
  $M.3 := $store.ref($M.3, $p13, .str.23);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6285, 16} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6285, 25} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.ref($M.4, $p14, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6286, 16} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6286, 23} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.ref($M.5, $p15, .str.24);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6287, 16} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6287, 16} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6287, 23} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i24($M.6, $p17);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6287, 23} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6287:23: warning: over-approximating bitwise operation and;
  $i19 := $and.i24($i18, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6287, 23} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6287:23: warning: over-approximating bitwise operation or;
  $i20 := $or.i24($i19, 490);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6287, 23} true;
  assume {:verifier.code 0} true;
  $M.6 := $store.i24($M.6, $p17, $i20);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6288, 16} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6288, 22} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i8($M.7, $p21, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6289, 53} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6289, 53} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i8($M.7, $p22);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6289, 35} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i8.i64($i23);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6289, 59} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6289:59: warning: over-approximating bitwise operation and;
  $i25 := $and.i64($i24, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6289, 15} true;
  assume {:verifier.code 0} true;
  call $i26 := ldv__builtin_expect($i25, 0);
  call {:cexpr "tmp___0"} boogie_si_record_i64($i26);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6290, 17} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i64($i26, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6290, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb3:
  assume ($i27 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6291, 7} true;
  assume {:verifier.code 0} true;
  call $i28 := __dynamic_netdev_dbg.ref.ref.ref.ref($p2, $p1, .str.24, .str.23);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6293, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6295, 5} true;
  assume {:verifier.code 0} true;
  $i29 := 16;
  goto $bb6;
$bb6:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6330, 1} true;
  assume {:verifier.code 0} true;
  $r := $i29;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6298, 29} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p0, $mul.ref(0, 232)), $mul.ref(104, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6298, 29} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i32($M.1, $p30);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6298, 33} true;
  assume {:verifier.code 0} true;
  $i32 := $add.i32($i31, 4);
  $p33 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(24, 1));
  $p34 := $add.ref($add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(24, 1)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6298, 22} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i32($M.1, $p34, $i32);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6300, 13} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p7, $mul.ref(1, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6301, 12} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i8($M.1, $p7, 0);
  $i36 := $add.i64(1, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6303, 13} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p7, $mul.ref($i36, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6304, 12} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i8($M.1, $p35, 1);
  $i38 := $add.i64($i36, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6306, 13} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p7, $mul.ref($i38, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6307, 24} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p0, $mul.ref(0, 232)), $mul.ref(104, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6307, 24} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i32($M.1, $p40);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6307, 14} true;
  assume {:verifier.code 0} true;
  $i42 := $trunc.i32.i8($i41);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6307, 12} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i8($M.1, $p37, $i42);
  $i43 := $add.i64($i38, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6309, 13} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p7, $mul.ref($i43, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6310, 25} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($add.ref($p0, $mul.ref(0, 232)), $mul.ref(104, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6310, 25} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i32($M.1, $p45);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6310, 29} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6310:29: warning: over-approximating bitwise operation lshr;
  $i47 := $lshr.i32($i46, 8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6310, 14} true;
  assume {:verifier.code 0} true;
  $i48 := $trunc.i32.i8($i47);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6310, 12} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i8($M.1, $p39, $i48);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6311, 76} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($add.ref($p0, $mul.ref(0, 232)), $mul.ref(104, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6311, 76} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i32($M.1, $p49);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6311, 3} true;
  assume {:verifier.code 0} true;
  call skb_copy_from_linear_data($p0, $p44, $i50);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6312, 45} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(224, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6312, 45} true;
  assume {:verifier.code 0} true;
  $p52 := $load.ref($M.1, $p51);
  $p53 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(24, 1));
  $p54 := $add.ref($add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(24, 1)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6312, 58} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i64($M.1, $p54);
  $p56 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(24, 1));
  $p57 := $add.ref($add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(24, 1)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6312, 93} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i32($M.1, $p57);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6312, 76} true;
  assume {:verifier.code 0} true;
  $i59 := $zext.i32.i64($i58);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6312, 3} true;
  assume {:verifier.code 0} true;
  call dma_sync_single_range_for_device($p52, $i55, 0, $i59, 1);
  $p60 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(24, 1));
  $p61 := $add.ref($add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(24, 1)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6314, 16} true;
  assume {:verifier.code 0} true;
  $i62 := $load.i32($M.1, $p61);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6314, 27} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6314:27: warning: over-approximating bitwise operation and;
  $i63 := $and.i32($i62, 3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6314, 33} true;
  assume {:verifier.code 0} true;
  $i64 := $ne.i32($i63, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6314, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i64} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i64 == 1);
  $p65 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(24, 1));
  $p66 := $add.ref($add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(24, 1)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6315, 35} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i32($M.1, $p66);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6315, 46} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6315:46: warning: over-approximating bitwise operation and;
  $i68 := $and.i32($i67, $sub.i32(0, 4));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6315, 61} true;
  assume {:verifier.code 0} true;
  $i69 := $add.i32($i68, 4);
  $p70 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(24, 1));
  $p71 := $add.ref($add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(24, 1)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6315, 24} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i32($M.1, $p71, $i69);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6316, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i64 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  $p72 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6318, 45} true;
  assume {:verifier.code 0} true;
  $p73 := $load.ref($M.1, $p72);
  $p74 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6318, 16} true;
  assume {:verifier.code 0} true;
  call $p75 := dmaengine_prep_slave_sg($p73, $p74, 1, 1, 1);
  $p76 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6318, 14} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p76, $p75);
  $p77 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6319, 28} true;
  assume {:verifier.code 0} true;
  $p78 := $load.ref($M.1, $p77);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6319, 7} true;
  assume {:verifier.code 0} true;
  $i79 := $p2i.ref.i64($p78);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6319, 34} true;
  assume {:verifier.code 0} true;
  $i80 := $eq.i64($i79, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6319, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i80} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i80 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6320, 5} true;
  assume {:verifier.code 0} true;
  $i29 := 16;
  goto $bb6;
$bb12:
  assume !(($i80 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6323, 34} true;
  assume {:verifier.code 0} true;
  $p81 := $bitcast.ref.ref($p1);
  $p82 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6323, 9} true;
  assume {:verifier.code 0} true;
  $p83 := $load.ref($M.1, $p82);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6323, 17} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($add.ref($p83, $mul.ref(0, 56)), $mul.ref(40, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6323, 32} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p84, $p1);
  $p85 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6324, 9} true;
  assume {:verifier.code 0} true;
  $p86 := $load.ref($M.1, $p85);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6324, 17} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($add.ref($p86, $mul.ref(0, 56)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6324, 26} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p87, ks8842_dma_tx_cb);
  $p88 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6325, 12} true;
  assume {:verifier.code 0} true;
  $p89 := $load.ref($M.1, $p88);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6325, 20} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($add.ref($p89, $mul.ref(0, 56)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6325, 20} true;
  assume {:verifier.code 0} true;
  $p91 := $load.ref($M.1, $p90);
  $p92 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6325, 37} true;
  assume {:verifier.code 0} true;
  $p93 := $load.ref($M.1, $p92);
  call $i94 := devirtbounce.3($p91, $p93);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6326, 36} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($add.ref($p1, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p96 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6326, 42} true;
  assume {:verifier.code 0} true;
  $i97 := $load.i64($M.1, $p96);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6326, 74} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($add.ref($p0, $mul.ref(0, 232)), $mul.ref(104, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6326, 74} true;
  assume {:verifier.code 0} true;
  $i99 := $load.i32($M.1, $p98);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6326, 53} true;
  assume {:verifier.code 0} true;
  $i100 := $zext.i32.i64($i99);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6326, 51} true;
  assume {:verifier.code 0} true;
  $i101 := $add.i64($i97, $i100);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6326, 11} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($add.ref($p1, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p103 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6326, 26} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i64($M.1, $p103, $i101);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6327, 16} true;
  assume {:verifier.code 0} true;
  $p104 := $bitcast.ref.ref($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6327, 3} true;
  assume {:verifier.code 0} true;
  call ldv_skb_free($p104);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6328, 3} true;
  assume {:verifier.code 0} true;
  $i29 := 0;
  goto $bb6;
}
const ks8842_tx_frame: ref;
axiom (ks8842_tx_frame == $sub.ref(0, 250617));
procedure  ks8842_tx_frame($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i24;
  var $i14: i24;
  var $i15: i24;
  var $p16: ref;
  var $p17: ref;
  var $i18: i8;
  var $i19: i64;
  var $i20: i64;
  var $i21: i64;
  var $i22: i1;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i32;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i32;
  var $i32: i16;
  var $i33: i32;
  var $i34: i32;
  var $i35: i1;
  var $p37: ref;
  var $i38: i64;
  var $i39: i64;
  var $i40: i1;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $i44: i16;
  var $i45: i32;
  var $i46: i16;
  var $p47: ref;
  var $p48: ref;
  var $i49: i64;
  var $i50: i64;
  var $i51: i64;
  var $p52: ref;
  var $p53: ref;
  var $i54: i1;
  var $p57: ref;
  var $i58: i16;
  var $i59: i32;
  var $i60: i16;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $i64: i64;
  var $p65: ref;
  var $i66: i16;
  var $i67: i32;
  var $i68: i16;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $i72: i32;
  var $i73: i1;
  var $p55: ref;
  var $i56: i32;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $i77: i32;
  var $i78: i32;
  var $p79: ref;
  var $p80: ref;
  var $i81: i64;
  var $i82: i64;
  var $i83: i64;
  var $p84: ref;
  var $p85: ref;
  var $i86: i1;
  var $i89: i32;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $i93: i32;
  var $p94: ref;
  var $i95: i1;
  var $p87: ref;
  var $i88: i32;
  var $p96: ref;
  var $i36: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6347, 9} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6347, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := netdev_priv($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6348, 13} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6349, 20} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p0, $mul.ref(0, 232)), $mul.ref(104, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6349, 20} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.1, $p5);
  call {:cexpr "len"} boogie_si_record_i32($i6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6350, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6350, 22} true;
  assume {:verifier.code 0} true;
  $M.2 := $store.ref($M.2, $p7, .str);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6351, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6351, 23} true;
  assume {:verifier.code 0} true;
  $M.3 := $store.ref($M.3, $p8, .str.27);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6352, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6352, 23} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.ref($M.4, $p9, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6353, 14} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6353, 21} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.ref($M.5, $p10, .str.28);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6354, 14} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6354, 14} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6354, 21} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i24($M.6, $p12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6354, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6354:21: warning: over-approximating bitwise operation and;
  $i14 := $and.i24($i13, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6354, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6354:21: warning: over-approximating bitwise operation or;
  $i15 := $or.i24($i14, 536);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6354, 21} true;
  assume {:verifier.code 0} true;
  $M.6 := $store.i24($M.6, $p12, $i15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6355, 14} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6355, 20} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i8($M.7, $p16, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6356, 51} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6356, 51} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i8($M.7, $p17);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6356, 33} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i8.i64($i18);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6356, 57} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6356:57: warning: over-approximating bitwise operation and;
  $i20 := $and.i64($i19, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6356, 13} true;
  assume {:verifier.code 0} true;
  call $i21 := ldv__builtin_expect($i20, 0);
  call {:cexpr "tmp___2"} boogie_si_record_i64($i21);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6357, 15} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i64($i21, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6357, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i22 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6358, 15} true;
  assume {:verifier.code 0} true;
  call $p23 := skb_end_pointer($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6359, 15} true;
  assume {:verifier.code 0} true;
  call $p24 := skb_tail_pointer($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6361, 50} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p0, $mul.ref(0, 232)), $mul.ref(104, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6361, 50} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i32($M.1, $p25);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6361, 60} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p0, $mul.ref(0, 232)), $mul.ref(208, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6361, 60} true;
  assume {:verifier.code 0} true;
  $p28 := $load.ref($M.1, $p27);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6361, 71} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p0, $mul.ref(0, 232)), $mul.ref(216, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6361, 71} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.1, $p29);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6360, 5} true;
  assume {:verifier.code 0} true;
  call $i31 := __dynamic_netdev_dbg.ref.ref.ref.ref.i32.ref.ref.ref.ref($p2, $p1, .str.28, .str.27, $i26, $p28, $p30, $p24, $p23);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6363, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6365, 13} true;
  assume {:verifier.code 0} true;
  call $i32 := ks8842_tx_fifo_space($p4);
  call {:cexpr "tmp___3"} boogie_si_record_i16($i32);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6366, 7} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i16.i32($i32);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6366, 27} true;
  assume {:verifier.code 0} true;
  $i34 := $add.i32($i6, 8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6366, 21} true;
  assume {:verifier.code 0} true;
  $i35 := $slt.i32($i33, $i34);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6366, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i35 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6367, 5} true;
  assume {:verifier.code 0} true;
  $i36 := 16;
  goto $bb6;
$bb5:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6409, 1} true;
  assume {:verifier.code 0} true;
  $r := $i36;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6370, 17} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6370, 17} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i64($M.1, $p37);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6370, 28} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6370:28: warning: over-approximating bitwise operation and;
  $i39 := $and.i64($i38, 2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6370, 35} true;
  assume {:verifier.code 0} true;
  $i40 := $ne.i64($i39, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6370, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i40 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6371, 25} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($add.ref($p0, $mul.ref(0, 232)), $mul.ref(216, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6371, 25} true;
  assume {:verifier.code 0} true;
  $p42 := $load.ref($M.1, $p41);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6371, 13} true;
  assume {:verifier.code 0} true;
  $p43 := $bitcast.ref.ref($p42);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6372, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p4, 17, $sub.i16(0, 32512), 8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6373, 40} true;
  assume {:verifier.code 0} true;
  $i44 := $trunc.i32.i16($i6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6373, 33} true;
  assume {:verifier.code 0} true;
  $i45 := $zext.i16.i32($i44);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6373, 33} true;
  assume {:verifier.code 0} true;
  $i46 := $trunc.i32.i16($i45);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6373, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p4, 17, $i46, 10);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6374, 38} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($add.ref($p1, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p48 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6374, 44} true;
  assume {:verifier.code 0} true;
  $i49 := $load.i64($M.1, $p48);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6374, 55} true;
  assume {:verifier.code 0} true;
  $i50 := $sext.i32.i64($i6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6374, 53} true;
  assume {:verifier.code 0} true;
  $i51 := $add.i64($i49, $i50);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6374, 13} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($add.ref($p1, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p53 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6374, 28} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i64($M.1, $p53, $i51);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6385, 13} true;
  assume {:verifier.code 0} true;
  $i54 := $sgt.i32($i6, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6385, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb10, $bb11;
$bb9:
  assume !(($i40 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6390, 23} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($add.ref($p0, $mul.ref(0, 232)), $mul.ref(216, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6390, 23} true;
  assume {:verifier.code 0} true;
  $p75 := $load.ref($M.1, $p74);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6390, 11} true;
  assume {:verifier.code 0} true;
  $p76 := $bitcast.ref.ref($p75);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6391, 24} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6391:24: warning: over-approximating bitwise operation shl;
  $i77 := $shl.i32($i6, 16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6391, 31} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6391:31: warning: over-approximating bitwise operation or;
  $i78 := $or.i32($i77, 33024);
  call {:cexpr "ctrl"} boogie_si_record_i32($i78);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6392, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_write32($p4, 17, $i78, 8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6393, 38} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($add.ref($p1, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p80 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6393, 44} true;
  assume {:verifier.code 0} true;
  $i81 := $load.i64($M.1, $p80);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6393, 55} true;
  assume {:verifier.code 0} true;
  $i82 := $sext.i32.i64($i6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6393, 53} true;
  assume {:verifier.code 0} true;
  $i83 := $add.i64($i81, $i82);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6393, 13} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($add.ref($p1, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p85 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6393, 28} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i64($M.1, $p85, $i83);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6400, 13} true;
  assume {:verifier.code 0} true;
  $i86 := $sgt.i32($i6, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6400, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i86} true;
  goto $bb19, $bb20;
$bb10:
  assume ($i54 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6385, 9} true;
  assume {:verifier.code 0} true;
  $p55, $i56 := $p42, $i6;
  goto $bb13;
$bb11:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6385, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i54 == 1));
  goto $bb12;
$bb12:
  assume {:verifier.code 0} true;
  goto $bb17;
$bb13:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6386, 7} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6378, 19} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p55, $mul.ref(1, 2));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6379, 21} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i16($M.1, $p55);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6379, 15} true;
  assume {:verifier.code 0} true;
  $i59 := $zext.i16.i32($i58);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6379, 15} true;
  assume {:verifier.code 0} true;
  $i60 := $trunc.i32.i16($i59);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6379, 40} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6379, 40} true;
  assume {:verifier.code 0} true;
  $p62 := $load.ref($M.1, $p61);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6379, 48} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p62, $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6379, 5} true;
  assume {:verifier.code 0} true;
  call iowrite16($i60, $p63);
  $i64 := $add.i64(1, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6381, 19} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p55, $mul.ref($i64, 2));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6382, 21} true;
  assume {:verifier.code 0} true;
  $i66 := $load.i16($M.1, $p57);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6382, 15} true;
  assume {:verifier.code 0} true;
  $i67 := $zext.i16.i32($i66);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6382, 15} true;
  assume {:verifier.code 0} true;
  $i68 := $trunc.i32.i16($i67);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6382, 40} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6382, 40} true;
  assume {:verifier.code 0} true;
  $p70 := $load.ref($M.1, $p69);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6382, 48} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p70, $mul.ref(10, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6382, 5} true;
  assume {:verifier.code 0} true;
  call iowrite16($i68, $p71);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6383, 37} true;
  assume {:verifier.code 0} true;
  $i72 := $sub.i32($i56, 4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6385, 13} true;
  assume {:verifier.code 0} true;
  $i73 := $sgt.i32($i72, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6385, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i73} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i73 == 1);
  assume {:verifier.code 0} true;
  $p55, $i56 := $p65, $i72;
  goto $bb13;
$bb16:
  assume !(($i73 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6385, 9} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb17:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6389, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6405, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_write16($p4, 17, 1, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6406, 16} true;
  assume {:verifier.code 0} true;
  $p96 := $bitcast.ref.ref($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6406, 3} true;
  assume {:verifier.code 0} true;
  call ldv_skb_free($p96);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6407, 3} true;
  assume {:verifier.code 0} true;
  $i36 := 0;
  goto $bb6;
$bb19:
  assume ($i86 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6400, 9} true;
  assume {:verifier.code 0} true;
  $p87, $i88 := $p75, $i6;
  goto $bb22;
$bb20:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6400, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i86 == 1));
  goto $bb21;
$bb21:
  assume {:verifier.code 0} true;
  goto $bb26;
$bb22:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6401, 7} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6396, 15} true;
  assume {:verifier.code 0} true;
  $i89 := $load.i32($M.1, $p87);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6396, 30} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6396, 30} true;
  assume {:verifier.code 0} true;
  $p91 := $load.ref($M.1, $p90);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6396, 38} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p91, $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6396, 5} true;
  assume {:verifier.code 0} true;
  call iowrite32($i89, $p92);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6397, 37} true;
  assume {:verifier.code 0} true;
  $i93 := $sub.i32($i88, 4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6398, 15} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p87, $mul.ref(1, 4));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6400, 13} true;
  assume {:verifier.code 0} true;
  $i95 := $sgt.i32($i93, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6400, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i95} true;
  goto $bb24, $bb25;
$bb24:
  assume ($i95 == 1);
  assume {:verifier.code 0} true;
  $p87, $i88 := $p94, $i93;
  goto $bb22;
$bb25:
  assume !(($i95 == 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6400, 9} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb26:
  assume {:verifier.code 0} true;
  goto $bb18;
}
const ks8842_tx_fifo_space: ref;
axiom (ks8842_tx_fifo_space == $sub.ref(0, 251649));
procedure  ks8842_tx_fifo_space($p0: ref)
  returns ($r: i16)
{
  var $i1: i16;
  var $i2: i32;
  var $i3: i32;
  var $i4: i16;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6261, 9} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6261, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := ks8842_read16($p0, 16, 8);
  call {:cexpr "tmp"} boogie_si_record_i16($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6262, 11} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i16.i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6262, 30} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6262:30: warning: over-approximating bitwise operation and;
  $i3 := $and.i32($i2, 8191);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6262, 10} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.i32.i16($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6262, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const skb_end_pointer: ref;
axiom (skb_end_pointer == $sub.ref(0, 252681));
procedure  skb_end_pointer($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i64;
  var $p6: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5602, 33} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5602, 33} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 232)), $mul.ref(208, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5602, 33} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.1, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5602, 61} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p0, $mul.ref(0, 232)), $mul.ref(204, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5602, 61} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.1, $p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5602, 40} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i32.i64($i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5602, 38} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p2, $mul.ref($i5, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5602, 3} true;
  assume {:verifier.code 0} true;
  $r := $p6;
  $exn := false;
  return;
}
const skb_tail_pointer: ref;
axiom (skb_tail_pointer == $sub.ref(0, 253713));
procedure  skb_tail_pointer($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i64;
  var $p6: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5608, 33} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5608, 33} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 232)), $mul.ref(208, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5608, 33} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.1, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5608, 61} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p0, $mul.ref(0, 232)), $mul.ref(200, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5608, 61} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.1, $p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5608, 40} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i32.i64($i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5608, 38} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p2, $mul.ref($i5, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5608, 3} true;
  assume {:verifier.code 0} true;
  $r := $p6;
  $exn := false;
  return;
}
const ks8842_write32: ref;
axiom (ks8842_write32 == $sub.ref(0, 254745));
procedure  ks8842_write32($p0: ref, $i1: i16, $i2: i32, $i3: i32)
{
  var $i4: i32;
  var $i5: i16;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $p9: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6068, 31} true;
  assume {:verifier.code 0} true;
  call {:cexpr "ks8842_write32:arg:bank"} boogie_si_record_i16($i1);
  call {:cexpr "ks8842_write32:arg:value"} boogie_si_record_i32($i2);
  call {:cexpr "ks8842_write32:arg:offset"} boogie_si_record_i32($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6068, 31} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i16.i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6068, 31} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i16($i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6068, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_select_bank($p0, $i5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6069, 29} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6069, 29} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.1, $p6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6069, 39} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6069, 37} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p7, $mul.ref($i8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6069, 3} true;
  assume {:verifier.code 0} true;
  call iowrite32($i2, $p9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6070, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const skb_copy_from_linear_data: ref;
axiom (skb_copy_from_linear_data == $sub.ref(0, 255777));
procedure  skb_copy_from_linear_data($p0: ref, $p1: ref, $i2: i32)
{
  var $i3: i64;
  var $p4: ref;
  var $p5: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5650, 11} true;
  assume {:verifier.code 0} true;
  call {:cexpr "skb_copy_from_linear_data:arg:len"} boogie_si_record_i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5650, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i32.i64($i2);
  call {:cexpr "__len"} boogie_si_record_i64($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5651, 41} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p0, $mul.ref(0, 232)), $mul.ref(216, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5651, 41} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.1, $p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5651, 11} true;
  assume {:verifier.code 0} true;
  call $M.1 := $memcpy.i8($M.1, $M.1, $p1, $p5, $i3, false);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5652, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const dma_sync_single_range_for_device: ref;
axiom (dma_sync_single_range_for_device == $sub.ref(0, 256809));
procedure  dma_sync_single_range_for_device($p0: ref, $i1: i64, $i2: i64, $i3: i64, $i4: i32)
{
  var $p5: ref;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
  var $i9: i64;
  var $i10: i64;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $i15: i1;
  var $p16: ref;
  var $p17: ref;
  var $i18: i64;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5553, 9} true;
  assume {:verifier.code 0} true;
  call {:cexpr "dma_sync_single_range_for_device:arg:addr"} boogie_si_record_i64($i1);
  call {:cexpr "dma_sync_single_range_for_device:arg:offset"} boogie_si_record_i64($i2);
  call {:cexpr "dma_sync_single_range_for_device:arg:size"} boogie_si_record_i64($i3);
  call {:cexpr "dma_sync_single_range_for_device:arg:dir"} boogie_si_record_i32($i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5553, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := get_dma_ops($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5555, 13} true;
  assume {:verifier.code 0} true;
  call $i6 := valid_dma_direction($i4);
  call {:cexpr "tmp___0"} boogie_si_record_i32($i6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5556, 41} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i6, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5556, 41} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i1.i32($i7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5556, 33} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i32.i64($i8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5556, 13} true;
  assume {:verifier.code 0} true;
  call $i10 := ldv__builtin_expect($i9, 0);
  call {:cexpr "tmp___1"} boogie_si_record_i64($i10);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5557, 15} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i64($i10, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5557, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  call devirtbounce.4(0, .str.6, 143, 12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5558, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5561, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb4:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5564, 28} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p5, $mul.ref(0, 128)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5564, 28} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.1, $p12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5564, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i64($p13);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5564, 51} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i64($i14, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5564, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i15 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5568, 13} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p5, $mul.ref(0, 128)), $mul.ref(72, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5568, 13} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.1, $p16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5568, 48} true;
  assume {:verifier.code 0} true;
  $i18 := $add.i64($i1, $i2);
  call devirtbounce.9($p17, $p0, $i18, $i3, $i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5570, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5572, 3} true;
  assume {:verifier.code 0} true;
  call debug_dma_sync_single_range_for_device($p0, $i1, $i2, $i3, $i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5573, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ks8842_dma_tx_cb: ref;
axiom (ks8842_dma_tx_cb == $sub.ref(0, 257841));
procedure  ks8842_dma_tx_cb($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i24;
  var $i13: i24;
  var $i14: i24;
  var $p15: ref;
  var $p16: ref;
  var $i17: i8;
  var $i18: i64;
  var $i19: i64;
  var $i20: i64;
  var $i21: i1;
  var $i22: i32;
  var $p23: ref;
  var $p24: ref;
  var $i25: i64;
  var $i26: i1;
  var $p27: ref;
  var $p28: ref;
  var $i29: i64;
  var $i30: i64;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $i34: i1;
  var $i35: i8;
  var $i36: i1;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6955, 12} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6955, 12} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6956, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := netdev_priv($p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6957, 13} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6958, 20} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6959, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6959, 22} true;
  assume {:verifier.code 0} true;
  $M.2 := $store.ref($M.2, $p6, .str);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6960, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6960, 23} true;
  assume {:verifier.code 0} true;
  $M.3 := $store.ref($M.3, $p7, .str.25);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6961, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6961, 23} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.ref($M.4, $p8, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6962, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6962, 21} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.ref($M.5, $p9, .str.26);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6963, 14} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6963, 14} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6963, 21} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i24($M.6, $p11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6963, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6963:21: warning: over-approximating bitwise operation and;
  $i13 := $and.i24($i12, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6963, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6963:21: warning: over-approximating bitwise operation or;
  $i14 := $or.i24($i13, 911);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6963, 21} true;
  assume {:verifier.code 0} true;
  $M.6 := $store.i24($M.6, $p11, $i14);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6964, 14} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6964, 20} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i8($M.7, $p15, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6965, 51} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6965, 51} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i8($M.7, $p16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6965, 33} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i8.i64($i17);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6965, 57} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6965:57: warning: over-approximating bitwise operation and;
  $i19 := $and.i64($i18, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6965, 13} true;
  assume {:verifier.code 0} true;
  call $i20 := ldv__builtin_expect($i19, 0);
  call {:cexpr "tmp___0"} boogie_si_record_i64($i20);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6966, 15} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i64($i20, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6966, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i21 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6967, 5} true;
  assume {:verifier.code 0} true;
  call $i22 := __dynamic_netdev_dbg.ref.ref.ref($p1, $p2, .str.26);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6968, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  $p23 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6970, 28} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.1, $p23);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6970, 7} true;
  assume {:verifier.code 0} true;
  $i25 := $p2i.ref.i64($p24);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6970, 34} true;
  assume {:verifier.code 0} true;
  $i26 := $eq.i64($i25, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6970, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i26 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6971, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i26 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6983, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6974, 38} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p2, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p28 := $add.ref($add.ref($add.ref($p2, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6974, 44} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i64($M.1, $p28);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6974, 55} true;
  assume {:verifier.code 0} true;
  $i30 := $add.i64($i29, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6974, 11} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($add.ref($p2, $mul.ref(0, 3176)), $mul.ref(264, 1));
  $p32 := $add.ref($add.ref($add.ref($p2, $mul.ref(0, 3176)), $mul.ref(264, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6974, 28} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i64($M.1, $p32, $i30);
  $p33 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6975, 14} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p33, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6976, 13} true;
  assume {:verifier.code 0} true;
  call $i34 := netif_queue_stopped($p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6976, 11} true;
  assume {:verifier.code 0} true;
  $i35 := $zext.i1.i8($i34);
  call {:cexpr "tmp___1"} boogie_si_record_i8($i35);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6977, 13} true;
  assume {:verifier.code 0} true;
  $i36 := $trunc.i8.i1($i35);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6977, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i36 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6978, 5} true;
  assume {:verifier.code 0} true;
  call netif_wake_queue($p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6979, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6981, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
}
const debug_dma_sync_single_range_for_device: ref;
axiom (debug_dma_sync_single_range_for_device == $sub.ref(0, 258873));
procedure  debug_dma_sync_single_range_for_device($p0: ref, $i1: i64, $i2: i64, $i3: i64, $i4: i32)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8333, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "debug_dma_sync_single_range_for_device:arg:arg1"} boogie_si_record_i64($i1);
  call {:cexpr "debug_dma_sync_single_range_for_device:arg:arg2"} boogie_si_record_i64($i2);
  call {:cexpr "debug_dma_sync_single_range_for_device:arg:arg3"} boogie_si_record_i64($i3);
  call {:cexpr "debug_dma_sync_single_range_for_device:arg:arg4"} boogie_si_record_i32($i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8333, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ks8842_alloc_dma_bufs: ref;
axiom (ks8842_alloc_dma_bufs == $sub.ref(0, 259905));
procedure  ks8842_alloc_dma_bufs($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i64;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i64;
  var $i16: i1;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i64;
  var $i23: i1;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i64;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: i64;
  var $i36: i32;
  var $i37: i1;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $i41: i32;
  var $i42: i64;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $i48: i64;
  var $i49: i1;
  var $p50: ref;
  var $i51: i64;
  var $i17: i32;
  var $i52: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7055, 9} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7055, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := netdev_priv($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7056, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7057, 23} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(232, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7058, 23} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(304, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7059, 3} true;
  assume {:verifier.code 0} true;
  call __dma_cap_zero($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7060, 3} true;
  assume {:verifier.code 0} true;
  call __dma_cap_set(9, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7061, 3} true;
  assume {:verifier.code 0} true;
  call __dma_cap_set(7, $p1);
  $p6 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7062, 3} true;
  assume {:verifier.code 0} true;
  call sg_init_table($p6, 1);
  $p7 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7064, 64} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.1, $p7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7064, 49} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i32.i64($i8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7064, 40} true;
  assume {:verifier.code 0} true;
  $p10 := $i2p.i64.ref($i9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7063, 18} true;
  assume {:verifier.code 0} true;
  call $p11 := __dma_request_channel($p1, ks8842_dma_filter_fn, $p10);
  $p12 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7063, 16} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p12, $p11);
  $p13 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7065, 31} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.1, $p13);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7065, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $p2i.ref.i64($p14);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7065, 36} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.i64($i15, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7065, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i16 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7067, 5} true;
  assume {:verifier.code 0} true;
  $i17 := $sub.i32(0, 19);
  goto $bb3;
$bb2:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7094, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_dealloc_dma_bufs($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7095, 3} true;
  assume {:verifier.code 0} true;
  $i52 := $i17;
  goto $bb14;
$bb4:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7070, 17} true;
  assume {:verifier.code 0} true;
  call $p18 := kmalloc(2048, 208);
  $p19 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7070, 15} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p19, $p18);
  $p20 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7071, 31} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.1, $p20);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7071, 7} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p21);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7071, 35} true;
  assume {:verifier.code 0} true;
  $i23 := $eq.i64($i22, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7071, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i23 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7073, 5} true;
  assume {:verifier.code 0} true;
  $i17 := $sub.i32(0, 12);
  goto $bb3;
$bb6:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7076, 58} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(224, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7076, 58} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.1, $p24);
  $p26 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7076, 71} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.1, $p26);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7076, 28} true;
  assume {:verifier.code 0} true;
  call $i28 := dma_map_single_attrs($p25, $p27, 2048, 1, $0.ref);
  $p29 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(24, 1));
  $p30 := $add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(24, 1)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7076, 26} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i64($M.1, $p30, $i28);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7078, 36} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(224, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7078, 36} true;
  assume {:verifier.code 0} true;
  $p32 := $load.ref($M.1, $p31);
  $p33 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(24, 1));
  $p34 := $add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(24, 1)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7078, 52} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i64($M.1, $p34);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7078, 9} true;
  assume {:verifier.code 0} true;
  call $i36 := dma_mapping_error($p32, $i35);
  call {:cexpr "err"} boogie_si_record_i32($i36);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7079, 11} true;
  assume {:verifier.code 0} true;
  $i37 := $ne.i32($i36, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7079, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i37 == 1);
  $p38 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(24, 1));
  $p39 := $add.ref($add.ref($add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(24, 1)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7080, 28} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i64($M.1, $p39, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7081, 5} true;
  assume {:verifier.code 0} true;
  $i17 := $i36;
  goto $bb3;
$bb9:
  assume !(($i37 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  $p40 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(104, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7085, 64} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i32($M.1, $p40);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7085, 49} true;
  assume {:verifier.code 0} true;
  $i42 := $sext.i32.i64($i41);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7085, 40} true;
  assume {:verifier.code 0} true;
  $p43 := $i2p.i64.ref($i42);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7084, 18} true;
  assume {:verifier.code 0} true;
  call $p44 := __dma_request_channel($p1, ks8842_dma_filter_fn, $p43);
  $p45 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7084, 16} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p45, $p44);
  $p46 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7086, 31} true;
  assume {:verifier.code 0} true;
  $p47 := $load.ref($M.1, $p46);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7086, 7} true;
  assume {:verifier.code 0} true;
  $i48 := $p2i.ref.i64($p47);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7086, 36} true;
  assume {:verifier.code 0} true;
  $i49 := $eq.i64($i48, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7086, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i49} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i49 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7088, 5} true;
  assume {:verifier.code 0} true;
  $i17 := $sub.i32(0, 19);
  goto $bb3;
$bb12:
  assume !(($i49 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  $p50 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7091, 66} true;
  assume {:verifier.code 0} true;
  $i51 := $p2i.ref.i64($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7091, 3} true;
  assume {:verifier.code 0} true;
  call tasklet_init($p50, ks8842_rx_frame_dma_tasklet, $i51);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7092, 3} true;
  assume {:verifier.code 0} true;
  $i52 := 0;
  goto $bb14;
$bb14:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7097, 1} true;
  assume {:verifier.code 0} true;
  $r := $i52;
  $exn := false;
  return;
}
const ks8842_dealloc_dma_bufs: ref;
axiom (ks8842_dealloc_dma_bufs == $sub.ref(0, 260937));
procedure  ks8842_dealloc_dma_bufs($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i64;
  var $i13: i1;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $i20: i64;
  var $i21: i1;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i64;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7016, 23} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7016, 23} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(232, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7017, 23} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(304, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7018, 3} true;
  assume {:verifier.code 0} true;
  call ks8842_stop_dma($p0);
  $p3 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7019, 31} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.1, $p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7019, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7019, 36} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7019, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  $p7 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7020, 33} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.1, $p7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7020, 5} true;
  assume {:verifier.code 0} true;
  call dma_release_channel($p8);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7021, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  $p9 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7023, 16} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p9, $0.ref);
  $p10 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7024, 31} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.1, $p10);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7024, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $p2i.ref.i64($p11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7024, 36} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i64($i12, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7024, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i13 == 1);
  $p14 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7025, 33} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.1, $p14);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7025, 5} true;
  assume {:verifier.code 0} true;
  call dma_release_channel($p15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7026, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  $p16 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7028, 16} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p16, $0.ref);
  $p17 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(64, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7029, 3} true;
  assume {:verifier.code 0} true;
  call tasklet_kill($p17);
  $p18 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(24, 1));
  $p19 := $add.ref($add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(24, 1)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7030, 18} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i64($M.1, $p19);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7030, 30} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i64($i20, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7030, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i21 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7031, 37} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(224, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7031, 37} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.1, $p22);
  $p24 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(24, 1));
  $p25 := $add.ref($add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(24, 1)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7031, 53} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i64($M.1, $p25);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7031, 5} true;
  assume {:verifier.code 0} true;
  call dma_unmap_single_attrs($p23, $i26, 2048, 1, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7032, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  $p27 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(24, 1));
  $p28 := $add.ref($add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(24, 1)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7034, 26} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i64($M.1, $p28, 0);
  $p29 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7035, 31} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.1, $p29);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7035, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p30);
  $p31 := $add.ref($add.ref($add.ref($p0, $mul.ref(0, 416)), $mul.ref(232, 1)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7036, 15} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p31, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7037, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_request_irq_15: ref;
axiom (ldv_request_irq_15 == $sub.ref(0, 261969));
procedure  ldv_request_irq_15($i0: i32, $p1: ref, $i2: i64, $p3: ref, $p4: ref)
  returns ($r: i32)
{
  var $i5: i32;
  var $i6: i32;
  var $i7: i1;
  var $i8: i1;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7982, 9} true;
  assume {:verifier.code 0} true;
  call {:cexpr "ldv_request_irq_15:arg:irq"} boogie_si_record_i32($i0);
  call {:cexpr "ldv_request_irq_15:arg:flags"} boogie_si_record_i64($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7982, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := request_irq($i0, $p1, $i2, $p3, $p4);
  call {:cexpr "tmp"} boogie_si_record_i32($i5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7984, 13} true;
  assume {:verifier.code 0} true;
  call $i6 := reg_check_1($p1);
  call {:cexpr "tmp___0"} boogie_si_record_i32($i6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7985, 15} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7985, 20} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7985, 36} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i5, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7985, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7985, 20} true;
  assume {:verifier.code 0} true;
  assume !(($i7 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb6;
$bb4:
  assume ($i8 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7986, 5} true;
  assume {:verifier.code 0} true;
  call activate_suitable_irq_1($i0, $p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7987, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7985, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i8 == 1));
  goto $bb3;
$bb6:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7989, 3} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const request_irq: ref;
axiom (request_irq == $sub.ref(0, 263001));
procedure  request_irq($i0: i32, $p1: ref, $i2: i64, $p3: ref, $p4: ref)
  returns ($r: i32)
{
  var $i5: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5785, 9} true;
  assume {:verifier.code 0} true;
  call {:cexpr "request_irq:arg:irq"} boogie_si_record_i32($i0);
  call {:cexpr "request_irq:arg:flags"} boogie_si_record_i64($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5785, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := request_threaded_irq($i0, $p1, $0.ref, $i2, $p3, $p4);
  call {:cexpr "tmp"} boogie_si_record_i32($i5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5787, 3} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const request_threaded_irq: ref;
axiom (request_threaded_irq == $sub.ref(0, 264033));
procedure  request_threaded_irq($i0: i32, $p1: ref, $p2: ref, $i3: i64, $p4: ref, $p5: ref)
  returns ($r: i32)
{
  var $i6: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8435, 10} true;
  assume {:verifier.code 1} true;
  call {:cexpr "request_threaded_irq:arg:arg0"} boogie_si_record_i32($i0);
  call {:cexpr "request_threaded_irq:arg:arg3"} boogie_si_record_i64($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8435, 10} true;
  assume {:verifier.code 1} true;
  call $i6 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8435, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const dma_release_channel: ref;
axiom (dma_release_channel == $sub.ref(0, 265065));
procedure  dma_release_channel($p0: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8339, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8339, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const kfree: ref;
axiom (kfree == $sub.ref(0, 266097));
procedure  kfree($p0: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8462, 3} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8462, 3} true;
  assume {:verifier.code 0} true;
  call free_($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8463, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const free_: ref;
axiom (free_ == $sub.ref(0, 267129));
procedure  free_($p0: ref)
{
  call $free($p0);
}
const __dma_cap_zero: ref;
axiom (__dma_cap_zero == $sub.ref(0, 268161));
procedure  __dma_cap_zero($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5446, 41} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5446, 41} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($add.ref($p0, $mul.ref(0, 8)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5446, 15} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5446, 3} true;
  assume {:verifier.code 0} true;
  call bitmap_zero($p2, 12);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5447, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __dma_cap_set: ref;
axiom (__dma_cap_set == $sub.ref(0, 269193));
procedure  __dma_cap_set($i0: i32, $p1: ref)
{
  var $i2: i64;
  var $p3: ref;
  var $p4: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5439, 11} true;
  assume {:verifier.code 0} true;
  call {:cexpr "__dma_cap_set:arg:tx_type"} boogie_si_record_i32($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5439, 11} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i32.i64($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5439, 62} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p1, $mul.ref(0, 8)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5439, 27} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5439, 3} true;
  assume {:verifier.code 0} true;
  call set_bit($i2, $p4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5440, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ks8842_dma_filter_fn: ref;
axiom (ks8842_dma_filter_fn == $sub.ref(0, 270225));
procedure  ks8842_dma_filter_fn($p0: ref, $p1: ref)
  returns ($r: i1)
{
  var $p2: ref;
  var $i3: i32;
  var $i4: i64;
  var $i5: i64;
  var $i6: i1;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7043, 24} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7043, 24} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7043, 24} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.39, $p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7043, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7043, 35} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7043, 32} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i64($i4, $i5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7043, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const __dma_request_channel: ref;
axiom (__dma_request_channel == $sub.ref(0, 271257));
procedure  __dma_request_channel($p0: ref, $p1: ref, $p2: ref)
  returns ($r: ref)
{
  var $p3: ref;
  var $p4: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8274, 29} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8274, 29} true;
  assume {:verifier.code 0} true;
  call $p3 := external_alloc();
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8274, 10} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8274, 3} true;
  assume {:verifier.code 0} true;
  $r := $p4;
  $exn := false;
  return;
}
const kmalloc: ref;
axiom (kmalloc == $sub.ref(0, 272289));
procedure  kmalloc($i0: i64, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5400, 13} true;
  assume {:verifier.code 0} true;
  call {:cexpr "kmalloc:arg:size"} boogie_si_record_i64($i0);
  call {:cexpr "kmalloc:arg:flags"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5400, 13} true;
  assume {:verifier.code 0} true;
  call $p2 := __kmalloc($i0, $i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5401, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const ks8842_rx_frame_dma_tasklet: ref;
axiom (ks8842_rx_frame_dma_tasklet == $sub.ref(0, 273321));
procedure  ks8842_rx_frame_dma_tasklet($i0: i64)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $p11: ref;
  var $i12: i32;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i32;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $i25: i24;
  var $i26: i24;
  var $i27: i24;
  var $p28: ref;
  var $p29: ref;
  var $i30: i8;
  var $i31: i64;
  var $i32: i64;
  var $i33: i64;
  var $i34: i1;
  var $i35: i32;
  var $i36: i32;
  var $i37: i32;
  var $i38: i1;
  var $i39: i32;
  var $i40: i1;
  var $i41: i32;
  var $i42: i32;
  var $p43: ref;
  var $i44: i16;
  var $p45: ref;
  var $i46: i32;
  var $p47: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6537, 12} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  call {:cexpr "ks8842_rx_frame_dma_tasklet:arg:arg"} boogie_si_record_i64($i0);
  assume true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6537, 12} true;
  assume {:verifier.code 0} true;
  $p2 := $i2p.i64.ref($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6538, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := netdev_priv($p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6539, 13} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6540, 20} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(304, 1));
  $p6 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6541, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.1, $p6);
  $p8 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(24, 1));
  $p9 := $add.ref($add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(24, 1)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6542, 18} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i64($M.1, $p9);
  call {:cexpr "addr"} boogie_si_record_i64($i10);
  $p11 := $add.ref($add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(304, 1)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6543, 14} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p11, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6544, 3} true;
  assume {:verifier.code 0} true;
  call $i12 := __ks8842_start_new_rx_dma($p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6545, 35} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p4, $mul.ref(0, 416)), $mul.ref(224, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6545, 35} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.1, $p13);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6545, 3} true;
  assume {:verifier.code 0} true;
  call dma_unmap_single_attrs($p14, $i10, 2048, 2, $0.ref);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6546, 26} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p7, $mul.ref(0, 232)), $mul.ref(216, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6546, 26} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.1, $p15);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6546, 12} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6546, 12} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i32($M.1, $p17);
  call {:cexpr "status"} boogie_si_record_i32($i18);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6547, 14} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(0, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6547, 22} true;
  assume {:verifier.code 0} true;
  $M.2 := $store.ref($M.2, $p19, .str);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6548, 14} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(8, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6548, 23} true;
  assume {:verifier.code 0} true;
  $M.3 := $store.ref($M.3, $p20, .str.10);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6549, 14} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(16, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6549, 23} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.ref($M.4, $p21, .str.2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6550, 14} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(24, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6550, 21} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.ref($M.5, $p22, .str.11);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6551, 14} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(32, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6551, 14} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p23);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6551, 21} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i24($M.6, $p24);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6551, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6551:21: warning: over-approximating bitwise operation and;
  $i26 := $and.i24($i25, $sub.i24(0, 262144));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6551, 21} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6551:21: warning: over-approximating bitwise operation or;
  $i27 := $or.i24($i26, 674);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6551, 21} true;
  assume {:verifier.code 0} true;
  $M.6 := $store.i24($M.6, $p24, $i27);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6552, 14} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6552, 20} true;
  assume {:verifier.code 0} true;
  $M.7 := $store.i8($M.7, $p28, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6553, 51} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(35, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6553, 51} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i8($M.7, $p29);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6553, 33} true;
  assume {:verifier.code 0} true;
  $i31 := $zext.i8.i64($i30);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6553, 57} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6553:57: warning: over-approximating bitwise operation and;
  $i32 := $and.i64($i31, 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6553, 13} true;
  assume {:verifier.code 0} true;
  call $i33 := ldv__builtin_expect($i32, 0);
  call {:cexpr "tmp___0"} boogie_si_record_i64($i33);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6554, 15} true;
  assume {:verifier.code 0} true;
  $i34 := $ne.i64($i33, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6554, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i34 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6556, 64} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6556:64: warning: over-approximating bitwise operation and;
  $i35 := $and.i32($i18, 65535);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6555, 5} true;
  assume {:verifier.code 0} true;
  call $i36 := __dynamic_netdev_dbg.ref.ref.ref.ref.i32($p1, $p2, .str.11, .str.10, $i35);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6557, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6559, 15} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6559:15: warning: over-approximating bitwise operation and;
  $i37 := $and.i32($i18, 32768);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6559, 25} true;
  assume {:verifier.code 0} true;
  $i38 := $ne.i32($i37, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6559, 31} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i38 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6559, 42} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6559:42: warning: over-approximating bitwise operation and;
  $i39 := $and.i32($i18, 7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6559, 48} true;
  assume {:verifier.code 0} true;
  $i40 := $eq.i32($i39, 0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6559, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb7, $bb8;
$bb5:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6559, 31} true;
  assume {:verifier.code 0} true;
  assume !(($i38 == 1));
  goto $bb6;
$bb6:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6567, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_update_rx_err_counters($p2, $i18);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6568, 18} true;
  assume {:verifier.code 0} true;
  $p47 := $bitcast.ref.ref($p7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6568, 5} true;
  assume {:verifier.code 0} true;
  call ldv_skb_free($p47);
  assume {:verifier.code 0} true;
  goto $bb9;
$bb7:
  assume ($i40 == 1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6560, 25} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6560:25: warning: over-approximating bitwise operation lshr;
  $i41 := $lshr.i32($i18, 16);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6560, 32} true;
  assume {:verifier.code 0} true;
  // llvm2bpl: 205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i:6560:32: warning: over-approximating bitwise operation and;
  $i42 := $and.i32($i41, 2047);
  call {:cexpr "len"} boogie_si_record_i32($i42);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6561, 5} true;
  assume {:verifier.code 0} true;
  call ks8842_update_rx_counters($p2, $i18, $i42);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6562, 5} true;
  assume {:verifier.code 0} true;
  call skb_reserve($p7, 4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6563, 5} true;
  assume {:verifier.code 0} true;
  call $p43 := skb_put($p7, $i42);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6564, 21} true;
  assume {:verifier.code 0} true;
  call $i44 := eth_type_trans($p7, $p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6564, 10} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($add.ref($p7, $mul.ref(0, 232)), $mul.ref(126, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6564, 19} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i16($M.1, $p45, $i44);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6565, 5} true;
  assume {:verifier.code 0} true;
  call $i46 := ldv_netif_rx_13($p7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6566, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6559, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i40 == 1));
  goto $bb6;
$bb9:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 6570, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const skb_reserve: ref;
axiom (skb_reserve == $sub.ref(0, 274353));
procedure  skb_reserve($p0: ref, $i1: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i32;
  var $p10: ref;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5615, 20} true;
  assume {:verifier.code 0} true;
  call {:cexpr "skb_reserve:arg:len"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5615, 20} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($add.ref($p0, $mul.ref(0, 232)), $mul.ref(216, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5615, 20} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.1, $p2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5615, 27} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5615, 25} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p3, $mul.ref($i4, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5615, 8} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p0, $mul.ref(0, 232)), $mul.ref(216, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5615, 13} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.ref($M.1, $p6, $p5);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5616, 20} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($add.ref($p0, $mul.ref(0, 232)), $mul.ref(200, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5616, 20} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.1, $p7);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5616, 25} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i32($i8, $i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5616, 8} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p0, $mul.ref(0, 232)), $mul.ref(200, 1));
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5616, 13} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i32($M.1, $p10, $i9);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5617, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_netif_rx_13: ref;
axiom (ldv_netif_rx_13 == $sub.ref(0, 275385));
procedure  ldv_netif_rx_13($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7961, 26} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7961, 26} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7961, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := ldv_skb_free_int($p1);
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7962, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const bitmap_zero: ref;
axiom (bitmap_zero == $sub.ref(0, 276417));
procedure  bitmap_zero($p0: ref, $i1: i32)
{
  var $i2: i64;
  var $i3: i64;
  var $i4: i64;
  var $i5: i32;
  var $i6: i32;
  var $p7: ref;
  var $i8: i64;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5314, 33} true;
  assume {:verifier.code 0} true;
  call {:cexpr "bitmap_zero:arg:nbits"} boogie_si_record_i32($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5314, 33} true;
  assume {:verifier.code 0} true;
  $i2 := $sext.i32.i64($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5314, 55} true;
  assume {:verifier.code 0} true;
  $i3 := $add.i64($i2, 63);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5314, 63} true;
  assume {:verifier.code 0} true;
  $i4 := $udiv.i64($i3, 64);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5314, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i64.i32($i4);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5314, 71} true;
  assume {:verifier.code 0} true;
  $i6 := $mul.i32($i5, 8);
  call {:cexpr "len"} boogie_si_record_i32($i6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5315, 3} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5315, 26} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i6);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5315, 3} true;
  assume {:verifier.code 0} true;
  call $M.1 := $memset.i8($M.1, $p7, 0, $i8, false);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 5316, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const llvm.memset.p0i8.i64: ref;
axiom (llvm.memset.p0i8.i64 == $sub.ref(0, 277449));
procedure  llvm.memset.p0i8.i64($p0: ref, $i1: i8, $i2: i64, $i3: i1);
const cancel_work_sync: ref;
axiom (cancel_work_sync == $sub.ref(0, 278481));
procedure  cancel_work_sync($p0: ref)
  returns ($r: i1)
{
  var $i1: i1;
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8324, 10} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8324, 10} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_bool();
  call {:cexpr "smack:ext:__VERIFIER_nondet_bool"} boogie_si_record_i1($i1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8324, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const ldv_free_irq_16: ref;
axiom (ldv_free_irq_16 == $sub.ref(0, 279513));
procedure  ldv_free_irq_16($i0: i32, $p1: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7995, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "ldv_free_irq_16:arg:ldv_func_arg1"} boogie_si_record_i32($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7995, 3} true;
  assume {:verifier.code 0} true;
  call free_irq($i0, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7996, 3} true;
  assume {:verifier.code 0} true;
  call disable_suitable_irq_1($i0, $p1);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 7997, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const free_irq: ref;
axiom (free_irq == $sub.ref(0, 280545));
procedure  free_irq($i0: i32, $p1: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8354, 3} true;
  assume {:verifier.code 0} true;
  call {:cexpr "free_irq:arg:arg0"} boogie_si_record_i32($i0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8354, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_set_init: ref;
axiom (ldv_set_init == $sub.ref(0, 281577));
procedure  ldv_set_init($p0: ref)
{
$bb0:
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8064, 14} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8064, 14} true;
  assume {:verifier.code 0} true;
  $M.35 := 0;
  call {:cexpr "last_index"} boogie_si_record_i32(0);
  assume {:sourceloc "205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point.cil.out-v3zhflhr.i", 8065, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_assume: ref;
axiom (__VERIFIER_assume == $sub.ref(0, 282609));
procedure  __VERIFIER_assume($i0: i32)
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__VERIFIER_assume:arg:x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 38, 3} true;
  assume {:verifier.code 1} true;
  assume $i0 != $0;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 39, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_code: ref;
axiom (__SMACK_code == $sub.ref(0, 283641));
procedure  __SMACK_code.ref($p0: ref);
procedure  __SMACK_code.ref.i32($p0: ref, p.1: i32);
const __SMACK_dummy: ref;
axiom (__SMACK_dummy == $sub.ref(0, 284673));
procedure  __SMACK_dummy($i0: i32)
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_dummy:arg:v"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 59} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_error: ref;
axiom (__VERIFIER_error == $sub.ref(0, 285705));
procedure  __VERIFIER_error()
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 52, 3} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 52, 3} true;
  assume {:verifier.code 1} true;
  assert false;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 59, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_check_overflow: ref;
axiom (__SMACK_check_overflow == $sub.ref(0, 286737));
procedure  __SMACK_check_overflow($i0: i32)
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_check_overflow:arg:flag"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 63, 3} true;
  assume {:verifier.code 1} true;
  assert {:overflow} $i0 == $0;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 64, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_nondet_char: ref;
axiom (__SMACK_nondet_char == $sub.ref(0, 287769));
procedure  __SMACK_nondet_char()
  returns ($r: i8);
const __SMACK_nondet_signed_char: ref;
axiom (__SMACK_nondet_signed_char == $sub.ref(0, 288801));
procedure  __SMACK_nondet_signed_char()
  returns ($r: i8);
const __SMACK_nondet_unsigned_char: ref;
axiom (__SMACK_nondet_unsigned_char == $sub.ref(0, 289833));
procedure  __SMACK_nondet_unsigned_char()
  returns ($r: i8);
const __SMACK_nondet_short: ref;
axiom (__SMACK_nondet_short == $sub.ref(0, 290865));
procedure  __SMACK_nondet_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short: ref;
axiom (__SMACK_nondet_signed_short == $sub.ref(0, 291897));
procedure  __SMACK_nondet_signed_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short_int: ref;
axiom (__SMACK_nondet_signed_short_int == $sub.ref(0, 292929));
procedure  __SMACK_nondet_signed_short_int()
  returns ($r: i16);
const __VERIFIER_nondet_unsigned_short: ref;
axiom (__VERIFIER_nondet_unsigned_short == $sub.ref(0, 293961));
procedure  __VERIFIER_nondet_unsigned_short()
  returns ($r: i16)
{
  var $i0: i16;
  var $i1: i32;
  var $i2: i1;
  var $i4: i32;
  var $i5: i1;
  var $i3: i1;
  var $i6: i32;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 103, 22} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 103, 22} true;
  assume {:verifier.code 1} true;
  call $i0 := __SMACK_nondet_unsigned_short();
  call {:cexpr "smack:ext:__SMACK_nondet_unsigned_short"} boogie_si_record_i16($i0);
  call {:cexpr "x"} boogie_si_record_i16($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 104, 21} true;
  assume {:verifier.code 0} true;
  $i1 := $zext.i16.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 104, 23} true;
  assume {:verifier.code 0} true;
  $i2 := $sge.i32($i1, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 104, 28} true;
  assume {:verifier.code 0} true;
  $i3 := 0;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 104, 31} true;
  assume {:verifier.code 1} true;
  $i4 := $zext.i16.i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 104, 33} true;
  assume {:verifier.code 1} true;
  $i5 := $sle.i32($i4, 65535);
  assume {:verifier.code 0} true;
  $i3 := $i5;
  goto $bb3;
$bb2:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 104, 28} true;
  assume {:verifier.code 0} true;
  assume !(($i2 == 1));
  goto $bb3;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 104, 28} true;
  assume {:verifier.code 1} true;
  $i6 := $zext.i1.i32($i3);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 104, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i6);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 105, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __SMACK_nondet_unsigned_short: ref;
axiom (__SMACK_nondet_unsigned_short == $sub.ref(0, 294993));
procedure  __SMACK_nondet_unsigned_short()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short_int: ref;
axiom (__SMACK_nondet_unsigned_short_int == $sub.ref(0, 296025));
procedure  __SMACK_nondet_unsigned_short_int()
  returns ($r: i16);
const __VERIFIER_nondet_int: ref;
axiom (__VERIFIER_nondet_int == $sub.ref(0, 297057));
procedure  __VERIFIER_nondet_int()
  returns ($r: i32)
{
  var $i0: i32;
  var $i1: i1;
  var $i3: i1;
  var $i2: i1;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 115, 11} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 115, 11} true;
  assume {:verifier.code 1} true;
  call $i0 := __SMACK_nondet_int();
  call {:cexpr "smack:ext:__SMACK_nondet_int"} boogie_si_record_i32($i0);
  call {:cexpr "x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 23} true;
  assume {:verifier.code 0} true;
  $i1 := $sge.i32($i0, $sub.i32(0, 2147483648));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 34} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 39} true;
  assume {:verifier.code 1} true;
  $i3 := $sle.i32($i0, 2147483647);
  assume {:verifier.code 0} true;
  $i2 := $i3;
  goto $bb3;
$bb2:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 34} true;
  assume {:verifier.code 0} true;
  assume !(($i1 == 1));
  goto $bb3;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 34} true;
  assume {:verifier.code 1} true;
  $i4 := $zext.i1.i32($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 116, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 117, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __SMACK_nondet_int: ref;
axiom (__SMACK_nondet_int == $sub.ref(0, 298089));
procedure  __SMACK_nondet_int()
  returns ($r: i32);
const __SMACK_nondet_signed_int: ref;
axiom (__SMACK_nondet_signed_int == $sub.ref(0, 299121));
procedure  __SMACK_nondet_signed_int()
  returns ($r: i32);
const __SMACK_nondet_unsigned: ref;
axiom (__SMACK_nondet_unsigned == $sub.ref(0, 300153));
procedure  __SMACK_nondet_unsigned()
  returns ($r: i32);
const __VERIFIER_nondet_unsigned_int: ref;
axiom (__VERIFIER_nondet_unsigned_int == $sub.ref(0, 301185));
procedure  __VERIFIER_nondet_unsigned_int()
  returns ($r: i32)
{
  var $i0: i32;
  var $i1: i32;
  var $i2: i32;
  var $i3: i1;
  var $i5: i1;
  var $i6: i1;
  var $i4: i1;
  var $i7: i32;
  var $i8: i1;
  var $i10: i1;
  var $i9: i1;
  var $i11: i32;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 136, 20} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 136, 20} true;
  assume {:verifier.code 1} true;
  call $i0 := __SMACK_nondet_unsigned_int();
  call {:cexpr "smack:ext:__SMACK_nondet_unsigned_int"} boogie_si_record_i32($i0);
  call {:cexpr "x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 137, 22} true;
  assume {:verifier.code 1} true;
  call $i1 := __SMACK_nondet_unsigned_int();
  call {:cexpr "smack:ext:__SMACK_nondet_unsigned_int"} boogie_si_record_i32($i1);
  call {:cexpr "min"} boogie_si_record_i32($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 138, 22} true;
  assume {:verifier.code 1} true;
  call $i2 := __SMACK_nondet_unsigned_int();
  call {:cexpr "smack:ext:__SMACK_nondet_unsigned_int"} boogie_si_record_i32($i2);
  call {:cexpr "max"} boogie_si_record_i32($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 25} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i32($i1, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 30} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 37} true;
  assume {:verifier.code 0} true;
  $i5 := $uge.i32($i2, 4294967295);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 49} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  assume {:branchcond $i5} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 30} true;
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb3;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 49} true;
  assume {:verifier.code 1} true;
  $i7 := $zext.i1.i32($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i7);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 140, 23} true;
  assume {:verifier.code 0} true;
  $i8 := $uge.i32($i0, $i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 140, 30} true;
  assume {:verifier.code 0} true;
  $i9 := 0;
  assume {:branchcond $i8} true;
  goto $bb6, $bb7;
$bb4:
  assume ($i5 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 56} true;
  assume {:verifier.code 1} true;
  $i6 := $ule.i32($i2, 4294967295);
  assume {:verifier.code 0} true;
  $i4 := $i6;
  goto $bb3;
$bb5:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 139, 49} true;
  assume {:verifier.code 0} true;
  assume !(($i5 == 1));
  goto $bb3;
$bb6:
  assume ($i8 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 140, 35} true;
  assume {:verifier.code 1} true;
  $i10 := $ule.i32($i0, $i2);
  assume {:verifier.code 0} true;
  $i9 := $i10;
  goto $bb8;
$bb7:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 140, 30} true;
  assume {:verifier.code 0} true;
  assume !(($i8 == 1));
  goto $bb8;
$bb8:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 140, 30} true;
  assume {:verifier.code 1} true;
  $i11 := $zext.i1.i32($i9);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 140, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i11);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 141, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __SMACK_nondet_unsigned_int: ref;
axiom (__SMACK_nondet_unsigned_int == $sub.ref(0, 302217));
procedure  __SMACK_nondet_unsigned_int()
  returns ($r: i32);
const __SMACK_nondet_long: ref;
axiom (__SMACK_nondet_long == $sub.ref(0, 303249));
procedure  __SMACK_nondet_long()
  returns ($r: i64);
const __SMACK_nondet_long_int: ref;
axiom (__SMACK_nondet_long_int == $sub.ref(0, 304281));
procedure  __SMACK_nondet_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long: ref;
axiom (__SMACK_nondet_signed_long == $sub.ref(0, 305313));
procedure  __SMACK_nondet_signed_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_int: ref;
axiom (__SMACK_nondet_signed_long_int == $sub.ref(0, 306345));
procedure  __SMACK_nondet_signed_long_int()
  returns ($r: i64);
const __VERIFIER_nondet_unsigned_long: ref;
axiom (__VERIFIER_nondet_unsigned_long == $sub.ref(0, 307377));
procedure  __VERIFIER_nondet_unsigned_long()
  returns ($r: i64)
{
  var $i0: i64;
  var $i1: i64;
  var $i2: i64;
  var $i3: i1;
  var $i5: i1;
  var $i6: i1;
  var $i4: i1;
  var $i7: i32;
  var $i8: i1;
  var $i10: i1;
  var $i9: i1;
  var $i11: i32;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 169, 21} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 169, 21} true;
  assume {:verifier.code 1} true;
  call $i0 := __SMACK_nondet_unsigned_long();
  call {:cexpr "smack:ext:__SMACK_nondet_unsigned_long"} boogie_si_record_i64($i0);
  call {:cexpr "x"} boogie_si_record_i64($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 170, 23} true;
  assume {:verifier.code 1} true;
  call $i1 := __SMACK_nondet_unsigned_long();
  call {:cexpr "smack:ext:__SMACK_nondet_unsigned_long"} boogie_si_record_i64($i1);
  call {:cexpr "min"} boogie_si_record_i64($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 171, 23} true;
  assume {:verifier.code 1} true;
  call $i2 := __SMACK_nondet_unsigned_long();
  call {:cexpr "smack:ext:__SMACK_nondet_unsigned_long"} boogie_si_record_i64($i2);
  call {:cexpr "max"} boogie_si_record_i64($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 25} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i64($i1, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 30} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 37} true;
  assume {:verifier.code 0} true;
  $i5 := $uge.i64($i2, 18446744073709551615);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 50} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  assume {:branchcond $i5} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 30} true;
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb3;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 50} true;
  assume {:verifier.code 1} true;
  $i7 := $zext.i1.i32($i4);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i7);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 173, 23} true;
  assume {:verifier.code 0} true;
  $i8 := $uge.i64($i0, $i1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 173, 30} true;
  assume {:verifier.code 0} true;
  $i9 := 0;
  assume {:branchcond $i8} true;
  goto $bb6, $bb7;
$bb4:
  assume ($i5 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 57} true;
  assume {:verifier.code 1} true;
  $i6 := $ule.i64($i2, 18446744073709551615);
  assume {:verifier.code 0} true;
  $i4 := $i6;
  goto $bb3;
$bb5:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 172, 50} true;
  assume {:verifier.code 0} true;
  assume !(($i5 == 1));
  goto $bb3;
$bb6:
  assume ($i8 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 173, 35} true;
  assume {:verifier.code 1} true;
  $i10 := $ule.i64($i0, $i2);
  assume {:verifier.code 0} true;
  $i9 := $i10;
  goto $bb8;
$bb7:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 173, 30} true;
  assume {:verifier.code 0} true;
  assume !(($i8 == 1));
  goto $bb8;
$bb8:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 0, 0} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 173, 30} true;
  assume {:verifier.code 1} true;
  $i11 := $zext.i1.i32($i9);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 173, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i11);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 174, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __SMACK_nondet_unsigned_long: ref;
axiom (__SMACK_nondet_unsigned_long == $sub.ref(0, 308409));
procedure  __SMACK_nondet_unsigned_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_int == $sub.ref(0, 309441));
procedure  __SMACK_nondet_unsigned_long_int()
  returns ($r: i64);
const __SMACK_nondet_long_long: ref;
axiom (__SMACK_nondet_long_long == $sub.ref(0, 310473));
procedure  __SMACK_nondet_long_long()
  returns ($r: i64);
const __SMACK_nondet_long_long_int: ref;
axiom (__SMACK_nondet_long_long_int == $sub.ref(0, 311505));
procedure  __SMACK_nondet_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long: ref;
axiom (__SMACK_nondet_signed_long_long == $sub.ref(0, 312537));
procedure  __SMACK_nondet_signed_long_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long_int: ref;
axiom (__SMACK_nondet_signed_long_long_int == $sub.ref(0, 313569));
procedure  __SMACK_nondet_signed_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long: ref;
axiom (__SMACK_nondet_unsigned_long_long == $sub.ref(0, 314601));
procedure  __SMACK_nondet_unsigned_long_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_long_int == $sub.ref(0, 315633));
procedure  __SMACK_nondet_unsigned_long_long_int()
  returns ($r: i64);
const __VERIFIER_nondet_bool: ref;
axiom (__VERIFIER_nondet_bool == $sub.ref(0, 316665));
procedure  __VERIFIER_nondet_bool()
  returns ($r: i1)
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i8;
  var $i3: i1;
  var $i4: i32;
  var $i5: i1;
  var $i7: i1;
  var $i8: i32;
  var $i9: i1;
  var $i6: i1;
  var $i10: i32;
  var $i11: i1;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 231, 20} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 231, 20} true;
  assume {:verifier.code 1} true;
  call $i0 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 231, 13} true;
  assume {:verifier.code 0} true;
  $i1 := $ne.i32($i0, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 231, 9} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i1.i8($i1);
  call {:cexpr "x"} boogie_si_record_i8($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 232, 21} true;
  assume {:verifier.code 0} true;
  $i3 := $trunc.i8.i1($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 232, 21} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i1.i32($i3);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 232, 23} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i4, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 232, 28} true;
  assume {:verifier.code 0} true;
  $i6 := 1;
  assume {:branchcond $i5} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 232, 28} true;
  assume {:verifier.code 0} true;
  assume ($i5 == 1);
  goto $bb2;
$bb2:
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 232, 28} true;
  assume {:verifier.code 1} true;
  $i10 := $zext.i1.i32($i6);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 232, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i10);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 233, 10} true;
  assume {:verifier.code 0} true;
  $i11 := $trunc.i8.i1($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 233, 3} true;
  assume {:verifier.code 0} true;
  $r := $i11;
  $exn := false;
  return;
$bb3:
  assume !(($i5 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 232, 31} true;
  assume {:verifier.code 1} true;
  $i7 := $trunc.i8.i1($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 232, 31} true;
  assume {:verifier.code 1} true;
  $i8 := $zext.i1.i32($i7);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 232, 33} true;
  assume {:verifier.code 1} true;
  $i9 := $eq.i32($i8, 1);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 232, 28} true;
  assume {:verifier.code 0} true;
  $i6 := $i9;
  goto $bb2;
}
const __VERIFIER_nondet_ushort: ref;
axiom (__VERIFIER_nondet_ushort == $sub.ref(0, 317697));
procedure  __VERIFIER_nondet_ushort()
  returns ($r: i16)
{
  var $i0: i16;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 242, 22} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 242, 22} true;
  assume {:verifier.code 1} true;
  call $i0 := __VERIFIER_nondet_unsigned_short();
  call {:cexpr "smack:ext:__VERIFIER_nondet_unsigned_short"} boogie_si_record_i16($i0);
  call {:cexpr "x"} boogie_si_record_i16($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 243, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __VERIFIER_nondet_uint: ref;
axiom (__VERIFIER_nondet_uint == $sub.ref(0, 318729));
procedure  __VERIFIER_nondet_uint()
  returns ($r: i32)
{
  var $i0: i32;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 247, 20} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 247, 20} true;
  assume {:verifier.code 1} true;
  call $i0 := __VERIFIER_nondet_unsigned_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_unsigned_int"} boogie_si_record_i32($i0);
  call {:cexpr "x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 248, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __VERIFIER_nondet_ulong: ref;
axiom (__VERIFIER_nondet_ulong == $sub.ref(0, 319761));
procedure  __VERIFIER_nondet_ulong()
  returns ($r: i64)
{
  var $i0: i64;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 252, 21} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 252, 21} true;
  assume {:verifier.code 1} true;
  call $i0 := __VERIFIER_nondet_unsigned_long();
  call {:cexpr "smack:ext:__VERIFIER_nondet_unsigned_long"} boogie_si_record_i64($i0);
  call {:cexpr "x"} boogie_si_record_i64($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 253, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __VERIFIER_nondet_pointer: ref;
axiom (__VERIFIER_nondet_pointer == $sub.ref(0, 320793));
procedure  __VERIFIER_nondet_pointer()
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 256, 48} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 256, 48} true;
  assume {:verifier.code 1} true;
  call $p0 := __VERIFIER_nondet();
  call {:cexpr "smack:ext:__VERIFIER_nondet"} boogie_si_record_ref($p0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 256, 41} true;
  assume {:verifier.code 0} true;
  $r := $p0;
  $exn := false;
  return;
}
const __VERIFIER_nondet: ref;
axiom (__VERIFIER_nondet == $sub.ref(0, 321825));
procedure  __VERIFIER_nondet()
  returns ($r: ref);
const __SMACK_decls: ref;
axiom (__SMACK_decls == $sub.ref(0, 322857));
type $mop;
procedure  boogie_si_record_mop(m: $mop);
const $MOP: $mop;
var $exn: bool;
var $exnv: int;
procedure  corral_atomic_begin();
procedure  corral_atomic_end();
procedure  $alloc(n: ref) returns (p: ref)
{
  call corral_atomic_begin();
  call p := $$alloc(n);
  call corral_atomic_end();
}

procedure  $malloc(n: ref) returns (p: ref)
{
  call corral_atomic_begin();
  call p := $$alloc(n);
  call corral_atomic_end();
}

var $CurrAddr:ref;

procedure {:inline 1} $$alloc(n: ref) returns (p: ref)
modifies $CurrAddr;
{
  assume $sge.ref.bool(n, $0.ref);
  if ($sgt.ref.bool(n, $0.ref)) {
    p := $CurrAddr;
    havoc $CurrAddr;
    assume $sge.ref.bool($sub.ref($CurrAddr, n), p);
    assume $sgt.ref.bool($CurrAddr, $0.ref) && $slt.ref.bool($CurrAddr, $MALLOC_TOP);
  } else {
    p := $0.ref;
  }
}

procedure  $free(p: ref);

const __SMACK_top_decl: ref;
axiom (__SMACK_top_decl == $sub.ref(0, 323889));
procedure  __SMACK_top_decl.ref($p0: ref);
const __SMACK_init_func_memory_model: ref;
axiom (__SMACK_init_func_memory_model == $sub.ref(0, 324921));
procedure  __SMACK_init_func_memory_model()
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 539, 3} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 539, 3} true;
  assume {:verifier.code 1} true;
  $CurrAddr := $1024.ref;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 544, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_atomic_begin: ref;
axiom (__VERIFIER_atomic_begin == $sub.ref(0, 325953));
procedure  __VERIFIER_atomic_begin()
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 34} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 34} true;
  assume {:verifier.code 1} true;
  call corral_atomic_begin();
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 79} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_atomic_end: ref;
axiom (__VERIFIER_atomic_end == $sub.ref(0, 326985));
procedure  __VERIFIER_atomic_end()
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 548, 32} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 548, 32} true;
  assume {:verifier.code 1} true;
  call corral_atomic_end();
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 548, 75} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const calloc: ref;
axiom (calloc == $sub.ref(0, 328017));
procedure  calloc($i0: i64, $i1: i64)
  returns ($r: ref)
{
  var $i2: i32;
  var $i3: i1;
  var $i5: i64;
  var $p6: ref;
  var $i7: i64;
  var $p4: ref;
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/stdlib.c", 19, 7} true;
  assume {:verifier.code 1} true;
  call {:cexpr "calloc:arg:num"} boogie_si_record_i64($i0);
  call {:cexpr "calloc:arg:size"} boogie_si_record_i64($i1);
  assume {:sourceloc "/usr/local/share/smack/lib/stdlib.c", 19, 7} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  assume {:sourceloc "/usr/local/share/smack/lib/stdlib.c", 19, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/usr/local/share/smack/lib/stdlib.c", 19, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/usr/local/share/smack/lib/stdlib.c", 21, 3} true;
  assume {:verifier.code 0} true;
  $p4 := $0.ref;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:sourceloc "/usr/local/share/smack/lib/stdlib.c", 22, 5} true;
  assume {:verifier.code 0} true;
  call __VERIFIER_atomic_begin();
  assume {:sourceloc "/usr/local/share/smack/lib/stdlib.c", 23, 22} true;
  assume {:verifier.code 0} true;
  $i5 := $mul.i64($i0, $i1);
  assume {:sourceloc "/usr/local/share/smack/lib/stdlib.c", 23, 11} true;
  assume {:verifier.code 0} true;
  call $p6 := malloc($i5);
  assume {:sourceloc "/usr/local/share/smack/lib/stdlib.c", 24, 24} true;
  assume {:verifier.code 0} true;
  $i7 := $mul.i64($i0, $i1);
  assume {:sourceloc "/usr/local/share/smack/lib/stdlib.c", 24, 5} true;
  assume {:verifier.code 0} true;
  call $M.1 := $memset.i8($M.1, $p6, 0, $i7, false);
  assume {:sourceloc "/usr/local/share/smack/lib/stdlib.c", 25, 5} true;
  assume {:verifier.code 0} true;
  call __VERIFIER_atomic_end();
  assume {:verifier.code 0} true;
  $p4 := $p6;
  goto $bb3;
$bb3:
  assume {:sourceloc "/usr/local/share/smack/lib/stdlib.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/usr/local/share/smack/lib/stdlib.c", 27, 3} true;
  assume {:verifier.code 0} true;
  $r := $p4;
  $exn := false;
  return;
}
const llvm.dbg.value: ref;
axiom (llvm.dbg.value == $sub.ref(0, 329049));
procedure  llvm.dbg.value($p0: ref, $p1: ref, $p2: ref);
const __SMACK_static_init: ref;
axiom (__SMACK_static_init == $sub.ref(0, 330081));
procedure  __SMACK_static_init()
{
$bb0:
  $M.15 := 0;
  call {:cexpr "ldv_irq_1_2"} boogie_si_record_i32(0);
  $M.0 := 1;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(1);
  $M.18 := 0;
  call {:cexpr "ldv_irq_1_3"} boogie_si_record_i32(0);
  $M.12 := 0;
  call {:cexpr "ldv_irq_1_1"} boogie_si_record_i32(0);
  $M.9 := 0;
  call {:cexpr "ldv_irq_1_0"} boogie_si_record_i32(0);
  $M.10 := 0;
  call {:cexpr "ldv_irq_line_1_0"} boogie_si_record_i32(0);
  $M.11 := $0.ref;
  $M.13 := 0;
  call {:cexpr "ldv_irq_line_1_1"} boogie_si_record_i32(0);
  $M.14 := $0.ref;
  $M.16 := 0;
  call {:cexpr "ldv_irq_line_1_2"} boogie_si_record_i32(0);
  $M.17 := $0.ref;
  $M.19 := 0;
  call {:cexpr "ldv_irq_line_1_3"} boogie_si_record_i32(0);
  $M.20 := $0.ref;
  $M.21 := $0.ref;
  $M.22 := $0.ref;
  $M.23 := 0;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(0);
  $M.24 := 0;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(0);
  $M.25 := 0;
  call {:cexpr "ref_cnt"} boogie_si_record_i32(0);
  $M.26 := 0;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(0);
  $M.27 := 0;
  call {:cexpr "ldv_state_variable_3"} boogie_si_record_i32(0);
  $M.28 := 0;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(0);
  $M.29 := 0;
  call {:cexpr "ldv_retval_1"} boogie_si_record_i32(0);
  $M.30 := 0;
  call {:cexpr "ldv_retval_0"} boogie_si_record_i32(0);
  $M.31 := 0;
  call {:cexpr "ldv_retval_2"} boogie_si_record_i32(0);
  $M.32 := 0;
  call {:cexpr "ldv_retval_3"} boogie_si_record_i32(0);
  $M.35 := 0;
  call {:cexpr "last_index"} boogie_si_record_i32(0);
  $M.33 := $0.ref;
  $M.36 := $store.ref($M.36, set_impl, $0.ref);
  $M.36 := $store.ref($M.36, $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref(1, 8)), $0.ref);
  $M.36 := $store.ref($M.36, $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref(2, 8)), $0.ref);
  $M.36 := $store.ref($M.36, $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref(3, 8)), $0.ref);
  $M.36 := $store.ref($M.36, $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref(4, 8)), $0.ref);
  $M.36 := $store.ref($M.36, $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref(5, 8)), $0.ref);
  $M.36 := $store.ref($M.36, $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref(6, 8)), $0.ref);
  $M.36 := $store.ref($M.36, $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref(7, 8)), $0.ref);
  $M.36 := $store.ref($M.36, $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref(8, 8)), $0.ref);
  $M.36 := $store.ref($M.36, $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref(9, 8)), $0.ref);
  $M.36 := $store.ref($M.36, $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref(10, 8)), $0.ref);
  $M.36 := $store.ref($M.36, $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref(11, 8)), $0.ref);
  $M.36 := $store.ref($M.36, $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref(12, 8)), $0.ref);
  $M.36 := $store.ref($M.36, $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref(13, 8)), $0.ref);
  $M.36 := $store.ref($M.36, $add.ref($add.ref(set_impl, $mul.ref(0, 120)), $mul.ref(14, 8)), $0.ref);
  $M.1 := $store.ref($M.1, ks8842_netdev_ops, $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(8, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(16, 1)), ks8842_open);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(24, 1)), ks8842_close);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(32, 1)), ks8842_xmit_frame);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(40, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(48, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(56, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(64, 1)), ks8842_set_mac);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(72, 1)), eth_validate_addr);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(80, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(88, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(96, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(104, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(112, 1)), ks8842_tx_timeout);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(120, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(128, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(136, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(144, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(152, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(160, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(168, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(176, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(184, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(192, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(200, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(208, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(216, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(224, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(232, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(240, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(248, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(256, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(264, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(272, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(280, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(288, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(296, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(304, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(312, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(320, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(328, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(336, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(344, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(352, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(360, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(368, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(376, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(384, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(392, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(400, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(408, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(416, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(424, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(432, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(440, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(448, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(456, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(464, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_netdev_ops, $mul.ref(0, 480)), $mul.ref(472, 1)), $0.ref);
  $M.1 := $store.ref($M.1, ks8842_ethtool_ops, $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(8, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(16, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(24, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(32, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(40, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(48, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(56, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(64, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(72, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(80, 1)), ethtool_op_get_link);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(88, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(96, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(104, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(112, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(120, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(128, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(136, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(144, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(152, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(160, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(168, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(176, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(184, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(192, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(200, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(208, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(216, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(224, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(232, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(240, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(248, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(256, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(264, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(272, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(280, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(288, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(296, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(304, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(312, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(320, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(328, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(336, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(344, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(352, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(360, 1)), $0.ref);
  $M.1 := $store.ref($M.1, $add.ref($add.ref(ks8842_ethtool_ops, $mul.ref(0, 376)), $mul.ref(368, 1)), $0.ref);
  $M.40 := $store.ref($M.40, ks8842_platform_driver, ks8842_probe);
  $M.41 := $store.ref($M.41, $add.ref($add.ref(ks8842_platform_driver, $mul.ref(0, 176)), $mul.ref(8, 1)), ks8842_remove);
  $M.42 := $store.ref($M.42, $add.ref($add.ref(ks8842_platform_driver, $mul.ref(0, 176)), $mul.ref(16, 1)), $0.ref);
  $M.43 := $store.ref($M.43, $add.ref($add.ref(ks8842_platform_driver, $mul.ref(0, 176)), $mul.ref(24, 1)), $0.ref);
  $M.44 := $store.ref($M.44, $add.ref($add.ref(ks8842_platform_driver, $mul.ref(0, 176)), $mul.ref(32, 1)), $0.ref);
  $M.45 := $store.ref($M.45, $add.ref($add.ref($add.ref(ks8842_platform_driver, $mul.ref(0, 176)), $mul.ref(40, 1)), $mul.ref(0, 1)), .str);
  $M.46 := $store.ref($M.46, $add.ref($add.ref($add.ref(ks8842_platform_driver, $mul.ref(0, 176)), $mul.ref(40, 1)), $mul.ref(8, 1)), $0.ref);
  $M.47 := $store.ref($M.47, $add.ref($add.ref($add.ref(ks8842_platform_driver, $mul.ref(0, 176)), $mul.ref(40, 1)), $mul.ref(16, 1)), __this_module);
  $M.48 := $store.ref($M.48, $add.ref($add.ref($add.ref(ks8842_platform_driver, $mul.ref(0, 176)), $mul.ref(40, 1)), $mul.ref(24, 1)), $0.ref);
  $M.49 := $store.i8($M.49, $add.ref($add.ref($add.ref(ks8842_platform_driver, $mul.ref(0, 176)), $mul.ref(40, 1)), $mul.ref(32, 1)), 0);
  $M.50 := $store.ref($M.50, $add.ref($add.ref($add.ref(ks8842_platform_driver, $mul.ref(0, 176)), $mul.ref(40, 1)), $mul.ref(40, 1)), $0.ref);
  $M.51 := $store.ref($M.51, $add.ref($add.ref($add.ref(ks8842_platform_driver, $mul.ref(0, 176)), $mul.ref(40, 1)), $mul.ref(48, 1)), $0.ref);
  $M.52 := $store.ref($M.52, $add.ref($add.ref($add.ref(ks8842_platform_driver, $mul.ref(0, 176)), $mul.ref(40, 1)), $mul.ref(56, 1)), $0.ref);
  $M.53 := $store.ref($M.53, $add.ref($add.ref($add.ref(ks8842_platform_driver, $mul.ref(0, 176)), $mul.ref(40, 1)), $mul.ref(64, 1)), $0.ref);
  $M.54 := $store.ref($M.54, $add.ref($add.ref($add.ref(ks8842_platform_driver, $mul.ref(0, 176)), $mul.ref(40, 1)), $mul.ref(72, 1)), $0.ref);
  $M.55 := $store.ref($M.55, $add.ref($add.ref($add.ref(ks8842_platform_driver, $mul.ref(0, 176)), $mul.ref(40, 1)), $mul.ref(80, 1)), $0.ref);
  $M.56 := $store.ref($M.56, $add.ref($add.ref($add.ref(ks8842_platform_driver, $mul.ref(0, 176)), $mul.ref(40, 1)), $mul.ref(88, 1)), $0.ref);
  $M.57 := $store.ref($M.57, $add.ref($add.ref($add.ref(ks8842_platform_driver, $mul.ref(0, 176)), $mul.ref(40, 1)), $mul.ref(96, 1)), $0.ref);
  $M.58 := $store.ref($M.58, $add.ref($add.ref($add.ref(ks8842_platform_driver, $mul.ref(0, 176)), $mul.ref(40, 1)), $mul.ref(104, 1)), $0.ref);
  $M.59 := $store.ref($M.59, $add.ref($add.ref($add.ref(ks8842_platform_driver, $mul.ref(0, 176)), $mul.ref(40, 1)), $mul.ref(112, 1)), $0.ref);
  $M.60 := $store.ref($M.60, $add.ref($add.ref(ks8842_platform_driver, $mul.ref(0, 176)), $mul.ref(160, 1)), $0.ref);
  $M.61 := $store.i8($M.61, $add.ref($add.ref(ks8842_platform_driver, $mul.ref(0, 176)), $mul.ref(168, 1)), 0);
  $M.62 := .str.1.75;
  $M.63 := 0;
  call {:cexpr "errno_global"} boogie_si_record_i32(0);
  $exn := false;
  return;
}
const devirtbounce: ref;
axiom (devirtbounce == $sub.ref(0, 331113));
procedure  devirtbounce(funcPtr: ref, arg: ref, arg1: ref, arg2: i64, arg3: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.1: ref;
axiom (devirtbounce.1 == $sub.ref(0, 332145));
procedure  devirtbounce.1(funcPtr: ref, arg: ref, arg1: i64, arg2: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.2: ref;
axiom (devirtbounce.2 == $sub.ref(0, 333177));
procedure  devirtbounce.2(funcPtr: ref, arg: ref, arg1: i32, arg2: i64)
  returns ($r: i32)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.3: ref;
axiom (devirtbounce.3 == $sub.ref(0, 334209));
procedure  devirtbounce.3(funcPtr: ref, arg: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i32;
  var $p5: ref;
  var $i6: i32;
  var $p7: ref;
  var $i8: i32;
  var $p9: ref;
  var $i10: i32;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $i14: i1;
  var $i15: i1;
  var $i16: i1;
  var $i17: i1;
  var $i18: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i18 := $eq.ref(ks8842_remove, $p0);
  assume {:branchcond $i18} true;
  goto $bb7, $bb13;
$bb2:
  assume ($i13 == 1);
  $p1 := $bitcast.ref.ref(arg);
  call $i2 := eth_validate_addr($p1);
  $r := $i2;
  $exn := false;
  return;
$bb3:
  assume ($i14 == 1);
  $p3 := $bitcast.ref.ref(arg);
  call $i4 := ks8842_close($p3);
  $r := $i4;
  $exn := false;
  return;
$bb4:
  assume ($i15 == 1);
  $p5 := $bitcast.ref.ref(arg);
  call $i6 := ks8842_open($p5);
  $r := $i6;
  $exn := false;
  return;
$bb5:
  assume ($i16 == 1);
  $p7 := $bitcast.ref.ref(arg);
  call $i8 := ethtool_op_get_link($p7);
  $r := $i8;
  $exn := false;
  return;
$bb6:
  assume ($i17 == 1);
  $p9 := $bitcast.ref.ref(arg);
  call $i10 := ks8842_probe($p9);
  $r := $i10;
  $exn := false;
  return;
$bb7:
  assume ($i18 == 1);
  $p11 := $bitcast.ref.ref(arg);
  call $i12 := ks8842_remove($p11);
  $r := $i12;
  $exn := false;
  return;
$bb8:
  assume !(($i13 == 1));
  assume false;
$bb9:
  assume !(($i14 == 1));
  $i13 := $eq.ref(eth_validate_addr, $p0);
  assume {:branchcond $i13} true;
  goto $bb2, $bb8;
$bb10:
  assume !(($i15 == 1));
  $i14 := $eq.ref(ks8842_close, $p0);
  assume {:branchcond $i14} true;
  goto $bb3, $bb9;
$bb11:
  assume !(($i16 == 1));
  $i15 := $eq.ref(ks8842_open, $p0);
  assume {:branchcond $i15} true;
  goto $bb4, $bb10;
$bb12:
  assume !(($i17 == 1));
  $i16 := $eq.ref(ethtool_op_get_link, $p0);
  assume {:branchcond $i16} true;
  goto $bb5, $bb11;
$bb13:
  assume !(($i18 == 1));
  $i17 := $eq.ref(ks8842_probe, $p0);
  assume {:branchcond $i17} true;
  goto $bb6, $bb12;
}
const devirtbounce.4: ref;
axiom (devirtbounce.4 == $sub.ref(0, 335241));
procedure  devirtbounce.4(funcPtr: ref, arg: ref, arg1: i32, arg2: i64)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.5: ref;
axiom (devirtbounce.5 == $sub.ref(0, 336273));
procedure  devirtbounce.5(funcPtr: ref, arg: ref, arg1: ref, arg2: i64, arg3: i64, arg4: i32, arg5: ref)
  returns ($r: i64)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.6: ref;
axiom (devirtbounce.6 == $sub.ref(0, 337305));
procedure  devirtbounce.6(funcPtr: ref, arg: ref, arg1: i64)
  returns ($r: i32)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.7: ref;
axiom (devirtbounce.7 == $sub.ref(0, 338337));
procedure  devirtbounce.7(funcPtr: ref, arg: ref, arg1: ref, arg2: i32, arg3: i32, arg4: i64, arg5: ref)
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.8: ref;
axiom (devirtbounce.8 == $sub.ref(0, 339369));
procedure  devirtbounce.8(funcPtr: ref, arg: ref, arg1: i64, arg2: i64, arg3: i32, arg4: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.9: ref;
axiom (devirtbounce.9 == $sub.ref(0, 340401));
procedure  devirtbounce.9(funcPtr: ref, arg: ref, arg1: i64, arg2: i64, arg3: i32)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
procedure  $memcpy.i8(M.dst: [ref] i8, M.src: [ref] i8, dst: ref, src: ref, len: ref, isvolatile: bool) returns (M.ret: [ref] i8)
{
  assume (forall x: ref :: $sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len)) ==> M.ret[x] == M.src[$add.ref($sub.ref(src,dst),x)]);
  assume (forall x: ref :: $slt.ref.bool(x,dst) ==> M.ret[x] == M.dst[x]);
  assume (forall x: ref :: $sle.ref.bool($add.ref(dst,len),x) ==> M.ret[x] == M.dst[x]);
}

procedure  $memset.i8(M: [ref] i8, dst: ref, val: i8, len: ref, isvolatile: bool) returns (M.ret: [ref] i8)
{
  assume (forall x: ref :: $sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len)) ==> M.ret[x] == val);
  assume (forall x: ref :: $slt.ref.bool(x,dst) ==> M.ret[x] == M[x]);
  assume (forall x: ref :: $sle.ref.bool($add.ref(dst,len),x) ==> M.ret[x] == M[x]);
}

procedure  boogie_si_record_i1(x: i1);
procedure  boogie_si_record_i16(x: i16);
procedure  boogie_si_record_i32(x: i32);
procedure  boogie_si_record_i64(x: i64);
procedure  boogie_si_record_i8(x: i8);
procedure  boogie_si_record_ref(x: ref);
procedure  $initialize()
{
  call __SMACK_static_init();
  call __SMACK_init_func_memory_model();
  return;
}
